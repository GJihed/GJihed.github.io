{"version":3,"sources":["bootstrap.bundle.js","0_atilt.js","0_three.js","1_tweenmax.js","2_OBJLoader.js","3_modernizr.js","4_fullpage.js","5_typed.js","custom.js","velocity.min.js"],"names":["global","factory","exports","module","require","define","amd","bootstrap","jQuery","this","$","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_objectSpread","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","obj","value","$$$1","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","Event","ClassName","Alert","DATA_API_KEY","Selector","Button","Default","DefaultType","Direction","Carousel","Dimension","Collapse","Util","TRANSITION_END","transitionEndEmulator","duration","_this","called","one","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","parseFloat","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","nodeType","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","call","expectedTypes","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","fn","emulateTransitionEnd","event","special","bindType","delegateType","handle","is","handleObj","handler","apply","CLOSE","CLOSED","CLICK_DATA_API","_element","_proto","close","rootElement","_getRootElement","_triggerCloseEvent","isDefaultPrevented","_removeElement","dispose","removeData","parent","closest","closeEvent","removeClass","hasClass","_destroyElement","detach","remove","_jQueryInterface","each","$element","data","_handleDismiss","alertInstance","preventDefault","get","on","noConflict","FOCUS_BLUR_DATA_API","toggle","triggerChangeEvent","addAriaPressed","input","type","checked","classList","contains","activeElement","hasAttribute","focus","setAttribute","toggleClass","button","interval","keyboard","slide","pause","wrap","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","TOUCHEND","LOAD_DATA_API","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","_config","_getConfig","_indicatorsElement","_addEventListeners","next","_slide","nextWhenVisible","hidden","prev","cycle","clearInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","direction","off","_this2","_keydown","documentElement","clearTimeout","tagName","which","parentNode","slice","querySelectorAll","indexOf","_getItemByDirection","isNextDirection","isPrevDirection","lastItemIndex","itemIndex","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","from","_setActiveIndicatorElement","indicators","nextIndicator","children","addClass","directionalClassName","orderClassName","_this3","activeElementIndex","nextElement","nextElementIndex","isCycling","slidEvent","action","TypeError","_dataApiClickHandler","slideIndex","window","carousels","len","$carousel","SHOW","SHOWN","HIDE","HIDDEN","_isTransitioning","_triggerArray","makeArray","id","toggleList","elem","filterElement","foundElem","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","hide","show","actives","activesData","not","startEvent","dimension","_getDimension","style","attr","setTransitioning","scrollSize","getBoundingClientRect","triggerArrayLength","isTransitioning","jquery","_getTargetFromElement","triggerArray","isOpen","$this","currentTarget","$trigger","selectors","$target","isBrowser","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","debounce","Promise","resolve","then","scheduled","isFunction","functionToCheck","getStyleComputedProperty","getComputedStyle","getParentNode","nodeName","host","getScrollParent","body","ownerDocument","_getStyleComputedProp","overflow","overflowX","overflowY","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","firstElementChild","element1root","getScroll","upperSide","undefined","html","scrollingElement","getBordersSize","styles","axis","sideA","sideB","getSize","computedStyle","max","getWindowSizes","height","width","createClass","defineProperties","_extends","assign","getClientRect","offsets","right","left","bottom","top","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","getOffsetRectRelativeToArbitraryNode","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","computeAutoPlacement","placement","refRect","rects","sortedAreas","map","area","_ref","sort","a","b","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","modifiers","ends","prop","findIndex","cur","console","warn","enabled","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toCheck","getWindow","defaultView","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","callback","scrollParents","isBody","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","reverse","BEHAVIORS","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","instance","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","arrow","_data$offsets$arrow","arrowElement","sideCapitalized","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","inner","subtractLength","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","removeAttribute","onLoad","modifierOptions","Popper","classCallCheck","requestAnimationFrame","update","isDestroyed","isCreated","enableEventListeners","removeChild","Utils","PopperUtils","REGEXP_KEYDOWN","AttachmentMap","Dropdown","Modal","CLASS_PREFIX","BSCLS_PREFIX_REGEX","HoverState","Trigger","Tooltip","Popover","OffsetMethod","ScrollSpy","Tab","ARROW_UP_KEYCODE","CLICK","KEYDOWN_DATA_API","KEYUP_DATA_API","boundary","display","_popper","_menu","_getMenuElement","_inNavbar","_detectNavbar","disabled","_getParentFromElement","isActive","_clearMenus","showEvent","referenceElement","_getPopperConfig","noop","destroy","stopPropagation","constructor","_getPlacement","$parentDropdown","offsetConf","popperConfig","toggles","context","clickEvent","dropdownMenu","hideEvent","_dataApiKeydownHandler","items","backdrop","FOCUSIN","RESIZE","CLICK_DISMISS","KEYDOWN_DISMISS","MOUSEUP_DISMISS","MOUSEDOWN_DISMISS","_dialog","_backdrop","_isShown","_isBodyOverflowing","_ignoreBackdropClick","_scrollbarWidth","_checkScrollbar","_setScrollbar","_adjustDialog","_setEscapeEvent","_setResizeEvent","_showBackdrop","_showElement","transition","_hideModal","handleUpdate","ELEMENT_NODE","appendChild","_enforceFocus","shownEvent","transitionComplete","_this4","has","_this5","_this6","_this7","_resetAdjustments","_resetScrollbar","_removeBackdrop","_this8","animate","createElement","className","add","appendTo","backdropTransitionDuration","callbackRemove","_backdropTransitionDuration","isModalOverflowing","scrollHeight","paddingLeft","paddingRight","_getScrollbarWidth","_this9","fixedContent","stickyContent","actualPadding","calculatedPadding","actualMargin","calculatedMargin","elements","margin","scrollDiv","scrollbarWidth","_this10","animation","template","title","delay","AUTO","TOP","RIGHT","BOTTOM","LEFT","container","fallbackPlacement","INSERTED","FOCUSOUT","_isEnabled","_timeout","_hoverState","_activeTrigger","tip","_setListeners","enable","disable","toggleEnabled","dataKey","_getDelegateConfig","click","_isWithActiveTrigger","_enter","_leave","getTipElement","isWithContent","isInTheDom","tipId","setContent","attachment","_getAttachment","addAttachmentClass","_handlePopperPlacementChange","complete","_fixTransition","prevHoverState","_cleanTipClass","getTitle","setElementContent","content","empty","append","text","eventIn","eventOut","_fixTitle","titleType","$tip","tabClass","join","popperData","popperInstance","initConfigAnimation","_Tooltip","subClass","superClass","create","__proto__","_getContent","method","ACTIVATE","SCROLL","_scrollElement","_offsets","_targets","_activeTarget","_scrollHeight","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targetSelector","targetBCR","item","pageYOffset","_getOffsetHeight","maxScroll","_activate","_clear","queries","$link","parents","nodes","scrollSpys","$spy","previous","listElement","itemSelector","hiddenEvent","active","_transitionComplete","dropdownChild","dropdownElement","dropdownToggleList","Scrollspy","_typeof","Symbol","iterator","t","s","tilt","ticking","g","timeout","settings","speed","easing","glare","glareElement","will-change","r","pageX","outerWidth","pageY","outerHeight","o","mousePositions","l","reset","h","tiltX","maxTilt","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","transforms","perspective","disableAxis","scale","maxGlare","d","getValues","extend","init","glarePrerender","glareElementWrapper","pointer-events","background-image","transform-origin","opacity","THREE","REVISION","self","info","log","debug","error","String","il","safeHasOwnProperty","lastTime","vendors","currTime","Date","now","timeToCall","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoShading","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","SphericalReflectionMapping","SphericalRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","Color","set","copy","setHex","setStyle","hex","setRGB","setHSL","hue2rgb","p","q","color","exec","parseInt","ColorKeywords","copyGammaToLinear","copyLinearToGamma","sqrt","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","hsl","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","c","fromArray","array","toArray","clone","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","z","w","_x","_y","_z","_w","_euler","_updateEuler","setFromQuaternion","quaternion","setFromEuler","euler","Euler","c1","cos","c2","c3","s1","sin","s2","s3","setFromAxisAngle","halfAngle","setFromRotationMatrix","m","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","inverse","conjugate","normalize","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","vector","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","abs","ratioA","ratioB","qa","qm","Vector2","setX","setY","setComponent","getComponent","v","addVectors","sub","subVectors","divideScalar","scalar","invScalar","clamp","negate","dot","distanceTo","distanceToSquared","dx","dy","setLength","oldLength","Vector3","setZ","multiplyVectors","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","transformDirection","divide","lengthManhattan","cross","crossVectors","ax","ay","az","bx","by","bz","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","sx","sy","sz","getColumnFromMatrix","matrix","me","applyEuler","applyAxisAngle","projectOnVector","v1","projectOnPlane","planeNormal","reflect","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","_quaternion","_updateQuaternion","asin","sqx","sqy","sqz","sqw","reorder","newOrder","Line3","line","optionalTarget","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","setFromCenterAndSize","size","halfSize","box","expandByPoint","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","intersect","union","translate","Box3","addPoint","setFromObject","object","scope","updateMatrixWorld","traverse","geometry","vertices","matrixWorld","getBoundingSphere","Sphere","radius","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","Float32Array","identity","multiplyVector3Array","determinant","f","getInverse","throwOnInvertible","det","msg","transpose","tmp","getNormalMatrix","transposeIntoArray","Matrix4","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","multiplyMatrices","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","flattenToArray","flat","flattenToArrayOffset","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","fov","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","ray","recast","directionDistance","distanceSqToSegment","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segCenter","segDir","segExtent","diff","a01","b0","b1","invDet","isIntersectionSphere","sphere","isIntersectionPlane","plane","distToPoint","normal","distanceToPlane","denominator","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","d2","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","v2","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","optionalNormalMatrix","newNormal","newCoplanarPoint","PI2","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","Spline","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","interpolate","t2","t3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","j","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","ceil","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Vertex","UV","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","stop","getElapsedTime","getDelta","newTime","EventDispatcher","hasEventListener","dispatchEvent","listener","_listeners","listeners","splice","listenerArray","Raycaster","localRay","matrixPosition","inverseMatrix","descSort","vA","vB","vC","intersectObject","raycaster","intersects","Particle","face","LOD","getObjectForDistance","Mesh","boundingBox","BufferGeometry","material","dynamic","precision","indices","positions","offLength","fl","oi","count","intersectionPoint","faceIndex","Geometry","isFaceMaterial","MeshFaceMaterial","objectMaterials","materials","faces","materialIndex","Line","precisionSq","linePrecision","nbVertices","interSegment","interRay","LineStrip","intersectDescendants","descendants","getDescendants","recursive","intersectObjects","objects","Object3D","Object3DIdCount","rotation","renderDepth","rotationAutoUpdate","matrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","userData","eulerOrder","useQuaternion","applyMatrix","m1","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","scene","Scene","__addObject","__removeObject","getObjectById","child","getObjectByName","getChildByName","updateMatrix","force","JSON","parse","stringify","Projector","_object","_objectCount","_vertex","_vertexCount","_face","_face3Count","_line","_lineCount","_particle","_particleCount","_modelMatrix","_objectPool","_objectPoolLength","_vertexPool","_vertexPoolLength","_face3Pool","_face3PoolLength","_linePool","_linePoolLength","_particlePool","_particlePoolLength","_renderData","sprites","lights","_vector3","_vector4","_clipBox","_boundingBox","_points3","_viewMatrix","_viewProjectionMatrix","_modelViewProjectionMatrix","_normalMatrix","_normalViewMatrix","_centroid","_frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","camera","matrixWorldInverse","projectionMatrix","unprojectVector","projectionMatrixInverse","pickingRay","getObject","RenderableObject","getNextObjectInPool","projectObject","Light","Sprite","getNextVertexInPool","vertex","RenderableVertex","getNextFace3InPool","RenderableFace3","getNextLineInPool","RenderableLine","getNextParticleInPool","particle","RenderableParticle","painterSort","clipLine","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","projectScene","sortObjects","sortElements","ol","vl","nl","cl","ul","faceVertexNormals","faceVertexUvs","uvs","root","autoUpdate","positionWorld","positionScreen","invW","normalModel","normalModelView","centroidModel","centroid","vertexNormals","vertexNormalsModel","vertexNormalsModelView","vertexNormalsLength","LinePieces","vertexColors","colors","Face3","vertexTangents","Face4","GeometryIdCount","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","hasTangents","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","tangentsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","buffersNeedUpdate","normalMatrix","jl","computeBoundingBox","computeCentroids","computeFaceNormals","cb","ab","computeVertexNormals","areaWeighted","__tmpVertices","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","vertexIndex","uv","uvA","uvB","uvC","x1","y1","z1","t1","ua","ub","uc","tan1","tan2","sdir","tdir","tmp2","computeLineDistances","mergeVertices","verticesMap","unique","changes","pow","faceIndicesToRemove","idx","uvCopy","positionArray","normalArray","normalizeNormals","bb","nVertexElements","itemSize","normals","pA","pB","pC","nVertices","nTangentElements","xA","yA","zA","xB","yB","zB","xC","yC","zC","uA","uB","uC","tangents","iA","iB","iC","n2","handleVertex","types","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float64Array","sourceAttr","sourceArray","attribute","numItems","Camera","OrthographicCamera","updateProjectionMatrix","PerspectiveCamera","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","light","AmbientLight","AreaLight","intensity","constantAttenuation","linearAttenuation","quadraticAttenuation","DirectionalLight","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColorHex","groundColorHex","groundColor","PointLight","SpotLight","exponent","shadowCameraFov","Loader","showStatus","statusDomElement","addStatusElement","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","fontSize","textAlign","background","zIndex","innerHTML","updateProgress","progress","message","loaded","extractUrlBase","url","parts","pop","initMaterials","texturePath","createMaterial","needsTangents","ShaderMaterial","is_pow2","LN2","nearest_pow2","create_texture","where","sourceFile","repeat","anisotropy","image","isCompressed","fullPath","texture","ImageUtils","loadCompressedTexture","Texture","wrapS","wrapT","wrapMap","mirror","Image","onload","getContext","drawImage","needsUpdate","src","rgb2hex","rgb","mtype","mpars","lightMap","normalMap","bumpMap","wireframe","shading","blending","transparent","depthTest","depthWrite","flipSided","doubleSided","colorDiffuse","DbgColor","colorSpecular","specular","colorAmbient","ambient","transparency","specularCoef","shininess","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapBumpScale","bumpScale","shader","ShaderLib","uniforms","UniformsUtils","mapNormalFactor","specularMap","parameters","fragmentShader","vertexShader","fog","DbgName","XHRLoader","manager","DefaultLoadingManager","load","onProgress","onError","request","XMLHttpRequest","responseText","itemEnd","open","send","itemStart","setCrossOrigin","ImageLoader","JSONLoader","withCredentials","loadAjaxJSON","callbackProgress","xhr","onreadystatechange","readyState","DONE","status","json","LOADING","getResponseHeader","HEADERS_RECEIVED","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceA","faceB","uvLayer","nUvLayers","parseModel","bones","parseSkin","dstVertices","srcVertices","dstColors","srcColors","parseMorphing","LoadingManager","BufferGeometryLoader","loader","GeometryLoader","MaterialLoader","emissive","ObjectLoader","geometries","parseGeometries","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","PlaneGeometry","widthSegments","heightSegments","CircleGeometry","segments","CubeGeometry","depth","depthSegments","CylinderGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","IcosahedronGeometry","detail","TorusGeometry","tube","radialSegments","tubularSegments","arc","TorusKnotGeometry","heightScale","SceneLoader","callbackSync","geometryHandlers","hierarchyHandlers","addGeometryHandler","typeID","loaderClass","addHierarchyHandler","callbackFinished","counter_models","counter_textures","total_models","total_textures","urlBase","target_array","face_materials","textures","cameras","fogs","empties","groups","get_url","source_url","url_type","handle_objects","handle_children","mat","dst","pos","rot","scl","quat","objID","objJSON","loading","reservedTypes","skin","morph","mirroredLoop","loaderParameters","parType","urlBaseType","create_callback_hierachy","SkinnedMesh","MorphAnimMesh","time","targetName","groupID","create_callback_geometry","geo","async_callback_gate","handle_hierarchy","dae","create_callback_embed","totalModels","totalTextures","loadedModels","loadedTextures","ta","targetInverse","finalize","fogID","fogJSON","geoID","geoJSON","textureID","textureJSON","matID","matJSON","parID","generateTextureCallback","traverse_json_hierarchy","objChildID","Fog","FogExp2","density","topRad","botRad","radSegs","heightSegs","segmentsR","segmentsT","subdivisions","modelJson","embeds","metadata","model","mapping","url_array","loadCompressedTextureCube","loadTextureCube","fullUrl","textureCallback","loadTexture","minFilter","magFilter","diffuse","normalScale","envMap","reflectivity","displacementMap","displacementBias","displacementScale","materialArray","label","defaults","currentCamera","TextureLoader","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaTest","overdraw","setValues","values","newValue","currentValue","Number","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","combine","refractionRatio","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","MeshLambertMaterial","wrapAround","wrapRGB","MeshPhongMaterial","metal","perPixel","MeshDepthMaterial","MeshNormalMaterial","ParticleBasicMaterial","sizeAttenuation","ParticleCanvasMaterial","program","defines","defaultAttributeValues","uv2","index0AttributeName","SpriteMaterial","useScreenCoordinates","scaleByViewport","alignment","SpriteAlignment","uvOffset","uvScale","topLeft","topCenter","topRight","centerLeft","centerRight","bottomLeft","bottomCenter","bottomRight","format","TextureIdCount","mipmaps","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","CompressedTexture","DataTexture","ParticleSystem","sortParticles","updateMorphTargets","morphTargetBase","morphTargetForcedOrder","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","Bone","belongsToSkin","skinMatrix","parentSkinMatrix","forceUpdate","useVertexTexture","bone","gbone","identityMatrix","boneMatrices","rotq","addBone","nBones","boneTextureWidth","boneTextureHeight","boneTexture","pose","offsetMatrix","boneInverses","bl","normalizeSkinWeights","sw","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","animations","firstAnimation","pattern","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","mix","addLevel","rotation3d","overrideMaterial","__lights","__objectsAdded","__objectsRemoved","CanvasRenderer","_elements","_lights","_canvasWidth","_canvasHeight","_canvasWidthHalf","_canvasHeightHalf","_camera","_v1","_v2","_v3","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_near","_far","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_pixelMap","_pixelMapContext","_pixelMapImage","_pixelMapData","_gradientMap","_gradientMapContext","_projector","_canvas","canvas","_context","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextDashSize","_contextGapSize","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_imagedatas","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_gradientMapQuality","calculateLight","ll","lightPosition","amount","renderParticle","bitmap","bitmapWidth","bitmapHeight","setOpacity","setBlending","setFillStyle","save","rotate","fillRect","restore","setStrokeStyle","renderLine","beginPath","moveTo","lineTo","setLineWidth","setLineCap","setLineJoin","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","setDashAndGap","renderFace3","uv1","uv3","x0","y0","render","closePath","getGradientTexture","clipImage","strokePath","fillPath","patternPath","fill","u0","u1","u2","repeatX","repeatY","createPattern","idet","offsetX","offsetY","getImageData","clip","color3","color4","putImageData","expand","pixels","globalAlpha","globalCompositeOperation","lineWidth","lineCap","lineJoin","strokeStyle","fillStyle","dashSizeValue","gapSizeValue","setLineDash","mozDash","domElement","devicePixelRatio","autoClear","supportsVertexTextures","setFaceCulling","setSize","updateStyle","setClearColor","setClearColorHex","getMaxAnisotropy","clear","setTransform","clearRect","lightColor","calculateLights","ShaderChunk","fog_pars_fragment","fog_fragment","envmap_pars_fragment","envmap_fragment","envmap_pars_vertex","worldpos_vertex","envmap_vertex","map_particle_pars_fragment","map_particle_fragment","map_pars_vertex","map_pars_fragment","map_vertex","map_fragment","lightmap_pars_fragment","lightmap_pars_vertex","lightmap_fragment","lightmap_vertex","bumpmap_pars_fragment","normalmap_pars_fragment","specularmap_pars_fragment","specularmap_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_pars_vertex","lights_phong_vertex","lights_phong_pars_fragment","lights_phong_fragment","color_pars_fragment","color_fragment","color_pars_vertex","color_vertex","skinning_pars_vertex","skinbase_vertex","skinning_vertex","morphtarget_pars_vertex","morphtarget_vertex","default_vertex","morphnormal_vertex","skinnormal_vertex","defaultnormal_vertex","shadowmap_pars_fragment","shadowmap_fragment","shadowmap_pars_vertex","shadowmap_vertex","alphatest_fragment","linear_to_gamma_fragment","merge","merged","uniforms_src","parameter_src","uniforms_dst","UniformsLib","common","offsetRepeat","flipEnvMap","useRefract","bump","normalmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","psColor","shadowmap","basic","lambert","phong","particle_basic","dashed","totalSize","mNear","mFar","enableAO","enableDiffuse","enableSpecular","enableReflection","enableDisplacement","tDisplacement","tDiffuse","tCube","tNormal","tSpecular","tAO","uNormalScale","uDisplacementBias","uDisplacementScale","uDiffuseColor","uSpecularColor","uAmbientColor","uShininess","uOpacity","uRefractionRatio","uReflectivity","uOffset","uRepeat","cube","tFlip","depthRGBA","WebGLRenderer","_precision","_alpha","_premultipliedAlpha","premultipliedAlpha","_antialias","antialias","_stencil","stencil","_preserveDrawingBuffer","preserveDrawingBuffer","autoClearColor","autoClearDepth","autoClearStencil","autoUpdateObjects","gammaInput","gammaOutput","physicallyBasedShading","shadowMapEnabled","shadowMapAutoUpdate","shadowMapType","shadowMapCullFace","shadowMapDebug","shadowMapCascade","maxMorphTargets","maxMorphNormals","autoScaleCubemaps","renderPluginsPre","renderPluginsPost","memory","programs","calls","_gl","_glExtensionTextureFloat","_glExtensionStandardDerivatives","_glExtensionTextureFilterAnisotropic","_glExtensionCompressedTextureS3TC","_programs","_programs_counter","_currentProgram","_currentFramebuffer","_currentMaterialId","_currentGeometryGroupHash","_currentCamera","_geometryGroupCounter","_usedTextureUnits","_oldDoubleSided","_oldFlipSided","_oldBlending","_oldBlendEquation","_oldBlendSrc","_oldBlendDst","_oldDepthTest","_oldDepthWrite","_oldPolygonOffset","_oldPolygonOffsetFactor","_oldPolygonOffsetUnits","_oldLineWidth","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_currentWidth","_currentHeight","_enabledAttributes","_projScreenMatrix","_projScreenMatrixPS","_direction","_lightsNeedUpdate","directional","distances","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","getExtension","getShaderPrecisionFormat","rangeMin","rangeMax","initGL","clearColor","clearDepth","clearStencil","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","_maxTextures","MAX_TEXTURE_IMAGE_UNITS","_maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","_maxCubemapSize","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","_maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","_supportsVertexTextures","_supportsBoneTextures","_vertexShaderPrecisionHighpFloat","COMPRESSED_TEXTURE_FORMATS","VERTEX_SHADER","HIGH_FLOAT","_vertexShaderPrecisionMediumpFloat","MEDIUM_FLOAT","_fragmentShaderPrecisionHighpFloat","LOW_FLOAT","FRAGMENT_SHADER","_fragmentShaderPrecisionMediumpFloat","highpAvailable","HIGH_INT","MEDIUM_INT","LOW_INT","mediumpAvailable","createMeshBuffers","geometryGroup","__webglVertexBuffer","createBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglColorBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","numMorphTargets","__webglMorphTargetsBuffers","numMorphNormals","__webglMorphNormalsBuffers","supportsFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","getPrecision","setViewport","viewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","getClearColor","getClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","renderTarget","setRenderTarget","addPostPlugin","plugin","addPrePlugin","updateShadowMap","shadowMapPlugin","onGeometryDispose","deallocateGeometry","onTextureDispose","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","deleteBuffers","deleteBuffer","__webglLineDistanceBuffer","__webglCustomAttributesList","buffer","__webglInit","geometryGroups","__webglTextureCube","deleteTexture","__webglTexture","WebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","programInfo","deleteProgram","usedTimes","newPrograms","initCustomAttributes","nvertices","__webglInitialized","createUniqueBuffers","belongsToAttribute","initMeshBuffers","faces3","ntris","nlines","getBufferMaterial","uvType","bufferGuessUVType","normalType","bufferGuessNormalType","vertexColorType","bufferGuessVertexColorType","__vertexArray","__normalArray","__tangentArray","__colorArray","__uvArray","__uv2Array","__skinIndexArray","__skinWeightArray","__faceArray","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__webglFaceCount","__webglLineCount","originalAttribute","__original","__inittedArrays","setMeshBuffers","hint","faceColor","n1","n3","sw1","sw2","sw3","si1","si2","si3","vn","uvi","uv2i","vk","vkl","vka","nka","chf","customAttribute","needsSmoothNormals","offset_uv","offset_uv2","offset_face","offset_normal","offset_tangent","offset_line","offset_color","offset_skin","offset_morphTarget","offset_custom","vertexArray","uvArray","uv2Array","tangentArray","colorArray","skinIndexArray","skinWeightArray","morphTargetsArrays","morphNormalsArrays","customAttributes","faceArray","lineArray","dirtyVertices","dirtyElements","dirtyUvs","dirtyNormals","dirtyTangents","dirtyColors","dirtyMorphTargets","morphTargetsNeedUpdate","chunk_faces3","obj_faces","obj_uvs","obj_uvs2","obj_skinIndices","obj_skinWeights","bindBuffer","ARRAY_BUFFER","bufferData","ELEMENT_ARRAY_BUFFER","boundTo","pp","enableAttribute","enableVertexAttribArray","disableAttributes","disableVertexAttribArray","painterSortStable","numericalSort","renderPlugins","plugins","renderObjects","renderList","materialType","useBlending","webglObject","setDepthTest","setDepthWrite","setPolygonOffset","setMaterialFaces","renderBufferDirect","renderBuffer","renderObjectsImmediate","renderImmediateObject","unrollImmediateBufferMaterial","globject","opaque","unrollBufferMaterial","meshMaterial","addObject","objlist","_modelViewMatrix","STATIC_DRAW","initDirectBuffers","groupHash","hash_map","usesFaceMaterial","geometryGroupsList","sortFacesByMaterial","__lineDistanceArray","__sortArray","__webglParticleCount","__webglActive","addBuffer","__webglObjects","ImmediateRenderObject","immediateRenderCallback","__webglObjectsImmediate","__webglSprites","LensFlare","__webglFlares","updateObject","customAttributesDirty","attributeName","attributeItem","setDirectBuffers","DYNAMIC_DRAW","areCustomAttributesDirty","clearCustomAttributes","ca","cal","dl","lineDistanceArray","dirtyLineDistances","setLineBuffers","sortArray","setParticleBuffers","removeObject","removeInstances","removeInstancesDirect","setProgram","initMaterial","__webglMorphTargetInfluences","refreshMaterial","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","skyColor","intensitySq","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","setColorGamma","setColorLinear","setupLights","uvScaleMap","refreshUniformsCommon","refreshUniformsLine","refreshUniformsPhong","refreshUniformsLambert","_shadowPass","refreshUniformsShadow","uniform","location","uniform1f","uniform2f","uniform3f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform3fv","_array","uniform2fv","uniform4fv","setCubeTexture","setCubeTextureDynamic","loadUniformsGeneric","uniformsList","cameraPosition","viewMatrix","modelViewMatrix","uniformMatrix3fv","modelMatrix","setupMatrices","polygonoffset","factor","units","POLYGON_OFFSET_FILL","getShader","string","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","isPowerOfTwo","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__oldAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","clampToMaxSize","maxSize","maxDimension","newWidth","newHeight","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","cubeImage","glFormat","glType","mipmap","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","generateMipmap","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","renderBufferImmediate","hasPositions","hasNormals","hasUvs","__webglUvBuffer","hasColors","vertexAttribPointer","nx","ny","nz","nax","nbx","nay","nby","naz","nbz","drawArrays","TRIANGLES","attributePointer","attributeSize","programAttributes","geometryAttributes","updateBuffers","wireframeBit","geometryHash","startIndex","vertexAttrib2fv","vertexAttrib3fv","drawElements","POINTS","primitives","LINE_STRIP","LINES","geometryGroupHash","influences","numSupportedMorphTargets","influence","activeInfluenceIndices","numSupportedMorphNormals","influenceIndex","setupMorphTargets","tangent","skinIndex","skinWeight","lineDistance","forceClear","initWebGLObjects","TEXTURE_2D","maxLightCount","maxBones","maxShadows","shaderID","shaders","dirLights","pointLights","spotLights","hemiLights","allocateLights","allocateShadows","nVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","nVertexMatrices","allocateBones","useFog","fogExp","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","pl","code","shadowMapTypeDefine","customDefines","chunk","generateDefines","createProgram","identifiers","prefix_vertex","prefix_fragment","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteShader","getUniformLocation","cacheUniformLocations","getAttribLocation","cacheAttributeLocations","buildProgram","base","frontFaceDirection","CW","FRONT","FRONT_AND_BACK","depthMask","blendEquationSeparate","blendFuncSeparate","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","vx","vy","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","activeCubeFace","ShadowMapPlugin","SpritePlugin","LensFlarePlugin","WebGLRenderTarget","GeometryUtils","geometry1","object2","materialIndexOffset","vertexOffset","geometry2","vertices1","vertices2","faces1","faces2","uvs1","uvs2","vertexCopy","faceCopy","faceVertexColors","randomPointInTriangle","vectorA","vectorB","vectorC","randomPointInFace","useCachedAreas","randomPointsInGeometry","totalArea","cumulativeAreas","_area","triangleArea","stats","binarySearch","mid","vector1","vector2","triangulateQuads","response","dds","parseDDS","onerror","responseType","images","loadCount","generateCubeFaceCallback","rq","img","isCubemap","mipmapCount","loadDDSTexture","loadMipmaps","fourCCToInt32","charCodeAt","loadARGBMip","dataOffset","dataLength","srcBuffer","byteArray","blockBytes","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","header","fourCC","isRGBAUncompressed","fromCharCode","getNormalMap","imageData","createImageData","output","ly","uy","lx","ux","num_points","generateDataTexture","SceneUtils","createMultiMaterialObject","group","attach","FontUtils","divisions","getFace","loadFace","family","familyName","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","path","Path","ret","extractGlyphPoints","paths","outline","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","_cachedOutline","quadraticCurveTo","Shape","bezierCurveTo","b3","ha","generateShapes","curveSegments","font","shapes","toShapes","namespace","contour","snip","verts","cx","cy","px","py","aX","aY","bX","bY","cX","cY","Triangulate","vertIndices","nv","_typeface_js","typeface_js","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","cacheArcLengths","current","cache","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","getNormalVector","Gyroscope","translationWorld","quaternionWorld","scaleWorld","translationObject","quaternionObject","scaleObject","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vectors","vlen","args","lastargs","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","EllipseCurve","lastPoint","closedPath","useSpacedPoints","spts","spline","deltaAngle","tdivisions","isCCW","subPaths","lastPath","solid","tmpPath","tmpShape","holesFirst","isClockWise","holes","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","removeHoles","prevShapeVert","prevHoleVert","holeIndex","shapeIndex","h2","hole","shortest","pts1","pts2","tmpShape1","tmpShape2","tmpHole1","tmpHole2","allpoints","dist","areaapts","areaa","areabpts","areab","oldShapeIndex","oldHoleIndex","areaa2","trianglea","triangleb","isolatedPts","triangulateShape","shapeWithoutHoles","triangles","allPointsMap","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","ArcCurve","LineCurve3","QuadraticBezierCurve3","tz","CubicBezierCurve3","SplineCurve3","pt0","pt2","pt3","ClosedSplineCurve3","AnimationHandler","playing","library","that","deltaTimeMS","addToUpdate","removeFromUpdate","initData","hierarchy","parseRecurseHierarchy","initialized","usedMorphTargets","morphTargetName","morphTargetsInfluences","lengthInFrames","JIT","CATMULLROM","CATMULLROM_FORWARD","Animation","interpolationType","currentTime","timeScale","isPlaying","isPaused","loop","play","startTimeMS","hl","animationCache","prevKey","nextKey","originalMatrix","getNextKeyWith","prevXYZ","nextXYZ","unloopedCurrentTime","currentPoint","forwardPoint","getPrevKeyWith","interpolateCatmullRom","KeyFrameAnimation","JITCompile","sids","sid","startTimeMs","endTime","original","frame","looped","JIThierarchy","lastIndex","hasTarget","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","renderer","CombinedCamera","orthoNear","orthoFar","cameraO","cameraP","zoom","toPerspective","inPerspectiveMode","inOrthographicMode","toOrthographic","hyperfocus","halfHeight","halfWidth","setFov","setZoom","toFrontView","toBackView","toLeftView","toRightView","toTopView","toBottomView","centerUV","segment","width_half","height_half","depth_half","buildPlane","udir","vdir","gridX","gridY","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","heightHalf","verticesRow","uvsRow","na","nb","tanTheta","v4","n4","uv4","shapebb","addShapeList","addShape","extrudePts","splineTube","binormal","position2","ahole","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","extrudePath","extrudeByPath","extrudeMaterial","uvgen","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","shapesOffset","shapePoints","scalePt2","pt","vec","bs","vert","flen","getBevelVec","pt_i","pt_j","pt_k","v_dot_w_hat","q_sub_p_dot_w_hat","__v1","__v2","v_hat","__v3","w_hat","__v4","__v5","__v6","anglea","angleb","anglec","getBevelVec1","getBevelVec2","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","sidewalls","layeroffset","slen1","slen2","f4","f3","isBottom","generateBottomUV","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","layer","buildLidFaces","buildSideFaces","extrudedShape","extrudeOptions","indexA","indexB","indexC","indexD","cz","LatheGeometry","inversePointLength","inverseSegments","phi","np","gridZ","gridZ1","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegment","TextGeometry","textShapes","grid","tang","bitan","getPos","ip","jp","in_q","in_p","cu","su","quOverP","cs","closed","numpoints","pos2","smallest","epsilon","MAX_VALUE","initialNormal3","PolyhedronGeometry","prepare","subdivide","azimuth","make","azi","correctUV","cols","aj","bj","rows","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","sliceCount","AxisHelper","ArrowHelper","dir","lineGeometry","coneGeometry","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","pointMap","hexFrustum","hexCone","hexCross","addLine","projector","setPoint","DirectionalLightHelper","lightPlane","targetLine","FaceNormalsHelper","worldMatrix","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","arrowLength","domeSize","lightSphere","PointLightHelper","SpotLightHelper","coneLength","coneWidth","VertexNormalsHelper","VertexTangentsHelper","WireframeHelper","edge","sortFunction","renderCallback","lensFlares","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","startFrame","lastFrame","currentFrame","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation","_renderer","_lensFlare","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","hasVertexTexture","ShaderFlares","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","flares","nFlares","sprite","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","_depthMaterial","_depthMaterialMorph","_depthMaterialSkin","_depthMaterialMorphSkin","_min","_max","_matrixPosition","createVirtualLight","cascade","virtualLight","isVirtual","pointsWorld","pointsFrustum","nearZ","farZ","updateVirtualLight","updateShadowCamera","__projector","depthShader","depthUniforms","originalCamera","gyro","shadowFilter","pars","cameraHelper","objectMaterial","useMorphing","useSkinning","customDepthMaterial","clearAlpha","_sprite","ShaderSprite","fogType","nSprites","oldFogType","sceneFogType","DepthPassPlugin","lensFlareVertexTexture","lensFlare","_gsScope","_gsQueue","_gsDefine","_cycle","_yoyo","vars","yoyo","yoyoEase","_repeat","_repeatDelay","repeatDelay","_uncache","_internals","isSelector","isArray","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_yoyoEase","updateTo","ratio","immediateRender","_startTime","_timeline","_time","_enabled","insert","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","_totalTime","_init","_next","_dirty","totalDuration","_totalDuration","_rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","_active","Ease","ease","easeParams","defaultEase","_easeType","_easePower","lazyTweens","_lazy","_paused","_startAt","onStart","_callback","_onUpdate","onRepeat","runBackwards","fromTo","startAt","staggerTo","allTo","onComplete","onCompleteScope","callbackScope","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","onCompleteParams","onReverseComplete","onReverseCompleteParams","useFrames","overwrite","isTweening","_first","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","totalTime","killChildTweensOf","tweenLookup","tweens","paused","pauseAll","resumeAll","globalTimeScale","_timeScale","totalProgress","_labels","smoothChildTiming","_sortChildren","_swapSelfInParams","align","stagger","lazyRender","globals","pauseCallback","_forcingPlayhead","_hasPause","TweenMax","_parseTimeOrLabel","exportRoot","_remove","addLabel","rawTime","_pauseTime","removeLabel","_last","insertMultiple","appendMultiple","addPause","getLabelTime","timeline","recent","substr","seek","gotoAndPlay","gotoAndStop","_hasPausedChild","_prev","getChildren","_contains","_recent","shiftChildren","_kill","_calculatingDuration","usesFrames","addCallback","removeCallback","removePause","tweenTo","isFromTo","onStartScope","onStartParams","tweenFromTo","_locked","A","B","C","getActive","getLabelAfter","getLabelsArray","getLabelBefore","currentLabel","da","ba","unshift","propName","API","_target","_func","_mod","_props","_timeRes","timeResolution","autoRotate","orientToBezier","_autoRotate","_overwriteProps","_beziers","curviness","correlate","_segCount","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","bezierThrough","cubicToQuadratic","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","setRatio","_transform","_enableTransforms","_gsTransform","proxy","_onInitTween","_tween","_super","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","lineHeight","D","E","F","G","H","I","J","K","L","M","N","O","P","createElementNS","Q","R","S","_specialProps","T","U","$1","cssText","V","currentStyle","W","X","Y","Z","_","getPropertyValue","aa","convertToPixels","_gsCache","cacheWidths","calculateOffset","Da","Ca","Ra","skewX","Fa","rotationX","rotationY","filters","sa","difs","firstMPT","ea","fa","ga","getCTM","Oa","getBBox","oxp","oyp","oxr","oyr","ox","oy","ia","ja","ka","la","ma","parseColor","oa","colorStringFilter","defaultStringFilter","ra","mod","xs0","xs1","rxp","pr","va","parseComplex","appendXtra","xfirst","wa","xa","formatter","defaultValue","collapsible","multi","clrs","keyword","dflt","ya","za","_registerPluginProp","com","greensock","registerSpecialProp","useSVGTransformAttr","Aa","Ba","Ea","Ga","Transform","force3D","defaultForce3D","Ha","SVGElement","Ia","setAttributeNS","Ja","Ka","chrome","La","Qa","xOrigin","yOrigin","Pa","xOffset","yOffset","Ma","ownerSVGElement","nextSibling","_originalGetBBox","insertBefore","Na","Va","svg","baseVal","consolidate","getTransform","zOrigin","skewType","Sa","xPercent","yPercent","ieOffsetX","ieOffsetY","Ta","set3DTransformRatio","setTransformRatio","skewY","tween","_lastParsedTransform","parseTransform","rotationZ","transformOrigin","svgOrigin","smoothOrigin","transformPerspective","directionalRotation","shortRotation","shortRotationX","shortRotationY","_transformType","backgroundPositionX","backgroundPositionY","clipTop","clipRight","clipBottom","clipLeft","Ua","xn1","removeProperty","Wa","_gsClassPT","_classNamePT","Xa","_vars","autoRound","_addLazySet","WebkitBackfaceVisibility","_linkCSSP","_propLookup","_addTween","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","Ya","autoAlpha","visibility","Za","childNodes","cascadeTo","reservedProps","activate","blob","_onInitAllProps","roundProps","pg","_add","finals","useRadians","GreenSockGlobals","_class","register","easeOut","easeIn","easeInOut","gap","_p1","_p2","_p","_p3","exp","taper","randomize","strength","SlowMo","sc","gsClass","GreenSockAMDPath","_type","_power","_params","linear","Linear","swing","Quad","_eventTarget","wake","getTime","tick","sleep","useRAF","Ticker","events","reversed","unref","resume","restart","eventCallback","_overwrite","defaultOverwrite","_siblings","_overwrittenProps","autoSleep","fp","_applyPT","blobDif","_plugins","onUpdateParams","onUpdateScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","autoCSS","onOverwrite","stringFilter","none","all","auto","concurrent","allOnStart","preexisting","true","false","_updateRoot","_gsTweenID","_initProps","_priority","_onDisable","_onEnable","_tempKill","_propName","_roundProps","overwriteProps","initAll","OBJLoader","face3","mesh","verticesCount","vertex_pattern","normal_pattern","uv_pattern","face_pattern1","face_pattern2","face_pattern3","face_pattern4","lines","substring","Modernizr","featureName","hasOwnProp","TAGNAMES","docElement","modElem","mStyle","inputElem","smile","omPrefixes","cssomPrefixes","domPrefixes","ns","tests","inputs","attrs","classes","injectElementWithStyles","rule","testnames","docOverflow","div","fakeBody","isEventSupported","select","change","submit","abort","eventName","isSupported","_hasOwnProperty","setCss","testProps","prefixed","testPropsAll","ucProp","testDOMProps","feature","Function","fillText","WebGLRenderingContext","bool","DocumentTouch","offsetTop","postMessage","openDatabase","history","pushState","backgroundColor","textShadow","str1","str2","backgroundImage","offsetLeft","sheet","styleSheet","cssRules","canPlayType","ogg","h264","webm","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createSVGRect","firstChild","namespaceURI","list","HTMLDataListElement","inputElemType","WebkitAppearance","checkValidity","addTest","supportsHtml5Styles","supportsUnknownElements","html5","reSkip","saveClones","expando","expanID","expandoData","getElements","getExpandoData","cloneNode","createElem","canHaveChildren","tagUrn","shivDocument","shivCSS","hasCSS","getElementsByTagName","lastChild","createFrag","createDocumentFragment","shivMethods","elems","_version","_prefixes","_domPrefixes","_cssomPrefixes","mq","matchMedia","msMatchMedia","matches","hasEvent","testProp","testAllProps","testStyles","fullpage","mouseover","afterLoad","afterRender","autoScrolling","scrollBar","eq","siblings","onLeave","anchors","fitToSection","moveSectionDown","moveSectionUp","originalEvent","normalScrollElementTouchThreshold","normalScrollElements","touchSensitivity","moveSlideRight","moveSlideLeft","pointerType","wheelDelta","deltaY","returnValue","loopHorizontal","isMovementUp","dest","dtop","yMovement","anchorLink","sectionIndex","activeSlide","activeSection","leavingSection","localIsResizing","continuousVertical","before","nextAll","after","prevAll","wrapAroundElements","css3","scrollingSpeed","promise","done","removeAttr","lockAnchors","onSlideLeave","controlArrows","afterSlideLoad","reBuild","responsive","responsiveWidth","responsiveHeight","setResponsive","easingcss3","-webkit-transition","menu","navigation","verticalCentered","wrapInner","slimScroll","allowPageScroll","alwaysVisible","first","unwrap","paddingTop","paddingBottom","recordHistory","replaceState","href","PointerEvent","down","move","touches","setScrollingSpeed","-webkit-transform","-moz-transform","-ms-transform","setAllowScrolling","setKeyboardScrolling","navigationPosition","navigationTooltips","showActiveTooltip","slidesNavigation","slidesNavPosition","loopBottom","loopTop","scrollOverflow","keyboardScrolling","animateAnchor","controlArrowColor","resize","sectionsColor","fixedElements","sectionSelector","slideSelector","afterResize","afterReBuild","easeInOutCubic","easeInQuart","setAutoScrolling","setRecordHistory","-ms-touch-action","touch-action","setFitToSection","setLockAnchors","setMouseWheelScrolling","attachEvent","detachEvent","onBeforeMoveSection","currentSlide","destiny","slides","silentMoveTo","msMaxTouchPoints","maxTouchPoints","webkitTransform","OTransform","msTransform","MozTransform","wrapAll","keydown","inArray","shiftKey","ctrlKey","keyup","blur","mousedown","mouseup","background-color","replaceWith","modules","installedModules","__webpack_require__","moduleId","_initializerJs","_htmlParserJs","Typed","elementId","_classCallCheck","initializer","begin","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onDestroy","replaceText","cursor","strPos","curLoop","insertCursor","onReset","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","currentElContent","strings","sequence","startDelay","fadeOut","fadeOutClass","humanize","humanizer","typeSpeed","numChars","htmlParser","typeHtmlChars","pauseTime","skip","temporaryPause","onTypingPaused","stringBeforeSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","onStringTyped","loopCount","backDelay","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","isTyping","isBlinking","cursorBlinking","shuffle","fadeOutDelay","isInput","contentType","textContent","showCursor","cursorChar","_defaultsJs","_defaultsJs2","__esModule","default","Initializer","elContent","stringsElement","stringsLength","stringEl","getCurrentElContent","autoInsertCss","appendAnimationCss","cssDataName","innerCss","HTMLParser","curChar","endTag","ready","site","Width","Height","Background","headparticle","FPSTest","functionOptimization","webgl","alert","startex","scrollBarStartY","systemGeometry","systemMaterial","clientX","clientY","follower","posX","posY","mouseX","mouseY","overlayNav","overlayContent","toggleNav","layerInit","diameterValue","velocity","typed","isWindow","isPlainObject","queue","dequeue","clientTop","pageXOffset","clientLeft","Velocity","Utilities","isWrapped","isNode","getControlPoints","isString","Easings","State","setPropertyValue","endValue","startValue","Hooks","registered","rootPropertyValueCache","rootPropertyValue","unitType","scrollData","Normalizations","mobileHA","transformCache","translate3d","flushTransformCache","isTicking","isAnimating","Lists","transforms3D","Values","tweensContainer","webkitRequestAnimationFrame","mozRequestAnimationFrame","isNodeList","Zepto","zepto","isZ","isSVG","isEmptyObject","isMobile","isAndroid","isGingerbread","isChrome","isFirefox","prefixElement","prefixMatches","scrollAnchor","scrollPropertyLeft","scrollPropertyTop","CSS","Redirects","_cacheValues","hook","mock","major","minor","patch","tension","friction","dv","spring","RegEx","isHex","valueUnwrap","wrappedValueAlreadyExtracted","valueSplit","transformsBase","templates","boxShadow","backgroundPosition","perspectiveOrigin","cleanRootPropertyValue","isCSSNullValue","extractValue","injectValue","hexToRgb","Names","camelCase","SVGAttribute","prefixCheck","getUnitType","getDisplayType","scrollTo","alternateValue","properties","names","resolver","rejecter","delayTimer","backwards","drag","lastParent","lastPosition","lastFontSize","lastPercentToPxWidth","lastPercentToPxHeight","lastEmToPx","remToPx","vwToPx","vhToPx","myParent","emToPx","percentToPxWidth","percentToPxHeight","scroll","opts","velocityQueueEntryFlag"],"mappings":"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","file":"app.min.js","sourcesContent":["/*!\n  * Bootstrap v4.1.3 (https://getbootstrap.com/)\n  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'jquery'], factory) :\n  (factory((global.bootstrap = {}),global.jQuery));\n}(this, (function (exports,$) { 'use strict';\n\n  $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): util.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Util = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Private TransitionEnd Helpers\n     * ------------------------------------------------------------------------\n     */\n    var TRANSITION_END = 'transitionend';\n    var MAX_UID = 1000000;\n    var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\n\n    function toType(obj) {\n      return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n    }\n\n    function getSpecialTransitionEndEvent() {\n      return {\n        bindType: TRANSITION_END,\n        delegateType: TRANSITION_END,\n        handle: function handle(event) {\n          if ($$$1(event.target).is(this)) {\n            return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n          }\n\n          return undefined; // eslint-disable-line no-undefined\n        }\n      };\n    }\n\n    function transitionEndEmulator(duration) {\n      var _this = this;\n\n      var called = false;\n      $$$1(this).one(Util.TRANSITION_END, function () {\n        called = true;\n      });\n      setTimeout(function () {\n        if (!called) {\n          Util.triggerTransitionEnd(_this);\n        }\n      }, duration);\n      return this;\n    }\n\n    function setTransitionEndSupport() {\n      $$$1.fn.emulateTransitionEnd = transitionEndEmulator;\n      $$$1.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n    }\n    /**\n     * --------------------------------------------------------------------------\n     * Public Util Api\n     * --------------------------------------------------------------------------\n     */\n\n\n    var Util = {\n      TRANSITION_END: 'bsTransitionEnd',\n      getUID: function getUID(prefix) {\n        do {\n          // eslint-disable-next-line no-bitwise\n          prefix += ~~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n        } while (document.getElementById(prefix));\n\n        return prefix;\n      },\n      getSelectorFromElement: function getSelectorFromElement(element) {\n        var selector = element.getAttribute('data-target');\n\n        if (!selector || selector === '#') {\n          selector = element.getAttribute('href') || '';\n        }\n\n        try {\n          return document.querySelector(selector) ? selector : null;\n        } catch (err) {\n          return null;\n        }\n      },\n      getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {\n        if (!element) {\n          return 0;\n        } // Get transition-duration of the element\n\n\n        var transitionDuration = $$$1(element).css('transition-duration');\n        var floatTransitionDuration = parseFloat(transitionDuration); // Return 0 if element or transition duration is not found\n\n        if (!floatTransitionDuration) {\n          return 0;\n        } // If multiple durations are defined, take the first\n\n\n        transitionDuration = transitionDuration.split(',')[0];\n        return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER;\n      },\n      reflow: function reflow(element) {\n        return element.offsetHeight;\n      },\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\n        $$$1(element).trigger(TRANSITION_END);\n      },\n      // TODO: Remove in v5\n      supportsTransitionEnd: function supportsTransitionEnd() {\n        return Boolean(TRANSITION_END);\n      },\n      isElement: function isElement(obj) {\n        return (obj[0] || obj).nodeType;\n      },\n      typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n        for (var property in configTypes) {\n          if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            var expectedTypes = configTypes[property];\n            var value = config[property];\n            var valueType = value && Util.isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n              throw new Error(componentName.toUpperCase() + \": \" + (\"Option \\\"\" + property + \"\\\" provided type \\\"\" + valueType + \"\\\" \") + (\"but expected type \\\"\" + expectedTypes + \"\\\".\"));\n            }\n          }\n        }\n      }\n    };\n    setTransitionEndSupport();\n    return Util;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): alert.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Alert = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'alert';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.alert';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Selector = {\n      DISMISS: '[data-dismiss=\"alert\"]'\n    };\n    var Event = {\n      CLOSE: \"close\" + EVENT_KEY,\n      CLOSED: \"closed\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      ALERT: 'alert',\n      FADE: 'fade',\n      SHOW: 'show'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Alert =\n    /*#__PURE__*/\n    function () {\n      function Alert(element) {\n        this._element = element;\n      } // Getters\n\n\n      var _proto = Alert.prototype;\n\n      // Public\n      _proto.close = function close(element) {\n        var rootElement = this._element;\n\n        if (element) {\n          rootElement = this._getRootElement(element);\n        }\n\n        var customEvent = this._triggerCloseEvent(rootElement);\n\n        if (customEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._removeElement(rootElement);\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }; // Private\n\n\n      _proto._getRootElement = function _getRootElement(element) {\n        var selector = Util.getSelectorFromElement(element);\n        var parent = false;\n\n        if (selector) {\n          parent = document.querySelector(selector);\n        }\n\n        if (!parent) {\n          parent = $$$1(element).closest(\".\" + ClassName.ALERT)[0];\n        }\n\n        return parent;\n      };\n\n      _proto._triggerCloseEvent = function _triggerCloseEvent(element) {\n        var closeEvent = $$$1.Event(Event.CLOSE);\n        $$$1(element).trigger(closeEvent);\n        return closeEvent;\n      };\n\n      _proto._removeElement = function _removeElement(element) {\n        var _this = this;\n\n        $$$1(element).removeClass(ClassName.SHOW);\n\n        if (!$$$1(element).hasClass(ClassName.FADE)) {\n          this._destroyElement(element);\n\n          return;\n        }\n\n        var transitionDuration = Util.getTransitionDurationFromElement(element);\n        $$$1(element).one(Util.TRANSITION_END, function (event) {\n          return _this._destroyElement(element, event);\n        }).emulateTransitionEnd(transitionDuration);\n      };\n\n      _proto._destroyElement = function _destroyElement(element) {\n        $$$1(element).detach().trigger(Event.CLOSED).remove();\n      }; // Static\n\n\n      Alert._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var $element = $$$1(this);\n          var data = $element.data(DATA_KEY);\n\n          if (!data) {\n            data = new Alert(this);\n            $element.data(DATA_KEY, data);\n          }\n\n          if (config === 'close') {\n            data[config](this);\n          }\n        });\n      };\n\n      Alert._handleDismiss = function _handleDismiss(alertInstance) {\n        return function (event) {\n          if (event) {\n            event.preventDefault();\n          }\n\n          alertInstance.close(this);\n        };\n      };\n\n      _createClass(Alert, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Alert;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Alert._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Alert;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Alert._jQueryInterface;\n    };\n\n    return Alert;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): button.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Button = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'button';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.button';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ClassName = {\n      ACTIVE: 'active',\n      BUTTON: 'btn',\n      FOCUS: 'focus'\n    };\n    var Selector = {\n      DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',\n      DATA_TOGGLE: '[data-toggle=\"buttons\"]',\n      INPUT: 'input',\n      ACTIVE: '.active',\n      BUTTON: '.btn'\n    };\n    var Event = {\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,\n      FOCUS_BLUR_DATA_API: \"focus\" + EVENT_KEY + DATA_API_KEY + \" \" + (\"blur\" + EVENT_KEY + DATA_API_KEY)\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Button =\n    /*#__PURE__*/\n    function () {\n      function Button(element) {\n        this._element = element;\n      } // Getters\n\n\n      var _proto = Button.prototype;\n\n      // Public\n      _proto.toggle = function toggle() {\n        var triggerChangeEvent = true;\n        var addAriaPressed = true;\n        var rootElement = $$$1(this._element).closest(Selector.DATA_TOGGLE)[0];\n\n        if (rootElement) {\n          var input = this._element.querySelector(Selector.INPUT);\n\n          if (input) {\n            if (input.type === 'radio') {\n              if (input.checked && this._element.classList.contains(ClassName.ACTIVE)) {\n                triggerChangeEvent = false;\n              } else {\n                var activeElement = rootElement.querySelector(Selector.ACTIVE);\n\n                if (activeElement) {\n                  $$$1(activeElement).removeClass(ClassName.ACTIVE);\n                }\n              }\n            }\n\n            if (triggerChangeEvent) {\n              if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {\n                return;\n              }\n\n              input.checked = !this._element.classList.contains(ClassName.ACTIVE);\n              $$$1(input).trigger('change');\n            }\n\n            input.focus();\n            addAriaPressed = false;\n          }\n        }\n\n        if (addAriaPressed) {\n          this._element.setAttribute('aria-pressed', !this._element.classList.contains(ClassName.ACTIVE));\n        }\n\n        if (triggerChangeEvent) {\n          $$$1(this._element).toggleClass(ClassName.ACTIVE);\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }; // Static\n\n\n      Button._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          if (!data) {\n            data = new Button(this);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (config === 'toggle') {\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Button, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Button;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n      event.preventDefault();\n      var button = event.target;\n\n      if (!$$$1(button).hasClass(ClassName.BUTTON)) {\n        button = $$$1(button).closest(Selector.BUTTON);\n      }\n\n      Button._jQueryInterface.call($$$1(button), 'toggle');\n    }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n      var button = $$$1(event.target).closest(Selector.BUTTON)[0];\n      $$$1(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Button._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Button;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Button._jQueryInterface;\n    };\n\n    return Button;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): carousel.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Carousel = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'carousel';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.carousel';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n\n    var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\n    var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\n    var Default = {\n      interval: 5000,\n      keyboard: true,\n      slide: false,\n      pause: 'hover',\n      wrap: true\n    };\n    var DefaultType = {\n      interval: '(number|boolean)',\n      keyboard: 'boolean',\n      slide: '(boolean|string)',\n      pause: '(string|boolean)',\n      wrap: 'boolean'\n    };\n    var Direction = {\n      NEXT: 'next',\n      PREV: 'prev',\n      LEFT: 'left',\n      RIGHT: 'right'\n    };\n    var Event = {\n      SLIDE: \"slide\" + EVENT_KEY,\n      SLID: \"slid\" + EVENT_KEY,\n      KEYDOWN: \"keydown\" + EVENT_KEY,\n      MOUSEENTER: \"mouseenter\" + EVENT_KEY,\n      MOUSELEAVE: \"mouseleave\" + EVENT_KEY,\n      TOUCHEND: \"touchend\" + EVENT_KEY,\n      LOAD_DATA_API: \"load\" + EVENT_KEY + DATA_API_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      CAROUSEL: 'carousel',\n      ACTIVE: 'active',\n      SLIDE: 'slide',\n      RIGHT: 'carousel-item-right',\n      LEFT: 'carousel-item-left',\n      NEXT: 'carousel-item-next',\n      PREV: 'carousel-item-prev',\n      ITEM: 'carousel-item'\n    };\n    var Selector = {\n      ACTIVE: '.active',\n      ACTIVE_ITEM: '.active.carousel-item',\n      ITEM: '.carousel-item',\n      NEXT_PREV: '.carousel-item-next, .carousel-item-prev',\n      INDICATORS: '.carousel-indicators',\n      DATA_SLIDE: '[data-slide], [data-slide-to]',\n      DATA_RIDE: '[data-ride=\"carousel\"]'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Carousel =\n    /*#__PURE__*/\n    function () {\n      function Carousel(element, config) {\n        this._items = null;\n        this._interval = null;\n        this._activeElement = null;\n        this._isPaused = false;\n        this._isSliding = false;\n        this.touchTimeout = null;\n        this._config = this._getConfig(config);\n        this._element = $$$1(element)[0];\n        this._indicatorsElement = this._element.querySelector(Selector.INDICATORS);\n\n        this._addEventListeners();\n      } // Getters\n\n\n      var _proto = Carousel.prototype;\n\n      // Public\n      _proto.next = function next() {\n        if (!this._isSliding) {\n          this._slide(Direction.NEXT);\n        }\n      };\n\n      _proto.nextWhenVisible = function nextWhenVisible() {\n        // Don't call next when the page isn't visible\n        // or the carousel or its parent isn't visible\n        if (!document.hidden && $$$1(this._element).is(':visible') && $$$1(this._element).css('visibility') !== 'hidden') {\n          this.next();\n        }\n      };\n\n      _proto.prev = function prev() {\n        if (!this._isSliding) {\n          this._slide(Direction.PREV);\n        }\n      };\n\n      _proto.pause = function pause(event) {\n        if (!event) {\n          this._isPaused = true;\n        }\n\n        if (this._element.querySelector(Selector.NEXT_PREV)) {\n          Util.triggerTransitionEnd(this._element);\n          this.cycle(true);\n        }\n\n        clearInterval(this._interval);\n        this._interval = null;\n      };\n\n      _proto.cycle = function cycle(event) {\n        if (!event) {\n          this._isPaused = false;\n        }\n\n        if (this._interval) {\n          clearInterval(this._interval);\n          this._interval = null;\n        }\n\n        if (this._config.interval && !this._isPaused) {\n          this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n        }\n      };\n\n      _proto.to = function to(index) {\n        var _this = this;\n\n        this._activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n\n        var activeIndex = this._getItemIndex(this._activeElement);\n\n        if (index > this._items.length - 1 || index < 0) {\n          return;\n        }\n\n        if (this._isSliding) {\n          $$$1(this._element).one(Event.SLID, function () {\n            return _this.to(index);\n          });\n          return;\n        }\n\n        if (activeIndex === index) {\n          this.pause();\n          this.cycle();\n          return;\n        }\n\n        var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;\n\n        this._slide(direction, this._items[index]);\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1(this._element).off(EVENT_KEY);\n        $$$1.removeData(this._element, DATA_KEY);\n        this._items = null;\n        this._config = null;\n        this._element = null;\n        this._interval = null;\n        this._isPaused = null;\n        this._isSliding = null;\n        this._activeElement = null;\n        this._indicatorsElement = null;\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, config);\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._addEventListeners = function _addEventListeners() {\n        var _this2 = this;\n\n        if (this._config.keyboard) {\n          $$$1(this._element).on(Event.KEYDOWN, function (event) {\n            return _this2._keydown(event);\n          });\n        }\n\n        if (this._config.pause === 'hover') {\n          $$$1(this._element).on(Event.MOUSEENTER, function (event) {\n            return _this2.pause(event);\n          }).on(Event.MOUSELEAVE, function (event) {\n            return _this2.cycle(event);\n          });\n\n          if ('ontouchstart' in document.documentElement) {\n            // If it's a touch-enabled device, mouseenter/leave are fired as\n            // part of the mouse compatibility events on first tap - the carousel\n            // would stop cycling until user tapped out of it;\n            // here, we listen for touchend, explicitly pause the carousel\n            // (as if it's the second time we tap on it, mouseenter compat event\n            // is NOT fired) and after a timeout (to allow for mouse compatibility\n            // events to fire) we explicitly restart cycling\n            $$$1(this._element).on(Event.TOUCHEND, function () {\n              _this2.pause();\n\n              if (_this2.touchTimeout) {\n                clearTimeout(_this2.touchTimeout);\n              }\n\n              _this2.touchTimeout = setTimeout(function (event) {\n                return _this2.cycle(event);\n              }, TOUCHEVENT_COMPAT_WAIT + _this2._config.interval);\n            });\n          }\n        }\n      };\n\n      _proto._keydown = function _keydown(event) {\n        if (/input|textarea/i.test(event.target.tagName)) {\n          return;\n        }\n\n        switch (event.which) {\n          case ARROW_LEFT_KEYCODE:\n            event.preventDefault();\n            this.prev();\n            break;\n\n          case ARROW_RIGHT_KEYCODE:\n            event.preventDefault();\n            this.next();\n            break;\n\n          default:\n        }\n      };\n\n      _proto._getItemIndex = function _getItemIndex(element) {\n        this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM)) : [];\n        return this._items.indexOf(element);\n      };\n\n      _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {\n        var isNextDirection = direction === Direction.NEXT;\n        var isPrevDirection = direction === Direction.PREV;\n\n        var activeIndex = this._getItemIndex(activeElement);\n\n        var lastItemIndex = this._items.length - 1;\n        var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n        if (isGoingToWrap && !this._config.wrap) {\n          return activeElement;\n        }\n\n        var delta = direction === Direction.PREV ? -1 : 1;\n        var itemIndex = (activeIndex + delta) % this._items.length;\n        return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n      };\n\n      _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {\n        var targetIndex = this._getItemIndex(relatedTarget);\n\n        var fromIndex = this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM));\n\n        var slideEvent = $$$1.Event(Event.SLIDE, {\n          relatedTarget: relatedTarget,\n          direction: eventDirectionName,\n          from: fromIndex,\n          to: targetIndex\n        });\n        $$$1(this._element).trigger(slideEvent);\n        return slideEvent;\n      };\n\n      _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {\n        if (this._indicatorsElement) {\n          var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE));\n          $$$1(indicators).removeClass(ClassName.ACTIVE);\n\n          var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n          if (nextIndicator) {\n            $$$1(nextIndicator).addClass(ClassName.ACTIVE);\n          }\n        }\n      };\n\n      _proto._slide = function _slide(direction, element) {\n        var _this3 = this;\n\n        var activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n\n        var activeElementIndex = this._getItemIndex(activeElement);\n\n        var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n        var nextElementIndex = this._getItemIndex(nextElement);\n\n        var isCycling = Boolean(this._interval);\n        var directionalClassName;\n        var orderClassName;\n        var eventDirectionName;\n\n        if (direction === Direction.NEXT) {\n          directionalClassName = ClassName.LEFT;\n          orderClassName = ClassName.NEXT;\n          eventDirectionName = Direction.LEFT;\n        } else {\n          directionalClassName = ClassName.RIGHT;\n          orderClassName = ClassName.PREV;\n          eventDirectionName = Direction.RIGHT;\n        }\n\n        if (nextElement && $$$1(nextElement).hasClass(ClassName.ACTIVE)) {\n          this._isSliding = false;\n          return;\n        }\n\n        var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n\n        if (slideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (!activeElement || !nextElement) {\n          // Some weirdness is happening, so we bail\n          return;\n        }\n\n        this._isSliding = true;\n\n        if (isCycling) {\n          this.pause();\n        }\n\n        this._setActiveIndicatorElement(nextElement);\n\n        var slidEvent = $$$1.Event(Event.SLID, {\n          relatedTarget: nextElement,\n          direction: eventDirectionName,\n          from: activeElementIndex,\n          to: nextElementIndex\n        });\n\n        if ($$$1(this._element).hasClass(ClassName.SLIDE)) {\n          $$$1(nextElement).addClass(orderClassName);\n          Util.reflow(nextElement);\n          $$$1(activeElement).addClass(directionalClassName);\n          $$$1(nextElement).addClass(directionalClassName);\n          var transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n          $$$1(activeElement).one(Util.TRANSITION_END, function () {\n            $$$1(nextElement).removeClass(directionalClassName + \" \" + orderClassName).addClass(ClassName.ACTIVE);\n            $$$1(activeElement).removeClass(ClassName.ACTIVE + \" \" + orderClassName + \" \" + directionalClassName);\n            _this3._isSliding = false;\n            setTimeout(function () {\n              return $$$1(_this3._element).trigger(slidEvent);\n            }, 0);\n          }).emulateTransitionEnd(transitionDuration);\n        } else {\n          $$$1(activeElement).removeClass(ClassName.ACTIVE);\n          $$$1(nextElement).addClass(ClassName.ACTIVE);\n          this._isSliding = false;\n          $$$1(this._element).trigger(slidEvent);\n        }\n\n        if (isCycling) {\n          this.cycle();\n        }\n      }; // Static\n\n\n      Carousel._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = _objectSpread({}, Default, $$$1(this).data());\n\n          if (typeof config === 'object') {\n            _config = _objectSpread({}, _config, config);\n          }\n\n          var action = typeof config === 'string' ? config : _config.slide;\n\n          if (!data) {\n            data = new Carousel(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'number') {\n            data.to(config);\n          } else if (typeof action === 'string') {\n            if (typeof data[action] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + action + \"\\\"\");\n            }\n\n            data[action]();\n          } else if (_config.interval) {\n            data.pause();\n            data.cycle();\n          }\n        });\n      };\n\n      Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {\n        var selector = Util.getSelectorFromElement(this);\n\n        if (!selector) {\n          return;\n        }\n\n        var target = $$$1(selector)[0];\n\n        if (!target || !$$$1(target).hasClass(ClassName.CAROUSEL)) {\n          return;\n        }\n\n        var config = _objectSpread({}, $$$1(target).data(), $$$1(this).data());\n\n        var slideIndex = this.getAttribute('data-slide-to');\n\n        if (slideIndex) {\n          config.interval = false;\n        }\n\n        Carousel._jQueryInterface.call($$$1(target), config);\n\n        if (slideIndex) {\n          $$$1(target).data(DATA_KEY).to(slideIndex);\n        }\n\n        event.preventDefault();\n      };\n\n      _createClass(Carousel, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Carousel;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n    $$$1(window).on(Event.LOAD_DATA_API, function () {\n      var carousels = [].slice.call(document.querySelectorAll(Selector.DATA_RIDE));\n\n      for (var i = 0, len = carousels.length; i < len; i++) {\n        var $carousel = $$$1(carousels[i]);\n\n        Carousel._jQueryInterface.call($carousel, $carousel.data());\n      }\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Carousel._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Carousel;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Carousel._jQueryInterface;\n    };\n\n    return Carousel;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): collapse.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Collapse = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'collapse';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.collapse';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Default = {\n      toggle: true,\n      parent: ''\n    };\n    var DefaultType = {\n      toggle: 'boolean',\n      parent: '(string|element)'\n    };\n    var Event = {\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      SHOW: 'show',\n      COLLAPSE: 'collapse',\n      COLLAPSING: 'collapsing',\n      COLLAPSED: 'collapsed'\n    };\n    var Dimension = {\n      WIDTH: 'width',\n      HEIGHT: 'height'\n    };\n    var Selector = {\n      ACTIVES: '.show, .collapsing',\n      DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Collapse =\n    /*#__PURE__*/\n    function () {\n      function Collapse(element, config) {\n        this._isTransitioning = false;\n        this._element = element;\n        this._config = this._getConfig(config);\n        this._triggerArray = $$$1.makeArray(document.querySelectorAll(\"[data-toggle=\\\"collapse\\\"][href=\\\"#\" + element.id + \"\\\"],\" + (\"[data-toggle=\\\"collapse\\\"][data-target=\\\"#\" + element.id + \"\\\"]\")));\n        var toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n\n        for (var i = 0, len = toggleList.length; i < len; i++) {\n          var elem = toggleList[i];\n          var selector = Util.getSelectorFromElement(elem);\n          var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {\n            return foundElem === element;\n          });\n\n          if (selector !== null && filterElement.length > 0) {\n            this._selector = selector;\n\n            this._triggerArray.push(elem);\n          }\n        }\n\n        this._parent = this._config.parent ? this._getParent() : null;\n\n        if (!this._config.parent) {\n          this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n        }\n\n        if (this._config.toggle) {\n          this.toggle();\n        }\n      } // Getters\n\n\n      var _proto = Collapse.prototype;\n\n      // Public\n      _proto.toggle = function toggle() {\n        if ($$$1(this._element).hasClass(ClassName.SHOW)) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      };\n\n      _proto.show = function show() {\n        var _this = this;\n\n        if (this._isTransitioning || $$$1(this._element).hasClass(ClassName.SHOW)) {\n          return;\n        }\n\n        var actives;\n        var activesData;\n\n        if (this._parent) {\n          actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES)).filter(function (elem) {\n            return elem.getAttribute('data-parent') === _this._config.parent;\n          });\n\n          if (actives.length === 0) {\n            actives = null;\n          }\n        }\n\n        if (actives) {\n          activesData = $$$1(actives).not(this._selector).data(DATA_KEY);\n\n          if (activesData && activesData._isTransitioning) {\n            return;\n          }\n        }\n\n        var startEvent = $$$1.Event(Event.SHOW);\n        $$$1(this._element).trigger(startEvent);\n\n        if (startEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (actives) {\n          Collapse._jQueryInterface.call($$$1(actives).not(this._selector), 'hide');\n\n          if (!activesData) {\n            $$$1(actives).data(DATA_KEY, null);\n          }\n        }\n\n        var dimension = this._getDimension();\n\n        $$$1(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n        this._element.style[dimension] = 0;\n\n        if (this._triggerArray.length) {\n          $$$1(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n        }\n\n        this.setTransitioning(true);\n\n        var complete = function complete() {\n          $$$1(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);\n          _this._element.style[dimension] = '';\n\n          _this.setTransitioning(false);\n\n          $$$1(_this._element).trigger(Event.SHOWN);\n        };\n\n        var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n        var scrollSize = \"scroll\" + capitalizedDimension;\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n        $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        this._element.style[dimension] = this._element[scrollSize] + \"px\";\n      };\n\n      _proto.hide = function hide() {\n        var _this2 = this;\n\n        if (this._isTransitioning || !$$$1(this._element).hasClass(ClassName.SHOW)) {\n          return;\n        }\n\n        var startEvent = $$$1.Event(Event.HIDE);\n        $$$1(this._element).trigger(startEvent);\n\n        if (startEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        var dimension = this._getDimension();\n\n        this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + \"px\";\n        Util.reflow(this._element);\n        $$$1(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);\n        var triggerArrayLength = this._triggerArray.length;\n\n        if (triggerArrayLength > 0) {\n          for (var i = 0; i < triggerArrayLength; i++) {\n            var trigger = this._triggerArray[i];\n            var selector = Util.getSelectorFromElement(trigger);\n\n            if (selector !== null) {\n              var $elem = $$$1([].slice.call(document.querySelectorAll(selector)));\n\n              if (!$elem.hasClass(ClassName.SHOW)) {\n                $$$1(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n              }\n            }\n          }\n        }\n\n        this.setTransitioning(true);\n\n        var complete = function complete() {\n          _this2.setTransitioning(false);\n\n          $$$1(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n        };\n\n        this._element.style[dimension] = '';\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n        $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      };\n\n      _proto.setTransitioning = function setTransitioning(isTransitioning) {\n        this._isTransitioning = isTransitioning;\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._config = null;\n        this._parent = null;\n        this._element = null;\n        this._triggerArray = null;\n        this._isTransitioning = null;\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, config);\n        config.toggle = Boolean(config.toggle); // Coerce string values\n\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._getDimension = function _getDimension() {\n        var hasWidth = $$$1(this._element).hasClass(Dimension.WIDTH);\n        return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n      };\n\n      _proto._getParent = function _getParent() {\n        var _this3 = this;\n\n        var parent = null;\n\n        if (Util.isElement(this._config.parent)) {\n          parent = this._config.parent; // It's a jQuery object\n\n          if (typeof this._config.parent.jquery !== 'undefined') {\n            parent = this._config.parent[0];\n          }\n        } else {\n          parent = document.querySelector(this._config.parent);\n        }\n\n        var selector = \"[data-toggle=\\\"collapse\\\"][data-parent=\\\"\" + this._config.parent + \"\\\"]\";\n        var children = [].slice.call(parent.querySelectorAll(selector));\n        $$$1(children).each(function (i, element) {\n          _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n        });\n        return parent;\n      };\n\n      _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {\n        if (element) {\n          var isOpen = $$$1(element).hasClass(ClassName.SHOW);\n\n          if (triggerArray.length) {\n            $$$1(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n          }\n        }\n      }; // Static\n\n\n      Collapse._getTargetFromElement = function _getTargetFromElement(element) {\n        var selector = Util.getSelectorFromElement(element);\n        return selector ? document.querySelector(selector) : null;\n      };\n\n      Collapse._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var $this = $$$1(this);\n          var data = $this.data(DATA_KEY);\n\n          var _config = _objectSpread({}, Default, $this.data(), typeof config === 'object' && config ? config : {});\n\n          if (!data && _config.toggle && /show|hide/.test(config)) {\n            _config.toggle = false;\n          }\n\n          if (!data) {\n            data = new Collapse(this, _config);\n            $this.data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Collapse, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Collapse;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n      if (event.currentTarget.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      var $trigger = $$$1(this);\n      var selector = Util.getSelectorFromElement(this);\n      var selectors = [].slice.call(document.querySelectorAll(selector));\n      $$$1(selectors).each(function () {\n        var $target = $$$1(this);\n        var data = $target.data(DATA_KEY);\n        var config = data ? 'toggle' : $trigger.data();\n\n        Collapse._jQueryInterface.call($target, config);\n      });\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Collapse._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Collapse;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Collapse._jQueryInterface;\n    };\n\n    return Collapse;\n  }($);\n\n  /**!\n   * @fileOverview Kickass library to create and place poppers near their reference elements.\n   * @version 1.14.3\n   * @license\n   * Copyright (c) 2016 Federico Zivolo and contributors\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n\n  function microtaskDebounce(fn) {\n    var called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n      called = true;\n      window.Promise.resolve().then(function () {\n        called = false;\n        fn();\n      });\n    };\n  }\n\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n\n  var supportsMicroTasks = isBrowser && window.Promise;\n\n  /**\n  * Create a debounced version of a method, that's asynchronously deferred\n  * but called in the minimum time possible.\n  *\n  * @method\n  * @memberof Popper.Utils\n  * @argument {Function} fn\n  * @returns {Function}\n  */\n  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n  /**\n   * Check if the given variable is a function\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Any} functionToCheck - variable to check\n   * @returns {Boolean} answer to: is a function?\n   */\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  /**\n   * Get CSS computed property of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Eement} element\n   * @argument {String} property\n   */\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    }\n    // NOTE: 1 DOM access here\n    var css = getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n\n  /**\n   * Returns the parentNode or the host of the element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} parent\n   */\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n    return element.parentNode || element.host;\n  }\n\n  /**\n   * Returns the scrolling parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} scroll parent\n   */\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n      return document.body;\n    }\n\n    switch (element.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return element.ownerDocument.body;\n      case '#document':\n        return element.body;\n    }\n\n    // Firefox want us to check `-x` and `-y` variations as well\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n        overflow = _getStyleComputedProp.overflow,\n        overflowX = _getStyleComputedProp.overflowX,\n        overflowY = _getStyleComputedProp.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n\n    return getScrollParent(getParentNode(element));\n  }\n\n  var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\n  var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n  /**\n   * Determines if the browser is Internet Explorer\n   * @method\n   * @memberof Popper.Utils\n   * @param {Number} version to check\n   * @returns {Boolean} isIE\n   */\n  function isIE(version) {\n    if (version === 11) {\n      return isIE11;\n    }\n    if (version === 10) {\n      return isIE10;\n    }\n    return isIE11 || isIE10;\n  }\n\n  /**\n   * Returns the offset parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} offset parent\n   */\n  function getOffsetParent(element) {\n    if (!element) {\n      return document.documentElement;\n    }\n\n    var noOffsetParent = isIE(10) ? document.body : null;\n\n    // NOTE: 1 DOM access here\n    var offsetParent = element.offsetParent;\n    // Skip hidden elements which don't have an offsetParent\n    while (offsetParent === noOffsetParent && element.nextElementSibling) {\n      offsetParent = (element = element.nextElementSibling).offsetParent;\n    }\n\n    var nodeName = offsetParent && offsetParent.nodeName;\n\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      return element ? element.ownerDocument.documentElement : document.documentElement;\n    }\n\n    // .offsetParent will return the closest TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n    if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n\n    return offsetParent;\n  }\n\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY') {\n      return false;\n    }\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n\n  /**\n   * Finds the root node (document, shadowDOM root) of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} node\n   * @returns {Element} root node\n   */\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n\n    return node;\n  }\n\n  /**\n   * Finds the offset parent common to the two provided nodes\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element1\n   * @argument {Element} element2\n   * @returns {Element} common offset parent\n   */\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return document.documentElement;\n    }\n\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1;\n\n    // Get common ancestor container\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer;\n\n    // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n\n      return getOffsetParent(commonAncestorContainer);\n    }\n\n    // one of the nodes is inside shadowDOM, find which one\n    var element1root = getRoot(element1);\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n\n  /**\n   * Gets the scroll value of the given element in the given side (top and left)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {String} side `top` or `left`\n   * @returns {number} amount of scrolled pixels\n   */\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = element.ownerDocument.documentElement;\n      var scrollingElement = element.ownerDocument.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n\n    return element[upperSide];\n  }\n\n  /*\n   * Sum or subtract the element scroll values (left and top) from a given rect object\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} rect - Rect object you want to change\n   * @param {HTMLElement} element - The element from the function reads the scroll values\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n   * @return {Object} rect - The modifier rect object\n   */\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n\n  /*\n   * Helper to detect borders of a given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {CSSStyleDeclaration} styles\n   * Result of `getStyleComputedProperty` on the given element\n   * @param {String} axis - `x` or `y`\n   * @return {number} borders - The borders size of the given axis\n   */\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n  }\n\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n  }\n\n  function getWindowSizes() {\n    var body = document.body;\n    var html = document.documentElement;\n    var computedStyle = isIE(10) && getComputedStyle(html);\n\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n\n\n\n\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Given element offsets, generate an output similar to getBoundingClientRect\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} offsets\n   * @returns {Object} ClientRect like output\n   */\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n\n  /**\n   * Get bounding client rect of given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} element\n   * @return {Object} client rect\n   */\n  function getBoundingClientRect(element) {\n    var rect = {};\n\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    try {\n      if (isIE(10)) {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } else {\n        rect = element.getBoundingClientRect();\n      }\n    } catch (e) {}\n\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n\n    // subtract scrollbar size from sizes\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height;\n\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n\n    return getClientRect(result);\n  }\n\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var isIE10 = isIE(10);\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n    // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n    if (fixedPosition && parent.nodeName === 'HTML') {\n      parentRect.top = Math.max(parentRect.top, 0);\n      parentRect.left = Math.max(parentRect.left, 0);\n    }\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0;\n\n    // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n    if (!isIE10 && isHTML) {\n      var marginTop = parseFloat(styles.marginTop, 10);\n      var marginLeft = parseFloat(styles.marginLeft, 10);\n\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft;\n\n      // Attach marginTop and marginLeft because in some circumstances we may need them\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n\n    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n\n    return offsets;\n  }\n\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var html = element.ownerDocument.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n    var scrollTop = !excludeScroll ? getScroll(html) : 0;\n    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n\n    return getClientRect(offset);\n  }\n\n  /**\n   * Check if the given element is fixed or is inside a fixed parent\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {Element} customContainer\n   * @returns {Boolean} answer to \"isFixed?\"\n   */\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n    return isFixed(getParentNode(element));\n  }\n\n  /**\n   * Finds the first parent of an element that has a transformed property defined\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} first transformed parent or documentElement\n   */\n\n  function getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement || isIE()) {\n      return document.documentElement;\n    }\n    var el = element.parentElement;\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n      el = el.parentElement;\n    }\n    return el || document.documentElement;\n  }\n\n  /**\n   * Computed the boundaries limits and return them\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} popper\n   * @param {HTMLElement} reference\n   * @param {number} padding\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n   * @param {Boolean} fixedPosition - Is in fixed position mode\n   * @returns {Object} Coordinates of the boundaries\n   */\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    // NOTE: 1 DOM access here\n\n    var boundaries = { top: 0, left: 0 };\n    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(reference));\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = popper.ownerDocument.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n      // In case of HTML, we need a different computation\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(),\n            height = _getWindowSizes.height,\n            width = _getWindowSizes.width;\n\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    }\n\n    // Add paddings\n    boundaries.left += padding;\n    boundaries.top += padding;\n    boundaries.right -= padding;\n    boundaries.bottom -= padding;\n\n    return boundaries;\n  }\n\n  function getArea(_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n\n    return width * height;\n  }\n\n  /**\n   * Utility used to transform the `auto` placement to the placement with more\n   * available space.\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n    var variation = placement.split('-')[1];\n\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n\n  /**\n   * Get offsets to the reference element\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} state\n   * @param {Element} popper - the popper element\n   * @param {Element} reference - the reference element (the popper will be relative to this)\n   * @param {Element} fixedPosition - is in fixed position mode\n   * @returns {Object} An object containing the offsets which will be applied to the popper\n   */\n  function getReferenceOffsets(state, popper, reference) {\n    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n  }\n\n  /**\n   * Get the outer sizes of the given element (offset size + margins)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Object} object containing width and height properties\n   */\n  function getOuterSizes(element) {\n    var styles = getComputedStyle(element);\n    var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n\n  /**\n   * Get the opposite placement of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement\n   * @returns {String} flipped placement\n   */\n  function getOppositePlacement(placement) {\n    var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n\n  /**\n   * Get offsets to the popper\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} position - CSS position the Popper will get applied\n   * @param {HTMLElement} popper - the popper element\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n   * @param {String} placement - one of the valid placement options\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n   */\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0];\n\n    // Get popper node sizes\n    var popperRect = getOuterSizes(popper);\n\n    // Add position, width and height to our offsets object\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    };\n\n    // depending by the popper placement we have to compute its offsets slightly differently\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n\n    return popperOffsets;\n  }\n\n  /**\n   * Mimics the `find` method of Array\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    }\n\n    // use `filter` to obtain the same behavior of `find`\n    return arr.filter(check)[0];\n  }\n\n  /**\n   * Return the index of the matching object\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    }\n\n    // use `find` + `indexOf` if `findIndex` isn't supported\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n\n  /**\n   * Loop trough the list of modifiers and run them in order,\n   * each of them will then edit the data object.\n   * @method\n   * @memberof Popper.Utils\n   * @param {dataObject} data\n   * @param {Array} modifiers\n   * @param {String} ends - Optional modifier name used as stopper\n   * @returns {dataObject}\n   */\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier['function']) {\n        // eslint-disable-line dot-notation\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n      var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n\n        data = fn(data, modifier);\n      }\n    });\n\n    return data;\n  }\n\n  /**\n   * Updates the position of the popper, computing the new offsets and applying\n   * the new style.<br />\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\n   * @method\n   * @memberof Popper\n   */\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    };\n\n    // compute reference element offsets\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n    // store the computed placement inside `originalPlacement`\n    data.originalPlacement = data.placement;\n\n    data.positionFixed = this.options.positionFixed;\n\n    // compute the popper offsets\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n    // run the modifiers\n    data = runModifiers(this.modifiers, data);\n\n    // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n\n  /**\n   * Helper used to know if the given modifier is enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @returns {Boolean}\n   */\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n          enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n\n  /**\n   * Get the prefixed supported property name\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} property (camelCase)\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n   */\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n      if (typeof document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Destroy the popper\n   * @method\n   * @memberof Popper\n   */\n  function destroy() {\n    this.state.isDestroyed = true;\n\n    // touch DOM only if `applyStyle` modifier is enabled\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style.left = '';\n      this.popper.style.right = '';\n      this.popper.style.bottom = '';\n      this.popper.style.willChange = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners();\n\n    // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n    return this;\n  }\n\n  /**\n   * Get the window associated with the element\n   * @argument {Element} element\n   * @returns {Window}\n   */\n  function getWindow(element) {\n    var ownerDocument = element.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n    target.addEventListener(event, callback, { passive: true });\n\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n    scrollParents.push(target);\n  }\n\n  /**\n   * Setup needed event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n    // Scroll event listener on scroll parents\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n\n    return state;\n  }\n\n  /**\n   * It will add resize/scroll events and start recalculating\n   * position of the popper element when they are triggered.\n   * @method\n   * @memberof Popper\n   */\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n\n  /**\n   * Remove event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    getWindow(reference).removeEventListener('resize', state.updateBound);\n\n    // Remove scroll event listener on scroll parents\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    });\n\n    // Reset state\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n\n  /**\n   * It will remove resize/scroll events and won't recalculate popper position\n   * when they are triggered. It also won't trigger onUpdate callback anymore,\n   * unless you call `update` method manually.\n   * @method\n   * @memberof Popper\n   */\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n\n  /**\n   * Tells if a given input is a number\n   * @method\n   * @memberof Popper.Utils\n   * @param {*} input to check\n   * @return {Boolean}\n   */\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\n   * Set the style to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the style to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = '';\n      // add unit if the value is numeric and is one of the following\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n\n  /**\n   * Set the attributes to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the attributes to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The same data object\n   */\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles);\n\n    // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n    setAttributes(data.instance.popper, data.attributes);\n\n    // if arrowElement is defined and arrowStyles has some properties\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n\n    return data;\n  }\n\n  /**\n   * Set the x-placement attribute before everything else because it could be used\n   * to add margins to the popper margins needs to be calculated to get the\n   * correct popper offsets.\n   * @method\n   * @memberof Popper.modifiers\n   * @param {HTMLElement} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper\n   * @param {Object} options - Popper.js options\n   */\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n    popper.setAttribute('x-placement', placement);\n\n    // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n    setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n    return options;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function computeStyle(data, options) {\n    var x = options.x,\n        y = options.y;\n    var popper = data.offsets.popper;\n\n    // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent);\n\n    // Styles\n    var styles = {\n      position: popper.position\n    };\n\n    // Avoid blurry text by using full pixel integers.\n    // For pixel-perfect positioning, top/bottom prefers rounded\n    // values, while left/right prefers floored values.\n    var offsets = {\n      left: Math.floor(popper.left),\n      top: Math.round(popper.top),\n      bottom: Math.round(popper.bottom),\n      right: Math.floor(popper.right)\n    };\n\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right';\n\n    // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n    var prefixedProperty = getSupportedPropertyName('transform');\n\n    // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n    var left = void 0,\n        top = void 0;\n    if (sideA === 'bottom') {\n      top = -offsetParentRect.height + offsets.bottom;\n    } else {\n      top = offsets.top;\n    }\n    if (sideB === 'right') {\n      left = -offsetParentRect.width + offsets.right;\n    } else {\n      left = offsets.left;\n    }\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    }\n\n    // Attributes\n    var attributes = {\n      'x-placement': data.placement\n    };\n\n    // Update `data` attributes, styles and arrowStyles\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n    return data;\n  }\n\n  /**\n   * Helper used to know if the given modifier depends from another one.<br />\n   * It checks if the needed modifier is listed and enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @param {Array} modifiers - list of modifiers\n   * @param {String} requestingName - name of requesting modifier\n   * @param {String} requestedName - name of requested modifier\n   * @returns {Boolean}\n   */\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n    return isRequired;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function arrow(data, options) {\n    var _data$offsets$arrow;\n\n    // arrow depends on keepTogether in order to work\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n\n    var arrowElement = options.element;\n\n    // if arrowElement is a string, suppose it's a CSS selector\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement);\n\n      // if arrowElement is not found, don't run the modifier\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n    //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjuction\n    //\n\n    // top/left side\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    }\n    // bottom/right side\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n    data.offsets.popper = getClientRect(data.offsets.popper);\n\n    // compute center of the popper\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n    // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n    var css = getStyleComputedProperty(data.instance.popper);\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n    // prevent arrowElement from being placed not contiguously to its popper\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n    return data;\n  }\n\n  /**\n   * Get the opposite placement variation of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement variation\n   * @returns {String} flipped placement variation\n   */\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n    return variation;\n  }\n\n  /**\n   * List of accepted placements to use as values of the `placement` option.<br />\n   * Valid placements are:\n   * - `auto`\n   * - `top`\n   * - `right`\n   * - `bottom`\n   * - `left`\n   *\n   * Each placement can have a variation from this list:\n   * - `-start`\n   * - `-end`\n   *\n   * Variations are interpreted easily if you think of them as the left to right\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n   * is right.<br />\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n   *\n   * Some valid examples are:\n   * - `top-end` (on top of reference, right aligned)\n   * - `right-start` (on right of reference, top aligned)\n   * - `bottom` (on bottom, centered)\n   * - `auto-right` (on the side with more space available, alignment depends by placement)\n   *\n   * @static\n   * @type {Array}\n   * @enum {String}\n   * @readonly\n   * @method placements\n   * @memberof Popper\n   */\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n  // Get rid of `auto` `auto-start` and `auto-end`\n  var validPlacements = placements.slice(3);\n\n  /**\n   * Given an initial placement, returns all the subsequent placements\n   * clockwise (or counter-clockwise).\n   *\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement - A valid placement (it accepts variations)\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n   * @returns {Array} placements including their variations\n   */\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n\n    var flipOrder = [];\n\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n      default:\n        flipOrder = options.behavior;\n    }\n\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference;\n\n      // using floor because the reference offsets may contain decimals we are not going to consider here\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n      // flip the variation if required\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n      var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n\n        data.placement = placement + (variation ? '-' + variation : '');\n\n        // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n\n    return data;\n  }\n\n  /**\n   * Converts a string containing value + unit into a px value number\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} str - Value + unit string\n   * @argument {String} measurement - `height` or `width`\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @returns {Number|String}\n   * Value in pixels, or original string if no values were extracted\n   */\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2];\n\n    // If it's not a number it's an operator, I guess\n    if (!value) {\n      return str;\n    }\n\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n\n  /**\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} offset\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @argument {String} basePlacement\n   * @returns {Array} a two cells array with x and y offsets in numbers\n   */\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0];\n\n    // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n    // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    });\n\n    // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    }\n\n    // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n    // Convert the values with units to absolute pixels to allow our computations\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op\n      // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, [])\n      // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    });\n\n    // Loop trough the offsets arrays and execute the operations\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @argument {Number|String} options.offset=0\n   * The offset value as described in the modifier description\n   * @returns {Object} The data object, properly modified\n   */\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n        _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var basePlacement = placement.split('-')[0];\n\n    var offsets = void 0;\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n\n    data.popper = popper;\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n    // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    }\n\n    // NOTE: DOM access here\n    // resets the popper's position so that the document size can be calculated excluding\n    // the size of the popper element itself\n    var transformProp = getSupportedPropertyName('transform');\n    var popperStyles = data.instance.popper.style; // assignment to help minification\n    var top = popperStyles.top,\n        left = popperStyles.left,\n        transform = popperStyles[transformProp];\n\n    popperStyles.top = '';\n    popperStyles.left = '';\n    popperStyles[transformProp] = '';\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n    // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n    popperStyles.top = top;\n    popperStyles.left = left;\n    popperStyles[transformProp] = transform;\n\n    options.boundaries = boundaries;\n\n    var order = options.priority;\n    var popper = data.offsets.popper;\n\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n        return defineProperty({}, mainSide, value);\n      }\n    };\n\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n\n    data.offsets.popper = popper;\n\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1];\n\n    // if shift shiftvariation is specified, run the modifier\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n          reference = _data$offsets.reference,\n          popper = _data$offsets.popper;\n\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n\n    return data;\n  }\n\n  /**\n   * Modifier function, each modifier can have a function of this type assigned\n   * to its `fn` property.<br />\n   * These functions will be called on each update, this means that you must\n   * make sure they are performant enough to avoid performance bottlenecks.\n   *\n   * @function ModifierFn\n   * @argument {dataObject} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {dataObject} The data object, properly modified\n   */\n\n  /**\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n   * needed by the library.\n   *\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n   * All the other properties are configurations that could be tweaked.\n   * @namespace modifiers\n   */\n  var modifiers = {\n    /**\n     * Modifier used to shift the popper on the start or end of its reference\n     * element.<br />\n     * It will read the variation of the `placement` property.<br />\n     * It can be one either `-end` or `-start`.\n     * @memberof modifiers\n     * @inner\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n\n    /**\n     * The `offset` modifier can shift your popper on both its axis.\n     *\n     * It accepts the following units:\n     * - `px` or unitless, interpreted as pixels\n     * - `%` or `%r`, percentage relative to the length of the reference element\n     * - `%p`, percentage relative to the length of the popper element\n     * - `vw`, CSS viewport width unit\n     * - `vh`, CSS viewport height unit\n     *\n     * For length is intended the main axis relative to the placement of the popper.<br />\n     * This means that if the placement is `top` or `bottom`, the length will be the\n     * `width`. In case of `left` or `right`, it will be the height.\n     *\n     * You can provide a single value (as `Number` or `String`), or a pair of values\n     * as `String` divided by a comma or one (or more) white spaces.<br />\n     * The latter is a deprecated method because it leads to confusion and will be\n     * removed in v2.<br />\n     * Additionally, it accepts additions and subtractions between different units.\n     * Note that multiplications and divisions aren't supported.\n     *\n     * Valid examples are:\n     * ```\n     * 10\n     * '10%'\n     * '10, 10'\n     * '10%, 10'\n     * '10 + 10%'\n     * '10 - 5vh + 3%'\n     * '-10px + 5vh, 5px - 6%'\n     * ```\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n     * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: offset,\n      /** @prop {Number|String} offset=0\n       * The offset value as described in the modifier description\n       */\n      offset: 0\n    },\n\n    /**\n     * Modifier used to prevent the popper from being positioned outside the boundary.\n     *\n     * An scenario exists where the reference itself is not within the boundaries.<br />\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n     * In this case we need to decide whether the popper should either:\n     *\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\n     * - if it should ignore the boundary and \"escape with its reference\"\n     *\n     * When `escapeWithReference` is set to`true` and reference is completely\n     * outside its boundaries, the popper will overflow (or completely leave)\n     * the boundaries in order to remain attached to the edge of the reference.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n      /**\n       * @prop {Array} [priority=['left','right','top','bottom']]\n       * Popper will try to prevent overflow following these priorities by default,\n       * then, it could overflow on the left and on top of the `boundariesElement`\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n      /**\n       * @prop {number} padding=5\n       * Amount of pixel used to define a minimum distance between the boundaries\n       * and the popper this makes sure the popper has always a little padding\n       * between the edges of its container\n       */\n      padding: 5,\n      /**\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\n       * Boundaries used by the modifier, can be `scrollParent`, `window`,\n       * `viewport` or any DOM element.\n       */\n      boundariesElement: 'scrollParent'\n    },\n\n    /**\n     * Modifier used to make sure the reference and its popper stay near eachothers\n     * without leaving any gap between the two. Expecially useful when the arrow is\n     * enabled and you want to assure it to point to its reference element.\n     * It cares only about the first axis, you can still have poppers with margin\n     * between the popper and its reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n\n    /**\n     * This modifier is used to move the `arrowElement` of the popper to make\n     * sure it is positioned between the reference element and its popper element.\n     * It will read the outer size of the `arrowElement` node to detect how many\n     * pixels of conjuction are needed.\n     *\n     * It has no effect if no `arrowElement` is provided.\n     * @memberof modifiers\n     * @inner\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: arrow,\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n\n    /**\n     * Modifier used to flip the popper's placement when it starts to overlap its\n     * reference element.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     *\n     * **NOTE:** this modifier will interrupt the current update cycle and will\n     * restart it if it detects the need to flip the placement.\n     * @memberof modifiers\n     * @inner\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: flip,\n      /**\n       * @prop {String|Array} behavior='flip'\n       * The behavior used to change the popper's placement. It can be one of\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n       * placements (with optional variations).\n       */\n      behavior: 'flip',\n      /**\n       * @prop {number} padding=5\n       * The popper will flip if it hits the edges of the `boundariesElement`\n       */\n      padding: 5,\n      /**\n       * @prop {String|HTMLElement} boundariesElement='viewport'\n       * The element which will define the boundaries of the popper position,\n       * the popper will never be placed outside of the defined boundaries\n       * (except if keepTogether is enabled)\n       */\n      boundariesElement: 'viewport'\n    },\n\n    /**\n     * Modifier used to make the popper flow toward the inner of the reference element.\n     * By default, when this modifier is disabled, the popper will be placed outside\n     * the reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n\n    /**\n     * Modifier used to hide the popper when its reference element is outside of the\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n     * be used to hide with a CSS selector the popper when its reference is\n     * out of boundaries.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     * @memberof modifiers\n     * @inner\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n\n    /**\n     * Computes the style that will be applied to the popper element to gets\n     * properly positioned.\n     *\n     * Note that this modifier will not touch the DOM, it just prepares the styles\n     * so that `applyStyle` modifier can apply it. This separation is useful\n     * in case you need to replace `applyStyle` with a custom implementation.\n     *\n     * This modifier has `850` as `order` value to maintain backward compatibility\n     * with previous versions of Popper.js. Expect the modifiers ordering method\n     * to change in future major versions of the library.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n      /**\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3d transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties.\n       */\n      gpuAcceleration: true,\n      /**\n       * @prop {string} [x='bottom']\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n       * Change this if your popper should grow in a direction different from `bottom`\n       */\n      x: 'bottom',\n      /**\n       * @prop {string} [x='left']\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n       * Change this if your popper should grow in a direction different from `right`\n       */\n      y: 'right'\n    },\n\n    /**\n     * Applies the computed styles to the popper element.\n     *\n     * All the DOM manipulations are limited to this modifier. This is useful in case\n     * you want to integrate Popper.js inside a framework or view library and you\n     * want to delegate all the DOM manipulations to it.\n     *\n     * Note that if you disable this modifier, you must make sure the popper element\n     * has its position set to `absolute` before Popper.js can do its work!\n     *\n     * Just disable this modifier and define you own to achieve the desired effect.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n      /**\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3d transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties.\n       */\n      gpuAcceleration: undefined\n    }\n  };\n\n  /**\n   * The `dataObject` is an object containing all the informations used by Popper.js\n   * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n   * @name dataObject\n   * @property {Object} data.instance The Popper.js instance\n   * @property {String} data.placement Placement applied to popper\n   * @property {String} data.originalPlacement Placement originally defined on init\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.boundaries Offsets of the popper boundaries\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n   */\n\n  /**\n   * Default options provided to Popper.js constructor.<br />\n   * These can be overriden using the `options` argument of Popper.js.<br />\n   * To override an option, simply pass as 3rd argument an object with the same\n   * structure of this object, example:\n   * ```\n   * new Popper(ref, pop, {\n   *   modifiers: {\n   *     preventOverflow: { enabled: false }\n   *   }\n   * })\n   * ```\n   * @type {Object}\n   * @static\n   * @memberof Popper\n   */\n  var Defaults = {\n    /**\n     * Popper's placement\n     * @prop {Popper.placements} placement='bottom'\n     */\n    placement: 'bottom',\n\n    /**\n     * Set this to true if you want popper to position it self in 'fixed' mode\n     * @prop {Boolean} positionFixed=false\n     */\n    positionFixed: false,\n\n    /**\n     * Whether events (resize, scroll) are initially enabled\n     * @prop {Boolean} eventsEnabled=true\n     */\n    eventsEnabled: true,\n\n    /**\n     * Set to true if you want to automatically remove the popper when\n     * you call the `destroy` method.\n     * @prop {Boolean} removeOnDestroy=false\n     */\n    removeOnDestroy: false,\n\n    /**\n     * Callback called when the popper is created.<br />\n     * By default, is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onCreate}\n     */\n    onCreate: function onCreate() {},\n\n    /**\n     * Callback called when the popper is updated, this callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.<br />\n     * By default, is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onUpdate}\n     */\n    onUpdate: function onUpdate() {},\n\n    /**\n     * List of modifiers used to modify the offsets before they are applied to the popper.\n     * They provide most of the functionalities of Popper.js\n     * @prop {modifiers}\n     */\n    modifiers: modifiers\n  };\n\n  /**\n   * @callback onCreate\n   * @param {dataObject} data\n   */\n\n  /**\n   * @callback onUpdate\n   * @param {dataObject} data\n   */\n\n  // Utils\n  // Methods\n  var Popper = function () {\n    /**\n     * Create a new Popper.js instance\n     * @class Popper\n     * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n     * @param {HTMLElement} popper - The HTML element used as popper.\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n     * @return {Object} instance - The generated Popper.js instance\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      };\n\n      // make update() debounced, so that it only runs at most once-per-tick\n      this.update = debounce(this.update.bind(this));\n\n      // with {} we create a new object with the options inside it\n      this.options = _extends({}, Popper.Defaults, options);\n\n      // init state\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      };\n\n      // get reference and popper elements (allow jQuery wrappers)\n      this.reference = reference && reference.jquery ? reference[0] : reference;\n      this.popper = popper && popper.jquery ? popper[0] : popper;\n\n      // Deep merge modifiers options\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      });\n\n      // Refactoring modifiers' list (Object => Array)\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      })\n      // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      });\n\n      // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      });\n\n      // fire the first update to position the popper in the right place\n      this.update();\n\n      var eventsEnabled = this.options.eventsEnabled;\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n\n      this.state.eventsEnabled = eventsEnabled;\n    }\n\n    // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n\n      /**\n       * Schedule an update, it will run on the next UI update available\n       * @method scheduleUpdate\n       * @memberof Popper\n       */\n\n\n      /**\n       * Collection of utilities useful when writing custom modifiers.\n       * Starting from version 1.7, this method is available only if you\n       * include `popper-utils.js` before `popper.js`.\n       *\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\n       * and will be removed in v2! Use the PopperUtils module directly instead.\n       * Due to the high instability of the methods contained in Utils, we can't\n       * guarantee them to follow semver. Use them at your own risk!\n       * @static\n       * @private\n       * @type {Object}\n       * @deprecated since version 1.8\n       * @member Utils\n       * @memberof Popper\n       */\n\n    }]);\n    return Popper;\n  }();\n\n  /**\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\n   * and lets you use it as replacement of a real DOM node.<br />\n   * You can use this method to position a popper relatively to a set of coordinates\n   * in case you don't have a DOM node to use as reference.\n   *\n   * ```\n   * new Popper(referenceObject, popperNode);\n   * ```\n   *\n   * NB: This feature isn't supported in Internet Explorer 10\n   * @name referenceObject\n   * @property {Function} data.getBoundingClientRect\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n   * @property {number} data.clientWidth\n   * An ES6 getter that will return the width of the virtual reference element.\n   * @property {number} data.clientHeight\n   * An ES6 getter that will return the height of the virtual reference element.\n   */\n\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): dropdown.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Dropdown = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'dropdown';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.dropdown';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\n    var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key\n\n    var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key\n\n    var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\n\n    var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\n\n    var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\n\n    var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + \"|\" + ARROW_DOWN_KEYCODE + \"|\" + ESCAPE_KEYCODE);\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      CLICK: \"click\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,\n      KEYDOWN_DATA_API: \"keydown\" + EVENT_KEY + DATA_API_KEY,\n      KEYUP_DATA_API: \"keyup\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      DISABLED: 'disabled',\n      SHOW: 'show',\n      DROPUP: 'dropup',\n      DROPRIGHT: 'dropright',\n      DROPLEFT: 'dropleft',\n      MENURIGHT: 'dropdown-menu-right',\n      MENULEFT: 'dropdown-menu-left',\n      POSITION_STATIC: 'position-static'\n    };\n    var Selector = {\n      DATA_TOGGLE: '[data-toggle=\"dropdown\"]',\n      FORM_CHILD: '.dropdown form',\n      MENU: '.dropdown-menu',\n      NAVBAR_NAV: '.navbar-nav',\n      VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n    };\n    var AttachmentMap = {\n      TOP: 'top-start',\n      TOPEND: 'top-end',\n      BOTTOM: 'bottom-start',\n      BOTTOMEND: 'bottom-end',\n      RIGHT: 'right-start',\n      RIGHTEND: 'right-end',\n      LEFT: 'left-start',\n      LEFTEND: 'left-end'\n    };\n    var Default = {\n      offset: 0,\n      flip: true,\n      boundary: 'scrollParent',\n      reference: 'toggle',\n      display: 'dynamic'\n    };\n    var DefaultType = {\n      offset: '(number|string|function)',\n      flip: 'boolean',\n      boundary: '(string|element)',\n      reference: '(string|element)',\n      display: 'string'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Dropdown =\n    /*#__PURE__*/\n    function () {\n      function Dropdown(element, config) {\n        this._element = element;\n        this._popper = null;\n        this._config = this._getConfig(config);\n        this._menu = this._getMenuElement();\n        this._inNavbar = this._detectNavbar();\n\n        this._addEventListeners();\n      } // Getters\n\n\n      var _proto = Dropdown.prototype;\n\n      // Public\n      _proto.toggle = function toggle() {\n        if (this._element.disabled || $$$1(this._element).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var parent = Dropdown._getParentFromElement(this._element);\n\n        var isActive = $$$1(this._menu).hasClass(ClassName.SHOW);\n\n        Dropdown._clearMenus();\n\n        if (isActive) {\n          return;\n        }\n\n        var relatedTarget = {\n          relatedTarget: this._element\n        };\n        var showEvent = $$$1.Event(Event.SHOW, relatedTarget);\n        $$$1(parent).trigger(showEvent);\n\n        if (showEvent.isDefaultPrevented()) {\n          return;\n        } // Disable totally Popper.js for Dropdown in Navbar\n\n\n        if (!this._inNavbar) {\n          /**\n           * Check for Popper dependency\n           * Popper - https://popper.js.org\n           */\n          if (typeof Popper === 'undefined') {\n            throw new TypeError('Bootstrap dropdown require Popper.js (https://popper.js.org)');\n          }\n\n          var referenceElement = this._element;\n\n          if (this._config.reference === 'parent') {\n            referenceElement = parent;\n          } else if (Util.isElement(this._config.reference)) {\n            referenceElement = this._config.reference; // Check if it's jQuery element\n\n            if (typeof this._config.reference.jquery !== 'undefined') {\n              referenceElement = this._config.reference[0];\n            }\n          } // If boundary is not `scrollParent`, then set position to `static`\n          // to allow the menu to \"escape\" the scroll parent's boundaries\n          // https://github.com/twbs/bootstrap/issues/24251\n\n\n          if (this._config.boundary !== 'scrollParent') {\n            $$$1(parent).addClass(ClassName.POSITION_STATIC);\n          }\n\n          this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());\n        } // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n        if ('ontouchstart' in document.documentElement && $$$1(parent).closest(Selector.NAVBAR_NAV).length === 0) {\n          $$$1(document.body).children().on('mouseover', null, $$$1.noop);\n        }\n\n        this._element.focus();\n\n        this._element.setAttribute('aria-expanded', true);\n\n        $$$1(this._menu).toggleClass(ClassName.SHOW);\n        $$$1(parent).toggleClass(ClassName.SHOW).trigger($$$1.Event(Event.SHOWN, relatedTarget));\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        $$$1(this._element).off(EVENT_KEY);\n        this._element = null;\n        this._menu = null;\n\n        if (this._popper !== null) {\n          this._popper.destroy();\n\n          this._popper = null;\n        }\n      };\n\n      _proto.update = function update() {\n        this._inNavbar = this._detectNavbar();\n\n        if (this._popper !== null) {\n          this._popper.scheduleUpdate();\n        }\n      }; // Private\n\n\n      _proto._addEventListeners = function _addEventListeners() {\n        var _this = this;\n\n        $$$1(this._element).on(Event.CLICK, function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          _this.toggle();\n        });\n      };\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, this.constructor.Default, $$$1(this._element).data(), config);\n        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n        return config;\n      };\n\n      _proto._getMenuElement = function _getMenuElement() {\n        if (!this._menu) {\n          var parent = Dropdown._getParentFromElement(this._element);\n\n          if (parent) {\n            this._menu = parent.querySelector(Selector.MENU);\n          }\n        }\n\n        return this._menu;\n      };\n\n      _proto._getPlacement = function _getPlacement() {\n        var $parentDropdown = $$$1(this._element.parentNode);\n        var placement = AttachmentMap.BOTTOM; // Handle dropup\n\n        if ($parentDropdown.hasClass(ClassName.DROPUP)) {\n          placement = AttachmentMap.TOP;\n\n          if ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {\n            placement = AttachmentMap.TOPEND;\n          }\n        } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {\n          placement = AttachmentMap.RIGHT;\n        } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {\n          placement = AttachmentMap.LEFT;\n        } else if ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {\n          placement = AttachmentMap.BOTTOMEND;\n        }\n\n        return placement;\n      };\n\n      _proto._detectNavbar = function _detectNavbar() {\n        return $$$1(this._element).closest('.navbar').length > 0;\n      };\n\n      _proto._getPopperConfig = function _getPopperConfig() {\n        var _this2 = this;\n\n        var offsetConf = {};\n\n        if (typeof this._config.offset === 'function') {\n          offsetConf.fn = function (data) {\n            data.offsets = _objectSpread({}, data.offsets, _this2._config.offset(data.offsets) || {});\n            return data;\n          };\n        } else {\n          offsetConf.offset = this._config.offset;\n        }\n\n        var popperConfig = {\n          placement: this._getPlacement(),\n          modifiers: {\n            offset: offsetConf,\n            flip: {\n              enabled: this._config.flip\n            },\n            preventOverflow: {\n              boundariesElement: this._config.boundary\n            }\n          } // Disable Popper.js if we have a static display\n\n        };\n\n        if (this._config.display === 'static') {\n          popperConfig.modifiers.applyStyle = {\n            enabled: false\n          };\n        }\n\n        return popperConfig;\n      }; // Static\n\n\n      Dropdown._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = typeof config === 'object' ? config : null;\n\n          if (!data) {\n            data = new Dropdown(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      Dropdown._clearMenus = function _clearMenus(event) {\n        if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n          return;\n        }\n\n        var toggles = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n\n        for (var i = 0, len = toggles.length; i < len; i++) {\n          var parent = Dropdown._getParentFromElement(toggles[i]);\n\n          var context = $$$1(toggles[i]).data(DATA_KEY);\n          var relatedTarget = {\n            relatedTarget: toggles[i]\n          };\n\n          if (event && event.type === 'click') {\n            relatedTarget.clickEvent = event;\n          }\n\n          if (!context) {\n            continue;\n          }\n\n          var dropdownMenu = context._menu;\n\n          if (!$$$1(parent).hasClass(ClassName.SHOW)) {\n            continue;\n          }\n\n          if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $$$1.contains(parent, event.target)) {\n            continue;\n          }\n\n          var hideEvent = $$$1.Event(Event.HIDE, relatedTarget);\n          $$$1(parent).trigger(hideEvent);\n\n          if (hideEvent.isDefaultPrevented()) {\n            continue;\n          } // If this is a touch-enabled device we remove the extra\n          // empty mouseover listeners we added for iOS support\n\n\n          if ('ontouchstart' in document.documentElement) {\n            $$$1(document.body).children().off('mouseover', null, $$$1.noop);\n          }\n\n          toggles[i].setAttribute('aria-expanded', 'false');\n          $$$1(dropdownMenu).removeClass(ClassName.SHOW);\n          $$$1(parent).removeClass(ClassName.SHOW).trigger($$$1.Event(Event.HIDDEN, relatedTarget));\n        }\n      };\n\n      Dropdown._getParentFromElement = function _getParentFromElement(element) {\n        var parent;\n        var selector = Util.getSelectorFromElement(element);\n\n        if (selector) {\n          parent = document.querySelector(selector);\n        }\n\n        return parent || element.parentNode;\n      }; // eslint-disable-next-line complexity\n\n\n      Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {\n        // If not input/textarea:\n        //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n        // If input/textarea:\n        //  - If space key => not a dropdown command\n        //  - If key is other than escape\n        //    - If key is not up or down => not a dropdown command\n        //    - If trigger inside the menu => not a dropdown command\n        if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $$$1(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.disabled || $$$1(this).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var parent = Dropdown._getParentFromElement(this);\n\n        var isActive = $$$1(parent).hasClass(ClassName.SHOW);\n\n        if (!isActive && (event.which !== ESCAPE_KEYCODE || event.which !== SPACE_KEYCODE) || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n          if (event.which === ESCAPE_KEYCODE) {\n            var toggle = parent.querySelector(Selector.DATA_TOGGLE);\n            $$$1(toggle).trigger('focus');\n          }\n\n          $$$1(this).trigger('click');\n          return;\n        }\n\n        var items = [].slice.call(parent.querySelectorAll(Selector.VISIBLE_ITEMS));\n\n        if (items.length === 0) {\n          return;\n        }\n\n        var index = items.indexOf(event.target);\n\n        if (event.which === ARROW_UP_KEYCODE && index > 0) {\n          // Up\n          index--;\n        }\n\n        if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n          // Down\n          index++;\n        }\n\n        if (index < 0) {\n          index = 0;\n        }\n\n        items[index].focus();\n      };\n\n      _createClass(Dropdown, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: \"DefaultType\",\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Dropdown;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + \" \" + Event.KEYUP_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      Dropdown._jQueryInterface.call($$$1(this), 'toggle');\n    }).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\n      e.stopPropagation();\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Dropdown._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Dropdown;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Dropdown._jQueryInterface;\n    };\n\n    return Dropdown;\n  }($, Popper);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): modal.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Modal = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'modal';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.modal';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\n    var Default = {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: true\n    };\n    var DefaultType = {\n      backdrop: '(boolean|string)',\n      keyboard: 'boolean',\n      focus: 'boolean',\n      show: 'boolean'\n    };\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      FOCUSIN: \"focusin\" + EVENT_KEY,\n      RESIZE: \"resize\" + EVENT_KEY,\n      CLICK_DISMISS: \"click.dismiss\" + EVENT_KEY,\n      KEYDOWN_DISMISS: \"keydown.dismiss\" + EVENT_KEY,\n      MOUSEUP_DISMISS: \"mouseup.dismiss\" + EVENT_KEY,\n      MOUSEDOWN_DISMISS: \"mousedown.dismiss\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n      BACKDROP: 'modal-backdrop',\n      OPEN: 'modal-open',\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      DIALOG: '.modal-dialog',\n      DATA_TOGGLE: '[data-toggle=\"modal\"]',\n      DATA_DISMISS: '[data-dismiss=\"modal\"]',\n      FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n      STICKY_CONTENT: '.sticky-top'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Modal =\n    /*#__PURE__*/\n    function () {\n      function Modal(element, config) {\n        this._config = this._getConfig(config);\n        this._element = element;\n        this._dialog = element.querySelector(Selector.DIALOG);\n        this._backdrop = null;\n        this._isShown = false;\n        this._isBodyOverflowing = false;\n        this._ignoreBackdropClick = false;\n        this._scrollbarWidth = 0;\n      } // Getters\n\n\n      var _proto = Modal.prototype;\n\n      // Public\n      _proto.toggle = function toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n      };\n\n      _proto.show = function show(relatedTarget) {\n        var _this = this;\n\n        if (this._isTransitioning || this._isShown) {\n          return;\n        }\n\n        if ($$$1(this._element).hasClass(ClassName.FADE)) {\n          this._isTransitioning = true;\n        }\n\n        var showEvent = $$$1.Event(Event.SHOW, {\n          relatedTarget: relatedTarget\n        });\n        $$$1(this._element).trigger(showEvent);\n\n        if (this._isShown || showEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._isShown = true;\n\n        this._checkScrollbar();\n\n        this._setScrollbar();\n\n        this._adjustDialog();\n\n        $$$1(document.body).addClass(ClassName.OPEN);\n\n        this._setEscapeEvent();\n\n        this._setResizeEvent();\n\n        $$$1(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {\n          return _this.hide(event);\n        });\n        $$$1(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\n          $$$1(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {\n            if ($$$1(event.target).is(_this._element)) {\n              _this._ignoreBackdropClick = true;\n            }\n          });\n        });\n\n        this._showBackdrop(function () {\n          return _this._showElement(relatedTarget);\n        });\n      };\n\n      _proto.hide = function hide(event) {\n        var _this2 = this;\n\n        if (event) {\n          event.preventDefault();\n        }\n\n        if (this._isTransitioning || !this._isShown) {\n          return;\n        }\n\n        var hideEvent = $$$1.Event(Event.HIDE);\n        $$$1(this._element).trigger(hideEvent);\n\n        if (!this._isShown || hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._isShown = false;\n        var transition = $$$1(this._element).hasClass(ClassName.FADE);\n\n        if (transition) {\n          this._isTransitioning = true;\n        }\n\n        this._setEscapeEvent();\n\n        this._setResizeEvent();\n\n        $$$1(document).off(Event.FOCUSIN);\n        $$$1(this._element).removeClass(ClassName.SHOW);\n        $$$1(this._element).off(Event.CLICK_DISMISS);\n        $$$1(this._dialog).off(Event.MOUSEDOWN_DISMISS);\n\n        if (transition) {\n          var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n          $$$1(this._element).one(Util.TRANSITION_END, function (event) {\n            return _this2._hideModal(event);\n          }).emulateTransitionEnd(transitionDuration);\n        } else {\n          this._hideModal();\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        $$$1(window, document, this._element, this._backdrop).off(EVENT_KEY);\n        this._config = null;\n        this._element = null;\n        this._dialog = null;\n        this._backdrop = null;\n        this._isShown = null;\n        this._isBodyOverflowing = null;\n        this._ignoreBackdropClick = null;\n        this._scrollbarWidth = null;\n      };\n\n      _proto.handleUpdate = function handleUpdate() {\n        this._adjustDialog();\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, config);\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._showElement = function _showElement(relatedTarget) {\n        var _this3 = this;\n\n        var transition = $$$1(this._element).hasClass(ClassName.FADE);\n\n        if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n          // Don't move modal's DOM position\n          document.body.appendChild(this._element);\n        }\n\n        this._element.style.display = 'block';\n\n        this._element.removeAttribute('aria-hidden');\n\n        this._element.scrollTop = 0;\n\n        if (transition) {\n          Util.reflow(this._element);\n        }\n\n        $$$1(this._element).addClass(ClassName.SHOW);\n\n        if (this._config.focus) {\n          this._enforceFocus();\n        }\n\n        var shownEvent = $$$1.Event(Event.SHOWN, {\n          relatedTarget: relatedTarget\n        });\n\n        var transitionComplete = function transitionComplete() {\n          if (_this3._config.focus) {\n            _this3._element.focus();\n          }\n\n          _this3._isTransitioning = false;\n          $$$1(_this3._element).trigger(shownEvent);\n        };\n\n        if (transition) {\n          var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n          $$$1(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);\n        } else {\n          transitionComplete();\n        }\n      };\n\n      _proto._enforceFocus = function _enforceFocus() {\n        var _this4 = this;\n\n        $$$1(document).off(Event.FOCUSIN) // Guard against infinite focus loop\n        .on(Event.FOCUSIN, function (event) {\n          if (document !== event.target && _this4._element !== event.target && $$$1(_this4._element).has(event.target).length === 0) {\n            _this4._element.focus();\n          }\n        });\n      };\n\n      _proto._setEscapeEvent = function _setEscapeEvent() {\n        var _this5 = this;\n\n        if (this._isShown && this._config.keyboard) {\n          $$$1(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\n            if (event.which === ESCAPE_KEYCODE) {\n              event.preventDefault();\n\n              _this5.hide();\n            }\n          });\n        } else if (!this._isShown) {\n          $$$1(this._element).off(Event.KEYDOWN_DISMISS);\n        }\n      };\n\n      _proto._setResizeEvent = function _setResizeEvent() {\n        var _this6 = this;\n\n        if (this._isShown) {\n          $$$1(window).on(Event.RESIZE, function (event) {\n            return _this6.handleUpdate(event);\n          });\n        } else {\n          $$$1(window).off(Event.RESIZE);\n        }\n      };\n\n      _proto._hideModal = function _hideModal() {\n        var _this7 = this;\n\n        this._element.style.display = 'none';\n\n        this._element.setAttribute('aria-hidden', true);\n\n        this._isTransitioning = false;\n\n        this._showBackdrop(function () {\n          $$$1(document.body).removeClass(ClassName.OPEN);\n\n          _this7._resetAdjustments();\n\n          _this7._resetScrollbar();\n\n          $$$1(_this7._element).trigger(Event.HIDDEN);\n        });\n      };\n\n      _proto._removeBackdrop = function _removeBackdrop() {\n        if (this._backdrop) {\n          $$$1(this._backdrop).remove();\n          this._backdrop = null;\n        }\n      };\n\n      _proto._showBackdrop = function _showBackdrop(callback) {\n        var _this8 = this;\n\n        var animate = $$$1(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\n\n        if (this._isShown && this._config.backdrop) {\n          this._backdrop = document.createElement('div');\n          this._backdrop.className = ClassName.BACKDROP;\n\n          if (animate) {\n            this._backdrop.classList.add(animate);\n          }\n\n          $$$1(this._backdrop).appendTo(document.body);\n          $$$1(this._element).on(Event.CLICK_DISMISS, function (event) {\n            if (_this8._ignoreBackdropClick) {\n              _this8._ignoreBackdropClick = false;\n              return;\n            }\n\n            if (event.target !== event.currentTarget) {\n              return;\n            }\n\n            if (_this8._config.backdrop === 'static') {\n              _this8._element.focus();\n            } else {\n              _this8.hide();\n            }\n          });\n\n          if (animate) {\n            Util.reflow(this._backdrop);\n          }\n\n          $$$1(this._backdrop).addClass(ClassName.SHOW);\n\n          if (!callback) {\n            return;\n          }\n\n          if (!animate) {\n            callback();\n            return;\n          }\n\n          var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\n          $$$1(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);\n        } else if (!this._isShown && this._backdrop) {\n          $$$1(this._backdrop).removeClass(ClassName.SHOW);\n\n          var callbackRemove = function callbackRemove() {\n            _this8._removeBackdrop();\n\n            if (callback) {\n              callback();\n            }\n          };\n\n          if ($$$1(this._element).hasClass(ClassName.FADE)) {\n            var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\n\n            $$$1(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);\n          } else {\n            callbackRemove();\n          }\n        } else if (callback) {\n          callback();\n        }\n      }; // ----------------------------------------------------------------------\n      // the following methods are used to handle overflowing modals\n      // todo (fat): these should probably be refactored out of modal.js\n      // ----------------------------------------------------------------------\n\n\n      _proto._adjustDialog = function _adjustDialog() {\n        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n        if (!this._isBodyOverflowing && isModalOverflowing) {\n          this._element.style.paddingLeft = this._scrollbarWidth + \"px\";\n        }\n\n        if (this._isBodyOverflowing && !isModalOverflowing) {\n          this._element.style.paddingRight = this._scrollbarWidth + \"px\";\n        }\n      };\n\n      _proto._resetAdjustments = function _resetAdjustments() {\n        this._element.style.paddingLeft = '';\n        this._element.style.paddingRight = '';\n      };\n\n      _proto._checkScrollbar = function _checkScrollbar() {\n        var rect = document.body.getBoundingClientRect();\n        this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;\n        this._scrollbarWidth = this._getScrollbarWidth();\n      };\n\n      _proto._setScrollbar = function _setScrollbar() {\n        var _this9 = this;\n\n        if (this._isBodyOverflowing) {\n          // Note: DOMNode.style.paddingRight returns the actual value or '' if not set\n          //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set\n          var fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));\n          var stickyContent = [].slice.call(document.querySelectorAll(Selector.STICKY_CONTENT)); // Adjust fixed content padding\n\n          $$$1(fixedContent).each(function (index, element) {\n            var actualPadding = element.style.paddingRight;\n            var calculatedPadding = $$$1(element).css('padding-right');\n            $$$1(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + \"px\");\n          }); // Adjust sticky content margin\n\n          $$$1(stickyContent).each(function (index, element) {\n            var actualMargin = element.style.marginRight;\n            var calculatedMargin = $$$1(element).css('margin-right');\n            $$$1(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + \"px\");\n          }); // Adjust body padding\n\n          var actualPadding = document.body.style.paddingRight;\n          var calculatedPadding = $$$1(document.body).css('padding-right');\n          $$$1(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + \"px\");\n        }\n      };\n\n      _proto._resetScrollbar = function _resetScrollbar() {\n        // Restore fixed content padding\n        var fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));\n        $$$1(fixedContent).each(function (index, element) {\n          var padding = $$$1(element).data('padding-right');\n          $$$1(element).removeData('padding-right');\n          element.style.paddingRight = padding ? padding : '';\n        }); // Restore sticky content\n\n        var elements = [].slice.call(document.querySelectorAll(\"\" + Selector.STICKY_CONTENT));\n        $$$1(elements).each(function (index, element) {\n          var margin = $$$1(element).data('margin-right');\n\n          if (typeof margin !== 'undefined') {\n            $$$1(element).css('margin-right', margin).removeData('margin-right');\n          }\n        }); // Restore body padding\n\n        var padding = $$$1(document.body).data('padding-right');\n        $$$1(document.body).removeData('padding-right');\n        document.body.style.paddingRight = padding ? padding : '';\n      };\n\n      _proto._getScrollbarWidth = function _getScrollbarWidth() {\n        // thx d.walsh\n        var scrollDiv = document.createElement('div');\n        scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n        document.body.appendChild(scrollDiv);\n        var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n      }; // Static\n\n\n      Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = _objectSpread({}, Default, $$$1(this).data(), typeof config === 'object' && config ? config : {});\n\n          if (!data) {\n            data = new Modal(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config](relatedTarget);\n          } else if (_config.show) {\n            data.show(relatedTarget);\n          }\n        });\n      };\n\n      _createClass(Modal, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Modal;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      var _this10 = this;\n\n      var target;\n      var selector = Util.getSelectorFromElement(this);\n\n      if (selector) {\n        target = document.querySelector(selector);\n      }\n\n      var config = $$$1(target).data(DATA_KEY) ? 'toggle' : _objectSpread({}, $$$1(target).data(), $$$1(this).data());\n\n      if (this.tagName === 'A' || this.tagName === 'AREA') {\n        event.preventDefault();\n      }\n\n      var $target = $$$1(target).one(Event.SHOW, function (showEvent) {\n        if (showEvent.isDefaultPrevented()) {\n          // Only register focus restorer if modal will actually get shown\n          return;\n        }\n\n        $target.one(Event.HIDDEN, function () {\n          if ($$$1(_this10).is(':visible')) {\n            _this10.focus();\n          }\n        });\n      });\n\n      Modal._jQueryInterface.call($$$1(target), config, this);\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Modal._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Modal;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Modal._jQueryInterface;\n    };\n\n    return Modal;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): tooltip.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Tooltip = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'tooltip';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.tooltip';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var CLASS_PREFIX = 'bs-tooltip';\n    var BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\" + CLASS_PREFIX + \"\\\\S+\", 'g');\n    var DefaultType = {\n      animation: 'boolean',\n      template: 'string',\n      title: '(string|element|function)',\n      trigger: 'string',\n      delay: '(number|object)',\n      html: 'boolean',\n      selector: '(string|boolean)',\n      placement: '(string|function)',\n      offset: '(number|string)',\n      container: '(string|element|boolean)',\n      fallbackPlacement: '(string|array)',\n      boundary: '(string|element)'\n    };\n    var AttachmentMap = {\n      AUTO: 'auto',\n      TOP: 'top',\n      RIGHT: 'right',\n      BOTTOM: 'bottom',\n      LEFT: 'left'\n    };\n    var Default = {\n      animation: true,\n      template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n      trigger: 'hover focus',\n      title: '',\n      delay: 0,\n      html: false,\n      selector: false,\n      placement: 'top',\n      offset: 0,\n      container: false,\n      fallbackPlacement: 'flip',\n      boundary: 'scrollParent'\n    };\n    var HoverState = {\n      SHOW: 'show',\n      OUT: 'out'\n    };\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      INSERTED: \"inserted\" + EVENT_KEY,\n      CLICK: \"click\" + EVENT_KEY,\n      FOCUSIN: \"focusin\" + EVENT_KEY,\n      FOCUSOUT: \"focusout\" + EVENT_KEY,\n      MOUSEENTER: \"mouseenter\" + EVENT_KEY,\n      MOUSELEAVE: \"mouseleave\" + EVENT_KEY\n    };\n    var ClassName = {\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      TOOLTIP: '.tooltip',\n      TOOLTIP_INNER: '.tooltip-inner',\n      ARROW: '.arrow'\n    };\n    var Trigger = {\n      HOVER: 'hover',\n      FOCUS: 'focus',\n      CLICK: 'click',\n      MANUAL: 'manual'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Tooltip =\n    /*#__PURE__*/\n    function () {\n      function Tooltip(element, config) {\n        /**\n         * Check for Popper dependency\n         * Popper - https://popper.js.org\n         */\n        if (typeof Popper === 'undefined') {\n          throw new TypeError('Bootstrap tooltips require Popper.js (https://popper.js.org)');\n        } // private\n\n\n        this._isEnabled = true;\n        this._timeout = 0;\n        this._hoverState = '';\n        this._activeTrigger = {};\n        this._popper = null; // Protected\n\n        this.element = element;\n        this.config = this._getConfig(config);\n        this.tip = null;\n\n        this._setListeners();\n      } // Getters\n\n\n      var _proto = Tooltip.prototype;\n\n      // Public\n      _proto.enable = function enable() {\n        this._isEnabled = true;\n      };\n\n      _proto.disable = function disable() {\n        this._isEnabled = false;\n      };\n\n      _proto.toggleEnabled = function toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n      };\n\n      _proto.toggle = function toggle(event) {\n        if (!this._isEnabled) {\n          return;\n        }\n\n        if (event) {\n          var dataKey = this.constructor.DATA_KEY;\n          var context = $$$1(event.currentTarget).data(dataKey);\n\n          if (!context) {\n            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n            $$$1(event.currentTarget).data(dataKey, context);\n          }\n\n          context._activeTrigger.click = !context._activeTrigger.click;\n\n          if (context._isWithActiveTrigger()) {\n            context._enter(null, context);\n          } else {\n            context._leave(null, context);\n          }\n        } else {\n          if ($$$1(this.getTipElement()).hasClass(ClassName.SHOW)) {\n            this._leave(null, this);\n\n            return;\n          }\n\n          this._enter(null, this);\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        clearTimeout(this._timeout);\n        $$$1.removeData(this.element, this.constructor.DATA_KEY);\n        $$$1(this.element).off(this.constructor.EVENT_KEY);\n        $$$1(this.element).closest('.modal').off('hide.bs.modal');\n\n        if (this.tip) {\n          $$$1(this.tip).remove();\n        }\n\n        this._isEnabled = null;\n        this._timeout = null;\n        this._hoverState = null;\n        this._activeTrigger = null;\n\n        if (this._popper !== null) {\n          this._popper.destroy();\n        }\n\n        this._popper = null;\n        this.element = null;\n        this.config = null;\n        this.tip = null;\n      };\n\n      _proto.show = function show() {\n        var _this = this;\n\n        if ($$$1(this.element).css('display') === 'none') {\n          throw new Error('Please use show on visible elements');\n        }\n\n        var showEvent = $$$1.Event(this.constructor.Event.SHOW);\n\n        if (this.isWithContent() && this._isEnabled) {\n          $$$1(this.element).trigger(showEvent);\n          var isInTheDom = $$$1.contains(this.element.ownerDocument.documentElement, this.element);\n\n          if (showEvent.isDefaultPrevented() || !isInTheDom) {\n            return;\n          }\n\n          var tip = this.getTipElement();\n          var tipId = Util.getUID(this.constructor.NAME);\n          tip.setAttribute('id', tipId);\n          this.element.setAttribute('aria-describedby', tipId);\n          this.setContent();\n\n          if (this.config.animation) {\n            $$$1(tip).addClass(ClassName.FADE);\n          }\n\n          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\n          var attachment = this._getAttachment(placement);\n\n          this.addAttachmentClass(attachment);\n          var container = this.config.container === false ? document.body : $$$1(document).find(this.config.container);\n          $$$1(tip).data(this.constructor.DATA_KEY, this);\n\n          if (!$$$1.contains(this.element.ownerDocument.documentElement, this.tip)) {\n            $$$1(tip).appendTo(container);\n          }\n\n          $$$1(this.element).trigger(this.constructor.Event.INSERTED);\n          this._popper = new Popper(this.element, tip, {\n            placement: attachment,\n            modifiers: {\n              offset: {\n                offset: this.config.offset\n              },\n              flip: {\n                behavior: this.config.fallbackPlacement\n              },\n              arrow: {\n                element: Selector.ARROW\n              },\n              preventOverflow: {\n                boundariesElement: this.config.boundary\n              }\n            },\n            onCreate: function onCreate(data) {\n              if (data.originalPlacement !== data.placement) {\n                _this._handlePopperPlacementChange(data);\n              }\n            },\n            onUpdate: function onUpdate(data) {\n              _this._handlePopperPlacementChange(data);\n            }\n          });\n          $$$1(tip).addClass(ClassName.SHOW); // If this is a touch-enabled device we add extra\n          // empty mouseover listeners to the body's immediate children;\n          // only needed because of broken event delegation on iOS\n          // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n          if ('ontouchstart' in document.documentElement) {\n            $$$1(document.body).children().on('mouseover', null, $$$1.noop);\n          }\n\n          var complete = function complete() {\n            if (_this.config.animation) {\n              _this._fixTransition();\n            }\n\n            var prevHoverState = _this._hoverState;\n            _this._hoverState = null;\n            $$$1(_this.element).trigger(_this.constructor.Event.SHOWN);\n\n            if (prevHoverState === HoverState.OUT) {\n              _this._leave(null, _this);\n            }\n          };\n\n          if ($$$1(this.tip).hasClass(ClassName.FADE)) {\n            var transitionDuration = Util.getTransitionDurationFromElement(this.tip);\n            $$$1(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n          } else {\n            complete();\n          }\n        }\n      };\n\n      _proto.hide = function hide(callback) {\n        var _this2 = this;\n\n        var tip = this.getTipElement();\n        var hideEvent = $$$1.Event(this.constructor.Event.HIDE);\n\n        var complete = function complete() {\n          if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {\n            tip.parentNode.removeChild(tip);\n          }\n\n          _this2._cleanTipClass();\n\n          _this2.element.removeAttribute('aria-describedby');\n\n          $$$1(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n\n          if (_this2._popper !== null) {\n            _this2._popper.destroy();\n          }\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        $$$1(this.element).trigger(hideEvent);\n\n        if (hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        $$$1(tip).removeClass(ClassName.SHOW); // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n\n        if ('ontouchstart' in document.documentElement) {\n          $$$1(document.body).children().off('mouseover', null, $$$1.noop);\n        }\n\n        this._activeTrigger[Trigger.CLICK] = false;\n        this._activeTrigger[Trigger.FOCUS] = false;\n        this._activeTrigger[Trigger.HOVER] = false;\n\n        if ($$$1(this.tip).hasClass(ClassName.FADE)) {\n          var transitionDuration = Util.getTransitionDurationFromElement(tip);\n          $$$1(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        } else {\n          complete();\n        }\n\n        this._hoverState = '';\n      };\n\n      _proto.update = function update() {\n        if (this._popper !== null) {\n          this._popper.scheduleUpdate();\n        }\n      }; // Protected\n\n\n      _proto.isWithContent = function isWithContent() {\n        return Boolean(this.getTitle());\n      };\n\n      _proto.addAttachmentClass = function addAttachmentClass(attachment) {\n        $$$1(this.getTipElement()).addClass(CLASS_PREFIX + \"-\" + attachment);\n      };\n\n      _proto.getTipElement = function getTipElement() {\n        this.tip = this.tip || $$$1(this.config.template)[0];\n        return this.tip;\n      };\n\n      _proto.setContent = function setContent() {\n        var tip = this.getTipElement();\n        this.setElementContent($$$1(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle());\n        $$$1(tip).removeClass(ClassName.FADE + \" \" + ClassName.SHOW);\n      };\n\n      _proto.setElementContent = function setElementContent($element, content) {\n        var html = this.config.html;\n\n        if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n          // Content is a DOM node or a jQuery\n          if (html) {\n            if (!$$$1(content).parent().is($element)) {\n              $element.empty().append(content);\n            }\n          } else {\n            $element.text($$$1(content).text());\n          }\n        } else {\n          $element[html ? 'html' : 'text'](content);\n        }\n      };\n\n      _proto.getTitle = function getTitle() {\n        var title = this.element.getAttribute('data-original-title');\n\n        if (!title) {\n          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n        }\n\n        return title;\n      }; // Private\n\n\n      _proto._getAttachment = function _getAttachment(placement) {\n        return AttachmentMap[placement.toUpperCase()];\n      };\n\n      _proto._setListeners = function _setListeners() {\n        var _this3 = this;\n\n        var triggers = this.config.trigger.split(' ');\n        triggers.forEach(function (trigger) {\n          if (trigger === 'click') {\n            $$$1(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, function (event) {\n              return _this3.toggle(event);\n            });\n          } else if (trigger !== Trigger.MANUAL) {\n            var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n            var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n            $$$1(_this3.element).on(eventIn, _this3.config.selector, function (event) {\n              return _this3._enter(event);\n            }).on(eventOut, _this3.config.selector, function (event) {\n              return _this3._leave(event);\n            });\n          }\n\n          $$$1(_this3.element).closest('.modal').on('hide.bs.modal', function () {\n            return _this3.hide();\n          });\n        });\n\n        if (this.config.selector) {\n          this.config = _objectSpread({}, this.config, {\n            trigger: 'manual',\n            selector: ''\n          });\n        } else {\n          this._fixTitle();\n        }\n      };\n\n      _proto._fixTitle = function _fixTitle() {\n        var titleType = typeof this.element.getAttribute('data-original-title');\n\n        if (this.element.getAttribute('title') || titleType !== 'string') {\n          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n          this.element.setAttribute('title', '');\n        }\n      };\n\n      _proto._enter = function _enter(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n        context = context || $$$1(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $$$1(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n        }\n\n        if ($$$1(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n          context._hoverState = HoverState.SHOW;\n          return;\n        }\n\n        clearTimeout(context._timeout);\n        context._hoverState = HoverState.SHOW;\n\n        if (!context.config.delay || !context.config.delay.show) {\n          context.show();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.SHOW) {\n            context.show();\n          }\n        }, context.config.delay.show);\n      };\n\n      _proto._leave = function _leave(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n        context = context || $$$1(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $$$1(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n        }\n\n        if (context._isWithActiveTrigger()) {\n          return;\n        }\n\n        clearTimeout(context._timeout);\n        context._hoverState = HoverState.OUT;\n\n        if (!context.config.delay || !context.config.delay.hide) {\n          context.hide();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.OUT) {\n            context.hide();\n          }\n        }, context.config.delay.hide);\n      };\n\n      _proto._isWithActiveTrigger = function _isWithActiveTrigger() {\n        for (var trigger in this._activeTrigger) {\n          if (this._activeTrigger[trigger]) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, this.constructor.Default, $$$1(this.element).data(), typeof config === 'object' && config ? config : {});\n\n        if (typeof config.delay === 'number') {\n          config.delay = {\n            show: config.delay,\n            hide: config.delay\n          };\n        }\n\n        if (typeof config.title === 'number') {\n          config.title = config.title.toString();\n        }\n\n        if (typeof config.content === 'number') {\n          config.content = config.content.toString();\n        }\n\n        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n        return config;\n      };\n\n      _proto._getDelegateConfig = function _getDelegateConfig() {\n        var config = {};\n\n        if (this.config) {\n          for (var key in this.config) {\n            if (this.constructor.Default[key] !== this.config[key]) {\n              config[key] = this.config[key];\n            }\n          }\n        }\n\n        return config;\n      };\n\n      _proto._cleanTipClass = function _cleanTipClass() {\n        var $tip = $$$1(this.getTipElement());\n        var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n\n        if (tabClass !== null && tabClass.length) {\n          $tip.removeClass(tabClass.join(''));\n        }\n      };\n\n      _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {\n        var popperInstance = popperData.instance;\n        this.tip = popperInstance.popper;\n\n        this._cleanTipClass();\n\n        this.addAttachmentClass(this._getAttachment(popperData.placement));\n      };\n\n      _proto._fixTransition = function _fixTransition() {\n        var tip = this.getTipElement();\n        var initConfigAnimation = this.config.animation;\n\n        if (tip.getAttribute('x-placement') !== null) {\n          return;\n        }\n\n        $$$1(tip).removeClass(ClassName.FADE);\n        this.config.animation = false;\n        this.hide();\n        this.show();\n        this.config.animation = initConfigAnimation;\n      }; // Static\n\n\n      Tooltip._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = typeof config === 'object' && config;\n\n          if (!data && /dispose|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Tooltip(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Tooltip, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: \"NAME\",\n        get: function get() {\n          return NAME;\n        }\n      }, {\n        key: \"DATA_KEY\",\n        get: function get() {\n          return DATA_KEY;\n        }\n      }, {\n        key: \"Event\",\n        get: function get() {\n          return Event;\n        }\n      }, {\n        key: \"EVENT_KEY\",\n        get: function get() {\n          return EVENT_KEY;\n        }\n      }, {\n        key: \"DefaultType\",\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Tooltip;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1.fn[NAME] = Tooltip._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Tooltip;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Tooltip._jQueryInterface;\n    };\n\n    return Tooltip;\n  }($, Popper);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): popover.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Popover = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'popover';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.popover';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var CLASS_PREFIX = 'bs-popover';\n    var BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\" + CLASS_PREFIX + \"\\\\S+\", 'g');\n\n    var Default = _objectSpread({}, Tooltip.Default, {\n      placement: 'right',\n      trigger: 'click',\n      content: '',\n      template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n    });\n\n    var DefaultType = _objectSpread({}, Tooltip.DefaultType, {\n      content: '(string|element|function)'\n    });\n\n    var ClassName = {\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      TITLE: '.popover-header',\n      CONTENT: '.popover-body'\n    };\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      INSERTED: \"inserted\" + EVENT_KEY,\n      CLICK: \"click\" + EVENT_KEY,\n      FOCUSIN: \"focusin\" + EVENT_KEY,\n      FOCUSOUT: \"focusout\" + EVENT_KEY,\n      MOUSEENTER: \"mouseenter\" + EVENT_KEY,\n      MOUSELEAVE: \"mouseleave\" + EVENT_KEY\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Popover =\n    /*#__PURE__*/\n    function (_Tooltip) {\n      _inheritsLoose(Popover, _Tooltip);\n\n      function Popover() {\n        return _Tooltip.apply(this, arguments) || this;\n      }\n\n      var _proto = Popover.prototype;\n\n      // Overrides\n      _proto.isWithContent = function isWithContent() {\n        return this.getTitle() || this._getContent();\n      };\n\n      _proto.addAttachmentClass = function addAttachmentClass(attachment) {\n        $$$1(this.getTipElement()).addClass(CLASS_PREFIX + \"-\" + attachment);\n      };\n\n      _proto.getTipElement = function getTipElement() {\n        this.tip = this.tip || $$$1(this.config.template)[0];\n        return this.tip;\n      };\n\n      _proto.setContent = function setContent() {\n        var $tip = $$$1(this.getTipElement()); // We use append for html objects to maintain js events\n\n        this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n\n        var content = this._getContent();\n\n        if (typeof content === 'function') {\n          content = content.call(this.element);\n        }\n\n        this.setElementContent($tip.find(Selector.CONTENT), content);\n        $tip.removeClass(ClassName.FADE + \" \" + ClassName.SHOW);\n      }; // Private\n\n\n      _proto._getContent = function _getContent() {\n        return this.element.getAttribute('data-content') || this.config.content;\n      };\n\n      _proto._cleanTipClass = function _cleanTipClass() {\n        var $tip = $$$1(this.getTipElement());\n        var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n\n        if (tabClass !== null && tabClass.length > 0) {\n          $tip.removeClass(tabClass.join(''));\n        }\n      }; // Static\n\n\n      Popover._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = typeof config === 'object' ? config : null;\n\n          if (!data && /destroy|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Popover(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Popover, null, [{\n        key: \"VERSION\",\n        // Getters\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: \"NAME\",\n        get: function get() {\n          return NAME;\n        }\n      }, {\n        key: \"DATA_KEY\",\n        get: function get() {\n          return DATA_KEY;\n        }\n      }, {\n        key: \"Event\",\n        get: function get() {\n          return Event;\n        }\n      }, {\n        key: \"EVENT_KEY\",\n        get: function get() {\n          return EVENT_KEY;\n        }\n      }, {\n        key: \"DefaultType\",\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Popover;\n    }(Tooltip);\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1.fn[NAME] = Popover._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Popover;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Popover._jQueryInterface;\n    };\n\n    return Popover;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): scrollspy.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var ScrollSpy = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'scrollspy';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.scrollspy';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Default = {\n      offset: 10,\n      method: 'auto',\n      target: ''\n    };\n    var DefaultType = {\n      offset: 'number',\n      method: 'string',\n      target: '(string|element)'\n    };\n    var Event = {\n      ACTIVATE: \"activate\" + EVENT_KEY,\n      SCROLL: \"scroll\" + EVENT_KEY,\n      LOAD_DATA_API: \"load\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      DROPDOWN_ITEM: 'dropdown-item',\n      DROPDOWN_MENU: 'dropdown-menu',\n      ACTIVE: 'active'\n    };\n    var Selector = {\n      DATA_SPY: '[data-spy=\"scroll\"]',\n      ACTIVE: '.active',\n      NAV_LIST_GROUP: '.nav, .list-group',\n      NAV_LINKS: '.nav-link',\n      NAV_ITEMS: '.nav-item',\n      LIST_ITEMS: '.list-group-item',\n      DROPDOWN: '.dropdown',\n      DROPDOWN_ITEMS: '.dropdown-item',\n      DROPDOWN_TOGGLE: '.dropdown-toggle'\n    };\n    var OffsetMethod = {\n      OFFSET: 'offset',\n      POSITION: 'position'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var ScrollSpy =\n    /*#__PURE__*/\n    function () {\n      function ScrollSpy(element, config) {\n        var _this = this;\n\n        this._element = element;\n        this._scrollElement = element.tagName === 'BODY' ? window : element;\n        this._config = this._getConfig(config);\n        this._selector = this._config.target + \" \" + Selector.NAV_LINKS + \",\" + (this._config.target + \" \" + Selector.LIST_ITEMS + \",\") + (this._config.target + \" \" + Selector.DROPDOWN_ITEMS);\n        this._offsets = [];\n        this._targets = [];\n        this._activeTarget = null;\n        this._scrollHeight = 0;\n        $$$1(this._scrollElement).on(Event.SCROLL, function (event) {\n          return _this._process(event);\n        });\n        this.refresh();\n\n        this._process();\n      } // Getters\n\n\n      var _proto = ScrollSpy.prototype;\n\n      // Public\n      _proto.refresh = function refresh() {\n        var _this2 = this;\n\n        var autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n        var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n        var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\n        this._offsets = [];\n        this._targets = [];\n        this._scrollHeight = this._getScrollHeight();\n        var targets = [].slice.call(document.querySelectorAll(this._selector));\n        targets.map(function (element) {\n          var target;\n          var targetSelector = Util.getSelectorFromElement(element);\n\n          if (targetSelector) {\n            target = document.querySelector(targetSelector);\n          }\n\n          if (target) {\n            var targetBCR = target.getBoundingClientRect();\n\n            if (targetBCR.width || targetBCR.height) {\n              // TODO (fat): remove sketch reliance on jQuery position/offset\n              return [$$$1(target)[offsetMethod]().top + offsetBase, targetSelector];\n            }\n          }\n\n          return null;\n        }).filter(function (item) {\n          return item;\n        }).sort(function (a, b) {\n          return a[0] - b[0];\n        }).forEach(function (item) {\n          _this2._offsets.push(item[0]);\n\n          _this2._targets.push(item[1]);\n        });\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        $$$1(this._scrollElement).off(EVENT_KEY);\n        this._element = null;\n        this._scrollElement = null;\n        this._config = null;\n        this._selector = null;\n        this._offsets = null;\n        this._targets = null;\n        this._activeTarget = null;\n        this._scrollHeight = null;\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, typeof config === 'object' && config ? config : {});\n\n        if (typeof config.target !== 'string') {\n          var id = $$$1(config.target).attr('id');\n\n          if (!id) {\n            id = Util.getUID(NAME);\n            $$$1(config.target).attr('id', id);\n          }\n\n          config.target = \"#\" + id;\n        }\n\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._getScrollTop = function _getScrollTop() {\n        return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\n      };\n\n      _proto._getScrollHeight = function _getScrollHeight() {\n        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n      };\n\n      _proto._getOffsetHeight = function _getOffsetHeight() {\n        return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\n      };\n\n      _proto._process = function _process() {\n        var scrollTop = this._getScrollTop() + this._config.offset;\n\n        var scrollHeight = this._getScrollHeight();\n\n        var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n        if (this._scrollHeight !== scrollHeight) {\n          this.refresh();\n        }\n\n        if (scrollTop >= maxScroll) {\n          var target = this._targets[this._targets.length - 1];\n\n          if (this._activeTarget !== target) {\n            this._activate(target);\n          }\n\n          return;\n        }\n\n        if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n          this._activeTarget = null;\n\n          this._clear();\n\n          return;\n        }\n\n        var offsetLength = this._offsets.length;\n\n        for (var i = offsetLength; i--;) {\n          var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);\n\n          if (isActiveTarget) {\n            this._activate(this._targets[i]);\n          }\n        }\n      };\n\n      _proto._activate = function _activate(target) {\n        this._activeTarget = target;\n\n        this._clear();\n\n        var queries = this._selector.split(','); // eslint-disable-next-line arrow-body-style\n\n\n        queries = queries.map(function (selector) {\n          return selector + \"[data-target=\\\"\" + target + \"\\\"],\" + (selector + \"[href=\\\"\" + target + \"\\\"]\");\n        });\n        var $link = $$$1([].slice.call(document.querySelectorAll(queries.join(','))));\n\n        if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n          $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n          $link.addClass(ClassName.ACTIVE);\n        } else {\n          // Set triggered link as active\n          $link.addClass(ClassName.ACTIVE); // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n          $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_LINKS + \", \" + Selector.LIST_ITEMS).addClass(ClassName.ACTIVE); // Handle special case when .nav-link is inside .nav-item\n\n          $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n        }\n\n        $$$1(this._scrollElement).trigger(Event.ACTIVATE, {\n          relatedTarget: target\n        });\n      };\n\n      _proto._clear = function _clear() {\n        var nodes = [].slice.call(document.querySelectorAll(this._selector));\n        $$$1(nodes).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n      }; // Static\n\n\n      ScrollSpy._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = typeof config === 'object' && config;\n\n          if (!data) {\n            data = new ScrollSpy(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(ScrollSpy, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return ScrollSpy;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(window).on(Event.LOAD_DATA_API, function () {\n      var scrollSpys = [].slice.call(document.querySelectorAll(Selector.DATA_SPY));\n      var scrollSpysLength = scrollSpys.length;\n\n      for (var i = scrollSpysLength; i--;) {\n        var $spy = $$$1(scrollSpys[i]);\n\n        ScrollSpy._jQueryInterface.call($spy, $spy.data());\n      }\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = ScrollSpy._jQueryInterface;\n    $$$1.fn[NAME].Constructor = ScrollSpy;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return ScrollSpy._jQueryInterface;\n    };\n\n    return ScrollSpy;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): tab.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Tab = function ($$$1) {\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n    var NAME = 'tab';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.tab';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      DROPDOWN_MENU: 'dropdown-menu',\n      ACTIVE: 'active',\n      DISABLED: 'disabled',\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      DROPDOWN: '.dropdown',\n      NAV_LIST_GROUP: '.nav, .list-group',\n      ACTIVE: '.active',\n      ACTIVE_UL: '> li > .active',\n      DATA_TOGGLE: '[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]',\n      DROPDOWN_TOGGLE: '.dropdown-toggle',\n      DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\n      /**\n       * ------------------------------------------------------------------------\n       * Class Definition\n       * ------------------------------------------------------------------------\n       */\n\n    };\n\n    var Tab =\n    /*#__PURE__*/\n    function () {\n      function Tab(element) {\n        this._element = element;\n      } // Getters\n\n\n      var _proto = Tab.prototype;\n\n      // Public\n      _proto.show = function show() {\n        var _this = this;\n\n        if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $$$1(this._element).hasClass(ClassName.ACTIVE) || $$$1(this._element).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var target;\n        var previous;\n        var listElement = $$$1(this._element).closest(Selector.NAV_LIST_GROUP)[0];\n        var selector = Util.getSelectorFromElement(this._element);\n\n        if (listElement) {\n          var itemSelector = listElement.nodeName === 'UL' ? Selector.ACTIVE_UL : Selector.ACTIVE;\n          previous = $$$1.makeArray($$$1(listElement).find(itemSelector));\n          previous = previous[previous.length - 1];\n        }\n\n        var hideEvent = $$$1.Event(Event.HIDE, {\n          relatedTarget: this._element\n        });\n        var showEvent = $$$1.Event(Event.SHOW, {\n          relatedTarget: previous\n        });\n\n        if (previous) {\n          $$$1(previous).trigger(hideEvent);\n        }\n\n        $$$1(this._element).trigger(showEvent);\n\n        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (selector) {\n          target = document.querySelector(selector);\n        }\n\n        this._activate(this._element, listElement);\n\n        var complete = function complete() {\n          var hiddenEvent = $$$1.Event(Event.HIDDEN, {\n            relatedTarget: _this._element\n          });\n          var shownEvent = $$$1.Event(Event.SHOWN, {\n            relatedTarget: previous\n          });\n          $$$1(previous).trigger(hiddenEvent);\n          $$$1(_this._element).trigger(shownEvent);\n        };\n\n        if (target) {\n          this._activate(target, target.parentNode, complete);\n        } else {\n          complete();\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }; // Private\n\n\n      _proto._activate = function _activate(element, container, callback) {\n        var _this2 = this;\n\n        var activeElements;\n\n        if (container.nodeName === 'UL') {\n          activeElements = $$$1(container).find(Selector.ACTIVE_UL);\n        } else {\n          activeElements = $$$1(container).children(Selector.ACTIVE);\n        }\n\n        var active = activeElements[0];\n        var isTransitioning = callback && active && $$$1(active).hasClass(ClassName.FADE);\n\n        var complete = function complete() {\n          return _this2._transitionComplete(element, active, callback);\n        };\n\n        if (active && isTransitioning) {\n          var transitionDuration = Util.getTransitionDurationFromElement(active);\n          $$$1(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        } else {\n          complete();\n        }\n      };\n\n      _proto._transitionComplete = function _transitionComplete(element, active, callback) {\n        if (active) {\n          $$$1(active).removeClass(ClassName.SHOW + \" \" + ClassName.ACTIVE);\n          var dropdownChild = $$$1(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\n\n          if (dropdownChild) {\n            $$$1(dropdownChild).removeClass(ClassName.ACTIVE);\n          }\n\n          if (active.getAttribute('role') === 'tab') {\n            active.setAttribute('aria-selected', false);\n          }\n        }\n\n        $$$1(element).addClass(ClassName.ACTIVE);\n\n        if (element.getAttribute('role') === 'tab') {\n          element.setAttribute('aria-selected', true);\n        }\n\n        Util.reflow(element);\n        $$$1(element).addClass(ClassName.SHOW);\n\n        if (element.parentNode && $$$1(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\n          var dropdownElement = $$$1(element).closest(Selector.DROPDOWN)[0];\n\n          if (dropdownElement) {\n            var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector.DROPDOWN_TOGGLE));\n            $$$1(dropdownToggleList).addClass(ClassName.ACTIVE);\n          }\n\n          element.setAttribute('aria-expanded', true);\n        }\n\n        if (callback) {\n          callback();\n        }\n      }; // Static\n\n\n      Tab._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var $this = $$$1(this);\n          var data = $this.data(DATA_KEY);\n\n          if (!data) {\n            data = new Tab(this);\n            $this.data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Tab, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Tab;\n    }();\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      event.preventDefault();\n\n      Tab._jQueryInterface.call($$$1(this), 'show');\n    });\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $$$1.fn[NAME] = Tab._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Tab;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Tab._jQueryInterface;\n    };\n\n    return Tab;\n  }($);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.1.3): index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  (function ($$$1) {\n    if (typeof $$$1 === 'undefined') {\n      throw new TypeError('Bootstrap\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\'s JavaScript.');\n    }\n\n    var version = $$$1.fn.jquery.split(' ')[0].split('.');\n    var minMajor = 1;\n    var ltMajor = 2;\n    var minMinor = 9;\n    var minPatch = 1;\n    var maxMajor = 4;\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('Bootstrap\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');\n    }\n  })($);\n\n  exports.Util = Util;\n  exports.Alert = Alert;\n  exports.Button = Button;\n  exports.Carousel = Carousel;\n  exports.Collapse = Collapse;\n  exports.Dropdown = Dropdown;\n  exports.Modal = Modal;\n  exports.Popover = Popover;\n  exports.Scrollspy = ScrollSpy;\n  exports.Tab = Tab;\n  exports.Tooltip = Tooltip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=bootstrap.bundle.js.map\n","\"use strict\";var _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};!function(t){\"function\"==typeof define&&define.amd?define([\"jquery\"],t):\"object\"===(\"undefined\"==typeof module?\"undefined\":_typeof(module))&&module.exports?module.exports=function(i,s){return void 0===s&&(s=\"undefined\"!=typeof window?require(\"jquery\"):require(\"jquery\")(i)),t(s),s}:t(jQuery)}(function(t){return t.fn.tilt=function(i){var s=function(){this.ticking||(requestAnimationFrame(g.bind(this)),this.ticking=!0)},e=function(){var i=this;t(this).on(\"mousemove\",o),t(this).on(\"mouseenter\",a),this.settings.reset&&t(this).on(\"mouseleave\",l),this.settings.glare&&t(window).on(\"resize\",d.bind(i))},n=function(){var i=this;void 0!==this.timeout&&clearTimeout(this.timeout),t(this).css({transition:this.settings.speed+\"ms \"+this.settings.easing}),this.settings.glare&&this.glareElement.css({transition:\"opacity \"+this.settings.speed+\"ms \"+this.settings.easing}),this.timeout=setTimeout(function(){t(i).css({transition:\"\"}),i.settings.glare&&i.glareElement.css({transition:\"\"})},this.settings.speed)},a=function(i){this.ticking=!1,t(this).css({\"will-change\":\"transform\"}),n.call(this),t(this).trigger(\"tilt.mouseEnter\")},r=function(i){return\"undefined\"==typeof i&&(i={pageX:t(this).offset().left+t(this).outerWidth()/2,pageY:t(this).offset().top+t(this).outerHeight()/2}),{x:i.pageX,y:i.pageY}},o=function(t){this.mousePositions=r(t),s.call(this)},l=function(){n.call(this),this.reset=!0,s.call(this),t(this).trigger(\"tilt.mouseLeave\")},h=function(){var i=t(this).outerWidth(),s=t(this).outerHeight(),e=t(this).offset().left,n=t(this).offset().top,a=(this.mousePositions.x-e)/i,r=(this.mousePositions.y-n)/s,o=(this.settings.maxTilt/2-a*this.settings.maxTilt).toFixed(2),l=(r*this.settings.maxTilt-this.settings.maxTilt/2).toFixed(2),h=Math.atan2(this.mousePositions.x-(e+i/2),-(this.mousePositions.y-(n+s/2)))*(180/Math.PI);return{tiltX:o,tiltY:l,percentageX:100*a,percentageY:100*r,angle:h}},g=function(){return this.transforms=h.call(this),this.reset?(this.reset=!1,t(this).css(\"transform\",\"perspective(\"+this.settings.perspective+\"px) rotateX(0deg) rotateY(0deg)\"),void(this.settings.glare&&(this.glareElement.css(\"transform\",\"rotate(180deg) translate(-50%, -50%)\"),this.glareElement.css(\"opacity\",\"0\")))):(t(this).css(\"transform\",\"perspective(\"+this.settings.perspective+\"px) rotateX(\"+(\"x\"===this.settings.disableAxis?0:this.transforms.tiltY)+\"deg) rotateY(\"+(\"y\"===this.settings.disableAxis?0:this.transforms.tiltX)+\"deg) scale3d(\"+this.settings.scale+\",\"+this.settings.scale+\",\"+this.settings.scale+\")\"),this.settings.glare&&(this.glareElement.css(\"transform\",\"rotate(\"+this.transforms.angle+\"deg) translate(-50%, -50%)\"),this.glareElement.css(\"opacity\",\"\"+this.transforms.percentageY*this.settings.maxGlare/100)),t(this).trigger(\"change\",[this.transforms]),void(this.ticking=!1))},c=function(){var i=this.settings.glarePrerender;if(i||t(this).append('<div class=\"js-tilt-glare\"><div class=\"js-tilt-glare-inner\"></div></div>'),this.glareElementWrapper=t(this).find(\".js-tilt-glare\"),this.glareElement=t(this).find(\".js-tilt-glare-inner\"),!i){var s={position:\"absolute\",top:\"0\",left:\"0\",width:\"100%\",height:\"100%\"};this.glareElementWrapper.css(s).css({overflow:\"hidden\",\"pointer-events\":\"none\"}),this.glareElement.css({position:\"absolute\",top:\"50%\",left:\"50%\",\"background-image\":\"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",width:\"\"+2*t(this).outerWidth(),height:\"\"+2*t(this).outerWidth(),transform:\"rotate(180deg) translate(-50%, -50%)\",\"transform-origin\":\"0% 0%\",opacity:\"0\"})}},d=function(){this.glareElement.css({width:\"\"+2*t(this).outerWidth(),height:\"\"+2*t(this).outerWidth()})};return t.fn.tilt.destroy=function(){t(this).each(function(){t(this).find(\".js-tilt-glare\").remove(),t(this).css({\"will-change\":\"\",transform:\"\"}),t(this).off(\"mousemove mouseenter mouseleave\")})},t.fn.tilt.getValues=function(){var i=[];return t(this).each(function(){this.mousePositions=r.call(this),i.push(h.call(this))}),i},t.fn.tilt.reset=function(){t(this).each(function(){var i=this;this.mousePositions=r.call(this),this.settings=t(this).data(\"settings\"),l.call(this),setTimeout(function(){i.reset=!1},this.settings.transition)})},this.each(function(){var s=this;this.settings=t.extend({maxTilt:t(this).is(\"[data-tilt-max]\")?t(this).data(\"tilt-max\"):20,perspective:t(this).is(\"[data-tilt-perspective]\")?t(this).data(\"tilt-perspective\"):300,easing:t(this).is(\"[data-tilt-easing]\")?t(this).data(\"tilt-easing\"):\"cubic-bezier(.03,.98,.52,.99)\",scale:t(this).is(\"[data-tilt-scale]\")?t(this).data(\"tilt-scale\"):\"1\",speed:t(this).is(\"[data-tilt-speed]\")?t(this).data(\"tilt-speed\"):\"400\",transition:!t(this).is(\"[data-tilt-transition]\")||t(this).data(\"tilt-transition\"),disableAxis:t(this).is(\"[data-tilt-disable-axis]\")?t(this).data(\"tilt-disable-axis\"):null,axis:t(this).is(\"[data-tilt-axis]\")?t(this).data(\"tilt-axis\"):null,reset:!t(this).is(\"[data-tilt-reset]\")||t(this).data(\"tilt-reset\"),glare:!!t(this).is(\"[data-tilt-glare]\")&&t(this).data(\"tilt-glare\"),maxGlare:t(this).is(\"[data-tilt-maxglare]\")?t(this).data(\"tilt-maxglare\"):1},i),null!==this.settings.axis&&(console.warn(\"Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information\"),this.settings.disableAxis=this.settings.axis),this.init=function(){t(s).data(\"settings\",s.settings),s.settings.glare&&c.call(s),e.call(s)},this.init()})},t(\"[data-tilt]\").tilt(),!0});","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Larry Battle / http://bateru.com/news\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nvar THREE = THREE || { REVISION: '61' };\r\n\r\nself.console = self.console || {\r\n\r\n    info: function () {},\r\n    log: function () {},\r\n    debug: function () {},\r\n    warn: function () {},\r\n    error: function () {}\r\n\r\n};\r\n\r\nString.prototype.trim = String.prototype.trim || function () {\r\n\r\n    return this.replace( /^\\s+|\\s+$/g, '' );\r\n\r\n};\r\n\r\n// based on https://github.com/documentcloud/underscore/blob/bf657be243a075b5e72acc8a83e6f12a564d8f55/underscore.js#L767\r\nTHREE.extend = function ( obj, source ) {\r\n\r\n    // ECMAScript5 compatibility based on: http://www.nczonline.net/blog/2012/12/11/are-your-mixins-ecmascript-5-compatible/\r\n    if ( Object.keys ) {\r\n\r\n        var keys = Object.keys( source );\r\n\r\n        for (var i = 0, il = keys.length; i < il; i++) {\r\n\r\n            var prop = keys[i];\r\n            Object.defineProperty( obj, prop, Object.getOwnPropertyDescriptor( source, prop ) );\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        var safeHasOwnProperty = {}.hasOwnProperty;\r\n\r\n        for ( var prop in source ) {\r\n\r\n            if ( safeHasOwnProperty.call( source, prop ) ) {\r\n\r\n                obj[prop] = source[prop];\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return obj;\r\n\r\n};\r\n\r\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n\r\n// requestAnimationFrame polyfill by Erik MÃ¶ller\r\n// fixes from Paul Irish and Tino Zijdel\r\n// using 'self' instead of 'window' for compatibility with both NodeJS and IE10.\r\n( function () {\r\n\r\n    var lastTime = 0;\r\n    var vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n    for ( var x = 0; x < vendors.length && !self.requestAnimationFrame; ++ x ) {\r\n\r\n        self.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n        self.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n    }\r\n\r\n    if ( self.requestAnimationFrame === undefined && self['setTimeout'] !== undefined ) {\r\n\r\n        self.requestAnimationFrame = function ( callback ) {\r\n\r\n            var currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n            var id = self.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if( self.cancelAnimationFrame === undefined && self['clearTimeout'] !== undefined ) {\r\n\r\n        self.cancelAnimationFrame = function ( id ) { self.clearTimeout( id ) };\r\n\r\n    }\r\n\r\n}() );\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.NoShading = 0;\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n//  mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = function () {};\r\n\r\nTHREE.CubeReflectionMapping = function () {};\r\nTHREE.CubeRefractionMapping = function () {};\r\n\r\nTHREE.SphericalReflectionMapping = function () {};\r\nTHREE.SphericalRefractionMapping = function () {};\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n\r\n// Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n/*\r\n// Potential future PVRTC compressed texture formats\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n*/\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( value ) {\r\n\r\n    if ( value !== undefined ) this.set( value );\r\n\r\n    return this;\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n    constructor: THREE.Color,\r\n\r\n    r: 1, g: 1, b: 1,\r\n\r\n    set: function ( value ) {\r\n\r\n        if ( value instanceof THREE.Color ) {\r\n\r\n            this.copy( value );\r\n\r\n        } else if ( typeof value === 'number' ) {\r\n\r\n            this.setHex( value );\r\n\r\n        } else if ( typeof value === 'string' ) {\r\n\r\n            this.setStyle( value );\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setHex: function ( hex ) {\r\n\r\n        hex = Math.floor( hex );\r\n\r\n        this.r = ( hex >> 16 & 255 ) / 255;\r\n        this.g = ( hex >> 8 & 255 ) / 255;\r\n        this.b = ( hex & 255 ) / 255;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setRGB: function ( r, g, b ) {\r\n\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setHSL: function ( h, s, l ) {\r\n\r\n        // h,s,l ranges are in 0.0 - 1.0\r\n\r\n        if ( s === 0 ) {\r\n\r\n            this.r = this.g = this.b = l;\r\n\r\n        } else {\r\n\r\n            var hue2rgb = function ( p, q, t ) {\r\n\r\n                if ( t < 0 ) t += 1;\r\n                if ( t > 1 ) t -= 1;\r\n                if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n                if ( t < 1 / 2 ) return q;\r\n                if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n                return p;\r\n\r\n            };\r\n\r\n            var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n            var q = ( 2 * l ) - p;\r\n\r\n            this.r = hue2rgb( q, p, h + 1 / 3 );\r\n            this.g = hue2rgb( q, p, h );\r\n            this.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setStyle: function ( style ) {\r\n\r\n        // rgb(255,0,0)\r\n\r\n        if ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\r\n\r\n            var color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\r\n\r\n            this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n            this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n            this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        // rgb(100%,0%,0%)\r\n\r\n        if ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\r\n\r\n            var color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\r\n\r\n            this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n            this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n            this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        // #ff0000\r\n\r\n        if ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\r\n\r\n            var color = /^\\#([0-9a-f]{6})$/i.exec( style );\r\n\r\n            this.setHex( parseInt( color[ 1 ], 16 ) );\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        // #f00\r\n\r\n        if ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\r\n\r\n            var color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\r\n\r\n            this.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        // red\r\n\r\n        if ( /^(\\w+)$/i.test( style ) ) {\r\n\r\n            this.setHex( THREE.ColorKeywords[ style ] );\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n    copy: function ( color ) {\r\n\r\n        this.r = color.r;\r\n        this.g = color.g;\r\n        this.b = color.b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copyGammaToLinear: function ( color ) {\r\n\r\n        this.r = color.r * color.r;\r\n        this.g = color.g * color.g;\r\n        this.b = color.b * color.b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copyLinearToGamma: function ( color ) {\r\n\r\n        this.r = Math.sqrt( color.r );\r\n        this.g = Math.sqrt( color.g );\r\n        this.b = Math.sqrt( color.b );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    convertGammaToLinear: function () {\r\n\r\n        var r = this.r, g = this.g, b = this.b;\r\n\r\n        this.r = r * r;\r\n        this.g = g * g;\r\n        this.b = b * b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    convertLinearToGamma: function () {\r\n\r\n        this.r = Math.sqrt( this.r );\r\n        this.g = Math.sqrt( this.g );\r\n        this.b = Math.sqrt( this.b );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    getHex: function () {\r\n\r\n        return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n    },\r\n\r\n    getHexString: function () {\r\n\r\n        return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n    },\r\n\r\n    getHSL: function () {\r\n\r\n        var hsl = { h: 0, s: 0, l: 0 };\r\n\r\n        return function () {\r\n\r\n            // h,s,l ranges are in 0.0 - 1.0\r\n\r\n            var r = this.r, g = this.g, b = this.b;\r\n\r\n            var max = Math.max( r, g, b );\r\n            var min = Math.min( r, g, b );\r\n\r\n            var hue, saturation;\r\n            var lightness = ( min + max ) / 2.0;\r\n\r\n            if ( min === max ) {\r\n\r\n                hue = 0;\r\n                saturation = 0;\r\n\r\n            } else {\r\n\r\n                var delta = max - min;\r\n\r\n                saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n                switch ( max ) {\r\n\r\n                    case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n                    case g: hue = ( b - r ) / delta + 2; break;\r\n                    case b: hue = ( r - g ) / delta + 4; break;\r\n\r\n                }\r\n\r\n                hue /= 6;\r\n\r\n            }\r\n\r\n            hsl.h = hue;\r\n            hsl.s = saturation;\r\n            hsl.l = lightness;\r\n\r\n            return hsl;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    getStyle: function () {\r\n\r\n        return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n    },\r\n\r\n    offsetHSL: function ( h, s, l ) {\r\n\r\n        var hsl = this.getHSL();\r\n\r\n        hsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n        this.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    add: function ( color ) {\r\n\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addColors: function ( color1, color2 ) {\r\n\r\n        this.r = color1.r + color2.r;\r\n        this.g = color1.g + color2.g;\r\n        this.b = color1.b + color2.b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addScalar: function ( s ) {\r\n\r\n        this.r += s;\r\n        this.g += s;\r\n        this.b += s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiply: function ( color ) {\r\n\r\n        this.r *= color.r;\r\n        this.g *= color.g;\r\n        this.b *= color.b;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyScalar: function ( s ) {\r\n\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    lerp: function ( color, alpha ) {\r\n\r\n        this.r += ( color.r - this.r ) * alpha;\r\n        this.g += ( color.g - this.g ) * alpha;\r\n        this.b += ( color.b - this.b ) * alpha;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( c ) {\r\n\r\n        return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n    },\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this.r = array[ 0 ];\r\n        this.g = array[ 1 ];\r\n        this.b = array[ 2 ];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        return [ this.r, this.g, this.b ];\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Color().setRGB( this.r, this.g, this.b );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { \"aliceblue\": 0xF0F8FF, \"antiquewhite\": 0xFAEBD7, \"aqua\": 0x00FFFF, \"aquamarine\": 0x7FFFD4, \"azure\": 0xF0FFFF,\r\n    \"beige\": 0xF5F5DC, \"bisque\": 0xFFE4C4, \"black\": 0x000000, \"blanchedalmond\": 0xFFEBCD, \"blue\": 0x0000FF, \"blueviolet\": 0x8A2BE2,\r\n    \"brown\": 0xA52A2A, \"burlywood\": 0xDEB887, \"cadetblue\": 0x5F9EA0, \"chartreuse\": 0x7FFF00, \"chocolate\": 0xD2691E, \"coral\": 0xFF7F50,\r\n    \"cornflowerblue\": 0x6495ED, \"cornsilk\": 0xFFF8DC, \"crimson\": 0xDC143C, \"cyan\": 0x00FFFF, \"darkblue\": 0x00008B, \"darkcyan\": 0x008B8B,\r\n    \"darkgoldenrod\": 0xB8860B, \"darkgray\": 0xA9A9A9, \"darkgreen\": 0x006400, \"darkgrey\": 0xA9A9A9, \"darkkhaki\": 0xBDB76B, \"darkmagenta\": 0x8B008B,\r\n    \"darkolivegreen\": 0x556B2F, \"darkorange\": 0xFF8C00, \"darkorchid\": 0x9932CC, \"darkred\": 0x8B0000, \"darksalmon\": 0xE9967A, \"darkseagreen\": 0x8FBC8F,\r\n    \"darkslateblue\": 0x483D8B, \"darkslategray\": 0x2F4F4F, \"darkslategrey\": 0x2F4F4F, \"darkturquoise\": 0x00CED1, \"darkviolet\": 0x9400D3,\r\n    \"deeppink\": 0xFF1493, \"deepskyblue\": 0x00BFFF, \"dimgray\": 0x696969, \"dimgrey\": 0x696969, \"dodgerblue\": 0x1E90FF, \"firebrick\": 0xB22222,\r\n    \"floralwhite\": 0xFFFAF0, \"forestgreen\": 0x228B22, \"fuchsia\": 0xFF00FF, \"gainsboro\": 0xDCDCDC, \"ghostwhite\": 0xF8F8FF, \"gold\": 0xFFD700,\r\n    \"goldenrod\": 0xDAA520, \"gray\": 0x808080, \"green\": 0x008000, \"greenyellow\": 0xADFF2F, \"grey\": 0x808080, \"honeydew\": 0xF0FFF0, \"hotpink\": 0xFF69B4,\r\n    \"indianred\": 0xCD5C5C, \"indigo\": 0x4B0082, \"ivory\": 0xFFFFF0, \"khaki\": 0xF0E68C, \"lavender\": 0xE6E6FA, \"lavenderblush\": 0xFFF0F5, \"lawngreen\": 0x7CFC00,\r\n    \"lemonchiffon\": 0xFFFACD, \"lightblue\": 0xADD8E6, \"lightcoral\": 0xF08080, \"lightcyan\": 0xE0FFFF, \"lightgoldenrodyellow\": 0xFAFAD2, \"lightgray\": 0xD3D3D3,\r\n    \"lightgreen\": 0x90EE90, \"lightgrey\": 0xD3D3D3, \"lightpink\": 0xFFB6C1, \"lightsalmon\": 0xFFA07A, \"lightseagreen\": 0x20B2AA, \"lightskyblue\": 0x87CEFA,\r\n    \"lightslategray\": 0x778899, \"lightslategrey\": 0x778899, \"lightsteelblue\": 0xB0C4DE, \"lightyellow\": 0xFFFFE0, \"lime\": 0x00FF00, \"limegreen\": 0x32CD32,\r\n    \"linen\": 0xFAF0E6, \"magenta\": 0xFF00FF, \"maroon\": 0x800000, \"mediumaquamarine\": 0x66CDAA, \"mediumblue\": 0x0000CD, \"mediumorchid\": 0xBA55D3,\r\n    \"mediumpurple\": 0x9370DB, \"mediumseagreen\": 0x3CB371, \"mediumslateblue\": 0x7B68EE, \"mediumspringgreen\": 0x00FA9A, \"mediumturquoise\": 0x48D1CC,\r\n    \"mediumvioletred\": 0xC71585, \"midnightblue\": 0x191970, \"mintcream\": 0xF5FFFA, \"mistyrose\": 0xFFE4E1, \"moccasin\": 0xFFE4B5, \"navajowhite\": 0xFFDEAD,\r\n    \"navy\": 0x000080, \"oldlace\": 0xFDF5E6, \"olive\": 0x808000, \"olivedrab\": 0x6B8E23, \"orange\": 0xFFA500, \"orangered\": 0xFF4500, \"orchid\": 0xDA70D6,\r\n    \"palegoldenrod\": 0xEEE8AA, \"palegreen\": 0x98FB98, \"paleturquoise\": 0xAFEEEE, \"palevioletred\": 0xDB7093, \"papayawhip\": 0xFFEFD5, \"peachpuff\": 0xFFDAB9,\r\n    \"peru\": 0xCD853F, \"pink\": 0xFFC0CB, \"plum\": 0xDDA0DD, \"powderblue\": 0xB0E0E6, \"purple\": 0x800080, \"red\": 0xFF0000, \"rosybrown\": 0xBC8F8F,\r\n    \"royalblue\": 0x4169E1, \"saddlebrown\": 0x8B4513, \"salmon\": 0xFA8072, \"sandybrown\": 0xF4A460, \"seagreen\": 0x2E8B57, \"seashell\": 0xFFF5EE,\r\n    \"sienna\": 0xA0522D, \"silver\": 0xC0C0C0, \"skyblue\": 0x87CEEB, \"slateblue\": 0x6A5ACD, \"slategray\": 0x708090, \"slategrey\": 0x708090, \"snow\": 0xFFFAFA,\r\n    \"springgreen\": 0x00FF7F, \"steelblue\": 0x4682B4, \"tan\": 0xD2B48C, \"teal\": 0x008080, \"thistle\": 0xD8BFD8, \"tomato\": 0xFF6347, \"turquoise\": 0x40E0D0,\r\n    \"violet\": 0xEE82EE, \"wheat\": 0xF5DEB3, \"white\": 0xFFFFFF, \"whitesmoke\": 0xF5F5F5, \"yellow\": 0xFFFF00, \"yellowgreen\": 0x9ACD32 };\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n    this._x = x || 0;\r\n    this._y = y || 0;\r\n    this._z = z || 0;\r\n    this._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n    constructor: THREE.Quaternion,\r\n\r\n    _x: 0,_y: 0, _z: 0, _w: 0,\r\n\r\n    _euler: undefined,\r\n\r\n    _updateEuler: function ( callback ) {\r\n\r\n        if ( this._euler !== undefined ) {\r\n\r\n            this._euler.setFromQuaternion( this, undefined, false );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    get x () {\r\n\r\n        return this._x;\r\n\r\n    },\r\n\r\n    set x ( value ) {\r\n\r\n        this._x = value;\r\n        this._updateEuler();\r\n\r\n    },\r\n\r\n    get y () {\r\n\r\n        return this._y;\r\n\r\n    },\r\n\r\n    set y ( value ) {\r\n\r\n        this._y = value;\r\n        this._updateEuler();\r\n\r\n    },\r\n\r\n    get z () {\r\n\r\n        return this._z;\r\n\r\n    },\r\n\r\n    set z ( value ) {\r\n\r\n        this._z = value;\r\n        this._updateEuler();\r\n\r\n    },\r\n\r\n    get w () {\r\n\r\n        return this._w;\r\n\r\n    },\r\n\r\n    set w ( value ) {\r\n\r\n        this._w = value;\r\n        this._updateEuler();\r\n\r\n    },\r\n\r\n    set: function ( x, y, z, w ) {\r\n\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._w = w;\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( quaternion ) {\r\n\r\n        this._x = quaternion._x;\r\n        this._y = quaternion._y;\r\n        this._z = quaternion._z;\r\n        this._w = quaternion._w;\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromEuler: function ( euler, update ) {\r\n\r\n        if ( euler instanceof THREE.Euler === false ) {\r\n\r\n            throw new Error( 'ERROR: Quaternion\\'s .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.' );\r\n        }\r\n\r\n        // http://www.mathworks.com/matlabcentral/fileexchange/\r\n        // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n        //\tcontent/SpinCalc.m\r\n\r\n        var c1 = Math.cos( euler._x / 2 );\r\n        var c2 = Math.cos( euler._y / 2 );\r\n        var c3 = Math.cos( euler._z / 2 );\r\n        var s1 = Math.sin( euler._x / 2 );\r\n        var s2 = Math.sin( euler._y / 2 );\r\n        var s3 = Math.sin( euler._z / 2 );\r\n\r\n        if ( euler.order === 'XYZ' ) {\r\n\r\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n        } else if ( euler.order === 'YXZ' ) {\r\n\r\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n        } else if ( euler.order === 'ZXY' ) {\r\n\r\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n        } else if ( euler.order === 'ZYX' ) {\r\n\r\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n        } else if ( euler.order === 'YZX' ) {\r\n\r\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n        } else if ( euler.order === 'XZY' ) {\r\n\r\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n        }\r\n\r\n        if ( update !== false ) this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromAxisAngle: function ( axis, angle ) {\r\n\r\n        // from http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n        // axis have to be normalized\r\n\r\n        var halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n        this._x = axis.x * s;\r\n        this._y = axis.y * s;\r\n        this._z = axis.z * s;\r\n        this._w = Math.cos( halfAngle );\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromRotationMatrix: function ( m ) {\r\n\r\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n        var te = m.elements,\r\n\r\n            m11 = te[0], m12 = te[4], m13 = te[8],\r\n            m21 = te[1], m22 = te[5], m23 = te[9],\r\n            m31 = te[2], m32 = te[6], m33 = te[10],\r\n\r\n            trace = m11 + m22 + m33,\r\n            s;\r\n\r\n        if ( trace > 0 ) {\r\n\r\n            s = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n            this._w = 0.25 / s;\r\n            this._x = ( m32 - m23 ) * s;\r\n            this._y = ( m13 - m31 ) * s;\r\n            this._z = ( m21 - m12 ) * s;\r\n\r\n        } else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n            s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n            this._w = (m32 - m23 ) / s;\r\n            this._x = 0.25 * s;\r\n            this._y = (m12 + m21 ) / s;\r\n            this._z = (m13 + m31 ) / s;\r\n\r\n        } else if ( m22 > m33 ) {\r\n\r\n            s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n            this._w = (m13 - m31 ) / s;\r\n            this._x = (m12 + m21 ) / s;\r\n            this._y = 0.25 * s;\r\n            this._z = (m23 + m32 ) / s;\r\n\r\n        } else {\r\n\r\n            s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n            this._w = ( m21 - m12 ) / s;\r\n            this._x = ( m13 + m31 ) / s;\r\n            this._y = ( m23 + m32 ) / s;\r\n            this._z = 0.25 * s;\r\n\r\n        }\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    inverse: function () {\r\n\r\n        this.conjugate().normalize();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    conjugate: function () {\r\n\r\n        this._x *= -1;\r\n        this._y *= -1;\r\n        this._z *= -1;\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    lengthSq: function () {\r\n\r\n        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n    },\r\n\r\n    length: function () {\r\n\r\n        return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n    },\r\n\r\n    normalize: function () {\r\n\r\n        var l = this.length();\r\n\r\n        if ( l === 0 ) {\r\n\r\n            this._x = 0;\r\n            this._y = 0;\r\n            this._z = 0;\r\n            this._w = 1;\r\n\r\n        } else {\r\n\r\n            l = 1 / l;\r\n\r\n            this._x = this._x * l;\r\n            this._y = this._y * l;\r\n            this._z = this._z * l;\r\n            this._w = this._w * l;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiply: function ( q, p ) {\r\n\r\n        if ( p !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Quaternion\\'s .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n            return this.multiplyQuaternions( q, p );\r\n\r\n        }\r\n\r\n        return this.multiplyQuaternions( this, q );\r\n\r\n    },\r\n\r\n    multiplyQuaternions: function ( a, b ) {\r\n\r\n        // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n        var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n        var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n        this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n        this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n        this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n        this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyVector3: function ( vector ) {\r\n\r\n        console.warn( 'DEPRECATED: Quaternion\\'s .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n        return vector.applyQuaternion( this );\r\n\r\n    },\r\n\r\n    slerp: function ( qb, t ) {\r\n\r\n        var x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n        // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n        var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n        if ( cosHalfTheta < 0 ) {\r\n\r\n            this._w = -qb._w;\r\n            this._x = -qb._x;\r\n            this._y = -qb._y;\r\n            this._z = -qb._z;\r\n\r\n            cosHalfTheta = -cosHalfTheta;\r\n\r\n        } else {\r\n\r\n            this.copy( qb );\r\n\r\n        }\r\n\r\n        if ( cosHalfTheta >= 1.0 ) {\r\n\r\n            this._w = w;\r\n            this._x = x;\r\n            this._y = y;\r\n            this._z = z;\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        var halfTheta = Math.acos( cosHalfTheta );\r\n        var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n        if ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n            this._w = 0.5 * ( w + this._w );\r\n            this._x = 0.5 * ( x + this._x );\r\n            this._y = 0.5 * ( y + this._y );\r\n            this._z = 0.5 * ( z + this._z );\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n            ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n        this._w = ( w * ratioA + this._w * ratioB );\r\n        this._x = ( x * ratioA + this._x * ratioB );\r\n        this._y = ( y * ratioA + this._y * ratioB );\r\n        this._z = ( z * ratioA + this._z * ratioB );\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( quaternion ) {\r\n\r\n        return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n    },\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this._x = array[ 0 ];\r\n        this._y = array[ 1 ];\r\n        this._z = array[ 2 ];\r\n        this._w = array[ 3 ];\r\n\r\n        this._updateEuler();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        return [ this._x, this._y, this._z, this._w ];\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Quaternion( this._x, this._y, this._z, this._w );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n    return qm.copy( qa ).slerp( qb, t );\r\n\r\n}\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n    constructor: THREE.Vector2,\r\n\r\n    set: function ( x, y ) {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setX: function ( x ) {\r\n\r\n        this.x = x;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setY: function ( y ) {\r\n\r\n        this.y = y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n\r\n    setComponent: function ( index, value ) {\r\n\r\n        switch ( index ) {\r\n\r\n            case 0: this.x = value; break;\r\n            case 1: this.y = value; break;\r\n            default: throw new Error( \"index is out of range: \" + index );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    getComponent: function ( index ) {\r\n\r\n        switch ( index ) {\r\n\r\n            case 0: return this.x;\r\n            case 1: return this.y;\r\n            default: throw new Error( \"index is out of range: \" + index );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    copy: function ( v ) {\r\n\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    add: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector2\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n            return this.addVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addVectors: function ( a, b ) {\r\n\r\n        this.x = a.x + b.x;\r\n        this.y = a.y + b.y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addScalar: function ( s ) {\r\n\r\n        this.x += s;\r\n        this.y += s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    sub: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector2\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n            return this.subVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    subVectors: function ( a, b ) {\r\n\r\n        this.x = a.x - b.x;\r\n        this.y = a.y - b.y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyScalar: function ( s ) {\r\n\r\n        this.x *= s;\r\n        this.y *= s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    divideScalar: function ( scalar ) {\r\n\r\n        if ( scalar !== 0 ) {\r\n\r\n            var invScalar = 1 / scalar;\r\n\r\n            this.x *= invScalar;\r\n            this.y *= invScalar;\r\n\r\n        } else {\r\n\r\n            this.x = 0;\r\n            this.y = 0;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    min: function ( v ) {\r\n\r\n        if ( this.x > v.x ) {\r\n\r\n            this.x = v.x;\r\n\r\n        }\r\n\r\n        if ( this.y > v.y ) {\r\n\r\n            this.y = v.y;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    max: function ( v ) {\r\n\r\n        if ( this.x < v.x ) {\r\n\r\n            this.x = v.x;\r\n\r\n        }\r\n\r\n        if ( this.y < v.y ) {\r\n\r\n            this.y = v.y;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    clamp: function ( min, max ) {\r\n\r\n        // This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n        if ( this.x < min.x ) {\r\n\r\n            this.x = min.x;\r\n\r\n        } else if ( this.x > max.x ) {\r\n\r\n            this.x = max.x;\r\n\r\n        }\r\n\r\n        if ( this.y < min.y ) {\r\n\r\n            this.y = min.y;\r\n\r\n        } else if ( this.y > max.y ) {\r\n\r\n            this.y = max.y;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    negate: function() {\r\n\r\n        return this.multiplyScalar( - 1 );\r\n\r\n    },\r\n\r\n    dot: function ( v ) {\r\n\r\n        return this.x * v.x + this.y * v.y;\r\n\r\n    },\r\n\r\n    lengthSq: function () {\r\n\r\n        return this.x * this.x + this.y * this.y;\r\n\r\n    },\r\n\r\n    length: function () {\r\n\r\n        return Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n    },\r\n\r\n    normalize: function () {\r\n\r\n        return this.divideScalar( this.length() );\r\n\r\n    },\r\n\r\n    distanceTo: function ( v ) {\r\n\r\n        return Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n    },\r\n\r\n    distanceToSquared: function ( v ) {\r\n\r\n        var dx = this.x - v.x, dy = this.y - v.y;\r\n        return dx * dx + dy * dy;\r\n\r\n    },\r\n\r\n    setLength: function ( l ) {\r\n\r\n        var oldLength = this.length();\r\n\r\n        if ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n            this.multiplyScalar( l / oldLength );\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    lerp: function ( v, alpha ) {\r\n\r\n        this.x += ( v.x - this.x ) * alpha;\r\n        this.y += ( v.y - this.y ) * alpha;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function( v ) {\r\n\r\n        return ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n    },\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this.x = array[ 0 ];\r\n        this.y = array[ 1 ];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        return [ this.x, this.y ];\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Vector2( this.x, this.y );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n    this.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n    constructor: THREE.Vector3,\r\n\r\n    set: function ( x, y, z ) {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setX: function ( x ) {\r\n\r\n        this.x = x;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setY: function ( y ) {\r\n\r\n        this.y = y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setZ: function ( z ) {\r\n\r\n        this.z = z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setComponent: function ( index, value ) {\r\n\r\n        switch ( index ) {\r\n\r\n            case 0: this.x = value; break;\r\n            case 1: this.y = value; break;\r\n            case 2: this.z = value; break;\r\n            default: throw new Error( \"index is out of range: \" + index );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    getComponent: function ( index ) {\r\n\r\n        switch ( index ) {\r\n\r\n            case 0: return this.x;\r\n            case 1: return this.y;\r\n            case 2: return this.z;\r\n            default: throw new Error( \"index is out of range: \" + index );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    copy: function ( v ) {\r\n\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    add: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n            return this.addVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addScalar: function ( s ) {\r\n\r\n        this.x += s;\r\n        this.y += s;\r\n        this.z += s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addVectors: function ( a, b ) {\r\n\r\n        this.x = a.x + b.x;\r\n        this.y = a.y + b.y;\r\n        this.z = a.z + b.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    sub: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n            return this.subVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    subVectors: function ( a, b ) {\r\n\r\n        this.x = a.x - b.x;\r\n        this.y = a.y - b.y;\r\n        this.z = a.z - b.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiply: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n            return this.multiplyVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x *= v.x;\r\n        this.y *= v.y;\r\n        this.z *= v.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyScalar: function ( scalar ) {\r\n\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyVectors: function ( a, b ) {\r\n\r\n        this.x = a.x * b.x;\r\n        this.y = a.y * b.y;\r\n        this.z = a.z * b.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    applyMatrix3: function ( m ) {\r\n\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n\r\n        var e = m.elements;\r\n\r\n        this.x = e[0] * x + e[3] * y + e[6] * z;\r\n        this.y = e[1] * x + e[4] * y + e[7] * z;\r\n        this.z = e[2] * x + e[5] * y + e[8] * z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    applyMatrix4: function ( m ) {\r\n\r\n        // input: THREE.Matrix4 affine matrix\r\n\r\n        var x = this.x, y = this.y, z = this.z;\r\n\r\n        var e = m.elements;\r\n\r\n        this.x = e[0] * x + e[4] * y + e[8]  * z + e[12];\r\n        this.y = e[1] * x + e[5] * y + e[9]  * z + e[13];\r\n        this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    applyProjection: function ( m ) {\r\n\r\n        // input: THREE.Matrix4 projection matrix\r\n\r\n        var x = this.x, y = this.y, z = this.z;\r\n\r\n        var e = m.elements;\r\n        var d = 1 / ( e[3] * x + e[7] * y + e[11] * z + e[15] ); // perspective divide\r\n\r\n        this.x = ( e[0] * x + e[4] * y + e[8]  * z + e[12] ) * d;\r\n        this.y = ( e[1] * x + e[5] * y + e[9]  * z + e[13] ) * d;\r\n        this.z = ( e[2] * x + e[6] * y + e[10] * z + e[14] ) * d;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    applyQuaternion: function ( q ) {\r\n\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n\r\n        var qx = q.x;\r\n        var qy = q.y;\r\n        var qz = q.z;\r\n        var qw = q.w;\r\n\r\n        // calculate quat * vector\r\n\r\n        var ix =  qw * x + qy * z - qz * y;\r\n        var iy =  qw * y + qz * x - qx * z;\r\n        var iz =  qw * z + qx * y - qy * x;\r\n        var iw = -qx * x - qy * y - qz * z;\r\n\r\n        // calculate result * inverse quat\r\n\r\n        this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    transformDirection: function ( m ) {\r\n\r\n        // input: THREE.Matrix4 affine matrix\r\n        // vector interpreted as a direction\r\n\r\n        var x = this.x, y = this.y, z = this.z;\r\n\r\n        var e = m.elements;\r\n\r\n        this.x = e[0] * x + e[4] * y + e[8]  * z;\r\n        this.y = e[1] * x + e[5] * y + e[9]  * z;\r\n        this.z = e[2] * x + e[6] * y + e[10] * z;\r\n\r\n        this.normalize();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    divide: function ( v ) {\r\n\r\n        this.x /= v.x;\r\n        this.y /= v.y;\r\n        this.z /= v.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    divideScalar: function ( scalar ) {\r\n\r\n        if ( scalar !== 0 ) {\r\n\r\n            var invScalar = 1 / scalar;\r\n\r\n            this.x *= invScalar;\r\n            this.y *= invScalar;\r\n            this.z *= invScalar;\r\n\r\n        } else {\r\n\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.z = 0;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    min: function ( v ) {\r\n\r\n        if ( this.x > v.x ) {\r\n\r\n            this.x = v.x;\r\n\r\n        }\r\n\r\n        if ( this.y > v.y ) {\r\n\r\n            this.y = v.y;\r\n\r\n        }\r\n\r\n        if ( this.z > v.z ) {\r\n\r\n            this.z = v.z;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    max: function ( v ) {\r\n\r\n        if ( this.x < v.x ) {\r\n\r\n            this.x = v.x;\r\n\r\n        }\r\n\r\n        if ( this.y < v.y ) {\r\n\r\n            this.y = v.y;\r\n\r\n        }\r\n\r\n        if ( this.z < v.z ) {\r\n\r\n            this.z = v.z;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    clamp: function ( min, max ) {\r\n\r\n        // This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n        if ( this.x < min.x ) {\r\n\r\n            this.x = min.x;\r\n\r\n        } else if ( this.x > max.x ) {\r\n\r\n            this.x = max.x;\r\n\r\n        }\r\n\r\n        if ( this.y < min.y ) {\r\n\r\n            this.y = min.y;\r\n\r\n        } else if ( this.y > max.y ) {\r\n\r\n            this.y = max.y;\r\n\r\n        }\r\n\r\n        if ( this.z < min.z ) {\r\n\r\n            this.z = min.z;\r\n\r\n        } else if ( this.z > max.z ) {\r\n\r\n            this.z = max.z;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    negate: function () {\r\n\r\n        return this.multiplyScalar( - 1 );\r\n\r\n    },\r\n\r\n    dot: function ( v ) {\r\n\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n    },\r\n\r\n    lengthSq: function () {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n    },\r\n\r\n    length: function () {\r\n\r\n        return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n    },\r\n\r\n    lengthManhattan: function () {\r\n\r\n        return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n    },\r\n\r\n    normalize: function () {\r\n\r\n        return this.divideScalar( this.length() );\r\n\r\n    },\r\n\r\n    setLength: function ( l ) {\r\n\r\n        var oldLength = this.length();\r\n\r\n        if ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n            this.multiplyScalar( l / oldLength );\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    lerp: function ( v, alpha ) {\r\n\r\n        this.x += ( v.x - this.x ) * alpha;\r\n        this.y += ( v.y - this.y ) * alpha;\r\n        this.z += ( v.z - this.z ) * alpha;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    cross: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n            return this.crossVectors( v, w );\r\n\r\n        }\r\n\r\n        var x = this.x, y = this.y, z = this.z;\r\n\r\n        this.x = y * v.z - z * v.y;\r\n        this.y = z * v.x - x * v.z;\r\n        this.z = x * v.y - y * v.x;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    crossVectors: function ( a, b ) {\r\n\r\n        var ax = a.x, ay = a.y, az = a.z;\r\n        var bx = b.x, by = b.y, bz = b.z;\r\n\r\n        this.x = ay * bz - az * by;\r\n        this.y = az * bx - ax * bz;\r\n        this.z = ax * by - ay * bx;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    angleTo: function ( v ) {\r\n\r\n        var theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n        // clamp, to handle numerical problems\r\n\r\n        return Math.acos( THREE.Math.clamp( theta, -1, 1 ) );\r\n\r\n    },\r\n\r\n    distanceTo: function ( v ) {\r\n\r\n        return Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n    },\r\n\r\n    distanceToSquared: function ( v ) {\r\n\r\n        var dx = this.x - v.x;\r\n        var dy = this.y - v.y;\r\n        var dz = this.z - v.z;\r\n\r\n        return dx * dx + dy * dy + dz * dz;\r\n\r\n    },\r\n\r\n    setEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n        console.error( \"REMOVED: Vector3\\'s setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.\");\r\n\r\n    },\r\n\r\n    setEulerFromQuaternion: function ( q, order ) {\r\n\r\n        console.error( \"REMOVED: Vector3\\'s setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.\");\r\n\r\n    },\r\n\r\n    getPositionFromMatrix: function ( m ) {\r\n\r\n        this.x = m.elements[12];\r\n        this.y = m.elements[13];\r\n        this.z = m.elements[14];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    getScaleFromMatrix: function ( m ) {\r\n\r\n        var sx = this.set( m.elements[0], m.elements[1], m.elements[2] ).length();\r\n        var sy = this.set( m.elements[4], m.elements[5], m.elements[6] ).length();\r\n        var sz = this.set( m.elements[8], m.elements[9], m.elements[10] ).length();\r\n\r\n        this.x = sx;\r\n        this.y = sy;\r\n        this.z = sz;\r\n\r\n        return this;\r\n    },\r\n\r\n    getColumnFromMatrix: function ( index, matrix ) {\r\n\r\n        var offset = index * 4;\r\n\r\n        var me = matrix.elements;\r\n\r\n        this.x = me[ offset ];\r\n        this.y = me[ offset + 1 ];\r\n        this.z = me[ offset + 2 ];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( v ) {\r\n\r\n        return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n    },\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this.x = array[ 0 ];\r\n        this.y = array[ 1 ];\r\n        this.z = array[ 2 ];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        return [ this.x, this.y, this.z ];\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Vector3( this.x, this.y, this.z );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.extend( THREE.Vector3.prototype, {\r\n\r\n    applyEuler: function () {\r\n\r\n        var quaternion = new THREE.Quaternion();\r\n\r\n        return function ( euler ) {\r\n\r\n            if ( euler instanceof THREE.Euler === false ) {\r\n\r\n                console.error( 'ERROR: Vector3\\'s .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.' );\r\n\r\n            }\r\n\r\n            this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    applyAxisAngle: function () {\r\n\r\n        var quaternion = new THREE.Quaternion();\r\n\r\n        return function ( axis, angle ) {\r\n\r\n            this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    projectOnVector: function () {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( vector ) {\r\n\r\n            v1.copy( vector ).normalize();\r\n            var d = this.dot( v1 );\r\n            return this.copy( v1 ).multiplyScalar( d );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    projectOnPlane: function () {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( planeNormal ) {\r\n\r\n            v1.copy( this ).projectOnVector( planeNormal );\r\n\r\n            return this.sub( v1 );\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    reflect: function () {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( vector ) {\r\n\r\n            v1.copy( this ).projectOnVector( vector ).multiplyScalar( 2 );\r\n\r\n            return this.subVectors( v1, this );\r\n\r\n        }\r\n\r\n    }()\r\n\r\n} );\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n    this.z = z || 0;\r\n    this.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n    constructor: THREE.Vector4,\r\n\r\n    set: function ( x, y, z, w ) {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setX: function ( x ) {\r\n\r\n        this.x = x;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setY: function ( y ) {\r\n\r\n        this.y = y;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setZ: function ( z ) {\r\n\r\n        this.z = z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setW: function ( w ) {\r\n\r\n        this.w = w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setComponent: function ( index, value ) {\r\n\r\n        switch ( index ) {\r\n\r\n            case 0: this.x = value; break;\r\n            case 1: this.y = value; break;\r\n            case 2: this.z = value; break;\r\n            case 3: this.w = value; break;\r\n            default: throw new Error( \"index is out of range: \" + index );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    getComponent: function ( index ) {\r\n\r\n        switch ( index ) {\r\n\r\n            case 0: return this.x;\r\n            case 1: return this.y;\r\n            case 2: return this.z;\r\n            case 3: return this.w;\r\n            default: throw new Error( \"index is out of range: \" + index );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    copy: function ( v ) {\r\n\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n        this.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    add: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector4\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n            return this.addVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        this.w += v.w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addScalar: function ( s ) {\r\n\r\n        this.x += s;\r\n        this.y += s;\r\n        this.z += s;\r\n        this.w += s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addVectors: function ( a, b ) {\r\n\r\n        this.x = a.x + b.x;\r\n        this.y = a.y + b.y;\r\n        this.z = a.z + b.z;\r\n        this.w = a.w + b.w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    sub: function ( v, w ) {\r\n\r\n        if ( w !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Vector4\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n            return this.subVectors( v, w );\r\n\r\n        }\r\n\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        this.w -= v.w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    subVectors: function ( a, b ) {\r\n\r\n        this.x = a.x - b.x;\r\n        this.y = a.y - b.y;\r\n        this.z = a.z - b.z;\r\n        this.w = a.w - b.w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyScalar: function ( scalar ) {\r\n\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n        this.w *= scalar;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    applyMatrix4: function ( m ) {\r\n\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var z = this.z;\r\n        var w = this.w;\r\n\r\n        var e = m.elements;\r\n\r\n        this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\r\n        this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\r\n        this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\r\n        this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    divideScalar: function ( scalar ) {\r\n\r\n        if ( scalar !== 0 ) {\r\n\r\n            var invScalar = 1 / scalar;\r\n\r\n            this.x *= invScalar;\r\n            this.y *= invScalar;\r\n            this.z *= invScalar;\r\n            this.w *= invScalar;\r\n\r\n        } else {\r\n\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.z = 0;\r\n            this.w = 1;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setAxisAngleFromQuaternion: function ( q ) {\r\n\r\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n        // q is assumed to be normalized\r\n\r\n        this.w = 2 * Math.acos( q.w );\r\n\r\n        var s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n        if ( s < 0.0001 ) {\r\n\r\n            this.x = 1;\r\n            this.y = 0;\r\n            this.z = 0;\r\n\r\n        } else {\r\n\r\n            this.x = q.x / s;\r\n            this.y = q.y / s;\r\n            this.z = q.z / s;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n        var angle, x, y, z,\t\t// variables for result\r\n            epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n            epsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n            te = m.elements,\r\n\r\n            m11 = te[0], m12 = te[4], m13 = te[8],\r\n            m21 = te[1], m22 = te[5], m23 = te[9],\r\n            m31 = te[2], m32 = te[6], m33 = te[10];\r\n\r\n        if ( ( Math.abs( m12 - m21 ) < epsilon )\r\n            && ( Math.abs( m13 - m31 ) < epsilon )\r\n            && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n            // singularity found\r\n            // first check for identity matrix which must have +1 for all terms\r\n            // in leading diagonal and zero in other terms\r\n\r\n            if ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n                && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n                && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n                && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n                // this singularity is identity matrix so angle = 0\r\n\r\n                this.set( 1, 0, 0, 0 );\r\n\r\n                return this; // zero angle, arbitrary axis\r\n\r\n            }\r\n\r\n            // otherwise this singularity is angle = 180\r\n\r\n            angle = Math.PI;\r\n\r\n            var xx = ( m11 + 1 ) / 2;\r\n            var yy = ( m22 + 1 ) / 2;\r\n            var zz = ( m33 + 1 ) / 2;\r\n            var xy = ( m12 + m21 ) / 4;\r\n            var xz = ( m13 + m31 ) / 4;\r\n            var yz = ( m23 + m32 ) / 4;\r\n\r\n            if ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\r\n\r\n                if ( xx < epsilon ) {\r\n\r\n                    x = 0;\r\n                    y = 0.707106781;\r\n                    z = 0.707106781;\r\n\r\n                } else {\r\n\r\n                    x = Math.sqrt( xx );\r\n                    y = xy / x;\r\n                    z = xz / x;\r\n\r\n                }\r\n\r\n            } else if ( yy > zz ) { // m22 is the largest diagonal term\r\n\r\n                if ( yy < epsilon ) {\r\n\r\n                    x = 0.707106781;\r\n                    y = 0;\r\n                    z = 0.707106781;\r\n\r\n                } else {\r\n\r\n                    y = Math.sqrt( yy );\r\n                    x = xy / y;\r\n                    z = yz / y;\r\n\r\n                }\r\n\r\n            } else { // m33 is the largest diagonal term so base result on this\r\n\r\n                if ( zz < epsilon ) {\r\n\r\n                    x = 0.707106781;\r\n                    y = 0.707106781;\r\n                    z = 0;\r\n\r\n                } else {\r\n\r\n                    z = Math.sqrt( zz );\r\n                    x = xz / z;\r\n                    y = yz / z;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            this.set( x, y, z, angle );\r\n\r\n            return this; // return 180 deg rotation\r\n\r\n        }\r\n\r\n        // as we have reached here there are no singularities so we can handle normally\r\n\r\n        var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n            + ( m13 - m31 ) * ( m13 - m31 )\r\n            + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n        if ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n        // prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n        // caught by singularity test above, but I've left it in just in case\r\n\r\n        this.x = ( m32 - m23 ) / s;\r\n        this.y = ( m13 - m31 ) / s;\r\n        this.z = ( m21 - m12 ) / s;\r\n        this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    min: function ( v ) {\r\n\r\n        if ( this.x > v.x ) {\r\n\r\n            this.x = v.x;\r\n\r\n        }\r\n\r\n        if ( this.y > v.y ) {\r\n\r\n            this.y = v.y;\r\n\r\n        }\r\n\r\n        if ( this.z > v.z ) {\r\n\r\n            this.z = v.z;\r\n\r\n        }\r\n\r\n        if ( this.w > v.w ) {\r\n\r\n            this.w = v.w;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    max: function ( v ) {\r\n\r\n        if ( this.x < v.x ) {\r\n\r\n            this.x = v.x;\r\n\r\n        }\r\n\r\n        if ( this.y < v.y ) {\r\n\r\n            this.y = v.y;\r\n\r\n        }\r\n\r\n        if ( this.z < v.z ) {\r\n\r\n            this.z = v.z;\r\n\r\n        }\r\n\r\n        if ( this.w < v.w ) {\r\n\r\n            this.w = v.w;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    clamp: function ( min, max ) {\r\n\r\n        // This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n        if ( this.x < min.x ) {\r\n\r\n            this.x = min.x;\r\n\r\n        } else if ( this.x > max.x ) {\r\n\r\n            this.x = max.x;\r\n\r\n        }\r\n\r\n        if ( this.y < min.y ) {\r\n\r\n            this.y = min.y;\r\n\r\n        } else if ( this.y > max.y ) {\r\n\r\n            this.y = max.y;\r\n\r\n        }\r\n\r\n        if ( this.z < min.z ) {\r\n\r\n            this.z = min.z;\r\n\r\n        } else if ( this.z > max.z ) {\r\n\r\n            this.z = max.z;\r\n\r\n        }\r\n\r\n        if ( this.w < min.w ) {\r\n\r\n            this.w = min.w;\r\n\r\n        } else if ( this.w > max.w ) {\r\n\r\n            this.w = max.w;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    negate: function() {\r\n\r\n        return this.multiplyScalar( -1 );\r\n\r\n    },\r\n\r\n    dot: function ( v ) {\r\n\r\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n    },\r\n\r\n    lengthSq: function () {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n    },\r\n\r\n    length: function () {\r\n\r\n        return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n    },\r\n\r\n    lengthManhattan: function () {\r\n\r\n        return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n    },\r\n\r\n    normalize: function () {\r\n\r\n        return this.divideScalar( this.length() );\r\n\r\n    },\r\n\r\n    setLength: function ( l ) {\r\n\r\n        var oldLength = this.length();\r\n\r\n        if ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n            this.multiplyScalar( l / oldLength );\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    lerp: function ( v, alpha ) {\r\n\r\n        this.x += ( v.x - this.x ) * alpha;\r\n        this.y += ( v.y - this.y ) * alpha;\r\n        this.z += ( v.z - this.z ) * alpha;\r\n        this.w += ( v.w - this.w ) * alpha;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( v ) {\r\n\r\n        return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n    },\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this.x = array[ 0 ];\r\n        this.y = array[ 1 ];\r\n        this.z = array[ 2 ];\r\n        this.w = array[ 3 ];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        return [ this.x, this.y, this.z, this.w ];\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Vector4( this.x, this.y, this.z, this.w );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n    this._x = x || 0;\r\n    this._y = y || 0;\r\n    this._z = z || 0;\r\n    this._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n    constructor: THREE.Euler,\r\n\r\n    _x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\r\n\r\n    _quaternion: undefined,\r\n\r\n    _updateQuaternion: function () {\r\n\r\n        if ( this._quaternion !== undefined ) {\r\n\r\n            this._quaternion.setFromEuler( this, false );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    get x () {\r\n\r\n        return this._x;\r\n\r\n    },\r\n\r\n    set x ( value ) {\r\n\r\n        this._x = value;\r\n        this._updateQuaternion();\r\n\r\n    },\r\n\r\n    get y () {\r\n\r\n        return this._y;\r\n\r\n    },\r\n\r\n    set y ( value ) {\r\n\r\n        this._y = value;\r\n        this._updateQuaternion();\r\n\r\n    },\r\n\r\n    get z () {\r\n\r\n        return this._z;\r\n\r\n    },\r\n\r\n    set z ( value ) {\r\n\r\n        this._z = value;\r\n        this._updateQuaternion();\r\n\r\n    },\r\n\r\n    get order () {\r\n\r\n        return this._order;\r\n\r\n    },\r\n\r\n    set order ( value ) {\r\n\r\n        this._order = value;\r\n        this._updateQuaternion();\r\n\r\n    },\r\n\r\n    set: function ( x, y, z, order ) {\r\n\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._order = order || this._order;\r\n\r\n        this._updateQuaternion();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( euler ) {\r\n\r\n        this._x = euler._x;\r\n        this._y = euler._y;\r\n        this._z = euler._z;\r\n        this._order = euler._order;\r\n\r\n        this._updateQuaternion();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromRotationMatrix: function ( m, order ) {\r\n\r\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n        // clamp, to handle numerical problems\r\n\r\n        function clamp( x ) {\r\n\r\n            return Math.min( Math.max( x, -1 ), 1 );\r\n\r\n        }\r\n\r\n        var te = m.elements;\r\n        var m11 = te[0], m12 = te[4], m13 = te[8];\r\n        var m21 = te[1], m22 = te[5], m23 = te[9];\r\n        var m31 = te[2], m32 = te[6], m33 = te[10];\r\n\r\n        order = order || this._order;\r\n\r\n        if ( order === 'XYZ' ) {\r\n\r\n            this._y = Math.asin( clamp( m13 ) );\r\n\r\n            if ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n                this._x = Math.atan2( - m23, m33 );\r\n                this._z = Math.atan2( - m12, m11 );\r\n\r\n            } else {\r\n\r\n                this._x = Math.atan2( m32, m22 );\r\n                this._z = 0;\r\n\r\n            }\r\n\r\n        } else if ( order === 'YXZ' ) {\r\n\r\n            this._x = Math.asin( - clamp( m23 ) );\r\n\r\n            if ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n                this._y = Math.atan2( m13, m33 );\r\n                this._z = Math.atan2( m21, m22 );\r\n\r\n            } else {\r\n\r\n                this._y = Math.atan2( - m31, m11 );\r\n                this._z = 0;\r\n\r\n            }\r\n\r\n        } else if ( order === 'ZXY' ) {\r\n\r\n            this._x = Math.asin( clamp( m32 ) );\r\n\r\n            if ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n                this._y = Math.atan2( - m31, m33 );\r\n                this._z = Math.atan2( - m12, m22 );\r\n\r\n            } else {\r\n\r\n                this._y = 0;\r\n                this._z = Math.atan2( m21, m11 );\r\n\r\n            }\r\n\r\n        } else if ( order === 'ZYX' ) {\r\n\r\n            this._y = Math.asin( - clamp( m31 ) );\r\n\r\n            if ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n                this._x = Math.atan2( m32, m33 );\r\n                this._z = Math.atan2( m21, m11 );\r\n\r\n            } else {\r\n\r\n                this._x = 0;\r\n                this._z = Math.atan2( - m12, m22 );\r\n\r\n            }\r\n\r\n        } else if ( order === 'YZX' ) {\r\n\r\n            this._z = Math.asin( clamp( m21 ) );\r\n\r\n            if ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n                this._x = Math.atan2( - m23, m22 );\r\n                this._y = Math.atan2( - m31, m11 );\r\n\r\n            } else {\r\n\r\n                this._x = 0;\r\n                this._y = Math.atan2( m13, m33 );\r\n\r\n            }\r\n\r\n        } else if ( order === 'XZY' ) {\r\n\r\n            this._z = Math.asin( - clamp( m12 ) );\r\n\r\n            if ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n                this._x = Math.atan2( m32, m22 );\r\n                this._y = Math.atan2( m13, m11 );\r\n\r\n            } else {\r\n\r\n                this._x = Math.atan2( - m23, m33 );\r\n                this._y = 0;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            console.warn( 'WARNING: Euler.setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n        }\r\n\r\n        this._order = order;\r\n\r\n        this._updateQuaternion();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromQuaternion: function ( q, order, update ) {\r\n\r\n        // q is assumed to be normalized\r\n\r\n        // clamp, to handle numerical problems\r\n\r\n        function clamp( x ) {\r\n\r\n            return Math.min( Math.max( x, -1 ), 1 );\r\n\r\n        }\r\n\r\n        // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\r\n\r\n        var sqx = q.x * q.x;\r\n        var sqy = q.y * q.y;\r\n        var sqz = q.z * q.z;\r\n        var sqw = q.w * q.w;\r\n\r\n        order = order || this._order;\r\n\r\n        if ( order === 'XYZ' ) {\r\n\r\n            this._x = Math.atan2( 2 * ( q.x * q.w - q.y * q.z ), ( sqw - sqx - sqy + sqz ) );\r\n            this._y = Math.asin(  clamp( 2 * ( q.x * q.z + q.y * q.w ) ) );\r\n            this._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw + sqx - sqy - sqz ) );\r\n\r\n        } else if ( order ===  'YXZ' ) {\r\n\r\n            this._x = Math.asin(  clamp( 2 * ( q.x * q.w - q.y * q.z ) ) );\r\n            this._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw - sqx - sqy + sqz ) );\r\n            this._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw - sqx + sqy - sqz ) );\r\n\r\n        } else if ( order === 'ZXY' ) {\r\n\r\n            this._x = Math.asin(  clamp( 2 * ( q.x * q.w + q.y * q.z ) ) );\r\n            this._y = Math.atan2( 2 * ( q.y * q.w - q.z * q.x ), ( sqw - sqx - sqy + sqz ) );\r\n            this._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw - sqx + sqy - sqz ) );\r\n\r\n        } else if ( order === 'ZYX' ) {\r\n\r\n            this._x = Math.atan2( 2 * ( q.x * q.w + q.z * q.y ), ( sqw - sqx - sqy + sqz ) );\r\n            this._y = Math.asin(  clamp( 2 * ( q.y * q.w - q.x * q.z ) ) );\r\n            this._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw + sqx - sqy - sqz ) );\r\n\r\n        } else if ( order === 'YZX' ) {\r\n\r\n            this._x = Math.atan2( 2 * ( q.x * q.w - q.z * q.y ), ( sqw - sqx + sqy - sqz ) );\r\n            this._y = Math.atan2( 2 * ( q.y * q.w - q.x * q.z ), ( sqw + sqx - sqy - sqz ) );\r\n            this._z = Math.asin(  clamp( 2 * ( q.x * q.y + q.z * q.w ) ) );\r\n\r\n        } else if ( order === 'XZY' ) {\r\n\r\n            this._x = Math.atan2( 2 * ( q.x * q.w + q.y * q.z ), ( sqw - sqx + sqy - sqz ) );\r\n            this._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw + sqx - sqy - sqz ) );\r\n            this._z = Math.asin(  clamp( 2 * ( q.z * q.w - q.x * q.y ) ) );\r\n\r\n        } else {\r\n\r\n            console.warn( 'WARNING: Euler.setFromQuaternion() given unsupported order: ' + order )\r\n\r\n        }\r\n\r\n        this._order = order;\r\n\r\n        if ( update !== false ) this._updateQuaternion();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    reorder: function () {\r\n\r\n        // WARNING: this discards revolution information -bhouston\r\n\r\n        var q = new THREE.Quaternion();\r\n\r\n        return function ( newOrder ) {\r\n\r\n            q.setFromEuler( this );\r\n            this.setFromQuaternion( q, newOrder );\r\n\r\n        };\r\n\r\n\r\n    }(),\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this._x = array[ 0 ];\r\n        this._y = array[ 1 ];\r\n        this._z = array[ 2 ];\r\n        if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n        this._updateQuaternion();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        return [ this._x, this._y, this._z, this._order ];\r\n\r\n    },\r\n\r\n    equals: function ( euler ) {\r\n\r\n        return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Euler( this._x, this._y, this._z, this._order );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n    this.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n    this.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n    constructor: THREE.Line3,\r\n\r\n    set: function ( start, end ) {\r\n\r\n        this.start.copy( start );\r\n        this.end.copy( end );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( line ) {\r\n\r\n        this.start.copy( line.start );\r\n        this.end.copy( line.end );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    center: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n    },\r\n\r\n    delta: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.subVectors( this.end, this.start );\r\n\r\n    },\r\n\r\n    distanceSq: function () {\r\n\r\n        return this.start.distanceToSquared( this.end );\r\n\r\n    },\r\n\r\n    distance: function () {\r\n\r\n        return this.start.distanceTo( this.end );\r\n\r\n    },\r\n\r\n    at: function ( t, optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n\r\n        return this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n    },\r\n\r\n    closestPointToPointParameter: function() {\r\n\r\n        var startP = new THREE.Vector3();\r\n        var startEnd = new THREE.Vector3();\r\n\r\n        return function ( point, clampToLine ) {\r\n\r\n            startP.subVectors( point, this.start );\r\n            startEnd.subVectors( this.end, this.start );\r\n\r\n            var startEnd2 = startEnd.dot( startEnd );\r\n            var startEnd_startP = startEnd.dot( startP );\r\n\r\n            var t = startEnd_startP / startEnd2;\r\n\r\n            if ( clampToLine ) {\r\n\r\n                t = THREE.Math.clamp( t, 0, 1 );\r\n\r\n            }\r\n\r\n            return t;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    closestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n        var t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n\r\n        return this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n    },\r\n\r\n    applyMatrix4: function ( matrix ) {\r\n\r\n        this.start.applyMatrix4( matrix );\r\n        this.end.applyMatrix4( matrix );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( line ) {\r\n\r\n        return line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Line3().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n    this.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n    this.max = ( max !== undefined ) ? max : new THREE.Vector2( -Infinity, -Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n    constructor: THREE.Box2,\r\n\r\n    set: function ( min, max ) {\r\n\r\n        this.min.copy( min );\r\n        this.max.copy( max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromPoints: function ( points ) {\r\n\r\n        if ( points.length > 0 ) {\r\n\r\n            var point = points[ 0 ];\r\n\r\n            this.min.copy( point );\r\n            this.max.copy( point );\r\n\r\n            for ( var i = 1, il = points.length; i < il; i ++ ) {\r\n\r\n                point = points[ i ];\r\n\r\n                if ( point.x < this.min.x ) {\r\n\r\n                    this.min.x = point.x;\r\n\r\n                } else if ( point.x > this.max.x ) {\r\n\r\n                    this.max.x = point.x;\r\n\r\n                }\r\n\r\n                if ( point.y < this.min.y ) {\r\n\r\n                    this.min.y = point.y;\r\n\r\n                } else if ( point.y > this.max.y ) {\r\n\r\n                    this.max.y = point.y;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            this.makeEmpty();\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromCenterAndSize: function () {\r\n\r\n        var v1 = new THREE.Vector2();\r\n\r\n        return function ( center, size ) {\r\n\r\n            var halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n            this.min.copy( center ).sub( halfSize );\r\n            this.max.copy( center ).add( halfSize );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    copy: function ( box ) {\r\n\r\n        this.min.copy( box.min );\r\n        this.max.copy( box.max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeEmpty: function () {\r\n\r\n        this.min.x = this.min.y = Infinity;\r\n        this.max.x = this.max.y = -Infinity;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    empty: function () {\r\n\r\n        // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n        return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n    },\r\n\r\n    center: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector2();\r\n        return result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n    },\r\n\r\n    size: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector2();\r\n        return result.subVectors( this.max, this.min );\r\n\r\n    },\r\n\r\n    expandByPoint: function ( point ) {\r\n\r\n        this.min.min( point );\r\n        this.max.max( point );\r\n\r\n        return this;\r\n    },\r\n\r\n    expandByVector: function ( vector ) {\r\n\r\n        this.min.sub( vector );\r\n        this.max.add( vector );\r\n\r\n        return this;\r\n    },\r\n\r\n    expandByScalar: function ( scalar ) {\r\n\r\n        this.min.addScalar( -scalar );\r\n        this.max.addScalar( scalar );\r\n\r\n        return this;\r\n    },\r\n\r\n    containsPoint: function ( point ) {\r\n\r\n        if ( point.x < this.min.x || point.x > this.max.x ||\r\n            point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    },\r\n\r\n    containsBox: function ( box ) {\r\n\r\n        if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n            ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    },\r\n\r\n    getParameter: function ( point ) {\r\n\r\n        // This can potentially have a divide by zero if the box\r\n        // has a size dimension of 0.\r\n\r\n        return new THREE.Vector2(\r\n            ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n            ( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n        );\r\n\r\n    },\r\n\r\n    isIntersectionBox: function ( box ) {\r\n\r\n        // using 6 splitting planes to rule out intersections.\r\n\r\n        if ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n            box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    },\r\n\r\n    clampPoint: function ( point, optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector2();\r\n        return result.copy( point ).clamp( this.min, this.max );\r\n\r\n    },\r\n\r\n    distanceToPoint: function () {\r\n\r\n        var v1 = new THREE.Vector2();\r\n\r\n        return function ( point ) {\r\n\r\n            var clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n            return clampedPoint.sub( point ).length();\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    intersect: function ( box ) {\r\n\r\n        this.min.max( box.min );\r\n        this.max.min( box.max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    union: function ( box ) {\r\n\r\n        this.min.min( box.min );\r\n        this.max.max( box.max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    translate: function ( offset ) {\r\n\r\n        this.min.add( offset );\r\n        this.max.add( offset );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( box ) {\r\n\r\n        return box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Box2().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n    this.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n    this.max = ( max !== undefined ) ? max : new THREE.Vector3( -Infinity, -Infinity, -Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n    constructor: THREE.Box3,\r\n\r\n    set: function ( min, max ) {\r\n\r\n        this.min.copy( min );\r\n        this.max.copy( max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    addPoint: function ( point ) {\r\n\r\n        if ( point.x < this.min.x ) {\r\n\r\n            this.min.x = point.x;\r\n\r\n        } else if ( point.x > this.max.x ) {\r\n\r\n            this.max.x = point.x;\r\n\r\n        }\r\n\r\n        if ( point.y < this.min.y ) {\r\n\r\n            this.min.y = point.y;\r\n\r\n        } else if ( point.y > this.max.y ) {\r\n\r\n            this.max.y = point.y;\r\n\r\n        }\r\n\r\n        if ( point.z < this.min.z ) {\r\n\r\n            this.min.z = point.z;\r\n\r\n        } else if ( point.z > this.max.z ) {\r\n\r\n            this.max.z = point.z;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    setFromPoints: function ( points ) {\r\n\r\n        if ( points.length > 0 ) {\r\n\r\n            var point = points[ 0 ];\r\n\r\n            this.min.copy( point );\r\n            this.max.copy( point );\r\n\r\n            for ( var i = 1, il = points.length; i < il; i ++ ) {\r\n\r\n                this.addPoint( points[ i ] )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            this.makeEmpty();\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromCenterAndSize: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( center, size ) {\r\n\r\n            var halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n            this.min.copy( center ).sub( halfSize );\r\n            this.max.copy( center ).add( halfSize );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    setFromObject: function() {\r\n\r\n        // Computes the world-axis-aligned bounding box of an object (including its children),\r\n        // accounting for both the object's, and childrens', world transforms\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function( object ) {\r\n\r\n            var scope = this;\r\n\r\n            object.updateMatrixWorld( true );\r\n\r\n            this.makeEmpty();\r\n\r\n            object.traverse( function ( node ) {\r\n\r\n                if ( node.geometry !== undefined && node.geometry.vertices !== undefined ) {\r\n\r\n                    var vertices = node.geometry.vertices;\r\n\r\n                    for ( var i = 0, il = vertices.length; i < il; i++ ) {\r\n\r\n                        v1.copy( vertices[ i ] );\r\n\r\n                        v1.applyMatrix4( node.matrixWorld );\r\n\r\n                        scope.expandByPoint( v1 );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    copy: function ( box ) {\r\n\r\n        this.min.copy( box.min );\r\n        this.max.copy( box.max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeEmpty: function () {\r\n\r\n        this.min.x = this.min.y = this.min.z = Infinity;\r\n        this.max.x = this.max.y = this.max.z = -Infinity;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    empty: function () {\r\n\r\n        // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n        return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n    },\r\n\r\n    center: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n    },\r\n\r\n    size: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.subVectors( this.max, this.min );\r\n\r\n    },\r\n\r\n    expandByPoint: function ( point ) {\r\n\r\n        this.min.min( point );\r\n        this.max.max( point );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    expandByVector: function ( vector ) {\r\n\r\n        this.min.sub( vector );\r\n        this.max.add( vector );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    expandByScalar: function ( scalar ) {\r\n\r\n        this.min.addScalar( -scalar );\r\n        this.max.addScalar( scalar );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    containsPoint: function ( point ) {\r\n\r\n        if ( point.x < this.min.x || point.x > this.max.x ||\r\n            point.y < this.min.y || point.y > this.max.y ||\r\n            point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    },\r\n\r\n    containsBox: function ( box ) {\r\n\r\n        if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n            ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n            ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    },\r\n\r\n    getParameter: function ( point ) {\r\n\r\n        // This can potentially have a divide by zero if the box\r\n        // has a size dimension of 0.\r\n\r\n        return new THREE.Vector3(\r\n            ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n            ( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n            ( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n        );\r\n\r\n    },\r\n\r\n    isIntersectionBox: function ( box ) {\r\n\r\n        // using 6 splitting planes to rule out intersections.\r\n\r\n        if ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n            box.max.y < this.min.y || box.min.y > this.max.y ||\r\n            box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    },\r\n\r\n    clampPoint: function ( point, optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.copy( point ).clamp( this.min, this.max );\r\n\r\n    },\r\n\r\n    distanceToPoint: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( point ) {\r\n\r\n            var clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n            return clampedPoint.sub( point ).length();\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    getBoundingSphere: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( optionalTarget ) {\r\n\r\n            var result = optionalTarget || new THREE.Sphere();\r\n\r\n            result.center = this.center();\r\n            result.radius = this.size( v1 ).length() * 0.5;\r\n\r\n            return result;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    intersect: function ( box ) {\r\n\r\n        this.min.max( box.min );\r\n        this.max.min( box.max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    union: function ( box ) {\r\n\r\n        this.min.min( box.min );\r\n        this.max.max( box.max );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    applyMatrix4: function() {\r\n\r\n        var points = [\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3()\r\n        ];\r\n\r\n        return function ( matrix ) {\r\n\r\n            // NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n            points[0].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n            points[1].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n            points[2].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n            points[3].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n            points[4].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n            points[5].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n            points[6].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n            points[7].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n            this.makeEmpty();\r\n            this.setFromPoints( points );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    translate: function ( offset ) {\r\n\r\n        this.min.add( offset );\r\n        this.max.add( offset );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( box ) {\r\n\r\n        return box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Box3().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n    this.elements = new Float32Array(9);\r\n\r\n    this.set(\r\n\r\n        ( n11 !== undefined ) ? n11 : 1, n12 || 0, n13 || 0,\r\n        n21 || 0, ( n22 !== undefined ) ? n22 : 1, n23 || 0,\r\n        n31 || 0, n32 || 0, ( n33 !== undefined ) ? n33 : 1\r\n\r\n    );\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n    constructor: THREE.Matrix3,\r\n\r\n    set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n        var te = this.elements;\r\n\r\n        te[0] = n11; te[3] = n12; te[6] = n13;\r\n        te[1] = n21; te[4] = n22; te[7] = n23;\r\n        te[2] = n31; te[5] = n32; te[8] = n33;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    identity: function () {\r\n\r\n        this.set(\r\n\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( m ) {\r\n\r\n        var me = m.elements;\r\n\r\n        this.set(\r\n\r\n            me[0], me[3], me[6],\r\n            me[1], me[4], me[7],\r\n            me[2], me[5], me[8]\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyVector3: function ( vector ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix3\\'s .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n        return vector.applyMatrix3( this );\r\n\r\n    },\r\n\r\n    multiplyVector3Array: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( a ) {\r\n\r\n            for ( var i = 0, il = a.length; i < il; i += 3 ) {\r\n\r\n                v1.x = a[ i ];\r\n                v1.y = a[ i + 1 ];\r\n                v1.z = a[ i + 2 ];\r\n\r\n                v1.applyMatrix3(this);\r\n\r\n                a[ i ]     = v1.x;\r\n                a[ i + 1 ] = v1.y;\r\n                a[ i + 2 ] = v1.z;\r\n\r\n            }\r\n\r\n            return a;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    multiplyScalar: function ( s ) {\r\n\r\n        var te = this.elements;\r\n\r\n        te[0] *= s; te[3] *= s; te[6] *= s;\r\n        te[1] *= s; te[4] *= s; te[7] *= s;\r\n        te[2] *= s; te[5] *= s; te[8] *= s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    determinant: function () {\r\n\r\n        var te = this.elements;\r\n\r\n        var a = te[0], b = te[1], c = te[2],\r\n            d = te[3], e = te[4], f = te[5],\r\n            g = te[6], h = te[7], i = te[8];\r\n\r\n        return a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g;\r\n\r\n    },\r\n\r\n    getInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n        // input: THREE.Matrix4\r\n        // ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n        var me = matrix.elements;\r\n        var te = this.elements;\r\n\r\n        te[ 0 ] =   me[10] * me[5] - me[6] * me[9];\r\n        te[ 1 ] = - me[10] * me[1] + me[2] * me[9];\r\n        te[ 2 ] =   me[6] * me[1] - me[2] * me[5];\r\n        te[ 3 ] = - me[10] * me[4] + me[6] * me[8];\r\n        te[ 4 ] =   me[10] * me[0] - me[2] * me[8];\r\n        te[ 5 ] = - me[6] * me[0] + me[2] * me[4];\r\n        te[ 6 ] =   me[9] * me[4] - me[5] * me[8];\r\n        te[ 7 ] = - me[9] * me[0] + me[1] * me[8];\r\n        te[ 8 ] =   me[5] * me[0] - me[1] * me[4];\r\n\r\n        var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n        // no inverse\r\n\r\n        if ( det === 0 ) {\r\n\r\n            var msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n            if ( throwOnInvertible || false ) {\r\n\r\n                throw new Error( msg );\r\n\r\n            } else {\r\n\r\n                console.warn( msg );\r\n\r\n            }\r\n\r\n            this.identity();\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        this.multiplyScalar( 1.0 / det );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    transpose: function () {\r\n\r\n        var tmp, m = this.elements;\r\n\r\n        tmp = m[1]; m[1] = m[3]; m[3] = tmp;\r\n        tmp = m[2]; m[2] = m[6]; m[6] = tmp;\r\n        tmp = m[5]; m[5] = m[7]; m[7] = tmp;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    getNormalMatrix: function ( m ) {\r\n\r\n        // input: THREE.Matrix4\r\n\r\n        this.getInverse( m ).transpose();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    transposeIntoArray: function ( r ) {\r\n\r\n        var m = this.elements;\r\n\r\n        r[ 0 ] = m[ 0 ];\r\n        r[ 1 ] = m[ 3 ];\r\n        r[ 2 ] = m[ 6 ];\r\n        r[ 3 ] = m[ 1 ];\r\n        r[ 4 ] = m[ 4 ];\r\n        r[ 5 ] = m[ 7 ];\r\n        r[ 6 ] = m[ 2 ];\r\n        r[ 7 ] = m[ 5 ];\r\n        r[ 8 ] = m[ 8 ];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        var te = this.elements;\r\n\r\n        return new THREE.Matrix3(\r\n\r\n            te[0], te[3], te[6],\r\n            te[1], te[4], te[7],\r\n            te[2], te[5], te[8]\r\n\r\n        );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n\r\nTHREE.Matrix4 = function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n    this.elements = new Float32Array( 16 );\r\n\r\n    // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\r\n    //   we should not support semi specification of Matrix4, it is just weird.\r\n\r\n    var te = this.elements;\r\n\r\n    te[0] = ( n11 !== undefined ) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\r\n    te[1] = n21 || 0; te[5] = ( n22 !== undefined ) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\r\n    te[2] = n31 || 0; te[6] = n32 || 0; te[10] = ( n33 !== undefined ) ? n33 : 1; te[14] = n34 || 0;\r\n    te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = ( n44 !== undefined ) ? n44 : 1;\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n    constructor: THREE.Matrix4,\r\n\r\n    set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n        var te = this.elements;\r\n\r\n        te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\r\n        te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\r\n        te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\r\n        te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    identity: function () {\r\n\r\n        this.set(\r\n\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( m ) {\r\n\r\n        this.elements.set( m.elements );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    extractPosition: function ( m ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .extractPosition() has been renamed to .copyPosition().' );\r\n        return this.copyPosition( m );\r\n\r\n    },\r\n\r\n    copyPosition: function ( m ) {\r\n\r\n        var te = this.elements;\r\n        var me = m.elements;\r\n\r\n        te[12] = me[12];\r\n        te[13] = me[13];\r\n        te[14] = me[14];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    extractRotation: function () {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( m ) {\r\n\r\n            var te = this.elements;\r\n            var me = m.elements;\r\n\r\n            var scaleX = 1 / v1.set( me[0], me[1], me[2] ).length();\r\n            var scaleY = 1 / v1.set( me[4], me[5], me[6] ).length();\r\n            var scaleZ = 1 / v1.set( me[8], me[9], me[10] ).length();\r\n\r\n            te[0] = me[0] * scaleX;\r\n            te[1] = me[1] * scaleX;\r\n            te[2] = me[2] * scaleX;\r\n\r\n            te[4] = me[4] * scaleY;\r\n            te[5] = me[5] * scaleY;\r\n            te[6] = me[6] * scaleY;\r\n\r\n            te[8] = me[8] * scaleZ;\r\n            te[9] = me[9] * scaleZ;\r\n            te[10] = me[10] * scaleZ;\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    makeRotationFromEuler: function ( euler ) {\r\n\r\n        if ( euler instanceof THREE.Euler === false ) {\r\n\r\n            console.error( 'ERROR: Matrix\\'s .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.' );\r\n\r\n        }\r\n\r\n        var te = this.elements;\r\n\r\n        var x = euler.x, y = euler.y, z = euler.z;\r\n        var a = Math.cos( x ), b = Math.sin( x );\r\n        var c = Math.cos( y ), d = Math.sin( y );\r\n        var e = Math.cos( z ), f = Math.sin( z );\r\n\r\n        if ( euler.order === 'XYZ' ) {\r\n\r\n            var ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n            te[0] = c * e;\r\n            te[4] = - c * f;\r\n            te[8] = d;\r\n\r\n            te[1] = af + be * d;\r\n            te[5] = ae - bf * d;\r\n            te[9] = - b * c;\r\n\r\n            te[2] = bf - ae * d;\r\n            te[6] = be + af * d;\r\n            te[10] = a * c;\r\n\r\n        } else if ( euler.order === 'YXZ' ) {\r\n\r\n            var ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n            te[0] = ce + df * b;\r\n            te[4] = de * b - cf;\r\n            te[8] = a * d;\r\n\r\n            te[1] = a * f;\r\n            te[5] = a * e;\r\n            te[9] = - b;\r\n\r\n            te[2] = cf * b - de;\r\n            te[6] = df + ce * b;\r\n            te[10] = a * c;\r\n\r\n        } else if ( euler.order === 'ZXY' ) {\r\n\r\n            var ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n            te[0] = ce - df * b;\r\n            te[4] = - a * f;\r\n            te[8] = de + cf * b;\r\n\r\n            te[1] = cf + de * b;\r\n            te[5] = a * e;\r\n            te[9] = df - ce * b;\r\n\r\n            te[2] = - a * d;\r\n            te[6] = b;\r\n            te[10] = a * c;\r\n\r\n        } else if ( euler.order === 'ZYX' ) {\r\n\r\n            var ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n            te[0] = c * e;\r\n            te[4] = be * d - af;\r\n            te[8] = ae * d + bf;\r\n\r\n            te[1] = c * f;\r\n            te[5] = bf * d + ae;\r\n            te[9] = af * d - be;\r\n\r\n            te[2] = - d;\r\n            te[6] = b * c;\r\n            te[10] = a * c;\r\n\r\n        } else if ( euler.order === 'YZX' ) {\r\n\r\n            var ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n            te[0] = c * e;\r\n            te[4] = bd - ac * f;\r\n            te[8] = bc * f + ad;\r\n\r\n            te[1] = f;\r\n            te[5] = a * e;\r\n            te[9] = - b * e;\r\n\r\n            te[2] = - d * e;\r\n            te[6] = ad * f + bc;\r\n            te[10] = ac - bd * f;\r\n\r\n        } else if ( euler.order === 'XZY' ) {\r\n\r\n            var ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n            te[0] = c * e;\r\n            te[4] = - f;\r\n            te[8] = d * e;\r\n\r\n            te[1] = ac * f + bd;\r\n            te[5] = a * e;\r\n            te[9] = ad * f - bc;\r\n\r\n            te[2] = bc * f - ad;\r\n            te[6] = b * e;\r\n            te[10] = bd * f + ac;\r\n\r\n        }\r\n\r\n        // last column\r\n        te[3] = 0;\r\n        te[7] = 0;\r\n        te[11] = 0;\r\n\r\n        // bottom row\r\n        te[12] = 0;\r\n        te[13] = 0;\r\n        te[14] = 0;\r\n        te[15] = 1;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setRotationFromQuaternion: function ( q ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.' );\r\n\r\n        return this.makeRotationFromQuaternion( q );\r\n\r\n    },\r\n\r\n    makeRotationFromQuaternion: function ( q ) {\r\n\r\n        var te = this.elements;\r\n\r\n        var x = q.x, y = q.y, z = q.z, w = q.w;\r\n        var x2 = x + x, y2 = y + y, z2 = z + z;\r\n        var xx = x * x2, xy = x * y2, xz = x * z2;\r\n        var yy = y * y2, yz = y * z2, zz = z * z2;\r\n        var wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n        te[0] = 1 - ( yy + zz );\r\n        te[4] = xy - wz;\r\n        te[8] = xz + wy;\r\n\r\n        te[1] = xy + wz;\r\n        te[5] = 1 - ( xx + zz );\r\n        te[9] = yz - wx;\r\n\r\n        te[2] = xz - wy;\r\n        te[6] = yz + wx;\r\n        te[10] = 1 - ( xx + yy );\r\n\r\n        // last column\r\n        te[3] = 0;\r\n        te[7] = 0;\r\n        te[11] = 0;\r\n\r\n        // bottom row\r\n        te[12] = 0;\r\n        te[13] = 0;\r\n        te[14] = 0;\r\n        te[15] = 1;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    lookAt: function() {\r\n\r\n        var x = new THREE.Vector3();\r\n        var y = new THREE.Vector3();\r\n        var z = new THREE.Vector3();\r\n\r\n        return function ( eye, target, up ) {\r\n\r\n            var te = this.elements;\r\n\r\n            z.subVectors( eye, target ).normalize();\r\n\r\n            if ( z.length() === 0 ) {\r\n\r\n                z.z = 1;\r\n\r\n            }\r\n\r\n            x.crossVectors( up, z ).normalize();\r\n\r\n            if ( x.length() === 0 ) {\r\n\r\n                z.x += 0.0001;\r\n                x.crossVectors( up, z ).normalize();\r\n\r\n            }\r\n\r\n            y.crossVectors( z, x );\r\n\r\n\r\n            te[0] = x.x; te[4] = y.x; te[8] = z.x;\r\n            te[1] = x.y; te[5] = y.y; te[9] = z.y;\r\n            te[2] = x.z; te[6] = y.z; te[10] = z.z;\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    multiply: function ( m, n ) {\r\n\r\n        if ( n !== undefined ) {\r\n\r\n            console.warn( 'DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n            return this.multiplyMatrices( m, n );\r\n\r\n        }\r\n\r\n        return this.multiplyMatrices( this, m );\r\n\r\n    },\r\n\r\n    multiplyMatrices: function ( a, b ) {\r\n\r\n        var ae = a.elements;\r\n        var be = b.elements;\r\n        var te = this.elements;\r\n\r\n        var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\r\n        var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\r\n        var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\r\n        var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\r\n\r\n        var b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\r\n        var b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\r\n        var b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\r\n        var b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\r\n\r\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n        te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n        te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n        te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n        te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n        te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n        te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n        te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n        te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n        te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n        te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n        te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n        te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n        te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyToArray: function ( a, b, r ) {\r\n\r\n        var te = this.elements;\r\n\r\n        this.multiplyMatrices( a, b );\r\n\r\n        r[ 0 ] = te[0]; r[ 1 ] = te[1]; r[ 2 ] = te[2]; r[ 3 ] = te[3];\r\n        r[ 4 ] = te[4]; r[ 5 ] = te[5]; r[ 6 ] = te[6]; r[ 7 ] = te[7];\r\n        r[ 8 ]  = te[8]; r[ 9 ]  = te[9]; r[ 10 ] = te[10]; r[ 11 ] = te[11];\r\n        r[ 12 ] = te[12]; r[ 13 ] = te[13]; r[ 14 ] = te[14]; r[ 15 ] = te[15];\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyScalar: function ( s ) {\r\n\r\n        var te = this.elements;\r\n\r\n        te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\r\n        te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\r\n        te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\r\n        te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    multiplyVector3: function ( vector ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n        return vector.applyProjection( this );\r\n\r\n    },\r\n\r\n    multiplyVector4: function ( vector ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n        return vector.applyMatrix4( this );\r\n\r\n    },\r\n\r\n    multiplyVector3Array: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( a ) {\r\n\r\n            for ( var i = 0, il = a.length; i < il; i += 3 ) {\r\n\r\n                v1.x = a[ i ];\r\n                v1.y = a[ i + 1 ];\r\n                v1.z = a[ i + 2 ];\r\n\r\n                v1.applyProjection( this );\r\n\r\n                a[ i ]     = v1.x;\r\n                a[ i + 1 ] = v1.y;\r\n                a[ i + 2 ] = v1.z;\r\n\r\n            }\r\n\r\n            return a;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    rotateAxis: function ( v ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n        v.transformDirection( this );\r\n\r\n    },\r\n\r\n    crossVector: function ( vector ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n        return vector.applyMatrix4( this );\r\n\r\n    },\r\n\r\n    determinant: function () {\r\n\r\n        var te = this.elements;\r\n\r\n        var n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];\r\n        var n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];\r\n        var n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];\r\n        var n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];\r\n\r\n        //TODO: make this more efficient\r\n        //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n        return (\r\n            n41 * (\r\n                +n14 * n23 * n32\r\n                -n13 * n24 * n32\r\n                -n14 * n22 * n33\r\n                +n12 * n24 * n33\r\n                +n13 * n22 * n34\r\n                -n12 * n23 * n34\r\n            ) +\r\n            n42 * (\r\n                +n11 * n23 * n34\r\n                -n11 * n24 * n33\r\n                +n14 * n21 * n33\r\n                -n13 * n21 * n34\r\n                +n13 * n24 * n31\r\n                -n14 * n23 * n31\r\n            ) +\r\n            n43 * (\r\n                +n11 * n24 * n32\r\n                -n11 * n22 * n34\r\n                -n14 * n21 * n32\r\n                +n12 * n21 * n34\r\n                +n14 * n22 * n31\r\n                -n12 * n24 * n31\r\n            ) +\r\n            n44 * (\r\n                -n13 * n22 * n31\r\n                -n11 * n23 * n32\r\n                +n11 * n22 * n33\r\n                +n13 * n21 * n32\r\n                -n12 * n21 * n33\r\n                +n12 * n23 * n31\r\n            )\r\n\r\n        );\r\n\r\n    },\r\n\r\n    transpose: function () {\r\n\r\n        var te = this.elements;\r\n        var tmp;\r\n\r\n        tmp = te[1]; te[1] = te[4]; te[4] = tmp;\r\n        tmp = te[2]; te[2] = te[8]; te[8] = tmp;\r\n        tmp = te[6]; te[6] = te[9]; te[9] = tmp;\r\n\r\n        tmp = te[3]; te[3] = te[12]; te[12] = tmp;\r\n        tmp = te[7]; te[7] = te[13]; te[13] = tmp;\r\n        tmp = te[11]; te[11] = te[14]; te[14] = tmp;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    flattenToArray: function ( flat ) {\r\n\r\n        var te = this.elements;\r\n        flat[ 0 ] = te[0]; flat[ 1 ] = te[1]; flat[ 2 ] = te[2]; flat[ 3 ] = te[3];\r\n        flat[ 4 ] = te[4]; flat[ 5 ] = te[5]; flat[ 6 ] = te[6]; flat[ 7 ] = te[7];\r\n        flat[ 8 ] = te[8]; flat[ 9 ] = te[9]; flat[ 10 ] = te[10]; flat[ 11 ] = te[11];\r\n        flat[ 12 ] = te[12]; flat[ 13 ] = te[13]; flat[ 14 ] = te[14]; flat[ 15 ] = te[15];\r\n\r\n        return flat;\r\n\r\n    },\r\n\r\n    flattenToArrayOffset: function( flat, offset ) {\r\n\r\n        var te = this.elements;\r\n        flat[ offset ] = te[0];\r\n        flat[ offset + 1 ] = te[1];\r\n        flat[ offset + 2 ] = te[2];\r\n        flat[ offset + 3 ] = te[3];\r\n\r\n        flat[ offset + 4 ] = te[4];\r\n        flat[ offset + 5 ] = te[5];\r\n        flat[ offset + 6 ] = te[6];\r\n        flat[ offset + 7 ] = te[7];\r\n\r\n        flat[ offset + 8 ]  = te[8];\r\n        flat[ offset + 9 ]  = te[9];\r\n        flat[ offset + 10 ] = te[10];\r\n        flat[ offset + 11 ] = te[11];\r\n\r\n        flat[ offset + 12 ] = te[12];\r\n        flat[ offset + 13 ] = te[13];\r\n        flat[ offset + 14 ] = te[14];\r\n        flat[ offset + 15 ] = te[15];\r\n\r\n        return flat;\r\n\r\n    },\r\n\r\n    getPosition: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function () {\r\n\r\n            console.warn( 'DEPRECATED: Matrix4\\'s .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.' );\r\n\r\n            var te = this.elements;\r\n            return v1.set( te[12], te[13], te[14] );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    setPosition: function ( v ) {\r\n\r\n        var te = this.elements;\r\n\r\n        te[12] = v.x;\r\n        te[13] = v.y;\r\n        te[14] = v.z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    getInverse: function ( m, throwOnInvertible ) {\r\n\r\n        // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n        var te = this.elements;\r\n        var me = m.elements;\r\n\r\n        var n11 = me[0], n12 = me[4], n13 = me[8], n14 = me[12];\r\n        var n21 = me[1], n22 = me[5], n23 = me[9], n24 = me[13];\r\n        var n31 = me[2], n32 = me[6], n33 = me[10], n34 = me[14];\r\n        var n41 = me[3], n42 = me[7], n43 = me[11], n44 = me[15];\r\n\r\n        te[0] = n23*n34*n42 - n24*n33*n42 + n24*n32*n43 - n22*n34*n43 - n23*n32*n44 + n22*n33*n44;\r\n        te[4] = n14*n33*n42 - n13*n34*n42 - n14*n32*n43 + n12*n34*n43 + n13*n32*n44 - n12*n33*n44;\r\n        te[8] = n13*n24*n42 - n14*n23*n42 + n14*n22*n43 - n12*n24*n43 - n13*n22*n44 + n12*n23*n44;\r\n        te[12] = n14*n23*n32 - n13*n24*n32 - n14*n22*n33 + n12*n24*n33 + n13*n22*n34 - n12*n23*n34;\r\n        te[1] = n24*n33*n41 - n23*n34*n41 - n24*n31*n43 + n21*n34*n43 + n23*n31*n44 - n21*n33*n44;\r\n        te[5] = n13*n34*n41 - n14*n33*n41 + n14*n31*n43 - n11*n34*n43 - n13*n31*n44 + n11*n33*n44;\r\n        te[9] = n14*n23*n41 - n13*n24*n41 - n14*n21*n43 + n11*n24*n43 + n13*n21*n44 - n11*n23*n44;\r\n        te[13] = n13*n24*n31 - n14*n23*n31 + n14*n21*n33 - n11*n24*n33 - n13*n21*n34 + n11*n23*n34;\r\n        te[2] = n22*n34*n41 - n24*n32*n41 + n24*n31*n42 - n21*n34*n42 - n22*n31*n44 + n21*n32*n44;\r\n        te[6] = n14*n32*n41 - n12*n34*n41 - n14*n31*n42 + n11*n34*n42 + n12*n31*n44 - n11*n32*n44;\r\n        te[10] = n12*n24*n41 - n14*n22*n41 + n14*n21*n42 - n11*n24*n42 - n12*n21*n44 + n11*n22*n44;\r\n        te[14] = n14*n22*n31 - n12*n24*n31 - n14*n21*n32 + n11*n24*n32 + n12*n21*n34 - n11*n22*n34;\r\n        te[3] = n23*n32*n41 - n22*n33*n41 - n23*n31*n42 + n21*n33*n42 + n22*n31*n43 - n21*n32*n43;\r\n        te[7] = n12*n33*n41 - n13*n32*n41 + n13*n31*n42 - n11*n33*n42 - n12*n31*n43 + n11*n32*n43;\r\n        te[11] = n13*n22*n41 - n12*n23*n41 - n13*n21*n42 + n11*n23*n42 + n12*n21*n43 - n11*n22*n43;\r\n        te[15] = n12*n23*n31 - n13*n22*n31 + n13*n21*n32 - n11*n23*n32 - n12*n21*n33 + n11*n22*n33;\r\n\r\n        var det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n        if ( det == 0 ) {\r\n\r\n            var msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n            if ( throwOnInvertible || false ) {\r\n\r\n                throw new Error( msg );\r\n\r\n            } else {\r\n\r\n                console.warn( msg );\r\n\r\n            }\r\n\r\n            this.identity();\r\n\r\n            return this;\r\n        }\r\n\r\n        this.multiplyScalar( 1 / det );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    translate: function ( v ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .translate() has been removed.');\r\n\r\n    },\r\n\r\n    rotateX: function ( angle ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .rotateX() has been removed.');\r\n\r\n    },\r\n\r\n    rotateY: function ( angle ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .rotateY() has been removed.');\r\n\r\n    },\r\n\r\n    rotateZ: function ( angle ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .rotateZ() has been removed.');\r\n\r\n    },\r\n\r\n    rotateByAxis: function ( axis, angle ) {\r\n\r\n        console.warn( 'DEPRECATED: Matrix4\\'s .rotateByAxis() has been removed.');\r\n\r\n    },\r\n\r\n    scale: function ( v ) {\r\n\r\n        var te = this.elements;\r\n        var x = v.x, y = v.y, z = v.z;\r\n\r\n        te[0] *= x; te[4] *= y; te[8] *= z;\r\n        te[1] *= x; te[5] *= y; te[9] *= z;\r\n        te[2] *= x; te[6] *= y; te[10] *= z;\r\n        te[3] *= x; te[7] *= y; te[11] *= z;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    getMaxScaleOnAxis: function () {\r\n\r\n        var te = this.elements;\r\n\r\n        var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n        var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n        var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n\r\n        return Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n    },\r\n\r\n    makeTranslation: function ( x, y, z ) {\r\n\r\n        this.set(\r\n\r\n            1, 0, 0, x,\r\n            0, 1, 0, y,\r\n            0, 0, 1, z,\r\n            0, 0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeRotationX: function ( theta ) {\r\n\r\n        var c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n        this.set(\r\n\r\n            1, 0,  0, 0,\r\n            0, c, -s, 0,\r\n            0, s,  c, 0,\r\n            0, 0,  0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeRotationY: function ( theta ) {\r\n\r\n        var c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n        this.set(\r\n\r\n            c, 0, s, 0,\r\n            0, 1, 0, 0,\r\n            -s, 0, c, 0,\r\n            0, 0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeRotationZ: function ( theta ) {\r\n\r\n        var c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n        this.set(\r\n\r\n            c, -s, 0, 0,\r\n            s,  c, 0, 0,\r\n            0,  0, 1, 0,\r\n            0,  0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeRotationAxis: function ( axis, angle ) {\r\n\r\n        // Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n        var c = Math.cos( angle );\r\n        var s = Math.sin( angle );\r\n        var t = 1 - c;\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var tx = t * x, ty = t * y;\r\n\r\n        this.set(\r\n\r\n            tx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n            tx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n            tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n            0, 0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makeScale: function ( x, y, z ) {\r\n\r\n        this.set(\r\n\r\n            x, 0, 0, 0,\r\n            0, y, 0, 0,\r\n            0, 0, z, 0,\r\n            0, 0, 0, 1\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    compose: function ( position, quaternion, scale ) {\r\n\r\n        this.makeRotationFromQuaternion( quaternion );\r\n        this.scale( scale );\r\n        this.setPosition( position );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    decompose: function () {\r\n\r\n        var vector = new THREE.Vector3();\r\n        var matrix = new THREE.Matrix4();\r\n\r\n        return function ( position, quaternion, scale ) {\r\n\r\n            var te = this.elements;\r\n\r\n            var sx = vector.set( te[0], te[1], te[2] ).length();\r\n            var sy = vector.set( te[4], te[5], te[6] ).length();\r\n            var sz = vector.set( te[8], te[9], te[10] ).length();\r\n\r\n            position.x = te[12];\r\n            position.y = te[13];\r\n            position.z = te[14];\r\n\r\n            // scale the rotation part\r\n\r\n            matrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n            var invSX = 1 / sx;\r\n            var invSY = 1 / sy;\r\n            var invSZ = 1 / sz;\r\n\r\n            matrix.elements[0] *= invSX;\r\n            matrix.elements[1] *= invSX;\r\n            matrix.elements[2] *= invSX;\r\n\r\n            matrix.elements[4] *= invSY;\r\n            matrix.elements[5] *= invSY;\r\n            matrix.elements[6] *= invSY;\r\n\r\n            matrix.elements[8] *= invSZ;\r\n            matrix.elements[9] *= invSZ;\r\n            matrix.elements[10] *= invSZ;\r\n\r\n            quaternion.setFromRotationMatrix( matrix );\r\n\r\n            scale.x = sx;\r\n            scale.y = sy;\r\n            scale.z = sz;\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    makeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n        var te = this.elements;\r\n        var x = 2 * near / ( right - left );\r\n        var y = 2 * near / ( top - bottom );\r\n\r\n        var a = ( right + left ) / ( right - left );\r\n        var b = ( top + bottom ) / ( top - bottom );\r\n        var c = - ( far + near ) / ( far - near );\r\n        var d = - 2 * far * near / ( far - near );\r\n\r\n        te[0] = x;\tte[4] = 0;\tte[8] = a;\tte[12] = 0;\r\n        te[1] = 0;\tte[5] = y;\tte[9] = b;\tte[13] = 0;\r\n        te[2] = 0;\tte[6] = 0;\tte[10] = c;\tte[14] = d;\r\n        te[3] = 0;\tte[7] = 0;\tte[11] = - 1;\tte[15] = 0;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    makePerspective: function ( fov, aspect, near, far ) {\r\n\r\n        var ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n        var ymin = - ymax;\r\n        var xmin = ymin * aspect;\r\n        var xmax = ymax * aspect;\r\n\r\n        return this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n    },\r\n\r\n    makeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n        var te = this.elements;\r\n        var w = right - left;\r\n        var h = top - bottom;\r\n        var p = far - near;\r\n\r\n        var x = ( right + left ) / w;\r\n        var y = ( top + bottom ) / h;\r\n        var z = ( far + near ) / p;\r\n\r\n        te[0] = 2 / w;\tte[4] = 0;\tte[8] = 0;\tte[12] = -x;\r\n        te[1] = 0;\tte[5] = 2 / h;\tte[9] = 0;\tte[13] = -y;\r\n        te[2] = 0;\tte[6] = 0;\tte[10] = -2/p;\tte[14] = -z;\r\n        te[3] = 0;\tte[7] = 0;\tte[11] = 0;\tte[15] = 1;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    fromArray: function ( array ) {\r\n\r\n        this.elements.set( array );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toArray: function () {\r\n\r\n        var te = this.elements;\r\n\r\n        return [\r\n            te[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n            te[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n            te[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n            te[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n        ];\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        var te = this.elements;\r\n\r\n        return new THREE.Matrix4(\r\n\r\n            te[0], te[4], te[8], te[12],\r\n            te[1], te[5], te[9], te[13],\r\n            te[2], te[6], te[10], te[14],\r\n            te[3], te[7], te[11], te[15]\r\n\r\n        );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n    this.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n    this.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n    constructor: THREE.Ray,\r\n\r\n    set: function ( origin, direction ) {\r\n\r\n        this.origin.copy( origin );\r\n        this.direction.copy( direction );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( ray ) {\r\n\r\n        this.origin.copy( ray.origin );\r\n        this.direction.copy( ray.direction );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    at: function ( t, optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n\r\n        return result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n    },\r\n\r\n    recast: function () {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( t ) {\r\n\r\n            this.origin.copy( this.at( t, v1 ) );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    closestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        result.subVectors( point, this.origin );\r\n        var directionDistance = result.dot( this.direction );\r\n\r\n        if ( directionDistance < 0 ) {\r\n\r\n            return result.copy( this.origin );\r\n\r\n        }\r\n\r\n        return result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n    },\r\n\r\n    distanceToPoint: function () {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( point ) {\r\n\r\n            var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n            // point behind the ray\r\n\r\n            if ( directionDistance < 0 ) {\r\n\r\n                return this.origin.distanceTo( point );\r\n\r\n            }\r\n\r\n            v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n            return v1.distanceTo( point );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    distanceSqToSegment: function( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n        // from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n        // It returns the min distance between the ray and the segment\r\n        // defined by v0 and v1\r\n        // It can also set two optional targets :\r\n        // - The closest point on the ray\r\n        // - The closest point on the segment\r\n\r\n        var segCenter = v0.clone().add( v1 ).multiplyScalar( 0.5 );\r\n        var segDir = v1.clone().sub( v0 ).normalize();\r\n        var segExtent = v0.distanceTo( v1 ) * 0.5;\r\n        var diff = this.origin.clone().sub( segCenter );\r\n        var a01 = - this.direction.dot( segDir );\r\n        var b0 = diff.dot( this.direction );\r\n        var b1 = - diff.dot( segDir );\r\n        var c = diff.lengthSq();\r\n        var det = Math.abs( 1 - a01 * a01 );\r\n        var s0, s1, sqrDist, extDet;\r\n\r\n        if ( det >= 0 ) {\r\n\r\n            // The ray and segment are not parallel.\r\n\r\n            s0 = a01 * b1 - b0;\r\n            s1 = a01 * b0 - b1;\r\n            extDet = segExtent * det;\r\n\r\n            if ( s0 >= 0 ) {\r\n\r\n                if ( s1 >= - extDet ) {\r\n\r\n                    if ( s1 <= extDet ) {\r\n\r\n                        // region 0\r\n                        // Minimum at interior points of ray and segment.\r\n\r\n                        var invDet = 1 / det;\r\n                        s0 *= invDet;\r\n                        s1 *= invDet;\r\n                        sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n                    } else {\r\n\r\n                        // region 1\r\n\r\n                        s1 = segExtent;\r\n                        s0 = Math.max( 0, - ( a01 * s1 + b0) );\r\n                        sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    // region 5\r\n\r\n                    s1 = - segExtent;\r\n                    s0 = Math.max( 0, - ( a01 * s1 + b0) );\r\n                    sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                if ( s1 <= - extDet) {\r\n\r\n                    // region 4\r\n\r\n                    s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n                    s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n                    sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n                } else if ( s1 <= extDet ) {\r\n\r\n                    // region 3\r\n\r\n                    s0 = 0;\r\n                    s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n                    sqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n                } else {\r\n\r\n                    // region 2\r\n\r\n                    s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n                    s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n                    sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            // Ray and segment are parallel.\r\n\r\n            s1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n            s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n            sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n        }\r\n\r\n        if ( optionalPointOnRay ) {\r\n\r\n            optionalPointOnRay.copy( this.direction.clone().multiplyScalar( s0 ).add( this.origin ) );\r\n\r\n        }\r\n\r\n        if ( optionalPointOnSegment ) {\r\n\r\n            optionalPointOnSegment.copy( segDir.clone().multiplyScalar( s1 ).add( segCenter ) );\r\n\r\n        }\r\n\r\n        return sqrDist;\r\n\r\n    },\r\n\r\n    isIntersectionSphere: function ( sphere ) {\r\n\r\n        return this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n    },\r\n\r\n    isIntersectionPlane: function ( plane ) {\r\n\r\n        // check if the ray lies on the plane first\r\n\r\n        var distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n        if ( distToPoint === 0 ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        var denominator = plane.normal.dot( this.direction );\r\n\r\n        if ( denominator * distToPoint < 0 ) {\r\n\r\n            return true\r\n\r\n        }\r\n\r\n        // ray origin is behind the plane (and is pointing behind it)\r\n\r\n        return false;\r\n\r\n    },\r\n\r\n    distanceToPlane: function ( plane ) {\r\n\r\n        var denominator = plane.normal.dot( this.direction );\r\n        if ( denominator == 0 ) {\r\n\r\n            // line is coplanar, return origin\r\n            if( plane.distanceToPoint( this.origin ) == 0 ) {\r\n\r\n                return 0;\r\n\r\n            }\r\n\r\n            // Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n        var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n        // Return if the ray never intersects the plane\r\n\r\n        return t >= 0 ? t :  null;\r\n\r\n    },\r\n\r\n    intersectPlane: function ( plane, optionalTarget ) {\r\n\r\n        var t = this.distanceToPlane( plane );\r\n\r\n        if ( t === null ) {\r\n\r\n            return null;\r\n        }\r\n\r\n        return this.at( t, optionalTarget );\r\n\r\n    },\r\n\r\n    isIntersectionBox: function () {\r\n\r\n        var v = new THREE.Vector3();\r\n\r\n        return function ( box ) {\r\n\r\n            return this.intersectBox( box, v ) !== null;\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    intersectBox: function ( box , optionalTarget ) {\r\n\r\n        // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n        var tmin,tmax,tymin,tymax,tzmin,tzmax;\r\n\r\n        var invdirx = 1/this.direction.x,\r\n            invdiry = 1/this.direction.y,\r\n            invdirz = 1/this.direction.z;\r\n\r\n        var origin = this.origin;\r\n\r\n        if (invdirx >= 0) {\r\n\r\n            tmin = (box.min.x - origin.x) * invdirx;\r\n            tmax = (box.max.x - origin.x) * invdirx;\r\n\r\n        } else {\r\n\r\n            tmin = (box.max.x - origin.x) * invdirx;\r\n            tmax = (box.min.x - origin.x) * invdirx;\r\n        }\r\n\r\n        if (invdiry >= 0) {\r\n\r\n            tymin = (box.min.y - origin.y) * invdiry;\r\n            tymax = (box.max.y - origin.y) * invdiry;\r\n\r\n        } else {\r\n\r\n            tymin = (box.max.y - origin.y) * invdiry;\r\n            tymax = (box.min.y - origin.y) * invdiry;\r\n        }\r\n\r\n        if ((tmin > tymax) || (tymin > tmax)) return null;\r\n\r\n        // These lines also handle the case where tmin or tmax is NaN\r\n        // (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n        if (tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n        if (tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n        if (invdirz >= 0) {\r\n\r\n            tzmin = (box.min.z - origin.z) * invdirz;\r\n            tzmax = (box.max.z - origin.z) * invdirz;\r\n\r\n        } else {\r\n\r\n            tzmin = (box.max.z - origin.z) * invdirz;\r\n            tzmax = (box.min.z - origin.z) * invdirz;\r\n        }\r\n\r\n        if ((tmin > tzmax) || (tzmin > tmax)) return null;\r\n\r\n        if (tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n        if (tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n        //return point closest to the ray (positive side)\r\n\r\n        if ( tmax < 0 ) return null;\r\n\r\n        return this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n    },\r\n\r\n    intersectTriangle: function() {\r\n\r\n        // Compute the offset origin, edges, and normal.\r\n        var diff = new THREE.Vector3();\r\n        var edge1 = new THREE.Vector3();\r\n        var edge2 = new THREE.Vector3();\r\n        var normal = new THREE.Vector3();\r\n\r\n        return function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n            // from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n            edge1.subVectors( b, a );\r\n            edge2.subVectors( c, a );\r\n            normal.crossVectors( edge1, edge2 );\r\n\r\n            // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n            // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n            //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n            //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n            //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n            var DdN = this.direction.dot( normal );\r\n            var sign;\r\n\r\n            if ( DdN > 0 ) {\r\n\r\n                if ( backfaceCulling ) return null;\r\n                sign = 1;\r\n\r\n            } else if ( DdN < 0 ) {\r\n\r\n                sign = - 1;\r\n                DdN = - DdN;\r\n\r\n            } else {\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n            diff.subVectors( this.origin, a );\r\n            var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n            // b1 < 0, no intersection\r\n            if ( DdQxE2 < 0 ) {\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n            var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n            // b2 < 0, no intersection\r\n            if ( DdE1xQ < 0 ) {\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n            // b1+b2 > 1, no intersection\r\n            if ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n            // Line intersects triangle, check if ray does.\r\n            var QdN = - sign * diff.dot( normal );\r\n\r\n            // t < 0, no intersection\r\n            if ( QdN < 0 ) {\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n            // Ray intersects triangle.\r\n            return this.at( QdN / DdN, optionalTarget );\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    applyMatrix4: function ( matrix4 ) {\r\n\r\n        this.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n        this.origin.applyMatrix4( matrix4 );\r\n        this.direction.sub( this.origin );\r\n        this.direction.normalize();\r\n\r\n        return this;\r\n    },\r\n\r\n    equals: function ( ray ) {\r\n\r\n        return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Ray().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n    this.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n    this.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n    constructor: THREE.Sphere,\r\n\r\n    set: function ( center, radius ) {\r\n\r\n        this.center.copy( center );\r\n        this.radius = radius;\r\n\r\n        return this;\r\n    },\r\n\r\n\r\n    setFromPoints: function () {\r\n\r\n        var box = new THREE.Box3();\r\n\r\n        return function ( points, optionalCenter )  {\r\n\r\n            var center = this.center;\r\n\r\n            if ( optionalCenter !== undefined ) {\r\n\r\n                center.copy( optionalCenter );\r\n\r\n            } else {\r\n\r\n                box.setFromPoints( points ).center( center );\r\n\r\n            }\r\n\r\n            var maxRadiusSq = 0;\r\n\r\n            for ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n                maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n            }\r\n\r\n            this.radius = Math.sqrt( maxRadiusSq );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    copy: function ( sphere ) {\r\n\r\n        this.center.copy( sphere.center );\r\n        this.radius = sphere.radius;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    empty: function () {\r\n\r\n        return ( this.radius <= 0 );\r\n\r\n    },\r\n\r\n    containsPoint: function ( point ) {\r\n\r\n        return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n    },\r\n\r\n    distanceToPoint: function ( point ) {\r\n\r\n        return ( point.distanceTo( this.center ) - this.radius );\r\n\r\n    },\r\n\r\n    intersectsSphere: function ( sphere ) {\r\n\r\n        var radiusSum = this.radius + sphere.radius;\r\n\r\n        return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n    },\r\n\r\n    clampPoint: function ( point, optionalTarget ) {\r\n\r\n        var deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        result.copy( point );\r\n\r\n        if ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n            result.sub( this.center ).normalize();\r\n            result.multiplyScalar( this.radius ).add( this.center );\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    },\r\n\r\n    getBoundingBox: function ( optionalTarget ) {\r\n\r\n        var box = optionalTarget || new THREE.Box3();\r\n\r\n        box.set( this.center, this.center );\r\n        box.expandByScalar( this.radius );\r\n\r\n        return box;\r\n\r\n    },\r\n\r\n    applyMatrix4: function ( matrix ) {\r\n\r\n        this.center.applyMatrix4( matrix );\r\n        this.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    translate: function ( offset ) {\r\n\r\n        this.center.add( offset );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( sphere ) {\r\n\r\n        return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Sphere().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n    this.planes = [\r\n\r\n        ( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n        ( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n        ( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n        ( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n        ( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n        ( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n    ];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n    constructor: THREE.Frustum,\r\n\r\n    set: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n        var planes = this.planes;\r\n\r\n        planes[0].copy( p0 );\r\n        planes[1].copy( p1 );\r\n        planes[2].copy( p2 );\r\n        planes[3].copy( p3 );\r\n        planes[4].copy( p4 );\r\n        planes[5].copy( p5 );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( frustum ) {\r\n\r\n        var planes = this.planes;\r\n\r\n        for( var i = 0; i < 6; i ++ ) {\r\n\r\n            planes[i].copy( frustum.planes[i] );\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromMatrix: function ( m ) {\r\n\r\n        var planes = this.planes;\r\n        var me = m.elements;\r\n        var me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];\r\n        var me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];\r\n        var me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];\r\n        var me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];\r\n\r\n        planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n        planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n        planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n        planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n        planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n        planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    intersectsObject: function () {\r\n\r\n        var sphere = new THREE.Sphere();\r\n\r\n        return function ( object ) {\r\n\r\n            var geometry = object.geometry;\r\n\r\n            if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n            sphere.copy( geometry.boundingSphere );\r\n            sphere.applyMatrix4( object.matrixWorld );\r\n\r\n            return this.intersectsSphere( sphere );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    intersectsSphere: function ( sphere ) {\r\n\r\n        var planes = this.planes;\r\n        var center = sphere.center;\r\n        var negRadius = -sphere.radius;\r\n\r\n        for ( var i = 0; i < 6; i ++ ) {\r\n\r\n            var distance = planes[ i ].distanceToPoint( center );\r\n\r\n            if ( distance < negRadius ) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    },\r\n\r\n    intersectsBox : function() {\r\n\r\n        var p1 = new THREE.Vector3(),\r\n            p2 = new THREE.Vector3();\r\n\r\n        return function( box ) {\r\n\r\n            var planes = this.planes;\r\n\r\n            for ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n                var plane = planes[i];\r\n\r\n                p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n                p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n                p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n                p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n                p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n                p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n                var d1 = plane.distanceToPoint( p1 );\r\n                var d2 = plane.distanceToPoint( p2 );\r\n\r\n                // if both outside plane, no intersection\r\n\r\n                if ( d1 < 0 && d2 < 0 ) {\r\n\r\n                    return false;\r\n\r\n                }\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n    }(),\r\n\r\n\r\n    containsPoint: function ( point ) {\r\n\r\n        var planes = this.planes;\r\n\r\n        for ( var i = 0; i < 6; i ++ ) {\r\n\r\n            if ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Frustum().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n    this.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n    this.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n    constructor: THREE.Plane,\r\n\r\n    set: function ( normal, constant ) {\r\n\r\n        this.normal.copy( normal );\r\n        this.constant = constant;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setComponents: function ( x, y, z, w ) {\r\n\r\n        this.normal.set( x, y, z );\r\n        this.constant = w;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n        this.normal.copy( normal );\r\n        this.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromCoplanarPoints: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n        var v2 = new THREE.Vector3();\r\n\r\n        return function ( a, b, c ) {\r\n\r\n            var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n            // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n            this.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n\r\n    copy: function ( plane ) {\r\n\r\n        this.normal.copy( plane.normal );\r\n        this.constant = plane.constant;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    normalize: function () {\r\n\r\n        // Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n        var inverseNormalLength = 1.0 / this.normal.length();\r\n        this.normal.multiplyScalar( inverseNormalLength );\r\n        this.constant *= inverseNormalLength;\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    negate: function () {\r\n\r\n        this.constant *= -1;\r\n        this.normal.negate();\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    distanceToPoint: function ( point ) {\r\n\r\n        return this.normal.dot( point ) + this.constant;\r\n\r\n    },\r\n\r\n    distanceToSphere: function ( sphere ) {\r\n\r\n        return this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n    },\r\n\r\n    projectPoint: function ( point, optionalTarget ) {\r\n\r\n        return this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n    },\r\n\r\n    orthoPoint: function ( point, optionalTarget ) {\r\n\r\n        var perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n    },\r\n\r\n    isIntersectionLine: function ( line ) {\r\n\r\n        // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n        var startSign = this.distanceToPoint( line.start );\r\n        var endSign = this.distanceToPoint( line.end );\r\n\r\n        return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n    },\r\n\r\n    intersectLine: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( line, optionalTarget ) {\r\n\r\n            var result = optionalTarget || new THREE.Vector3();\r\n\r\n            var direction = line.delta( v1 );\r\n\r\n            var denominator = this.normal.dot( direction );\r\n\r\n            if ( denominator == 0 ) {\r\n\r\n                // line is coplanar, return origin\r\n                if( this.distanceToPoint( line.start ) == 0 ) {\r\n\r\n                    return result.copy( line.start );\r\n\r\n                }\r\n\r\n                // Unsure if this is the correct method to handle this case.\r\n                return undefined;\r\n\r\n            }\r\n\r\n            var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n            if( t < 0 || t > 1 ) {\r\n\r\n                return undefined;\r\n\r\n            }\r\n\r\n            return result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n\r\n    coplanarPoint: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n    },\r\n\r\n    applyMatrix4: function() {\r\n\r\n        var v1 = new THREE.Vector3();\r\n        var v2 = new THREE.Vector3();\r\n\r\n        return function ( matrix, optionalNormalMatrix ) {\r\n\r\n            // compute new normal based on theory here:\r\n            // http://www.songho.ca/opengl/gl_normaltransform.html\r\n            optionalNormalMatrix = optionalNormalMatrix || new THREE.Matrix3().getNormalMatrix( matrix );\r\n            var newNormal = v1.copy( this.normal ).applyMatrix3( optionalNormalMatrix );\r\n\r\n            var newCoplanarPoint = this.coplanarPoint( v2 );\r\n            newCoplanarPoint.applyMatrix4( matrix );\r\n\r\n            this.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    translate: function ( offset ) {\r\n\r\n        this.constant = this.constant - offset.dot( this.normal );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    equals: function ( plane ) {\r\n\r\n        return plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Plane().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n    PI2: Math.PI * 2,\r\n\r\n    generateUUID: function () {\r\n\r\n        // http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n        var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n        var uuid = new Array(36);\r\n        var rnd = 0, r;\r\n\r\n        return function () {\r\n\r\n            for ( var i = 0; i < 36; i ++ ) {\r\n\r\n                if ( i == 8 || i == 13 || i == 18 || i == 23 ) {\r\n\r\n                    uuid[ i ] = '-';\r\n\r\n                } else if ( i == 14 ) {\r\n\r\n                    uuid[ i ] = '4';\r\n\r\n                } else {\r\n\r\n                    if (rnd <= 0x02) rnd = 0x2000000 + (Math.random()*0x1000000)|0;\r\n                    r = rnd & 0xf;\r\n                    rnd = rnd >> 4;\r\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n\r\n                }\r\n            }\r\n\r\n            return uuid.join('');\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    // Clamp value to range <a, b>\r\n\r\n    clamp: function ( x, a, b ) {\r\n\r\n        return ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n    },\r\n\r\n    // Clamp value to range <a, inf)\r\n\r\n    clampBottom: function ( x, a ) {\r\n\r\n        return x < a ? a : x;\r\n\r\n    },\r\n\r\n    // Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n    mapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n        return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n    },\r\n\r\n    // http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n    smoothstep: function ( x, min, max ) {\r\n\r\n        if ( x <= min ) return 0;\r\n        if ( x >= max ) return 1;\r\n\r\n        x = ( x - min )/( max - min );\r\n\r\n        return x*x*(3 - 2*x);\r\n\r\n    },\r\n\r\n    smootherstep: function ( x, min, max ) {\r\n\r\n        if ( x <= min ) return 0;\r\n        if ( x >= max ) return 1;\r\n\r\n        x = ( x - min )/( max - min );\r\n\r\n        return x*x*x*(x*(x*6 - 15) + 10);\r\n\r\n    },\r\n\r\n    // Random float from <0, 1> with 16 bits of randomness\r\n    // (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n    random16: function () {\r\n\r\n        return ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n    },\r\n\r\n    // Random integer from <low, high> interval\r\n\r\n    randInt: function ( low, high ) {\r\n\r\n        return low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n    },\r\n\r\n    // Random float from <low, high> interval\r\n\r\n    randFloat: function ( low, high ) {\r\n\r\n        return low + Math.random() * ( high - low );\r\n\r\n    },\r\n\r\n    // Random float from <-range/2, range/2> interval\r\n\r\n    randFloatSpread: function ( range ) {\r\n\r\n        return range * ( 0.5 - Math.random() );\r\n\r\n    },\r\n\r\n    sign: function ( x ) {\r\n\r\n        return ( x < 0 ) ? -1 : ( ( x > 0 ) ? 1 : 0 );\r\n\r\n    },\r\n\r\n    degToRad: function() {\r\n\r\n        var degreeToRadiansFactor = Math.PI / 180;\r\n\r\n        return function ( degrees ) {\r\n\r\n            return degrees * degreeToRadiansFactor;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    radToDeg: function() {\r\n\r\n        var radianToDegreesFactor = 180 / Math.PI;\r\n\r\n        return function ( radians ) {\r\n\r\n            return radians * radianToDegreesFactor;\r\n\r\n        };\r\n\r\n    }()\r\n\r\n};\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n    this.points = points;\r\n\r\n    var c = [], v3 = { x: 0, y: 0, z: 0 },\r\n        point, intPoint, weight, w2, w3,\r\n        pa, pb, pc, pd;\r\n\r\n    this.initFromArray = function( a ) {\r\n\r\n        this.points = [];\r\n\r\n        for ( var i = 0; i < a.length; i++ ) {\r\n\r\n            this.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.getPoint = function ( k ) {\r\n\r\n        point = ( this.points.length - 1 ) * k;\r\n        intPoint = Math.floor( point );\r\n        weight = point - intPoint;\r\n\r\n        c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n        c[ 1 ] = intPoint;\r\n        c[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n        c[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n        pa = this.points[ c[ 0 ] ];\r\n        pb = this.points[ c[ 1 ] ];\r\n        pc = this.points[ c[ 2 ] ];\r\n        pd = this.points[ c[ 3 ] ];\r\n\r\n        w2 = weight * weight;\r\n        w3 = weight * w2;\r\n\r\n        v3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n        v3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n        v3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n        return v3;\r\n\r\n    };\r\n\r\n    this.getControlPointsArray = function () {\r\n\r\n        var i, p, l = this.points.length,\r\n            coords = [];\r\n\r\n        for ( i = 0; i < l; i ++ ) {\r\n\r\n            p = this.points[ i ];\r\n            coords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n        }\r\n\r\n        return coords;\r\n\r\n    };\r\n\r\n    // approximate length by summing linear segments\r\n\r\n    this.getLength = function ( nSubDivisions ) {\r\n\r\n        var i, index, nSamples, position,\r\n            point = 0, intPoint = 0, oldIntPoint = 0,\r\n            oldPosition = new THREE.Vector3(),\r\n            tmpVec = new THREE.Vector3(),\r\n            chunkLengths = [],\r\n            totalLength = 0;\r\n\r\n        // first point has 0 length\r\n\r\n        chunkLengths[ 0 ] = 0;\r\n\r\n        if ( !nSubDivisions ) nSubDivisions = 100;\r\n\r\n        nSamples = this.points.length * nSubDivisions;\r\n\r\n        oldPosition.copy( this.points[ 0 ] );\r\n\r\n        for ( i = 1; i < nSamples; i ++ ) {\r\n\r\n            index = i / nSamples;\r\n\r\n            position = this.getPoint( index );\r\n            tmpVec.copy( position );\r\n\r\n            totalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n            oldPosition.copy( position );\r\n\r\n            point = ( this.points.length - 1 ) * index;\r\n            intPoint = Math.floor( point );\r\n\r\n            if ( intPoint != oldIntPoint ) {\r\n\r\n                chunkLengths[ intPoint ] = totalLength;\r\n                oldIntPoint = intPoint;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // last point ends with total length\r\n\r\n        chunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n        return { chunks: chunkLengths, total: totalLength };\r\n\r\n    };\r\n\r\n    this.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n        var i, j,\r\n            index, indexCurrent, indexNext,\r\n            linearDistance, realDistance,\r\n            sampling, position,\r\n            newpoints = [],\r\n            tmpVec = new THREE.Vector3(),\r\n            sl = this.getLength();\r\n\r\n        newpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n        for ( i = 1; i < this.points.length; i++ ) {\r\n\r\n            //tmpVec.copy( this.points[ i - 1 ] );\r\n            //linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n            realDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n            sampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n            indexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n            indexNext = i / ( this.points.length - 1 );\r\n\r\n            for ( j = 1; j < sampling - 1; j++ ) {\r\n\r\n                index = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n                position = this.getPoint( index );\r\n                newpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n            }\r\n\r\n            newpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n        }\r\n\r\n        this.points = newpoints;\r\n\r\n    };\r\n\r\n    // Catmull-Rom\r\n\r\n    function interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n        var v0 = ( p2 - p0 ) * 0.5,\r\n            v1 = ( p3 - p1 ) * 0.5;\r\n\r\n        return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n    this.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n    this.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n    this.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function() {\r\n\r\n    var v0 = new THREE.Vector3();\r\n\r\n    return function ( a, b, c, optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n\r\n        result.subVectors( c, b );\r\n        v0.subVectors( a, b );\r\n        result.cross( v0 );\r\n\r\n        var resultLengthSq = result.lengthSq();\r\n        if( resultLengthSq > 0 ) {\r\n\r\n            return result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n        }\r\n\r\n        return result.set( 0, 0, 0 );\r\n\r\n    };\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycoordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function() {\r\n\r\n    var v0 = new THREE.Vector3();\r\n    var v1 = new THREE.Vector3();\r\n    var v2 = new THREE.Vector3();\r\n\r\n    return function ( point, a, b, c, optionalTarget ) {\r\n\r\n        v0.subVectors( c, a );\r\n        v1.subVectors( b, a );\r\n        v2.subVectors( point, a );\r\n\r\n        var dot00 = v0.dot( v0 );\r\n        var dot01 = v0.dot( v1 );\r\n        var dot02 = v0.dot( v2 );\r\n        var dot11 = v1.dot( v1 );\r\n        var dot12 = v1.dot( v2 );\r\n\r\n        var denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n\r\n        // colinear or singular triangle\r\n        if( denom == 0 ) {\r\n            // arbitrary location outside of triangle?\r\n            // not sure if this is the best idea, maybe should be returning undefined\r\n            return result.set( -2, -1, -1 );\r\n        }\r\n\r\n        var invDenom = 1 / denom;\r\n        var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n        var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n        // barycoordinates must always sum to 1\r\n        return result.set( 1 - u - v, v, u );\r\n\r\n    };\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function() {\r\n\r\n    var v1 = new THREE.Vector3();\r\n\r\n    return function ( point, a, b, c ) {\r\n\r\n        var result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n        return ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n    };\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n    constructor: THREE.Triangle,\r\n\r\n    set: function ( a, b, c ) {\r\n\r\n        this.a.copy( a );\r\n        this.b.copy( b );\r\n        this.c.copy( c );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n        this.a.copy( points[i0] );\r\n        this.b.copy( points[i1] );\r\n        this.c.copy( points[i2] );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    copy: function ( triangle ) {\r\n\r\n        this.a.copy( triangle.a );\r\n        this.b.copy( triangle.b );\r\n        this.c.copy( triangle.c );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    area: function() {\r\n\r\n        var v0 = new THREE.Vector3();\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function () {\r\n\r\n            v0.subVectors( this.c, this.b );\r\n            v1.subVectors( this.a, this.b );\r\n\r\n            return v0.cross( v1 ).length() * 0.5;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    midpoint: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Vector3();\r\n        return result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n    },\r\n\r\n    normal: function ( optionalTarget ) {\r\n\r\n        return THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n    },\r\n\r\n    plane: function ( optionalTarget ) {\r\n\r\n        var result = optionalTarget || new THREE.Plane();\r\n\r\n        return result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n    },\r\n\r\n    barycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n        return THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n    },\r\n\r\n    containsPoint: function ( point ) {\r\n\r\n        return THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n    },\r\n\r\n    equals: function ( triangle ) {\r\n\r\n        return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        return new THREE.Triangle().copy( this );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Vertex = function ( v ) {\r\n\r\n    console.warn( 'THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.')\r\n    return v;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.UV = function ( u, v ) {\r\n\r\n    console.warn( 'THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.')\r\n    return new THREE.Vector2( u, v );\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n    this.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n    this.startTime = 0;\r\n    this.oldTime = 0;\r\n    this.elapsedTime = 0;\r\n\r\n    this.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n    constructor: THREE.Clock,\r\n\r\n    start: function () {\r\n\r\n        this.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n            ? self.performance.now()\r\n            : Date.now();\r\n\r\n        this.oldTime = this.startTime;\r\n        this.running = true;\r\n    },\r\n\r\n    stop: function () {\r\n\r\n        this.getElapsedTime();\r\n        this.running = false;\r\n\r\n    },\r\n\r\n    getElapsedTime: function () {\r\n\r\n        this.getDelta();\r\n        return this.elapsedTime;\r\n\r\n    },\r\n\r\n    getDelta: function () {\r\n\r\n        var diff = 0;\r\n\r\n        if ( this.autoStart && ! this.running ) {\r\n\r\n            this.start();\r\n\r\n        }\r\n\r\n        if ( this.running ) {\r\n\r\n            var newTime = self.performance !== undefined && self.performance.now !== undefined\r\n                ? self.performance.now()\r\n                : Date.now();\r\n\r\n            diff = 0.001 * ( newTime - this.oldTime );\r\n            this.oldTime = newTime;\r\n\r\n            this.elapsedTime += diff;\r\n\r\n        }\r\n\r\n        return diff;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {}\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n    constructor: THREE.EventDispatcher,\r\n\r\n    apply: function ( object ) {\r\n\r\n        object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n        object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n        object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n        object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n    },\r\n\r\n    addEventListener: function ( type, listener ) {\r\n\r\n        if ( this._listeners === undefined ) this._listeners = {};\r\n\r\n        var listeners = this._listeners;\r\n\r\n        if ( listeners[ type ] === undefined ) {\r\n\r\n            listeners[ type ] = [];\r\n\r\n        }\r\n\r\n        if ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n            listeners[ type ].push( listener );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    hasEventListener: function ( type, listener ) {\r\n\r\n        if ( this._listeners === undefined ) return false;\r\n\r\n        var listeners = this._listeners;\r\n\r\n        if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    },\r\n\r\n    removeEventListener: function ( type, listener ) {\r\n\r\n        if ( this._listeners === undefined ) return;\r\n\r\n        var listeners = this._listeners;\r\n        var index = listeners[ type ].indexOf( listener );\r\n\r\n        if ( index !== - 1 ) {\r\n\r\n            listeners[ type ].splice( index, 1 );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    dispatchEvent: function ( event ) {\r\n\r\n        if ( this._listeners === undefined ) return;\r\n\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[ event.type ];\r\n\r\n        if ( listenerArray !== undefined ) {\r\n\r\n            event.target = this;\r\n\r\n            for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {\r\n\r\n                listenerArray[ i ].call( this, event );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n    THREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n        this.ray = new THREE.Ray( origin, direction );\r\n        // direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n        this.near = near || 0;\r\n        this.far = far || Infinity;\r\n\r\n    };\r\n\r\n    var sphere = new THREE.Sphere();\r\n    var localRay = new THREE.Ray();\r\n    var facePlane = new THREE.Plane();\r\n    var intersectPoint = new THREE.Vector3();\r\n    var matrixPosition = new THREE.Vector3();\r\n\r\n    var inverseMatrix = new THREE.Matrix4();\r\n\r\n    var descSort = function ( a, b ) {\r\n\r\n        return a.distance - b.distance;\r\n\r\n    };\r\n\r\n    var vA = new THREE.Vector3();\r\n    var vB = new THREE.Vector3();\r\n    var vC = new THREE.Vector3();\r\n\r\n    var intersectObject = function ( object, raycaster, intersects ) {\r\n\r\n        if ( object instanceof THREE.Particle ) {\r\n\r\n            matrixPosition.getPositionFromMatrix( object.matrixWorld );\r\n            var distance = raycaster.ray.distanceToPoint( matrixPosition );\r\n\r\n            if ( distance > object.scale.x ) {\r\n\r\n                return intersects;\r\n\r\n            }\r\n\r\n            intersects.push( {\r\n\r\n                distance: distance,\r\n                point: object.position,\r\n                face: null,\r\n                object: object\r\n\r\n            } );\r\n\r\n        } else if ( object instanceof THREE.LOD ) {\r\n\r\n            matrixPosition.getPositionFromMatrix( object.matrixWorld );\r\n            var distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n            intersectObject( object.getObjectForDistance( distance ), raycaster, intersects );\r\n\r\n        } else if ( object instanceof THREE.Mesh ) {\r\n\r\n            var geometry = object.geometry;\r\n\r\n            // Checking boundingSphere distance to ray\r\n\r\n            if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n            sphere.copy( geometry.boundingSphere );\r\n            sphere.applyMatrix4( object.matrixWorld );\r\n\r\n            if ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n                return intersects;\r\n\r\n            }\r\n\r\n            // Check boundingBox before continuing\r\n\r\n            inverseMatrix.getInverse( object.matrixWorld );\r\n            localRay.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n            if ( geometry.boundingBox !== null ) {\r\n\r\n                if ( localRay.isIntersectionBox( geometry.boundingBox ) === false )  {\r\n\r\n                    return intersects;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n                var material = object.material;\r\n\r\n                if ( material === undefined ) return intersects;\r\n                if ( geometry.dynamic === false ) return intersects;\r\n\r\n                var a, b, c;\r\n                var precision = raycaster.precision;\r\n\r\n                if ( geometry.attributes.index !== undefined ) {\r\n\r\n                    var offsets = geometry.offsets;\r\n                    var indices = geometry.attributes.index.array;\r\n                    var positions = geometry.attributes.position.array;\r\n                    var offLength = geometry.offsets.length;\r\n\r\n                    var fl = geometry.attributes.index.array.length / 3;\r\n\r\n                    for ( var oi = 0; oi < offLength; ++oi ) {\r\n\r\n                        var start = offsets[ oi ].start;\r\n                        var count = offsets[ oi ].count;\r\n                        var index = offsets[ oi ].index;\r\n\r\n                        for ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n                            a = index + indices[ i ];\r\n                            b = index + indices[ i + 1 ];\r\n                            c = index + indices[ i + 2 ];\r\n\r\n                            vA.set(\r\n                                positions[ a * 3 ],\r\n                                positions[ a * 3 + 1 ],\r\n                                positions[ a * 3 + 2 ]\r\n                            );\r\n                            vB.set(\r\n                                positions[ b * 3 ],\r\n                                positions[ b * 3 + 1 ],\r\n                                positions[ b * 3 + 2 ]\r\n                            );\r\n                            vC.set(\r\n                                positions[ c * 3 ],\r\n                                positions[ c * 3 + 1 ],\r\n                                positions[ c * 3 + 2 ]\r\n                            );\r\n\r\n                            var intersectionPoint = localRay.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n                            if ( intersectionPoint === null ) continue;\r\n\r\n                            intersectionPoint.applyMatrix4( object.matrixWorld );\r\n\r\n                            var distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n                            if ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n                            intersects.push( {\r\n\r\n                                distance: distance,\r\n                                point: intersectionPoint,\r\n                                face: null,\r\n                                faceIndex: null,\r\n                                object: object\r\n\r\n                            } );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    var offsets = geometry.offsets;\r\n                    var positions = geometry.attributes.position.array;\r\n                    var offLength = geometry.offsets.length;\r\n\r\n                    var fl = geometry.attributes.position.array.length;\r\n\r\n                    for ( var i = 0; i < fl; i += 3 ) {\r\n\r\n                        a = i;\r\n                        b = i + 1;\r\n                        c = i + 2;\r\n\r\n                        vA.set(\r\n                            positions[ a * 3 ],\r\n                            positions[ a * 3 + 1 ],\r\n                            positions[ a * 3 + 2 ]\r\n                        );\r\n                        vB.set(\r\n                            positions[ b * 3 ],\r\n                            positions[ b * 3 + 1 ],\r\n                            positions[ b * 3 + 2 ]\r\n                        );\r\n                        vC.set(\r\n                            positions[ c * 3 ],\r\n                            positions[ c * 3 + 1 ],\r\n                            positions[ c * 3 + 2 ]\r\n                        );\r\n\r\n                        var intersectionPoint = localRay.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n                        if ( intersectionPoint === null ) continue;\r\n\r\n                        intersectionPoint.applyMatrix4( object.matrixWorld );\r\n\r\n                        var distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n                        if ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n                        intersects.push( {\r\n\r\n                            distance: distance,\r\n                            point: intersectionPoint,\r\n                            face: null,\r\n                            faceIndex: null,\r\n                            object: object\r\n\r\n                        } );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n                var isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;\r\n                var objectMaterials = isFaceMaterial === true ? object.material.materials : null;\r\n\r\n                var a, b, c, d;\r\n                var precision = raycaster.precision;\r\n\r\n                var vertices = geometry.vertices;\r\n\r\n                for ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n                    var face = geometry.faces[ f ];\r\n\r\n                    var material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : object.material;\r\n\r\n                    if ( material === undefined ) continue;\r\n\r\n                    a = vertices[ face.a ];\r\n                    b = vertices[ face.b ];\r\n                    c = vertices[ face.c ];\r\n\r\n                    var intersectionPoint = localRay.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\r\n\r\n                    if ( intersectionPoint === null ) continue;\r\n\r\n                    intersectionPoint.applyMatrix4( object.matrixWorld );\r\n\r\n                    var distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n                    if ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n                    intersects.push( {\r\n\r\n                        distance: distance,\r\n                        point: intersectionPoint,\r\n                        face: face,\r\n                        faceIndex: f,\r\n                        object: object\r\n\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else if ( object instanceof THREE.Line ) {\r\n\r\n            var precision = raycaster.linePrecision;\r\n            var precisionSq = precision * precision;\r\n\r\n            var geometry = object.geometry;\r\n\r\n            if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n            // Checking boundingSphere distance to ray\r\n\r\n            sphere.copy( geometry.boundingSphere );\r\n            sphere.applyMatrix4( object.matrixWorld );\r\n\r\n            if ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n                return intersects;\r\n\r\n            }\r\n\r\n            inverseMatrix.getInverse( object.matrixWorld );\r\n            localRay.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n            /* if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t} else */ if ( geometry instanceof THREE.Geometry ) {\r\n\r\n                var vertices = geometry.vertices;\r\n                var nbVertices = vertices.length;\r\n                var interSegment = new THREE.Vector3();\r\n                var interRay = new THREE.Vector3();\r\n                var step = object.type === THREE.LineStrip ? 1 : 2;\r\n\r\n                for ( var i = 0; i < nbVertices - 1; i = i + step ) {\r\n\r\n                    var distSq = localRay.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n                    if ( distSq > precisionSq ) continue;\r\n\r\n                    var distance = localRay.origin.distanceTo( interRay );\r\n\r\n                    if ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n                    intersects.push( {\r\n\r\n                        distance: distance,\r\n                        // What do we want? intersection point on the ray or on the segment??\r\n                        // point: raycaster.ray.at( distance ),\r\n                        point: interSegment.clone().applyMatrix4( object.matrixWorld ),\r\n                        face: null,\r\n                        faceIndex: null,\r\n                        object: object\r\n\r\n                    } );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var intersectDescendants = function ( object, raycaster, intersects ) {\r\n\r\n        var descendants = object.getDescendants();\r\n\r\n        for ( var i = 0, l = descendants.length; i < l; i ++ ) {\r\n\r\n            intersectObject( descendants[ i ], raycaster, intersects );\r\n\r\n        }\r\n    };\r\n\r\n    //\r\n\r\n    THREE.Raycaster.prototype.precision = 0.0001;\r\n    THREE.Raycaster.prototype.linePrecision = 1;\r\n\r\n    THREE.Raycaster.prototype.set = function ( origin, direction ) {\r\n\r\n        this.ray.set( origin, direction );\r\n        // direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n    };\r\n\r\n    THREE.Raycaster.prototype.intersectObject = function ( object, recursive ) {\r\n\r\n        var intersects = [];\r\n\r\n        if ( recursive === true ) {\r\n\r\n            intersectDescendants( object, this, intersects );\r\n\r\n        }\r\n\r\n        intersectObject( object, this, intersects );\r\n\r\n        intersects.sort( descSort );\r\n\r\n        return intersects;\r\n\r\n    };\r\n\r\n    THREE.Raycaster.prototype.intersectObjects = function ( objects, recursive ) {\r\n\r\n        var intersects = [];\r\n\r\n        for ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n            intersectObject( objects[ i ], this, intersects );\r\n\r\n            if ( recursive === true ) {\r\n\r\n                intersectDescendants( objects[ i ], this, intersects );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        intersects.sort( descSort );\r\n\r\n        return intersects;\r\n\r\n    };\r\n\r\n}( THREE ) );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n    this.id = THREE.Object3DIdCount ++;\r\n    this.uuid = THREE.Math.generateUUID();\r\n\r\n    this.name = '';\r\n\r\n    this.parent = undefined;\r\n    this.children = [];\r\n\r\n    this.up = new THREE.Vector3( 0, 1, 0 );\r\n\r\n    this.position = new THREE.Vector3();\r\n    this.rotation = new THREE.Euler();\r\n    this.quaternion = new THREE.Quaternion();\r\n    this.scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n    // keep rotation and quaternion in sync\r\n\r\n    this.rotation._quaternion = this.quaternion;\r\n    this.quaternion._euler = this.rotation;\r\n\r\n    this.renderDepth = null;\r\n\r\n    this.rotationAutoUpdate = true;\r\n\r\n    this.matrix = new THREE.Matrix4();\r\n    this.matrixWorld = new THREE.Matrix4();\r\n\r\n    this.matrixAutoUpdate = true;\r\n    this.matrixWorldNeedsUpdate = true;\r\n\r\n    this.visible = true;\r\n\r\n    this.castShadow = false;\r\n    this.receiveShadow = false;\r\n\r\n    this.frustumCulled = true;\r\n\r\n    this.userData = {};\r\n\r\n};\r\n\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n    constructor: THREE.Object3D,\r\n\r\n    get eulerOrder () {\r\n\r\n        console.warn( 'DEPRECATED: Object3D\\'s .eulerOrder has been moved to Object3D\\'s .rotation.order.' );\r\n\r\n        return this.rotation.order;\r\n\r\n    },\r\n\r\n    set eulerOrder ( value ) {\r\n\r\n        console.warn( 'DEPRECATED: Object3D\\'s .eulerOrder has been moved to Object3D\\'s .rotation.order.' );\r\n\r\n        this.rotation.order = value;\r\n\r\n    },\r\n\r\n    get useQuaternion () {\r\n\r\n        console.warn( 'DEPRECATED: Object3D\\'s .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n    },\r\n\r\n    set useQuaternion ( value ) {\r\n\r\n        console.warn( 'DEPRECATED: Object3D\\'s .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n    },\r\n\r\n    applyMatrix: function () {\r\n\r\n        var m1 = new THREE.Matrix4();\r\n\r\n        return function ( matrix ) {\r\n\r\n            this.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n            this.position.getPositionFromMatrix( this.matrix );\r\n\r\n            this.scale.getScaleFromMatrix( this.matrix );\r\n\r\n            m1.extractRotation( this.matrix );\r\n\r\n            this.quaternion.setFromRotationMatrix( m1 );\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    setRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n        // assumes axis is normalized\r\n\r\n        this.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n    },\r\n\r\n    setRotationFromEuler: function ( euler ) {\r\n\r\n        this.quaternion.setFromEuler( euler, true );\r\n\r\n    },\r\n\r\n    setRotationFromMatrix: function ( m ) {\r\n\r\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n        this.quaternion.setFromRotationMatrix( m );\r\n\r\n    },\r\n\r\n    setRotationFromQuaternion: function ( q ) {\r\n\r\n        // assumes q is normalized\r\n\r\n        this.quaternion.copy( q );\r\n\r\n    },\r\n\r\n    rotateOnAxis: function() {\r\n\r\n        // rotate object on axis in object space\r\n        // axis is assumed to be normalized\r\n\r\n        var q1 = new THREE.Quaternion();\r\n\r\n        return function ( axis, angle ) {\r\n\r\n            q1.setFromAxisAngle( axis, angle );\r\n\r\n            this.quaternion.multiply( q1 );\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    rotateX: function () {\r\n\r\n        var v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n        return function ( angle ) {\r\n\r\n            return this.rotateOnAxis( v1, angle );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    rotateY: function () {\r\n\r\n        var v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n        return function ( angle ) {\r\n\r\n            return this.rotateOnAxis( v1, angle );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    rotateZ: function () {\r\n\r\n        var v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n        return function ( angle ) {\r\n\r\n            return this.rotateOnAxis( v1, angle );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    translateOnAxis: function () {\r\n\r\n        // translate object by distance along axis in object space\r\n        // axis is assumed to be normalized\r\n\r\n        var v1 = new THREE.Vector3();\r\n\r\n        return function ( axis, distance ) {\r\n\r\n            v1.copy( axis );\r\n\r\n            v1.applyQuaternion( this.quaternion );\r\n\r\n            this.position.add( v1.multiplyScalar( distance ) );\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    translate: function ( distance, axis ) {\r\n\r\n        console.warn( 'DEPRECATED: Object3D\\'s .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.' );\r\n        return this.translateOnAxis( axis, distance );\r\n\r\n    },\r\n\r\n    translateX: function () {\r\n\r\n        var v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n        return function ( distance ) {\r\n\r\n            return this.translateOnAxis( v1, distance );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    translateY: function () {\r\n\r\n        var v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n        return function ( distance ) {\r\n\r\n            return this.translateOnAxis( v1, distance );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    translateZ: function () {\r\n\r\n        var v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n        return function ( distance ) {\r\n\r\n            return this.translateOnAxis( v1, distance );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    localToWorld: function ( vector ) {\r\n\r\n        return vector.applyMatrix4( this.matrixWorld );\r\n\r\n    },\r\n\r\n    worldToLocal: function () {\r\n\r\n        var m1 = new THREE.Matrix4();\r\n\r\n        return function ( vector ) {\r\n\r\n            return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    lookAt: function () {\r\n\r\n        // This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n        var m1 = new THREE.Matrix4();\r\n\r\n        return function ( vector ) {\r\n\r\n            m1.lookAt( vector, this.position, this.up );\r\n\r\n            this.quaternion.setFromRotationMatrix( m1 );\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    add: function ( object ) {\r\n\r\n        if ( object === this ) {\r\n\r\n            console.warn( 'THREE.Object3D.add: An object can\\'t be added as a child of itself.' );\r\n            return;\r\n\r\n        }\r\n\r\n        if ( object instanceof THREE.Object3D ) {\r\n\r\n            if ( object.parent !== undefined ) {\r\n\r\n                object.parent.remove( object );\r\n\r\n            }\r\n\r\n            object.parent = this;\r\n            object.dispatchEvent( { type: 'added' } );\r\n\r\n            this.children.push( object );\r\n\r\n            // add to scene\r\n\r\n            var scene = this;\r\n\r\n            while ( scene.parent !== undefined ) {\r\n\r\n                scene = scene.parent;\r\n\r\n            }\r\n\r\n            if ( scene !== undefined && scene instanceof THREE.Scene )  {\r\n\r\n                scene.__addObject( object );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    remove: function ( object ) {\r\n\r\n        var index = this.children.indexOf( object );\r\n\r\n        if ( index !== - 1 ) {\r\n\r\n            object.parent = undefined;\r\n            object.dispatchEvent( { type: 'removed' } );\r\n\r\n            this.children.splice( index, 1 );\r\n\r\n            // remove from scene\r\n\r\n            var scene = this;\r\n\r\n            while ( scene.parent !== undefined ) {\r\n\r\n                scene = scene.parent;\r\n\r\n            }\r\n\r\n            if ( scene !== undefined && scene instanceof THREE.Scene ) {\r\n\r\n                scene.__removeObject( object );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    traverse: function ( callback ) {\r\n\r\n        callback( this );\r\n\r\n        for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n            this.children[ i ].traverse( callback );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    getObjectById: function ( id, recursive ) {\r\n\r\n        for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n            var child = this.children[ i ];\r\n\r\n            if ( child.id === id ) {\r\n\r\n                return child;\r\n\r\n            }\r\n\r\n            if ( recursive === true ) {\r\n\r\n                child = child.getObjectById( id, recursive );\r\n\r\n                if ( child !== undefined ) {\r\n\r\n                    return child;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    getObjectByName: function ( name, recursive ) {\r\n\r\n        for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n            var child = this.children[ i ];\r\n\r\n            if ( child.name === name ) {\r\n\r\n                return child;\r\n\r\n            }\r\n\r\n            if ( recursive === true ) {\r\n\r\n                child = child.getObjectByName( name, recursive );\r\n\r\n                if ( child !== undefined ) {\r\n\r\n                    return child;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    getChildByName: function ( name, recursive ) {\r\n\r\n        console.warn( 'DEPRECATED: Object3D\\'s .getChildByName() has been renamed to .getObjectByName().' );\r\n        return this.getObjectByName( name, recursive );\r\n\r\n    },\r\n\r\n    getDescendants: function ( array ) {\r\n\r\n        if ( array === undefined ) array = [];\r\n\r\n        Array.prototype.push.apply( array, this.children );\r\n\r\n        for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n            this.children[ i ].getDescendants( array );\r\n\r\n        }\r\n\r\n        return array;\r\n\r\n    },\r\n\r\n    updateMatrix: function () {\r\n\r\n        this.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n        this.matrixWorldNeedsUpdate = true;\r\n\r\n    },\r\n\r\n    updateMatrixWorld: function ( force ) {\r\n\r\n        if ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n        if ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n            if ( this.parent === undefined ) {\r\n\r\n                this.matrixWorld.copy( this.matrix );\r\n\r\n            } else {\r\n\r\n                this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n            }\r\n\r\n            this.matrixWorldNeedsUpdate = false;\r\n\r\n            force = true;\r\n\r\n        }\r\n\r\n        // update children\r\n\r\n        for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n            this.children[ i ].updateMatrixWorld( force );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    clone: function ( object, recursive ) {\r\n\r\n        if ( object === undefined ) object = new THREE.Object3D();\r\n        if ( recursive === undefined ) recursive = true;\r\n\r\n        object.name = this.name;\r\n\r\n        object.up.copy( this.up );\r\n\r\n        object.position.copy( this.position );\r\n        object.quaternion.copy( this.quaternion );\r\n        object.scale.copy( this.scale );\r\n\r\n        object.renderDepth = this.renderDepth;\r\n\r\n        object.rotationAutoUpdate = this.rotationAutoUpdate;\r\n\r\n        object.matrix.copy( this.matrix );\r\n        object.matrixWorld.copy( this.matrixWorld );\r\n\r\n        object.matrixAutoUpdate = this.matrixAutoUpdate;\r\n        object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\r\n\r\n        object.visible = this.visible;\r\n\r\n        object.castShadow = this.castShadow;\r\n        object.receiveShadow = this.receiveShadow;\r\n\r\n        object.frustumCulled = this.frustumCulled;\r\n\r\n        object.userData = JSON.parse( JSON.stringify( this.userData ) );\r\n\r\n        if ( recursive === true ) {\r\n\r\n            for ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n                var child = this.children[ i ];\r\n                object.add( child.clone() );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author julianwa / https://github.com/julianwa\r\n */\r\n\r\nTHREE.Projector = function () {\r\n\r\n    var _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\r\n        _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\r\n        _face, _face3Count, _face3Pool = [], _face3PoolLength = 0,\r\n        _line, _lineCount, _linePool = [], _linePoolLength = 0,\r\n        _particle, _particleCount, _particlePool = [], _particlePoolLength = 0,\r\n\r\n        _renderData = { objects: [], sprites: [], lights: [], elements: [] },\r\n\r\n        _vector3 = new THREE.Vector3(),\r\n        _vector4 = new THREE.Vector4(),\r\n\r\n        _clipBox = new THREE.Box3( new THREE.Vector3( -1, -1, -1 ), new THREE.Vector3( 1, 1, 1 ) ),\r\n        _boundingBox = new THREE.Box3(),\r\n        _points3 = new Array( 3 ),\r\n        _points4 = new Array( 4 ),\r\n\r\n        _viewMatrix = new THREE.Matrix4(),\r\n        _viewProjectionMatrix = new THREE.Matrix4(),\r\n\r\n        _modelMatrix,\r\n        _modelViewProjectionMatrix = new THREE.Matrix4(),\r\n\r\n        _normalMatrix = new THREE.Matrix3(),\r\n        _normalViewMatrix = new THREE.Matrix3(),\r\n\r\n        _centroid = new THREE.Vector3(),\r\n\r\n        _frustum = new THREE.Frustum(),\r\n\r\n        _clippedVertex1PositionScreen = new THREE.Vector4(),\r\n        _clippedVertex2PositionScreen = new THREE.Vector4();\r\n\r\n    this.projectVector = function ( vector, camera ) {\r\n\r\n        camera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n        _viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\r\n        return vector.applyProjection( _viewProjectionMatrix );\r\n\r\n    };\r\n\r\n    this.unprojectVector = function ( vector, camera ) {\r\n\r\n        camera.projectionMatrixInverse.getInverse( camera.projectionMatrix );\r\n\r\n        _viewProjectionMatrix.multiplyMatrices( camera.matrixWorld, camera.projectionMatrixInverse );\r\n\r\n        return vector.applyProjection( _viewProjectionMatrix );\r\n\r\n    };\r\n\r\n    this.pickingRay = function ( vector, camera ) {\r\n\r\n        // set two vectors with opposing z values\r\n        vector.z = -1.0;\r\n        var end = new THREE.Vector3( vector.x, vector.y, 1.0 );\r\n\r\n        this.unprojectVector( vector, camera );\r\n        this.unprojectVector( end, camera );\r\n\r\n        // find direction from vector to end\r\n        end.sub( vector ).normalize();\r\n\r\n        return new THREE.Raycaster( vector, end );\r\n\r\n    };\r\n\r\n    var getObject = function ( object ) {\r\n\r\n        _object = getNextObjectInPool();\r\n        _object.id = object.id;\r\n        _object.object = object;\r\n\r\n        if ( object.renderDepth !== null ) {\r\n\r\n            _object.z = object.renderDepth;\r\n\r\n        } else {\r\n\r\n            _vector3.getPositionFromMatrix( object.matrixWorld );\r\n            _vector3.applyProjection( _viewProjectionMatrix );\r\n            _object.z = _vector3.z;\r\n\r\n        }\r\n\r\n        return _object;\r\n\r\n    };\r\n\r\n    var projectObject = function ( object ) {\r\n\r\n        if ( object.visible === false ) return;\r\n\r\n        if ( object instanceof THREE.Light ) {\r\n\r\n            _renderData.lights.push( object );\r\n\r\n        } else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {\r\n\r\n            if ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n                _renderData.objects.push( getObject( object ) );\r\n\r\n            }\r\n\r\n        } else if ( object instanceof THREE.Sprite || object instanceof THREE.Particle ) {\r\n\r\n            _renderData.sprites.push( getObject( object ) );\r\n\r\n        }\r\n\r\n        for ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n            projectObject( object.children[ i ] );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var projectGraph = function ( root, sortObjects ) {\r\n\r\n        _objectCount = 0;\r\n\r\n        _renderData.objects.length = 0;\r\n        _renderData.sprites.length = 0;\r\n        _renderData.lights.length = 0;\r\n\r\n        projectObject( root );\r\n\r\n        if ( sortObjects === true ) {\r\n\r\n            _renderData.objects.sort( painterSort );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.projectScene = function ( scene, camera, sortObjects, sortElements ) {\r\n\r\n        var visible = false,\r\n            o, ol, v, vl, f, fl, n, nl, c, cl, u, ul, object,\r\n            geometry, vertices, faces, face, faceVertexNormals, faceVertexUvs, uvs,\r\n            v1, v2, v3, v4, isFaceMaterial, objectMaterials;\r\n\r\n        _face3Count = 0;\r\n        _lineCount = 0;\r\n        _particleCount = 0;\r\n\r\n        _renderData.elements.length = 0;\r\n\r\n        if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n        if ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n        _viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\r\n        _viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\r\n\r\n        _normalViewMatrix.getNormalMatrix( _viewMatrix );\r\n\r\n        _frustum.setFromMatrix( _viewProjectionMatrix );\r\n\r\n        projectGraph( scene, sortObjects );\r\n\r\n        for ( o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\r\n\r\n            object = _renderData.objects[ o ].object;\r\n\r\n            _modelMatrix = object.matrixWorld;\r\n\r\n            _vertexCount = 0;\r\n\r\n            if ( object instanceof THREE.Mesh ) {\r\n\r\n                geometry = object.geometry;\r\n\r\n                vertices = geometry.vertices;\r\n                faces = geometry.faces;\r\n                faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n                _normalMatrix.getNormalMatrix( _modelMatrix );\r\n\r\n                isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;\r\n                objectMaterials = isFaceMaterial === true ? object.material : null;\r\n\r\n                for ( v = 0, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n                    _vertex = getNextVertexInPool();\r\n\r\n                    _vertex.positionWorld.copy( vertices[ v ] ).applyMatrix4( _modelMatrix );\r\n                    _vertex.positionScreen.copy( _vertex.positionWorld ).applyMatrix4( _viewProjectionMatrix );\r\n\r\n                    var invW = 1 / _vertex.positionScreen.w;\r\n\r\n                    _vertex.positionScreen.x *= invW;\r\n                    _vertex.positionScreen.y *= invW;\r\n                    _vertex.positionScreen.z *= invW;\r\n\r\n                    _vertex.visible = ! ( _vertex.positionScreen.x < -1 || _vertex.positionScreen.x > 1 ||\r\n                        _vertex.positionScreen.y < -1 || _vertex.positionScreen.y > 1 ||\r\n                        _vertex.positionScreen.z < -1 || _vertex.positionScreen.z > 1 );\r\n\r\n                }\r\n\r\n                for ( f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n                    face = faces[ f ];\r\n\r\n                    var material = isFaceMaterial === true\r\n                        ? objectMaterials.materials[ face.materialIndex ]\r\n                        : object.material;\r\n\r\n                    if ( material === undefined ) continue;\r\n\r\n                    var side = material.side;\r\n\r\n                    v1 = _vertexPool[ face.a ];\r\n                    v2 = _vertexPool[ face.b ];\r\n                    v3 = _vertexPool[ face.c ];\r\n\r\n                    _points3[ 0 ] = v1.positionScreen;\r\n                    _points3[ 1 ] = v2.positionScreen;\r\n                    _points3[ 2 ] = v3.positionScreen;\r\n\r\n                    if ( v1.visible === true || v2.visible === true || v3.visible === true ||\r\n                        _clipBox.isIntersectionBox( _boundingBox.setFromPoints( _points3 ) ) ) {\r\n\r\n                        visible = ( ( v3.positionScreen.x - v1.positionScreen.x ) *\r\n                            ( v2.positionScreen.y - v1.positionScreen.y ) -\r\n                            ( v3.positionScreen.y - v1.positionScreen.y ) *\r\n                            ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\r\n\r\n                        if ( side === THREE.DoubleSide || visible === ( side === THREE.FrontSide ) ) {\r\n\r\n                            _face = getNextFace3InPool();\r\n\r\n                            _face.id = object.id;\r\n                            _face.v1.copy( v1 );\r\n                            _face.v2.copy( v2 );\r\n                            _face.v3.copy( v3 );\r\n\r\n                        } else {\r\n\r\n                            continue;\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        continue;\r\n\r\n                    }\r\n\r\n                    _face.normalModel.copy( face.normal );\r\n\r\n                    if ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\r\n\r\n                        _face.normalModel.negate();\r\n\r\n                    }\r\n\r\n                    _face.normalModel.applyMatrix3( _normalMatrix ).normalize();\r\n\r\n                    _face.normalModelView.copy( _face.normalModel ).applyMatrix3( _normalViewMatrix );\r\n\r\n                    _face.centroidModel.copy( face.centroid ).applyMatrix4( _modelMatrix );\r\n\r\n                    faceVertexNormals = face.vertexNormals;\r\n\r\n                    for ( n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\r\n\r\n                        var normalModel = _face.vertexNormalsModel[ n ];\r\n                        normalModel.copy( faceVertexNormals[ n ] );\r\n\r\n                        if ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\r\n\r\n                            normalModel.negate();\r\n\r\n                        }\r\n\r\n                        normalModel.applyMatrix3( _normalMatrix ).normalize();\r\n\r\n                        var normalModelView = _face.vertexNormalsModelView[ n ];\r\n                        normalModelView.copy( normalModel ).applyMatrix3( _normalViewMatrix );\r\n\r\n                    }\r\n\r\n                    _face.vertexNormalsLength = faceVertexNormals.length;\r\n\r\n                    for ( c = 0, cl = Math.min( faceVertexUvs.length, 3 ); c < cl; c ++ ) {\r\n\r\n                        uvs = faceVertexUvs[ c ][ f ];\r\n\r\n                        if ( uvs === undefined ) continue;\r\n\r\n                        for ( u = 0, ul = uvs.length; u < ul; u ++ ) {\r\n\r\n                            _face.uvs[ c ][ u ] = uvs[ u ];\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    _face.color = face.color;\r\n                    _face.material = material;\r\n\r\n                    _centroid.copy( _face.centroidModel ).applyProjection( _viewProjectionMatrix );\r\n\r\n                    _face.z = _centroid.z;\r\n\r\n                    _renderData.elements.push( _face );\r\n\r\n                }\r\n\r\n            } else if ( object instanceof THREE.Line ) {\r\n\r\n                _modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\r\n\r\n                vertices = object.geometry.vertices;\r\n\r\n                v1 = getNextVertexInPool();\r\n                v1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n                // Handle LineStrip and LinePieces\r\n                var step = object.type === THREE.LinePieces ? 2 : 1;\r\n\r\n                for ( v = 1, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n                    v1 = getNextVertexInPool();\r\n                    v1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n                    if ( ( v + 1 ) % step > 0 ) continue;\r\n\r\n                    v2 = _vertexPool[ _vertexCount - 2 ];\r\n\r\n                    _clippedVertex1PositionScreen.copy( v1.positionScreen );\r\n                    _clippedVertex2PositionScreen.copy( v2.positionScreen );\r\n\r\n                    if ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\r\n\r\n                        // Perform the perspective divide\r\n                        _clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\r\n                        _clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\r\n\r\n                        _line = getNextLineInPool();\r\n\r\n                        _line.id = object.id;\r\n                        _line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\r\n                        _line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\r\n\r\n                        _line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\r\n\r\n                        _line.material = object.material;\r\n\r\n                        if ( object.material.vertexColors === THREE.VertexColors ) {\r\n\r\n                            _line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\r\n                            _line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\r\n\r\n                        }\r\n\r\n                        _renderData.elements.push( _line );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for ( o = 0, ol = _renderData.sprites.length; o < ol; o++ ) {\r\n\r\n            object = _renderData.sprites[ o ].object;\r\n\r\n            _modelMatrix = object.matrixWorld;\r\n\r\n            if ( object instanceof THREE.Particle ) {\r\n\r\n                _vector4.set( _modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1 );\r\n                _vector4.applyMatrix4( _viewProjectionMatrix );\r\n\r\n                var invW = 1 / _vector4.w;\r\n\r\n                _vector4.z *= invW;\r\n\r\n                if ( _vector4.z > 0 && _vector4.z < 1 ) {\r\n\r\n                    _particle = getNextParticleInPool();\r\n                    _particle.id = object.id;\r\n                    _particle.x = _vector4.x * invW;\r\n                    _particle.y = _vector4.y * invW;\r\n                    _particle.z = _vector4.z;\r\n                    _particle.object = object;\r\n\r\n                    _particle.rotation = object.rotation.z;\r\n\r\n                    _particle.scale.x = object.scale.x * Math.abs( _particle.x - ( _vector4.x + camera.projectionMatrix.elements[0] ) / ( _vector4.w + camera.projectionMatrix.elements[12] ) );\r\n                    _particle.scale.y = object.scale.y * Math.abs( _particle.y - ( _vector4.y + camera.projectionMatrix.elements[5] ) / ( _vector4.w + camera.projectionMatrix.elements[13] ) );\r\n\r\n                    _particle.material = object.material;\r\n\r\n                    _renderData.elements.push( _particle );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( sortElements === true ) _renderData.elements.sort( painterSort );\r\n\r\n        return _renderData;\r\n\r\n    };\r\n\r\n    // Pools\r\n\r\n    function getNextObjectInPool() {\r\n\r\n        if ( _objectCount === _objectPoolLength ) {\r\n\r\n            var object = new THREE.RenderableObject();\r\n            _objectPool.push( object );\r\n            _objectPoolLength ++;\r\n            _objectCount ++;\r\n            return object;\r\n\r\n        }\r\n\r\n        return _objectPool[ _objectCount ++ ];\r\n\r\n    }\r\n\r\n    function getNextVertexInPool() {\r\n\r\n        if ( _vertexCount === _vertexPoolLength ) {\r\n\r\n            var vertex = new THREE.RenderableVertex();\r\n            _vertexPool.push( vertex );\r\n            _vertexPoolLength ++;\r\n            _vertexCount ++;\r\n            return vertex;\r\n\r\n        }\r\n\r\n        return _vertexPool[ _vertexCount ++ ];\r\n\r\n    }\r\n\r\n    function getNextFace3InPool() {\r\n\r\n        if ( _face3Count === _face3PoolLength ) {\r\n\r\n            var face = new THREE.RenderableFace3();\r\n            _face3Pool.push( face );\r\n            _face3PoolLength ++;\r\n            _face3Count ++;\r\n            return face;\r\n\r\n        }\r\n\r\n        return _face3Pool[ _face3Count ++ ];\r\n\r\n\r\n    }\r\n\r\n    function getNextLineInPool() {\r\n\r\n        if ( _lineCount === _linePoolLength ) {\r\n\r\n            var line = new THREE.RenderableLine();\r\n            _linePool.push( line );\r\n            _linePoolLength ++;\r\n            _lineCount ++\r\n            return line;\r\n\r\n        }\r\n\r\n        return _linePool[ _lineCount ++ ];\r\n\r\n    }\r\n\r\n    function getNextParticleInPool() {\r\n\r\n        if ( _particleCount === _particlePoolLength ) {\r\n\r\n            var particle = new THREE.RenderableParticle();\r\n            _particlePool.push( particle );\r\n            _particlePoolLength ++;\r\n            _particleCount ++\r\n            return particle;\r\n\r\n        }\r\n\r\n        return _particlePool[ _particleCount ++ ];\r\n\r\n    }\r\n\r\n    //\r\n\r\n    function painterSort( a, b ) {\r\n\r\n        if ( a.z !== b.z ) {\r\n\r\n            return b.z - a.z;\r\n\r\n        } else if ( a.id !== b.id ) {\r\n\r\n            return a.id - b.id;\r\n\r\n        } else {\r\n\r\n            return 0;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function clipLine( s1, s2 ) {\r\n\r\n        var alpha1 = 0, alpha2 = 1,\r\n\r\n            // Calculate the boundary coordinate of each vertex for the near and far clip planes,\r\n            // Z = -1 and Z = +1, respectively.\r\n            bc1near =  s1.z + s1.w,\r\n            bc2near =  s2.z + s2.w,\r\n            bc1far =  - s1.z + s1.w,\r\n            bc2far =  - s2.z + s2.w;\r\n\r\n        if ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\r\n\r\n            // Both vertices lie entirely within all clip planes.\r\n            return true;\r\n\r\n        } else if ( ( bc1near < 0 && bc2near < 0) || (bc1far < 0 && bc2far < 0 ) ) {\r\n\r\n            // Both vertices lie entirely outside one of the clip planes.\r\n            return false;\r\n\r\n        } else {\r\n\r\n            // The line segment spans at least one clip plane.\r\n\r\n            if ( bc1near < 0 ) {\r\n\r\n                // v1 lies outside the near plane, v2 inside\r\n                alpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\r\n\r\n            } else if ( bc2near < 0 ) {\r\n\r\n                // v2 lies outside the near plane, v1 inside\r\n                alpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\r\n\r\n            }\r\n\r\n            if ( bc1far < 0 ) {\r\n\r\n                // v1 lies outside the far plane, v2 inside\r\n                alpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\r\n\r\n            } else if ( bc2far < 0 ) {\r\n\r\n                // v2 lies outside the far plane, v2 inside\r\n                alpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\r\n\r\n            }\r\n\r\n            if ( alpha2 < alpha1 ) {\r\n\r\n                // The line segment spans two boundaries, but is outside both of them.\r\n                // (This can't happen when we're only clipping against just near/far but good\r\n                //  to leave the check here for future usage if other clip planes are added.)\r\n                return false;\r\n\r\n            } else {\r\n\r\n                // Update the s1 and s2 vertices to match the clipped line segment.\r\n                s1.lerp( s2, alpha1 );\r\n                s2.lerp( s1, 1 - alpha2 );\r\n\r\n                return true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n    this.a = a;\r\n    this.b = b;\r\n    this.c = c;\r\n\r\n    this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n    this.vertexNormals = normal instanceof Array ? normal : [ ];\r\n\r\n    this.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n    this.vertexColors = color instanceof Array ? color : [];\r\n\r\n    this.vertexTangents = [];\r\n\r\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n    this.centroid = new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n    constructor: THREE.Face3,\r\n\r\n    clone: function () {\r\n\r\n        var face = new THREE.Face3( this.a, this.b, this.c );\r\n\r\n        face.normal.copy( this.normal );\r\n        face.color.copy( this.color );\r\n        face.centroid.copy( this.centroid );\r\n\r\n        face.materialIndex = this.materialIndex;\r\n\r\n        var i, il;\r\n        for ( i = 0, il = this.vertexNormals.length; i < il; i ++ ) face.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\r\n        for ( i = 0, il = this.vertexColors.length; i < il; i ++ ) face.vertexColors[ i ] = this.vertexColors[ i ].clone();\r\n        for ( i = 0, il = this.vertexTangents.length; i < il; i ++ ) face.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\r\n\r\n        return face;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n    console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.')\r\n\r\n    return new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n    this.id = THREE.GeometryIdCount ++;\r\n    this.uuid = THREE.Math.generateUUID();\r\n\r\n    this.name = '';\r\n\r\n    this.vertices = [];\r\n    this.colors = [];  // one-to-one vertex colors, used in ParticleSystem and Line\r\n\r\n    this.faces = [];\r\n\r\n    this.faceVertexUvs = [[]];\r\n\r\n    this.morphTargets = [];\r\n    this.morphColors = [];\r\n    this.morphNormals = [];\r\n\r\n    this.skinWeights = [];\r\n    this.skinIndices = [];\r\n\r\n    this.lineDistances = [];\r\n\r\n    this.boundingBox = null;\r\n    this.boundingSphere = null;\r\n\r\n    this.hasTangents = false;\r\n\r\n    this.dynamic = true; // the intermediate typed arrays will be deleted when set to false\r\n\r\n    // update flags\r\n\r\n    this.verticesNeedUpdate = false;\r\n    this.elementsNeedUpdate = false;\r\n    this.uvsNeedUpdate = false;\r\n    this.normalsNeedUpdate = false;\r\n    this.tangentsNeedUpdate = false;\r\n    this.colorsNeedUpdate = false;\r\n    this.lineDistancesNeedUpdate = false;\r\n\r\n    this.buffersNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n    constructor: THREE.Geometry,\r\n\r\n    applyMatrix: function ( matrix ) {\r\n\r\n        var normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n        for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n            var vertex = this.vertices[ i ];\r\n            vertex.applyMatrix4( matrix );\r\n\r\n        }\r\n\r\n        for ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n            var face = this.faces[ i ];\r\n            face.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n            for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n                face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n            }\r\n\r\n            face.centroid.applyMatrix4( matrix );\r\n\r\n        }\r\n\r\n        if ( this.boundingBox instanceof THREE.Box3 ) {\r\n\r\n            this.computeBoundingBox();\r\n\r\n        }\r\n\r\n        if ( this.boundingSphere instanceof THREE.Sphere ) {\r\n\r\n            this.computeBoundingSphere();\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeCentroids: function () {\r\n\r\n        var f, fl, face;\r\n\r\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            face = this.faces[ f ];\r\n            face.centroid.set( 0, 0, 0 );\r\n\r\n            face.centroid.add( this.vertices[ face.a ] );\r\n            face.centroid.add( this.vertices[ face.b ] );\r\n            face.centroid.add( this.vertices[ face.c ] );\r\n            face.centroid.divideScalar( 3 );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeFaceNormals: function () {\r\n\r\n        var cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n        for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            var face = this.faces[ f ];\r\n\r\n            var vA = this.vertices[ face.a ];\r\n            var vB = this.vertices[ face.b ];\r\n            var vC = this.vertices[ face.c ];\r\n\r\n            cb.subVectors( vC, vB );\r\n            ab.subVectors( vA, vB );\r\n            cb.cross( ab );\r\n\r\n            cb.normalize();\r\n\r\n            face.normal.copy( cb );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeVertexNormals: function ( areaWeighted ) {\r\n\r\n        var v, vl, f, fl, face, vertices;\r\n\r\n        // create internal buffers for reuse when calling this method repeatedly\r\n        // (otherwise memory allocation / deallocation every frame is big resource hog)\r\n\r\n        if ( this.__tmpVertices === undefined ) {\r\n\r\n            this.__tmpVertices = new Array( this.vertices.length );\r\n            vertices = this.__tmpVertices;\r\n\r\n            for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n                vertices[ v ] = new THREE.Vector3();\r\n\r\n            }\r\n\r\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n                face = this.faces[ f ];\r\n                face.vertexNormals = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            vertices = this.__tmpVertices;\r\n\r\n            for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n                vertices[ v ].set( 0, 0, 0 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( areaWeighted ) {\r\n\r\n            // vertex normals weighted by triangle areas\r\n            // http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n            var vA, vB, vC, vD;\r\n            var cb = new THREE.Vector3(), ab = new THREE.Vector3(),\r\n                db = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();\r\n\r\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n                face = this.faces[ f ];\r\n\r\n                vA = this.vertices[ face.a ];\r\n                vB = this.vertices[ face.b ];\r\n                vC = this.vertices[ face.c ];\r\n\r\n                cb.subVectors( vC, vB );\r\n                ab.subVectors( vA, vB );\r\n                cb.cross( ab );\r\n\r\n                vertices[ face.a ].add( cb );\r\n                vertices[ face.b ].add( cb );\r\n                vertices[ face.c ].add( cb );\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n                face = this.faces[ f ];\r\n\r\n                vertices[ face.a ].add( face.normal );\r\n                vertices[ face.b ].add( face.normal );\r\n                vertices[ face.c ].add( face.normal );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n            vertices[ v ].normalize();\r\n\r\n        }\r\n\r\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            face = this.faces[ f ];\r\n\r\n            face.vertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n            face.vertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n            face.vertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeMorphNormals: function () {\r\n\r\n        var i, il, f, fl, face;\r\n\r\n        // save original normals\r\n        // - create temp variables on first access\r\n        //   otherwise just copy (for faster repeated calls)\r\n\r\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            face = this.faces[ f ];\r\n\r\n            if ( ! face.__originalFaceNormal ) {\r\n\r\n                face.__originalFaceNormal = face.normal.clone();\r\n\r\n            } else {\r\n\r\n                face.__originalFaceNormal.copy( face.normal );\r\n\r\n            }\r\n\r\n            if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n            for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n                if ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n                    face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n                } else {\r\n\r\n                    face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // use temp geometry to compute face and vertex normals for each morph\r\n\r\n        var tmpGeo = new THREE.Geometry();\r\n        tmpGeo.faces = this.faces;\r\n\r\n        for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n            // create on first access\r\n\r\n            if ( ! this.morphNormals[ i ] ) {\r\n\r\n                this.morphNormals[ i ] = {};\r\n                this.morphNormals[ i ].faceNormals = [];\r\n                this.morphNormals[ i ].vertexNormals = [];\r\n\r\n                var dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n                var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n                var faceNormal, vertexNormals;\r\n\r\n                for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n                    face = this.faces[ f ];\r\n\r\n                    faceNormal = new THREE.Vector3();\r\n                    vertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n                    dstNormalsFace.push( faceNormal );\r\n                    dstNormalsVertex.push( vertexNormals );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            var morphNormals = this.morphNormals[ i ];\r\n\r\n            // set vertices to morph target\r\n\r\n            tmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n            // compute morph normals\r\n\r\n            tmpGeo.computeFaceNormals();\r\n            tmpGeo.computeVertexNormals();\r\n\r\n            // store morph normals\r\n\r\n            var faceNormal, vertexNormals;\r\n\r\n            for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n                face = this.faces[ f ];\r\n\r\n                faceNormal = morphNormals.faceNormals[ f ];\r\n                vertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n                faceNormal.copy( face.normal );\r\n\r\n                vertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n                vertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n                vertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // restore original normals\r\n\r\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            face = this.faces[ f ];\r\n\r\n            face.normal = face.__originalFaceNormal;\r\n            face.vertexNormals = face.__originalVertexNormals;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeTangents: function () {\r\n\r\n        // based on http://www.terathon.com/code/tangent.html\r\n        // tangents go to vertices\r\n\r\n        var f, fl, v, vl, i, il, vertexIndex,\r\n            face, uv, vA, vB, vC, uvA, uvB, uvC,\r\n            x1, x2, y1, y2, z1, z2,\r\n            s1, s2, t1, t2, r, t, test,\r\n            tan1 = [], tan2 = [],\r\n            sdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\r\n            tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\r\n            n = new THREE.Vector3(), w;\r\n\r\n        for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n            tan1[ v ] = new THREE.Vector3();\r\n            tan2[ v ] = new THREE.Vector3();\r\n\r\n        }\r\n\r\n        function handleTriangle( context, a, b, c, ua, ub, uc ) {\r\n\r\n            vA = context.vertices[ a ];\r\n            vB = context.vertices[ b ];\r\n            vC = context.vertices[ c ];\r\n\r\n            uvA = uv[ ua ];\r\n            uvB = uv[ ub ];\r\n            uvC = uv[ uc ];\r\n\r\n            x1 = vB.x - vA.x;\r\n            x2 = vC.x - vA.x;\r\n            y1 = vB.y - vA.y;\r\n            y2 = vC.y - vA.y;\r\n            z1 = vB.z - vA.z;\r\n            z2 = vC.z - vA.z;\r\n\r\n            s1 = uvB.x - uvA.x;\r\n            s2 = uvC.x - uvA.x;\r\n            t1 = uvB.y - uvA.y;\r\n            t2 = uvC.y - uvA.y;\r\n\r\n            r = 1.0 / ( s1 * t2 - s2 * t1 );\r\n            sdir.set( ( t2 * x1 - t1 * x2 ) * r,\r\n                ( t2 * y1 - t1 * y2 ) * r,\r\n                ( t2 * z1 - t1 * z2 ) * r );\r\n            tdir.set( ( s1 * x2 - s2 * x1 ) * r,\r\n                ( s1 * y2 - s2 * y1 ) * r,\r\n                ( s1 * z2 - s2 * z1 ) * r );\r\n\r\n            tan1[ a ].add( sdir );\r\n            tan1[ b ].add( sdir );\r\n            tan1[ c ].add( sdir );\r\n\r\n            tan2[ a ].add( tdir );\r\n            tan2[ b ].add( tdir );\r\n            tan2[ c ].add( tdir );\r\n\r\n        }\r\n\r\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            face = this.faces[ f ];\r\n            uv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\r\n\r\n            handleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\r\n\r\n        }\r\n\r\n        var faceIndex = [ 'a', 'b', 'c', 'd' ];\r\n\r\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n            face = this.faces[ f ];\r\n\r\n            for ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i++ ) {\r\n\r\n                n.copy( face.vertexNormals[ i ] );\r\n\r\n                vertexIndex = face[ faceIndex[ i ] ];\r\n\r\n                t = tan1[ vertexIndex ];\r\n\r\n                // Gram-Schmidt orthogonalize\r\n\r\n                tmp.copy( t );\r\n                tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n                // Calculate handedness\r\n\r\n                tmp2.crossVectors( face.vertexNormals[ i ], t );\r\n                test = tmp2.dot( tan2[ vertexIndex ] );\r\n                w = (test < 0.0) ? -1.0 : 1.0;\r\n\r\n                face.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.hasTangents = true;\r\n\r\n    },\r\n\r\n    computeLineDistances: function ( ) {\r\n\r\n        var d = 0;\r\n        var vertices = this.vertices;\r\n\r\n        for ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n            if ( i > 0 ) {\r\n\r\n                d += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n            }\r\n\r\n            this.lineDistances[ i ] = d;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeBoundingBox: function () {\r\n\r\n        if ( this.boundingBox === null ) {\r\n\r\n            this.boundingBox = new THREE.Box3();\r\n\r\n        }\r\n\r\n        this.boundingBox.setFromPoints( this.vertices );\r\n\r\n    },\r\n\r\n    computeBoundingSphere: function () {\r\n\r\n        if ( this.boundingSphere === null ) {\r\n\r\n            this.boundingSphere = new THREE.Sphere();\r\n\r\n        }\r\n\r\n        this.boundingSphere.setFromPoints( this.vertices );\r\n\r\n    },\r\n\r\n    /*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n    mergeVertices: function () {\r\n\r\n        var verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\r\n        var unique = [], changes = [];\r\n\r\n        var v, key;\r\n        var precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\r\n        var precision = Math.pow( 10, precisionPoints );\r\n        var i,il, face;\r\n        var indices, k, j, jl, u;\r\n\r\n        // reset cache of vertices as it now will be changing.\r\n        this.__tmpVertices = undefined;\r\n\r\n        for ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n            v = this.vertices[ i ];\r\n            key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n            if ( verticesMap[ key ] === undefined ) {\r\n\r\n                verticesMap[ key ] = i;\r\n                unique.push( this.vertices[ i ] );\r\n                changes[ i ] = unique.length - 1;\r\n\r\n            } else {\r\n\r\n                //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n                changes[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        // if faces are completely degenerate after merging vertices, we\r\n        // have to remove them from the geometry.\r\n        var faceIndicesToRemove = [];\r\n\r\n        for( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n            face = this.faces[ i ];\r\n\r\n            face.a = changes[ face.a ];\r\n            face.b = changes[ face.b ];\r\n            face.c = changes[ face.c ];\r\n\r\n            indices = [ face.a, face.b, face.c ];\r\n\r\n            var dupIndex = -1;\r\n\r\n            // if any duplicate vertices are found in a Face3\r\n            // we have to remove the face as nothing can be saved\r\n            for ( var n = 0; n < 3; n ++ ) {\r\n                if ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n                    dupIndex = n;\r\n                    faceIndicesToRemove.push( i );\r\n                    break;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n            var idx = faceIndicesToRemove[ i ];\r\n\r\n            this.faces.splice( idx, 1 );\r\n\r\n            for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n                this.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Use unique set of vertices\r\n\r\n        var diff = this.vertices.length - unique.length;\r\n        this.vertices = unique;\r\n        return diff;\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        var geometry = new THREE.Geometry();\r\n\r\n        var vertices = this.vertices;\r\n\r\n        for ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n            geometry.vertices.push( vertices[ i ].clone() );\r\n\r\n        }\r\n\r\n        var faces = this.faces;\r\n\r\n        for ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n            geometry.faces.push( faces[ i ].clone() );\r\n\r\n        }\r\n\r\n        var uvs = this.faceVertexUvs[ 0 ];\r\n\r\n        for ( var i = 0, il = uvs.length; i < il; i ++ ) {\r\n\r\n            var uv = uvs[ i ], uvCopy = [];\r\n\r\n            for ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n                uvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\r\n\r\n            }\r\n\r\n            geometry.faceVertexUvs[ 0 ].push( uvCopy );\r\n\r\n        }\r\n\r\n        return geometry;\r\n\r\n    },\r\n\r\n    dispose: function () {\r\n\r\n        this.dispatchEvent( { type: 'dispose' } );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n    this.id = THREE.GeometryIdCount ++;\r\n    this.uuid = THREE.Math.generateUUID();\r\n\r\n    this.name = '';\r\n\r\n    // attributes\r\n\r\n    this.attributes = {};\r\n\r\n    // attributes typed arrays are kept only if dynamic flag is set\r\n\r\n    this.dynamic = true;\r\n\r\n    // offsets for chunks when using indexed elements\r\n\r\n    this.offsets = [];\r\n\r\n    // boundings\r\n\r\n    this.boundingBox = null;\r\n    this.boundingSphere = null;\r\n\r\n    this.hasTangents = false;\r\n\r\n    // for compatibility\r\n\r\n    this.morphTargets = [];\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n    constructor: THREE.BufferGeometry,\r\n\r\n    applyMatrix: function ( matrix ) {\r\n\r\n        var positionArray;\r\n        var normalArray;\r\n\r\n        if ( this.attributes[ \"position\" ] ) positionArray = this.attributes[ \"position\" ].array;\r\n        if ( this.attributes[ \"normal\" ] ) normalArray = this.attributes[ \"normal\" ].array;\r\n\r\n        if ( positionArray !== undefined ) {\r\n\r\n            matrix.multiplyVector3Array( positionArray );\r\n            this.verticesNeedUpdate = true;\r\n\r\n        }\r\n\r\n        if ( normalArray !== undefined ) {\r\n\r\n            var normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n            normalMatrix.multiplyVector3Array( normalArray );\r\n\r\n            this.normalizeNormals();\r\n\r\n            this.normalsNeedUpdate = true;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeBoundingBox: function () {\r\n\r\n        if ( this.boundingBox === null ) {\r\n\r\n            this.boundingBox = new THREE.Box3();\r\n\r\n        }\r\n\r\n        var positions = this.attributes[ \"position\" ].array;\r\n\r\n        if ( positions ) {\r\n\r\n            var bb = this.boundingBox;\r\n            var x, y, z;\r\n\r\n            if( positions.length >= 3 ) {\r\n                bb.min.x = bb.max.x = positions[ 0 ];\r\n                bb.min.y = bb.max.y = positions[ 1 ];\r\n                bb.min.z = bb.max.z = positions[ 2 ];\r\n            }\r\n\r\n            for ( var i = 3, il = positions.length; i < il; i += 3 ) {\r\n\r\n                x = positions[ i ];\r\n                y = positions[ i + 1 ];\r\n                z = positions[ i + 2 ];\r\n\r\n                // bounding box\r\n\r\n                if ( x < bb.min.x ) {\r\n\r\n                    bb.min.x = x;\r\n\r\n                } else if ( x > bb.max.x ) {\r\n\r\n                    bb.max.x = x;\r\n\r\n                }\r\n\r\n                if ( y < bb.min.y ) {\r\n\r\n                    bb.min.y = y;\r\n\r\n                } else if ( y > bb.max.y ) {\r\n\r\n                    bb.max.y = y;\r\n\r\n                }\r\n\r\n                if ( z < bb.min.z ) {\r\n\r\n                    bb.min.z = z;\r\n\r\n                } else if ( z > bb.max.z ) {\r\n\r\n                    bb.max.z = z;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( positions === undefined || positions.length === 0 ) {\r\n\r\n            this.boundingBox.min.set( 0, 0, 0 );\r\n            this.boundingBox.max.set( 0, 0, 0 );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeBoundingSphere: function () {\r\n\r\n        var box = new THREE.Box3();\r\n        var vector = new THREE.Vector3();\r\n\r\n        return function () {\r\n\r\n            if ( this.boundingSphere === null ) {\r\n\r\n                this.boundingSphere = new THREE.Sphere();\r\n\r\n            }\r\n\r\n            var positions = this.attributes[ \"position\" ].array;\r\n\r\n            if ( positions ) {\r\n\r\n                var center = this.boundingSphere.center;\r\n\r\n                for ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n                    vector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n                    box.addPoint( vector );\r\n\r\n                }\r\n\r\n                box.center( center );\r\n\r\n                var maxRadiusSq = 0;\r\n\r\n                for ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n                    vector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n                    maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n                }\r\n\r\n                this.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }(),\r\n\r\n    computeVertexNormals: function () {\r\n\r\n        if ( this.attributes[ \"position\" ] ) {\r\n\r\n            var i, il;\r\n            var j, jl;\r\n\r\n            var nVertexElements = this.attributes[ \"position\" ].array.length;\r\n\r\n            if ( this.attributes[ \"normal\" ] === undefined ) {\r\n\r\n                this.attributes[ \"normal\" ] = {\r\n\r\n                    itemSize: 3,\r\n                    array: new Float32Array( nVertexElements )\r\n\r\n                };\r\n\r\n            } else {\r\n\r\n                // reset existing normals to zero\r\n\r\n                for ( i = 0, il = this.attributes[ \"normal\" ].array.length; i < il; i ++ ) {\r\n\r\n                    this.attributes[ \"normal\" ].array[ i ] = 0;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            var positions = this.attributes[ \"position\" ].array;\r\n            var normals = this.attributes[ \"normal\" ].array;\r\n\r\n            var vA, vB, vC, x, y, z,\r\n\r\n                pA = new THREE.Vector3(),\r\n                pB = new THREE.Vector3(),\r\n                pC = new THREE.Vector3(),\r\n\r\n                cb = new THREE.Vector3(),\r\n                ab = new THREE.Vector3();\r\n\r\n            // indexed elements\r\n\r\n            if ( this.attributes[ \"index\" ] ) {\r\n\r\n                var indices = this.attributes[ \"index\" ].array;\r\n\r\n                var offsets = this.offsets;\r\n\r\n                for ( j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n                    var start = offsets[ j ].start;\r\n                    var count = offsets[ j ].count;\r\n                    var index = offsets[ j ].index;\r\n\r\n                    for ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n                        vA = index + indices[ i ];\r\n                        vB = index + indices[ i + 1 ];\r\n                        vC = index + indices[ i + 2 ];\r\n\r\n                        x = positions[ vA * 3 ];\r\n                        y = positions[ vA * 3 + 1 ];\r\n                        z = positions[ vA * 3 + 2 ];\r\n                        pA.set( x, y, z );\r\n\r\n                        x = positions[ vB * 3 ];\r\n                        y = positions[ vB * 3 + 1 ];\r\n                        z = positions[ vB * 3 + 2 ];\r\n                        pB.set( x, y, z );\r\n\r\n                        x = positions[ vC * 3 ];\r\n                        y = positions[ vC * 3 + 1 ];\r\n                        z = positions[ vC * 3 + 2 ];\r\n                        pC.set( x, y, z );\r\n\r\n                        cb.subVectors( pC, pB );\r\n                        ab.subVectors( pA, pB );\r\n                        cb.cross( ab );\r\n\r\n                        normals[ vA * 3 ]     += cb.x;\r\n                        normals[ vA * 3 + 1 ] += cb.y;\r\n                        normals[ vA * 3 + 2 ] += cb.z;\r\n\r\n                        normals[ vB * 3 ]     += cb.x;\r\n                        normals[ vB * 3 + 1 ] += cb.y;\r\n                        normals[ vB * 3 + 2 ] += cb.z;\r\n\r\n                        normals[ vC * 3 ]     += cb.x;\r\n                        normals[ vC * 3 + 1 ] += cb.y;\r\n                        normals[ vC * 3 + 2 ] += cb.z;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // non-indexed elements (unconnected triangle soup)\r\n\r\n            } else {\r\n\r\n                for ( i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n                    x = positions[ i ];\r\n                    y = positions[ i + 1 ];\r\n                    z = positions[ i + 2 ];\r\n                    pA.set( x, y, z );\r\n\r\n                    x = positions[ i + 3 ];\r\n                    y = positions[ i + 4 ];\r\n                    z = positions[ i + 5 ];\r\n                    pB.set( x, y, z );\r\n\r\n                    x = positions[ i + 6 ];\r\n                    y = positions[ i + 7 ];\r\n                    z = positions[ i + 8 ];\r\n                    pC.set( x, y, z );\r\n\r\n                    cb.subVectors( pC, pB );\r\n                    ab.subVectors( pA, pB );\r\n                    cb.cross( ab );\r\n\r\n                    normals[ i ] \t = cb.x;\r\n                    normals[ i + 1 ] = cb.y;\r\n                    normals[ i + 2 ] = cb.z;\r\n\r\n                    normals[ i + 3 ] = cb.x;\r\n                    normals[ i + 4 ] = cb.y;\r\n                    normals[ i + 5 ] = cb.z;\r\n\r\n                    normals[ i + 6 ] = cb.x;\r\n                    normals[ i + 7 ] = cb.y;\r\n                    normals[ i + 8 ] = cb.z;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            this.normalizeNormals();\r\n\r\n            this.normalsNeedUpdate = true;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    normalizeNormals: function () {\r\n\r\n        var normals = this.attributes[ \"normal\" ].array;\r\n\r\n        var x, y, z, n;\r\n\r\n        for ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n            x = normals[ i ];\r\n            y = normals[ i + 1 ];\r\n            z = normals[ i + 2 ];\r\n\r\n            n = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n            normals[ i ] \t *= n;\r\n            normals[ i + 1 ] *= n;\r\n            normals[ i + 2 ] *= n;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    computeTangents: function () {\r\n\r\n        // based on http://www.terathon.com/code/tangent.html\r\n        // (per vertex tangents)\r\n\r\n        if ( this.attributes[ \"index\" ] === undefined ||\r\n            this.attributes[ \"position\" ] === undefined ||\r\n            this.attributes[ \"normal\" ] === undefined ||\r\n            this.attributes[ \"uv\" ] === undefined ) {\r\n\r\n            console.warn( \"Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()\" );\r\n            return;\r\n\r\n        }\r\n\r\n        var indices = this.attributes[ \"index\" ].array;\r\n        var positions = this.attributes[ \"position\" ].array;\r\n        var normals = this.attributes[ \"normal\" ].array;\r\n        var uvs = this.attributes[ \"uv\" ].array;\r\n\r\n        var nVertices = positions.length / 3;\r\n\r\n        if ( this.attributes[ \"tangent\" ] === undefined ) {\r\n\r\n            var nTangentElements = 4 * nVertices;\r\n\r\n            this.attributes[ \"tangent\" ] = {\r\n\r\n                itemSize: 4,\r\n                array: new Float32Array( nTangentElements )\r\n\r\n            };\r\n\r\n        }\r\n\r\n        var tangents = this.attributes[ \"tangent\" ].array;\r\n\r\n        var tan1 = [], tan2 = [];\r\n\r\n        for ( var k = 0; k < nVertices; k ++ ) {\r\n\r\n            tan1[ k ] = new THREE.Vector3();\r\n            tan2[ k ] = new THREE.Vector3();\r\n\r\n        }\r\n\r\n        var xA, yA, zA,\r\n            xB, yB, zB,\r\n            xC, yC, zC,\r\n\r\n            uA, vA,\r\n            uB, vB,\r\n            uC, vC,\r\n\r\n            x1, x2, y1, y2, z1, z2,\r\n            s1, s2, t1, t2, r;\r\n\r\n        var sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\r\n\r\n        function handleTriangle( a, b, c ) {\r\n\r\n            xA = positions[ a * 3 ];\r\n            yA = positions[ a * 3 + 1 ];\r\n            zA = positions[ a * 3 + 2 ];\r\n\r\n            xB = positions[ b * 3 ];\r\n            yB = positions[ b * 3 + 1 ];\r\n            zB = positions[ b * 3 + 2 ];\r\n\r\n            xC = positions[ c * 3 ];\r\n            yC = positions[ c * 3 + 1 ];\r\n            zC = positions[ c * 3 + 2 ];\r\n\r\n            uA = uvs[ a * 2 ];\r\n            vA = uvs[ a * 2 + 1 ];\r\n\r\n            uB = uvs[ b * 2 ];\r\n            vB = uvs[ b * 2 + 1 ];\r\n\r\n            uC = uvs[ c * 2 ];\r\n            vC = uvs[ c * 2 + 1 ];\r\n\r\n            x1 = xB - xA;\r\n            x2 = xC - xA;\r\n\r\n            y1 = yB - yA;\r\n            y2 = yC - yA;\r\n\r\n            z1 = zB - zA;\r\n            z2 = zC - zA;\r\n\r\n            s1 = uB - uA;\r\n            s2 = uC - uA;\r\n\r\n            t1 = vB - vA;\r\n            t2 = vC - vA;\r\n\r\n            r = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\r\n            sdir.set(\r\n                ( t2 * x1 - t1 * x2 ) * r,\r\n                ( t2 * y1 - t1 * y2 ) * r,\r\n                ( t2 * z1 - t1 * z2 ) * r\r\n            );\r\n\r\n            tdir.set(\r\n                ( s1 * x2 - s2 * x1 ) * r,\r\n                ( s1 * y2 - s2 * y1 ) * r,\r\n                ( s1 * z2 - s2 * z1 ) * r\r\n            );\r\n\r\n            tan1[ a ].add( sdir );\r\n            tan1[ b ].add( sdir );\r\n            tan1[ c ].add( sdir );\r\n\r\n            tan2[ a ].add( tdir );\r\n            tan2[ b ].add( tdir );\r\n            tan2[ c ].add( tdir );\r\n\r\n        }\r\n\r\n        var i, il;\r\n        var j, jl;\r\n        var iA, iB, iC;\r\n\r\n        var offsets = this.offsets;\r\n\r\n        for ( j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n            var start = offsets[ j ].start;\r\n            var count = offsets[ j ].count;\r\n            var index = offsets[ j ].index;\r\n\r\n            for ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n                iA = index + indices[ i ];\r\n                iB = index + indices[ i + 1 ];\r\n                iC = index + indices[ i + 2 ];\r\n\r\n                handleTriangle( iA, iB, iC );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\r\n        var n = new THREE.Vector3(), n2 = new THREE.Vector3();\r\n        var w, t, test;\r\n\r\n        function handleVertex( v ) {\r\n\r\n            n.x = normals[ v * 3 ];\r\n            n.y = normals[ v * 3 + 1 ];\r\n            n.z = normals[ v * 3 + 2 ];\r\n\r\n            n2.copy( n );\r\n\r\n            t = tan1[ v ];\r\n\r\n            // Gram-Schmidt orthogonalize\r\n\r\n            tmp.copy( t );\r\n            tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n            // Calculate handedness\r\n\r\n            tmp2.crossVectors( n2, t );\r\n            test = tmp2.dot( tan2[ v ] );\r\n            w = ( test < 0.0 ) ? -1.0 : 1.0;\r\n\r\n            tangents[ v * 4 ]     = tmp.x;\r\n            tangents[ v * 4 + 1 ] = tmp.y;\r\n            tangents[ v * 4 + 2 ] = tmp.z;\r\n            tangents[ v * 4 + 3 ] = w;\r\n\r\n        }\r\n\r\n        for ( j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n            var start = offsets[ j ].start;\r\n            var count = offsets[ j ].count;\r\n            var index = offsets[ j ].index;\r\n\r\n            for ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n                iA = index + indices[ i ];\r\n                iB = index + indices[ i + 1 ];\r\n                iC = index + indices[ i + 2 ];\r\n\r\n                handleVertex( iA );\r\n                handleVertex( iB );\r\n                handleVertex( iC );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.hasTangents = true;\r\n        this.tangentsNeedUpdate = true;\r\n\r\n    },\r\n\r\n    clone: function () {\r\n\r\n        var geometry = new THREE.BufferGeometry();\r\n\r\n        var types = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\r\n\r\n        for ( var attr in this.attributes ) {\r\n\r\n            var sourceAttr = this.attributes[ attr ];\r\n            var sourceArray = sourceAttr.array;\r\n\r\n            var attribute = {\r\n\r\n                itemSize: sourceAttr.itemSize,\r\n                numItems: sourceAttr.numItems,\r\n                array: null\r\n\r\n            };\r\n\r\n            for ( var i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n                var type = types[ i ];\r\n\r\n                if ( sourceArray instanceof type ) {\r\n\r\n                    attribute.array = new type( sourceArray );\r\n                    break;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            geometry.attributes[ attr ] = attribute;\r\n\r\n        }\r\n\r\n        for ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\r\n\r\n            var offset = this.offsets[ i ];\r\n\r\n            geometry.offsets.push( {\r\n\r\n                start: offset.start,\r\n                index: offset.index,\r\n                count: offset.count\r\n\r\n            } );\r\n\r\n        }\r\n\r\n        return geometry;\r\n\r\n    },\r\n\r\n    dispose: function () {\r\n\r\n        this.dispatchEvent( { type: 'dispose' } );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Camera = function () {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.matrixWorldInverse = new THREE.Matrix4();\r\n\r\n    this.projectionMatrix = new THREE.Matrix4();\r\n    this.projectionMatrixInverse = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n    // This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n    var m1 = new THREE.Matrix4();\r\n\r\n    return function ( vector ) {\r\n\r\n        m1.lookAt( this.position, vector, this.up );\r\n\r\n        this.quaternion.setFromRotationMatrix( m1 );\r\n\r\n    };\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function (camera) {\r\n\r\n    if ( camera === undefined ) camera = new THREE.Camera();\r\n\r\n    THREE.Object3D.prototype.clone.call( this, camera );\r\n\r\n    camera.matrixWorldInverse.copy( this.matrixWorldInverse );\r\n    camera.projectionMatrix.copy( this.projectionMatrix );\r\n    camera.projectionMatrixInverse.copy( this.projectionMatrixInverse );\r\n\r\n    return camera;\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n    THREE.Camera.call( this );\r\n\r\n    this.left = left;\r\n    this.right = right;\r\n    this.top = top;\r\n    this.bottom = bottom;\r\n\r\n    this.near = ( near !== undefined ) ? near : 0.1;\r\n    this.far = ( far !== undefined ) ? far : 2000;\r\n\r\n    this.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n    this.projectionMatrix.makeOrthographic( this.left, this.right, this.top, this.bottom, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.clone = function () {\r\n\r\n    var camera = new THREE.OrthographicCamera();\r\n\r\n    THREE.Camera.prototype.clone.call( this, camera );\r\n\r\n    camera.left = this.left;\r\n    camera.right = this.right;\r\n    camera.top = this.top;\r\n    camera.bottom = this.bottom;\r\n\r\n    camera.near = this.near;\r\n    camera.far = this.far;\r\n\r\n    return camera;\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n    THREE.Camera.call( this );\r\n\r\n    this.fov = fov !== undefined ? fov : 50;\r\n    this.aspect = aspect !== undefined ? aspect : 1;\r\n    this.near = near !== undefined ? near : 0.1;\r\n    this.far = far !== undefined ? far : 2000;\r\n\r\n    this.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (fullframe) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n    if ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n    this.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n    this.updateProjectionMatrix();\r\n\r\n}\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n    this.fullWidth = fullWidth;\r\n    this.fullHeight = fullHeight;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n    if ( this.fullWidth ) {\r\n\r\n        var aspect = this.fullWidth / this.fullHeight;\r\n        var top = Math.tan( THREE.Math.degToRad( this.fov * 0.5 ) ) * this.near;\r\n        var bottom = -top;\r\n        var left = aspect * bottom;\r\n        var right = aspect * top;\r\n        var width = Math.abs( right - left );\r\n        var height = Math.abs( top - bottom );\r\n\r\n        this.projectionMatrix.makeFrustum(\r\n            left + this.x * width / this.fullWidth,\r\n            left + ( this.x + this.width ) * width / this.fullWidth,\r\n            top - ( this.y + this.height ) * height / this.fullHeight,\r\n            top - this.y * height / this.fullHeight,\r\n            this.near,\r\n            this.far\r\n        );\r\n\r\n    } else {\r\n\r\n        this.projectionMatrix.makePerspective( this.fov, this.aspect, this.near, this.far );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.clone = function () {\r\n\r\n    var camera = new THREE.PerspectiveCamera();\r\n\r\n    THREE.Camera.prototype.clone.call( this, camera );\r\n\r\n    camera.fov = this.fov;\r\n    camera.aspect = this.aspect;\r\n    camera.near = this.near;\r\n    camera.far = this.far;\r\n\r\n    return camera;\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( hex ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.color = new THREE.Color( hex );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Light.prototype.clone = function ( light ) {\r\n\r\n    if ( light === undefined ) light = new THREE.Light();\r\n\r\n    THREE.Object3D.prototype.clone.call( this, light );\r\n\r\n    light.color.copy( this.color );\r\n\r\n    return light;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( hex ) {\r\n\r\n    THREE.Light.call( this, hex );\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.AmbientLight.prototype.clone = function () {\r\n\r\n    var light = new THREE.AmbientLight();\r\n\r\n    THREE.Light.prototype.clone.call( this, light );\r\n\r\n    return light;\r\n\r\n};\r\n\r\n/**\r\n * @author MPanknin / http://www.redplant.de/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.AreaLight = function ( hex, intensity ) {\r\n\r\n    THREE.Light.call( this, hex );\r\n\r\n    this.normal = new THREE.Vector3( 0, -1, 0 );\r\n    this.right = new THREE.Vector3( 1, 0, 0 );\r\n\r\n    this.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n    this.width = 1.0;\r\n    this.height = 1.0;\r\n\r\n    this.constantAttenuation = 1.5;\r\n    this.linearAttenuation = 0.5;\r\n    this.quadraticAttenuation = 0.1;\r\n\r\n};\r\n\r\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( hex, intensity ) {\r\n\r\n    THREE.Light.call( this, hex );\r\n\r\n    this.position.set( 0, 1, 0 );\r\n    this.target = new THREE.Object3D();\r\n\r\n    this.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n    this.castShadow = false;\r\n    this.onlyShadow = false;\r\n\r\n    //\r\n\r\n    this.shadowCameraNear = 50;\r\n    this.shadowCameraFar = 5000;\r\n\r\n    this.shadowCameraLeft = -500;\r\n    this.shadowCameraRight = 500;\r\n    this.shadowCameraTop = 500;\r\n    this.shadowCameraBottom = -500;\r\n\r\n    this.shadowCameraVisible = false;\r\n\r\n    this.shadowBias = 0;\r\n    this.shadowDarkness = 0.5;\r\n\r\n    this.shadowMapWidth = 512;\r\n    this.shadowMapHeight = 512;\r\n\r\n    //\r\n\r\n    this.shadowCascade = false;\r\n\r\n    this.shadowCascadeOffset = new THREE.Vector3( 0, 0, -1000 );\r\n    this.shadowCascadeCount = 2;\r\n\r\n    this.shadowCascadeBias = [ 0, 0, 0 ];\r\n    this.shadowCascadeWidth = [ 512, 512, 512 ];\r\n    this.shadowCascadeHeight = [ 512, 512, 512 ];\r\n\r\n    this.shadowCascadeNearZ = [ -1.000, 0.990, 0.998 ];\r\n    this.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];\r\n\r\n    this.shadowCascadeArray = [];\r\n\r\n    //\r\n\r\n    this.shadowMap = null;\r\n    this.shadowMapSize = null;\r\n    this.shadowCamera = null;\r\n    this.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.DirectionalLight.prototype.clone = function () {\r\n\r\n    var light = new THREE.DirectionalLight();\r\n\r\n    THREE.Light.prototype.clone.call( this, light );\r\n\r\n    light.target = this.target.clone();\r\n\r\n    light.intensity = this.intensity;\r\n\r\n    light.castShadow = this.castShadow;\r\n    light.onlyShadow = this.onlyShadow;\r\n\r\n    return light;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColorHex, groundColorHex, intensity ) {\r\n\r\n    THREE.Light.call( this, skyColorHex );\r\n\r\n    this.position.set( 0, 100, 0 );\r\n\r\n    this.groundColor = new THREE.Color( groundColorHex );\r\n    this.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.HemisphereLight.prototype.clone = function () {\r\n\r\n    var light = new THREE.HemisphereLight();\r\n\r\n    THREE.Light.prototype.clone.call( this, light );\r\n\r\n    light.groundColor.copy( this.groundColor );\r\n    light.intensity = this.intensity;\r\n\r\n    return light;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( hex, intensity, distance ) {\r\n\r\n    THREE.Light.call( this, hex );\r\n\r\n    this.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n    this.distance = ( distance !== undefined ) ? distance : 0;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.PointLight.prototype.clone = function () {\r\n\r\n    var light = new THREE.PointLight();\r\n\r\n    THREE.Light.prototype.clone.call( this, light );\r\n\r\n    light.intensity = this.intensity;\r\n    light.distance = this.distance;\r\n\r\n    return light;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( hex, intensity, distance, angle, exponent ) {\r\n\r\n    THREE.Light.call( this, hex );\r\n\r\n    this.position.set( 0, 1, 0 );\r\n    this.target = new THREE.Object3D();\r\n\r\n    this.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n    this.distance = ( distance !== undefined ) ? distance : 0;\r\n    this.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n    this.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\r\n    this.castShadow = false;\r\n    this.onlyShadow = false;\r\n\r\n    //\r\n\r\n    this.shadowCameraNear = 50;\r\n    this.shadowCameraFar = 5000;\r\n    this.shadowCameraFov = 50;\r\n\r\n    this.shadowCameraVisible = false;\r\n\r\n    this.shadowBias = 0;\r\n    this.shadowDarkness = 0.5;\r\n\r\n    this.shadowMapWidth = 512;\r\n    this.shadowMapHeight = 512;\r\n\r\n    //\r\n\r\n    this.shadowMap = null;\r\n    this.shadowMapSize = null;\r\n    this.shadowCamera = null;\r\n    this.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.SpotLight.prototype.clone = function () {\r\n\r\n    var light = new THREE.SpotLight();\r\n\r\n    THREE.Light.prototype.clone.call( this, light );\r\n\r\n    light.target = this.target.clone();\r\n\r\n    light.intensity = this.intensity;\r\n    light.distance = this.distance;\r\n    light.angle = this.angle;\r\n    light.exponent = this.exponent;\r\n\r\n    light.castShadow = this.castShadow;\r\n    light.onlyShadow = this.onlyShadow;\r\n\r\n    return light;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function ( showStatus ) {\r\n\r\n    this.showStatus = showStatus;\r\n    this.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\r\n\r\n    this.onLoadStart = function () {};\r\n    this.onLoadProgress = function () {};\r\n    this.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n    constructor: THREE.Loader,\r\n\r\n    crossOrigin: 'anonymous',\r\n\r\n    addStatusElement: function () {\r\n\r\n        var e = document.createElement( \"div\" );\r\n\r\n        e.style.position = \"absolute\";\r\n        e.style.right = \"0px\";\r\n        e.style.top = \"0px\";\r\n        e.style.fontSize = \"0.8em\";\r\n        e.style.textAlign = \"left\";\r\n        e.style.background = \"rgba(0,0,0,0.25)\";\r\n        e.style.color = \"#fff\";\r\n        e.style.width = \"120px\";\r\n        e.style.padding = \"0.5em 0.5em 0.5em 0.5em\";\r\n        e.style.zIndex = 1000;\r\n\r\n        e.innerHTML = \"Loading ...\";\r\n\r\n        return e;\r\n\r\n    },\r\n\r\n    updateProgress: function ( progress ) {\r\n\r\n        var message = \"Loaded \";\r\n\r\n        if ( progress.total ) {\r\n\r\n            message += ( 100 * progress.loaded / progress.total ).toFixed(0) + \"%\";\r\n\r\n\r\n        } else {\r\n\r\n            message += ( progress.loaded / 1000 ).toFixed(2) + \" KB\";\r\n\r\n        }\r\n\r\n        this.statusDomElement.innerHTML = message;\r\n\r\n    },\r\n\r\n    extractUrlBase: function ( url ) {\r\n\r\n        var parts = url.split( '/' );\r\n        parts.pop();\r\n        return ( parts.length < 1 ? '.' : parts.join( '/' ) ) + '/';\r\n\r\n    },\r\n\r\n    initMaterials: function ( materials, texturePath ) {\r\n\r\n        var array = [];\r\n\r\n        for ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n            array[ i ] = THREE.Loader.prototype.createMaterial( materials[ i ], texturePath );\r\n\r\n        }\r\n\r\n        return array;\r\n\r\n    },\r\n\r\n    needsTangents: function ( materials ) {\r\n\r\n        for( var i = 0, il = materials.length; i < il; i ++ ) {\r\n\r\n            var m = materials[ i ];\r\n\r\n            if ( m instanceof THREE.ShaderMaterial ) return true;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    },\r\n\r\n    createMaterial: function ( m, texturePath ) {\r\n\r\n        var _this = this;\r\n\r\n        function is_pow2( n ) {\r\n\r\n            var l = Math.log( n ) / Math.LN2;\r\n            return Math.floor( l ) == l;\r\n\r\n        }\r\n\r\n        function nearest_pow2( n ) {\r\n\r\n            var l = Math.log( n ) / Math.LN2;\r\n            return Math.pow( 2, Math.round(  l ) );\r\n\r\n        }\r\n\r\n        function load_image( where, url ) {\r\n\r\n            var image = new Image();\r\n\r\n            image.onload = function () {\r\n\r\n                if ( !is_pow2( this.width ) || !is_pow2( this.height ) ) {\r\n\r\n                    var width = nearest_pow2( this.width );\r\n                    var height = nearest_pow2( this.height );\r\n\r\n                    where.image.width = width;\r\n                    where.image.height = height;\r\n                    where.image.getContext( '2d' ).drawImage( this, 0, 0, width, height );\r\n\r\n                } else {\r\n\r\n                    where.image = this;\r\n\r\n                }\r\n\r\n                where.needsUpdate = true;\r\n\r\n            };\r\n\r\n            image.crossOrigin = _this.crossOrigin;\r\n            image.src = url;\r\n\r\n        }\r\n\r\n        function create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n            var isCompressed = /\\.dds$/i.test( sourceFile );\r\n            var fullPath = texturePath + \"/\" + sourceFile;\r\n\r\n            if ( isCompressed ) {\r\n\r\n                var texture = THREE.ImageUtils.loadCompressedTexture( fullPath );\r\n\r\n                where[ name ] = texture;\r\n\r\n            } else {\r\n\r\n                var texture = document.createElement( 'canvas' );\r\n\r\n                where[ name ] = new THREE.Texture( texture );\r\n\r\n            }\r\n\r\n            where[ name ].sourceFile = sourceFile;\r\n\r\n            if( repeat ) {\r\n\r\n                where[ name ].repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n                if ( repeat[ 0 ] !== 1 ) where[ name ].wrapS = THREE.RepeatWrapping;\r\n                if ( repeat[ 1 ] !== 1 ) where[ name ].wrapT = THREE.RepeatWrapping;\r\n\r\n            }\r\n\r\n            if ( offset ) {\r\n\r\n                where[ name ].offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n            }\r\n\r\n            if ( wrap ) {\r\n\r\n                var wrapMap = {\r\n                    \"repeat\": THREE.RepeatWrapping,\r\n                    \"mirror\": THREE.MirroredRepeatWrapping\r\n                }\r\n\r\n                if ( wrapMap[ wrap[ 0 ] ] !== undefined ) where[ name ].wrapS = wrapMap[ wrap[ 0 ] ];\r\n                if ( wrapMap[ wrap[ 1 ] ] !== undefined ) where[ name ].wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n            }\r\n\r\n            if ( anisotropy ) {\r\n\r\n                where[ name ].anisotropy = anisotropy;\r\n\r\n            }\r\n\r\n            if ( ! isCompressed ) {\r\n\r\n                load_image( where[ name ], fullPath );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function rgb2hex( rgb ) {\r\n\r\n            return ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n        }\r\n\r\n        // defaults\r\n\r\n        var mtype = \"MeshLambertMaterial\";\r\n        var mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\r\n\r\n        // parameters from model file\r\n\r\n        if ( m.shading ) {\r\n\r\n            var shading = m.shading.toLowerCase();\r\n\r\n            if ( shading === \"phong\" ) mtype = \"MeshPhongMaterial\";\r\n            else if ( shading === \"basic\" ) mtype = \"MeshBasicMaterial\";\r\n\r\n        }\r\n\r\n        if ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n            mpars.blending = THREE[ m.blending ];\r\n\r\n        }\r\n\r\n        if ( m.transparent !== undefined || m.opacity < 1.0 ) {\r\n\r\n            mpars.transparent = m.transparent;\r\n\r\n        }\r\n\r\n        if ( m.depthTest !== undefined ) {\r\n\r\n            mpars.depthTest = m.depthTest;\r\n\r\n        }\r\n\r\n        if ( m.depthWrite !== undefined ) {\r\n\r\n            mpars.depthWrite = m.depthWrite;\r\n\r\n        }\r\n\r\n        if ( m.visible !== undefined ) {\r\n\r\n            mpars.visible = m.visible;\r\n\r\n        }\r\n\r\n        if ( m.flipSided !== undefined ) {\r\n\r\n            mpars.side = THREE.BackSide;\r\n\r\n        }\r\n\r\n        if ( m.doubleSided !== undefined ) {\r\n\r\n            mpars.side = THREE.DoubleSide;\r\n\r\n        }\r\n\r\n        if ( m.wireframe !== undefined ) {\r\n\r\n            mpars.wireframe = m.wireframe;\r\n\r\n        }\r\n\r\n        if ( m.vertexColors !== undefined ) {\r\n\r\n            if ( m.vertexColors === \"face\" ) {\r\n\r\n                mpars.vertexColors = THREE.FaceColors;\r\n\r\n            } else if ( m.vertexColors ) {\r\n\r\n                mpars.vertexColors = THREE.VertexColors;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // colors\r\n\r\n        if ( m.colorDiffuse ) {\r\n\r\n            mpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n        } else if ( m.DbgColor ) {\r\n\r\n            mpars.color = m.DbgColor;\r\n\r\n        }\r\n\r\n        if ( m.colorSpecular ) {\r\n\r\n            mpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n        }\r\n\r\n        if ( m.colorAmbient ) {\r\n\r\n            mpars.ambient = rgb2hex( m.colorAmbient );\r\n\r\n        }\r\n\r\n        // modifiers\r\n\r\n        if ( m.transparency ) {\r\n\r\n            mpars.opacity = m.transparency;\r\n\r\n        }\r\n\r\n        if ( m.specularCoef ) {\r\n\r\n            mpars.shininess = m.specularCoef;\r\n\r\n        }\r\n\r\n        // textures\r\n\r\n        if ( m.mapDiffuse && texturePath ) {\r\n\r\n            create_texture( mpars, \"map\", m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n        }\r\n\r\n        if ( m.mapLight && texturePath ) {\r\n\r\n            create_texture( mpars, \"lightMap\", m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n        }\r\n\r\n        if ( m.mapBump && texturePath ) {\r\n\r\n            create_texture( mpars, \"bumpMap\", m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n        }\r\n\r\n        if ( m.mapNormal && texturePath ) {\r\n\r\n            create_texture( mpars, \"normalMap\", m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n        }\r\n\r\n        if ( m.mapSpecular && texturePath ) {\r\n\r\n            create_texture( mpars, \"specularMap\", m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n        }\r\n\r\n        //\r\n\r\n        if ( m.mapBumpScale ) {\r\n\r\n            mpars.bumpScale = m.mapBumpScale;\r\n\r\n        }\r\n\r\n        // special case for normal mapped material\r\n\r\n        if ( m.mapNormal ) {\r\n\r\n            var shader = THREE.ShaderLib[ \"normalmap\" ];\r\n            var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n            uniforms[ \"tNormal\" ].value = mpars.normalMap;\r\n\r\n            if ( m.mapNormalFactor ) {\r\n\r\n                uniforms[ \"uNormalScale\" ].value.set( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n            }\r\n\r\n            if ( mpars.map ) {\r\n\r\n                uniforms[ \"tDiffuse\" ].value = mpars.map;\r\n                uniforms[ \"enableDiffuse\" ].value = true;\r\n\r\n            }\r\n\r\n            if ( mpars.specularMap ) {\r\n\r\n                uniforms[ \"tSpecular\" ].value = mpars.specularMap;\r\n                uniforms[ \"enableSpecular\" ].value = true;\r\n\r\n            }\r\n\r\n            if ( mpars.lightMap ) {\r\n\r\n                uniforms[ \"tAO\" ].value = mpars.lightMap;\r\n                uniforms[ \"enableAO\" ].value = true;\r\n\r\n            }\r\n\r\n            // for the moment don't handle displacement texture\r\n\r\n            uniforms[ \"uDiffuseColor\" ].value.setHex( mpars.color );\r\n            uniforms[ \"uSpecularColor\" ].value.setHex( mpars.specular );\r\n            uniforms[ \"uAmbientColor\" ].value.setHex( mpars.ambient );\r\n\r\n            uniforms[ \"uShininess\" ].value = mpars.shininess;\r\n\r\n            if ( mpars.opacity !== undefined ) {\r\n\r\n                uniforms[ \"uOpacity\" ].value = mpars.opacity;\r\n\r\n            }\r\n\r\n            var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };\r\n            var material = new THREE.ShaderMaterial( parameters );\r\n\r\n            if ( mpars.transparent ) {\r\n\r\n                material.transparent = true;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            var material = new THREE[ mtype ]( mpars );\r\n\r\n        }\r\n\r\n        if ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n        return material;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n    constructor: THREE.XHRLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n        var request = new XMLHttpRequest();\r\n\r\n        if ( onLoad !== undefined ) {\r\n\r\n            request.addEventListener( 'load', function ( event ) {\r\n\r\n                onLoad( event.target.responseText );\r\n                scope.manager.itemEnd( url );\r\n\r\n            }, false );\r\n\r\n        }\r\n\r\n        if ( onProgress !== undefined ) {\r\n\r\n            request.addEventListener( 'progress', function ( event ) {\r\n\r\n                onProgress( event );\r\n\r\n            }, false );\r\n\r\n        }\r\n\r\n        if ( onError !== undefined ) {\r\n\r\n            request.addEventListener( 'error', function ( event ) {\r\n\r\n                onError( event );\r\n\r\n            }, false );\r\n\r\n        }\r\n\r\n        if ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\r\n        request.open( 'GET', url, true );\r\n        request.send( null );\r\n\r\n        scope.manager.itemStart( url );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n    constructor: THREE.ImageLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n        var image = document.createElement( 'img' );\r\n\r\n        if ( onLoad !== undefined ) {\r\n\r\n            image.addEventListener( 'load', function ( event ) {\r\n\r\n                scope.manager.itemEnd( url );\r\n                onLoad( this );\r\n\r\n            }, false );\r\n\r\n        }\r\n\r\n        if ( onProgress !== undefined ) {\r\n\r\n            image.addEventListener( 'progress', function ( event ) {\r\n\r\n                onProgress( event );\r\n\r\n            }, false );\r\n\r\n        }\r\n\r\n        if ( onError !== undefined ) {\r\n\r\n            image.addEventListener( 'error', function ( event ) {\r\n\r\n                onError( event );\r\n\r\n            }, false );\r\n\r\n        }\r\n\r\n        if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n        image.src = url;\r\n\r\n        scope.manager.itemStart( url );\r\n\r\n        return image;\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( showStatus ) {\r\n\r\n    THREE.Loader.call( this, showStatus );\r\n\r\n    this.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\r\n\r\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\r\n\r\n    var scope = this;\r\n\r\n    // todo: unify load API to for easier SceneLoader use\r\n\r\n    texturePath = texturePath && ( typeof texturePath === \"string\" ) ? texturePath : this.extractUrlBase( url );\r\n\r\n    this.onLoadStart();\r\n    this.loadAjaxJSON( this, url, callback, texturePath );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\r\n\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    var length = 0;\r\n\r\n    xhr.onreadystatechange = function () {\r\n\r\n        if ( xhr.readyState === xhr.DONE ) {\r\n\r\n            if ( xhr.status === 200 || xhr.status === 0 ) {\r\n\r\n                if ( xhr.responseText ) {\r\n\r\n                    var json = JSON.parse( xhr.responseText );\r\n                    var result = context.parse( json, texturePath );\r\n                    callback( result.geometry, result.materials );\r\n\r\n                } else {\r\n\r\n                    console.warn( \"THREE.JSONLoader: [\" + url + \"] seems to be unreachable or file there is empty\" );\r\n\r\n                }\r\n\r\n                // in context of more complex asset initialization\r\n                // do not block on single failed file\r\n                // maybe should go even one more level up\r\n\r\n                context.onLoadComplete();\r\n\r\n            } else {\r\n\r\n                console.error( \"THREE.JSONLoader: Couldn't load [\" + url + \"] [\" + xhr.status + \"]\" );\r\n\r\n            }\r\n\r\n        } else if ( xhr.readyState === xhr.LOADING ) {\r\n\r\n            if ( callbackProgress ) {\r\n\r\n                if ( length === 0 ) {\r\n\r\n                    length = xhr.getResponseHeader( \"Content-Length\" );\r\n\r\n                }\r\n\r\n                callbackProgress( { total: length, loaded: xhr.responseText.length } );\r\n\r\n            }\r\n\r\n        } else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\r\n\r\n            if ( callbackProgress !== undefined ) {\r\n\r\n                length = xhr.getResponseHeader( \"Content-Length\" );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    xhr.open( \"GET\", url, true );\r\n    xhr.withCredentials = this.withCredentials;\r\n    xhr.send( null );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\r\n\r\n    var scope = this,\r\n        geometry = new THREE.Geometry(),\r\n        scale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n    parseModel( scale );\r\n\r\n    parseSkin();\r\n    parseMorphing( scale );\r\n\r\n    geometry.computeCentroids();\r\n    geometry.computeFaceNormals();\r\n    geometry.computeBoundingSphere();\r\n\r\n    function parseModel( scale ) {\r\n\r\n        function isBitSet( value, position ) {\r\n\r\n            return value & ( 1 << position );\r\n\r\n        }\r\n\r\n        var i, j, fi,\r\n\r\n            offset, zLength,\r\n\r\n            colorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n            type,\r\n            isQuad,\r\n            hasMaterial,\r\n            hasFaceVertexUv,\r\n            hasFaceNormal, hasFaceVertexNormal,\r\n            hasFaceColor, hasFaceVertexColor,\r\n\r\n            vertex, face, faceA, faceB, color, hex, normal,\r\n\r\n            uvLayer, uv, u, v,\r\n\r\n            faces = json.faces,\r\n            vertices = json.vertices,\r\n            normals = json.normals,\r\n            colors = json.colors,\r\n\r\n            nUvLayers = 0;\r\n\r\n        if ( json.uvs !== undefined ) {\r\n\r\n            // disregard empty arrays\r\n\r\n            for ( i = 0; i < json.uvs.length; i++ ) {\r\n\r\n                if ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n            }\r\n\r\n            for ( i = 0; i < nUvLayers; i++ ) {\r\n\r\n                geometry.faceVertexUvs[ i ] = [];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        offset = 0;\r\n        zLength = vertices.length;\r\n\r\n        while ( offset < zLength ) {\r\n\r\n            vertex = new THREE.Vector3();\r\n\r\n            vertex.x = vertices[ offset ++ ] * scale;\r\n            vertex.y = vertices[ offset ++ ] * scale;\r\n            vertex.z = vertices[ offset ++ ] * scale;\r\n\r\n            geometry.vertices.push( vertex );\r\n\r\n        }\r\n\r\n        offset = 0;\r\n        zLength = faces.length;\r\n\r\n        while ( offset < zLength ) {\r\n\r\n            type = faces[ offset ++ ];\r\n\r\n\r\n            isQuad              = isBitSet( type, 0 );\r\n            hasMaterial         = isBitSet( type, 1 );\r\n            hasFaceVertexUv     = isBitSet( type, 3 );\r\n            hasFaceNormal       = isBitSet( type, 4 );\r\n            hasFaceVertexNormal = isBitSet( type, 5 );\r\n            hasFaceColor\t    = isBitSet( type, 6 );\r\n            hasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n            // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n            if ( isQuad ) {\r\n\r\n                faceA = new THREE.Face3();\r\n                faceA.a = faces[ offset ];\r\n                faceA.b = faces[ offset + 1 ];\r\n                faceA.c = faces[ offset + 3 ];\r\n\r\n                faceB = new THREE.Face3();\r\n                faceB.a = faces[ offset + 1 ];\r\n                faceB.b = faces[ offset + 2 ];\r\n                faceB.c = faces[ offset + 3 ];\r\n\r\n                offset += 4;\r\n\r\n                if ( hasMaterial ) {\r\n\r\n                    materialIndex = faces[ offset ++ ];\r\n                    faceA.materialIndex = materialIndex;\r\n                    faceB.materialIndex = materialIndex;\r\n\r\n                }\r\n\r\n                // to get face <=> uv index correspondence\r\n\r\n                fi = geometry.faces.length;\r\n\r\n                if ( hasFaceVertexUv ) {\r\n\r\n                    for ( i = 0; i < nUvLayers; i++ ) {\r\n\r\n                        uvLayer = json.uvs[ i ];\r\n\r\n                        geometry.faceVertexUvs[ i ][ fi ] = [];\r\n                        geometry.faceVertexUvs[ i ][ fi + 1 ] = []\r\n\r\n                        for ( j = 0; j < 4; j ++ ) {\r\n\r\n                            uvIndex = faces[ offset ++ ];\r\n\r\n                            u = uvLayer[ uvIndex * 2 ];\r\n                            v = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n                            uv = new THREE.Vector2( u, v );\r\n\r\n                            if ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n                            if ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if ( hasFaceNormal ) {\r\n\r\n                    normalIndex = faces[ offset ++ ] * 3;\r\n\r\n                    faceA.normal.set(\r\n                        normals[ normalIndex ++ ],\r\n                        normals[ normalIndex ++ ],\r\n                        normals[ normalIndex ]\r\n                    );\r\n\r\n                    faceB.normal.copy( faceA.normal );\r\n\r\n                }\r\n\r\n                if ( hasFaceVertexNormal ) {\r\n\r\n                    for ( i = 0; i < 4; i++ ) {\r\n\r\n                        normalIndex = faces[ offset ++ ] * 3;\r\n\r\n                        normal = new THREE.Vector3(\r\n                            normals[ normalIndex ++ ],\r\n                            normals[ normalIndex ++ ],\r\n                            normals[ normalIndex ]\r\n                        );\r\n\r\n\r\n                        if ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n                        if ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if ( hasFaceColor ) {\r\n\r\n                    colorIndex = faces[ offset ++ ];\r\n                    hex = colors[ colorIndex ];\r\n\r\n                    faceA.color.setHex( hex );\r\n                    faceB.color.setHex( hex );\r\n\r\n                }\r\n\r\n\r\n                if ( hasFaceVertexColor ) {\r\n\r\n                    for ( i = 0; i < 4; i++ ) {\r\n\r\n                        colorIndex = faces[ offset ++ ];\r\n                        hex = colors[ colorIndex ];\r\n\r\n                        if ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n                        if ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                geometry.faces.push( faceA );\r\n                geometry.faces.push( faceB );\r\n\r\n            } else {\r\n\r\n                face = new THREE.Face3();\r\n                face.a = faces[ offset ++ ];\r\n                face.b = faces[ offset ++ ];\r\n                face.c = faces[ offset ++ ];\r\n\r\n                if ( hasMaterial ) {\r\n\r\n                    materialIndex = faces[ offset ++ ];\r\n                    face.materialIndex = materialIndex;\r\n\r\n                }\r\n\r\n                // to get face <=> uv index correspondence\r\n\r\n                fi = geometry.faces.length;\r\n\r\n                if ( hasFaceVertexUv ) {\r\n\r\n                    for ( i = 0; i < nUvLayers; i++ ) {\r\n\r\n                        uvLayer = json.uvs[ i ];\r\n\r\n                        geometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n                        for ( j = 0; j < 3; j ++ ) {\r\n\r\n                            uvIndex = faces[ offset ++ ];\r\n\r\n                            u = uvLayer[ uvIndex * 2 ];\r\n                            v = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n                            uv = new THREE.Vector2( u, v );\r\n\r\n                            geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if ( hasFaceNormal ) {\r\n\r\n                    normalIndex = faces[ offset ++ ] * 3;\r\n\r\n                    face.normal.set(\r\n                        normals[ normalIndex ++ ],\r\n                        normals[ normalIndex ++ ],\r\n                        normals[ normalIndex ]\r\n                    );\r\n\r\n                }\r\n\r\n                if ( hasFaceVertexNormal ) {\r\n\r\n                    for ( i = 0; i < 3; i++ ) {\r\n\r\n                        normalIndex = faces[ offset ++ ] * 3;\r\n\r\n                        normal = new THREE.Vector3(\r\n                            normals[ normalIndex ++ ],\r\n                            normals[ normalIndex ++ ],\r\n                            normals[ normalIndex ]\r\n                        );\r\n\r\n                        face.vertexNormals.push( normal );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if ( hasFaceColor ) {\r\n\r\n                    colorIndex = faces[ offset ++ ];\r\n                    face.color.setHex( colors[ colorIndex ] );\r\n\r\n                }\r\n\r\n\r\n                if ( hasFaceVertexColor ) {\r\n\r\n                    for ( i = 0; i < 3; i++ ) {\r\n\r\n                        colorIndex = faces[ offset ++ ];\r\n                        face.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                geometry.faces.push( face );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function parseSkin() {\r\n\r\n        var i, l, x, y, z, w, a, b, c, d;\r\n\r\n        if ( json.skinWeights ) {\r\n\r\n            for ( i = 0, l = json.skinWeights.length; i < l; i += 2 ) {\r\n\r\n                x = json.skinWeights[ i     ];\r\n                y = json.skinWeights[ i + 1 ];\r\n                z = 0;\r\n                w = 0;\r\n\r\n                geometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( json.skinIndices ) {\r\n\r\n            for ( i = 0, l = json.skinIndices.length; i < l; i += 2 ) {\r\n\r\n                a = json.skinIndices[ i     ];\r\n                b = json.skinIndices[ i + 1 ];\r\n                c = 0;\r\n                d = 0;\r\n\r\n                geometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        geometry.bones = json.bones;\r\n        geometry.animation = json.animation;\r\n\r\n    };\r\n\r\n    function parseMorphing( scale ) {\r\n\r\n        if ( json.morphTargets !== undefined ) {\r\n\r\n            var i, l, v, vl, dstVertices, srcVertices;\r\n\r\n            for ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n                geometry.morphTargets[ i ] = {};\r\n                geometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n                geometry.morphTargets[ i ].vertices = [];\r\n\r\n                dstVertices = geometry.morphTargets[ i ].vertices;\r\n                srcVertices = json.morphTargets [ i ].vertices;\r\n\r\n                for( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n                    var vertex = new THREE.Vector3();\r\n                    vertex.x = srcVertices[ v ] * scale;\r\n                    vertex.y = srcVertices[ v + 1 ] * scale;\r\n                    vertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n                    dstVertices.push( vertex );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( json.morphColors !== undefined ) {\r\n\r\n            var i, l, c, cl, dstColors, srcColors, color;\r\n\r\n            for ( i = 0, l = json.morphColors.length; i < l; i++ ) {\r\n\r\n                geometry.morphColors[ i ] = {};\r\n                geometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n                geometry.morphColors[ i ].colors = [];\r\n\r\n                dstColors = geometry.morphColors[ i ].colors;\r\n                srcColors = json.morphColors [ i ].colors;\r\n\r\n                for ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n                    color = new THREE.Color( 0xffaa00 );\r\n                    color.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n                    dstColors.push( color );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    if ( json.materials === undefined ) {\r\n\r\n        return { geometry: geometry };\r\n\r\n    } else {\r\n\r\n        var materials = this.initMaterials( json.materials, texturePath );\r\n\r\n        if ( this.needsTangents( materials ) ) {\r\n\r\n            geometry.computeTangents();\r\n\r\n        }\r\n\r\n        return { geometry: geometry, materials: materials };\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n    var scope = this;\r\n\r\n    var loaded = 0, total = 0;\r\n\r\n    this.onLoad = onLoad;\r\n    this.onProgress = onProgress;\r\n    this.onError = onError;\r\n\r\n    this.itemStart = function ( url ) {\r\n\r\n        total ++;\r\n\r\n    };\r\n\r\n    this.itemEnd = function ( url ) {\r\n\r\n        loaded ++;\r\n\r\n        if ( scope.onProgress !== undefined ) {\r\n\r\n            scope.onProgress( url, loaded, total );\r\n\r\n        }\r\n\r\n        if ( loaded === total && scope.onLoad !== undefined ) {\r\n\r\n            scope.onLoad();\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n    constructor: THREE.BufferGeometryLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.XHRLoader();\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( text ) {\r\n\r\n            onLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    },\r\n\r\n    parse: function ( json ) {\r\n\r\n        var geometry = new THREE.BufferGeometry();\r\n\r\n        var attributes = json.attributes;\r\n        var offsets = json.offsets;\r\n        var boundingSphere = json.boundingSphere;\r\n\r\n        for ( var key in attributes ) {\r\n\r\n            var attribute = attributes[ key ];\r\n\r\n            geometry.attributes[ key ] = {\r\n                itemSize: attribute.itemSize,\r\n                array: new self[ attribute.type ]( attribute.array )\r\n            }\r\n\r\n        }\r\n\r\n        if ( offsets !== undefined ) {\r\n\r\n            geometry.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n        }\r\n\r\n        if ( boundingSphere !== undefined ) {\r\n\r\n            geometry.boundingSphere = new THREE.Sphere(\r\n                new THREE.Vector3().fromArray( boundingSphere.center !== undefined ? boundingSphere.center : [ 0, 0, 0 ] ),\r\n                boundingSphere.radius\r\n            );\r\n\r\n        }\r\n\r\n        return geometry;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.GeometryLoader.prototype = {\r\n\r\n    constructor: THREE.GeometryLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.XHRLoader();\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( text ) {\r\n\r\n            onLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    },\r\n\r\n    parse: function ( json ) {\r\n\r\n\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n    constructor: THREE.MaterialLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.XHRLoader();\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( text ) {\r\n\r\n            onLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    },\r\n\r\n    parse: function ( json ) {\r\n\r\n        var material = new THREE[ json.type ];\r\n\r\n        if ( json.color !== undefined ) material.color.setHex( json.color );\r\n        if ( json.ambient !== undefined ) material.ambient.setHex( json.ambient );\r\n        if ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n        if ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n        if ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n        if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n        if ( json.blending !== undefined ) material.blending = json.blending;\r\n        if ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n        if ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n        if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\r\n        if ( json.materials !== undefined ) {\r\n\r\n            for ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n                material.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return material;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n    constructor: THREE.ObjectLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.XHRLoader( scope.manager );\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( text ) {\r\n\r\n            onLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    },\r\n\r\n    parse: function ( json ) {\r\n\r\n        var geometries = this.parseGeometries( json.geometries );\r\n        var materials = this.parseMaterials( json.materials );\r\n        var object = this.parseObject( json.object, geometries, materials );\r\n\r\n        return object;\r\n\r\n    },\r\n\r\n    parseGeometries: function ( json ) {\r\n\r\n        var geometries = {};\r\n\r\n        if ( json !== undefined ) {\r\n\r\n            var geometryLoader = new THREE.JSONLoader();\r\n            var bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n            for ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n                var geometry;\r\n                var data = json[ i ];\r\n\r\n                switch ( data.type ) {\r\n\r\n                    case 'PlaneGeometry':\r\n\r\n                        geometry = new THREE.PlaneGeometry(\r\n                            data.width,\r\n                            data.height,\r\n                            data.widthSegments,\r\n                            data.heightSegments\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'CircleGeometry':\r\n\r\n                        geometry = new THREE.CircleGeometry(\r\n                            data.radius,\r\n                            data.segments\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'CubeGeometry':\r\n\r\n                        geometry = new THREE.CubeGeometry(\r\n                            data.width,\r\n                            data.height,\r\n                            data.depth,\r\n                            data.widthSegments,\r\n                            data.heightSegments,\r\n                            data.depthSegments\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'CylinderGeometry':\r\n\r\n                        geometry = new THREE.CylinderGeometry(\r\n                            data.radiusTop,\r\n                            data.radiusBottom,\r\n                            data.height,\r\n                            data.radiusSegments,\r\n                            data.heightSegments,\r\n                            data.openEnded\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'SphereGeometry':\r\n\r\n                        geometry = new THREE.SphereGeometry(\r\n                            data.radius,\r\n                            data.widthSegments,\r\n                            data.heightSegments,\r\n                            data.phiStart,\r\n                            data.phiLength,\r\n                            data.thetaStart,\r\n                            data.thetaLength\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'IcosahedronGeometry':\r\n\r\n                        geometry = new THREE.IcosahedronGeometry(\r\n                            data.radius,\r\n                            data.detail\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'TorusGeometry':\r\n\r\n                        geometry = new THREE.TorusGeometry(\r\n                            data.radius,\r\n                            data.tube,\r\n                            data.radialSegments,\r\n                            data.tubularSegments,\r\n                            data.arc\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'TorusKnotGeometry':\r\n\r\n                        geometry = new THREE.TorusKnotGeometry(\r\n                            data.radius,\r\n                            data.tube,\r\n                            data.radialSegments,\r\n                            data.tubularSegments,\r\n                            data.p,\r\n                            data.q,\r\n                            data.heightScale\r\n                        );\r\n\r\n                        break;\r\n\r\n                    case 'BufferGeometry':\r\n\r\n                        geometry = bufferGeometryLoader.parse( data.data );\r\n\r\n                        break;\r\n\r\n                    case 'Geometry':\r\n\r\n                        geometry = geometryLoader.parse( data.data ).geometry;\r\n\r\n                        break;\r\n\r\n                }\r\n\r\n                geometry.uuid = data.uuid;\r\n\r\n                if ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n                geometries[ data.uuid ] = geometry;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return geometries;\r\n\r\n    },\r\n\r\n    parseMaterials: function ( json ) {\r\n\r\n        var materials = {};\r\n\r\n        if ( json !== undefined ) {\r\n\r\n            var loader = new THREE.MaterialLoader();\r\n\r\n            for ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n                var data = json[ i ];\r\n                var material = loader.parse( data );\r\n\r\n                material.uuid = data.uuid;\r\n\r\n                if ( data.name !== undefined ) material.name = data.name;\r\n\r\n                materials[ data.uuid ] = material;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return materials;\r\n\r\n    },\r\n\r\n    parseObject: function () {\r\n\r\n        var matrix = new THREE.Matrix4();\r\n\r\n        return function ( data, geometries, materials ) {\r\n\r\n            var object;\r\n\r\n            switch ( data.type ) {\r\n\r\n                case 'Scene':\r\n\r\n                    object = new THREE.Scene();\r\n\r\n                    break;\r\n\r\n                case 'PerspectiveCamera':\r\n\r\n                    object = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n                    break;\r\n\r\n                case 'OrthographicCamera':\r\n\r\n                    object = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n                    break;\r\n\r\n                case 'AmbientLight':\r\n\r\n                    object = new THREE.AmbientLight( data.color );\r\n\r\n                    break;\r\n\r\n                case 'DirectionalLight':\r\n\r\n                    object = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n                    break;\r\n\r\n                case 'PointLight':\r\n\r\n                    object = new THREE.PointLight( data.color, data.intensity, data.distance );\r\n\r\n                    break;\r\n\r\n                case 'SpotLight':\r\n\r\n                    object = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent );\r\n\r\n                    break;\r\n\r\n                case 'HemisphereLight':\r\n\r\n                    object = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n                    break;\r\n\r\n                case 'Mesh':\r\n\r\n                    var geometry = geometries[ data.geometry ];\r\n                    var material = materials[ data.material ];\r\n\r\n                    if ( geometry === undefined ) {\r\n\r\n                        console.error( 'THREE.ObjectLoader: Undefined geometry ' + data.geometry );\r\n\r\n                    }\r\n\r\n                    if ( material === undefined ) {\r\n\r\n                        console.error( 'THREE.ObjectLoader: Undefined material ' + data.material );\r\n\r\n                    }\r\n\r\n                    object = new THREE.Mesh( geometry, material );\r\n\r\n                    break;\r\n\r\n                default:\r\n\r\n                    object = new THREE.Object3D();\r\n\r\n            }\r\n\r\n            object.uuid = data.uuid;\r\n\r\n            if ( data.name !== undefined ) object.name = data.name;\r\n            if ( data.matrix !== undefined ) {\r\n\r\n                matrix.fromArray( data.matrix );\r\n                matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n            } else {\r\n\r\n                if ( data.position !== undefined ) object.position.fromArray( data.position );\r\n                if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n                if ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n            }\r\n\r\n            if ( data.visible !== undefined ) object.visible = data.visible;\r\n            if ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n            if ( data.children !== undefined ) {\r\n\r\n                for ( var child in data.children ) {\r\n\r\n                    object.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return object;\r\n\r\n        }\r\n\r\n    }()\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneLoader = function () {\r\n\r\n    this.onLoadStart = function () {};\r\n    this.onLoadProgress = function() {};\r\n    this.onLoadComplete = function () {};\r\n\r\n    this.callbackSync = function () {};\r\n    this.callbackProgress = function () {};\r\n\r\n    this.geometryHandlers = {};\r\n    this.hierarchyHandlers = {};\r\n\r\n    this.addGeometryHandler( \"ascii\", THREE.JSONLoader );\r\n\r\n};\r\n\r\nTHREE.SceneLoader.prototype = {\r\n\r\n    constructor: THREE.SceneLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.XHRLoader( scope.manager );\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( text ) {\r\n\r\n            scope.parse( JSON.parse( text ), onLoad, url );\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    },\r\n\r\n    addGeometryHandler: function ( typeID, loaderClass ) {\r\n\r\n        this.geometryHandlers[ typeID ] = { \"loaderClass\": loaderClass };\r\n\r\n    },\r\n\r\n    addHierarchyHandler: function ( typeID, loaderClass ) {\r\n\r\n        this.hierarchyHandlers[ typeID ] = { \"loaderClass\": loaderClass };\r\n\r\n    },\r\n\r\n    parse: function ( json, callbackFinished, url ) {\r\n\r\n        var scope = this;\r\n\r\n        var urlBase = THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n        var geometry, material, camera, fog,\r\n            texture, images, color,\r\n            light, hex, intensity,\r\n            counter_models, counter_textures,\r\n            total_models, total_textures,\r\n            result;\r\n\r\n        var target_array = [];\r\n\r\n        var data = json;\r\n\r\n        // async geometry loaders\r\n\r\n        for ( var typeID in this.geometryHandlers ) {\r\n\r\n            var loaderClass = this.geometryHandlers[ typeID ][ \"loaderClass\" ];\r\n            this.geometryHandlers[ typeID ][ \"loaderObject\" ] = new loaderClass();\r\n\r\n        }\r\n\r\n        // async hierachy loaders\r\n\r\n        for ( var typeID in this.hierarchyHandlers ) {\r\n\r\n            var loaderClass = this.hierarchyHandlers[ typeID ][ \"loaderClass\" ];\r\n            this.hierarchyHandlers[ typeID ][ \"loaderObject\" ] = new loaderClass();\r\n\r\n        }\r\n\r\n        counter_models = 0;\r\n        counter_textures = 0;\r\n\r\n        result = {\r\n\r\n            scene: new THREE.Scene(),\r\n            geometries: {},\r\n            face_materials: {},\r\n            materials: {},\r\n            textures: {},\r\n            objects: {},\r\n            cameras: {},\r\n            lights: {},\r\n            fogs: {},\r\n            empties: {},\r\n            groups: {}\r\n\r\n        };\r\n\r\n        if ( data.transform ) {\r\n\r\n            var position = data.transform.position,\r\n                rotation = data.transform.rotation,\r\n                scale = data.transform.scale;\r\n\r\n            if ( position ) {\r\n\r\n                result.scene.position.fromArray( position );\r\n\r\n            }\r\n\r\n            if ( rotation ) {\r\n\r\n                result.scene.rotation.fromArray( rotation );\r\n\r\n            }\r\n\r\n            if ( scale ) {\r\n\r\n                result.scene.scale.fromArray( scale );\r\n\r\n            }\r\n\r\n            if ( position || rotation || scale ) {\r\n\r\n                result.scene.updateMatrix();\r\n                result.scene.updateMatrixWorld();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function get_url( source_url, url_type ) {\r\n\r\n            if ( url_type == \"relativeToHTML\" ) {\r\n\r\n                return source_url;\r\n\r\n            } else {\r\n\r\n                return urlBase + \"/\" + source_url;\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // toplevel loader function, delegates to handle_children\r\n\r\n        function handle_objects() {\r\n\r\n            handle_children( result.scene, data.objects );\r\n\r\n        }\r\n\r\n        // handle all the children from the loaded json and attach them to given parent\r\n\r\n        function handle_children( parent, children ) {\r\n\r\n            var mat, dst, pos, rot, scl, quat;\r\n\r\n            for ( var objID in children ) {\r\n\r\n                // check by id if child has already been handled,\r\n                // if not, create new object\r\n\r\n                var object = result.objects[ objID ];\r\n                var objJSON = children[ objID ];\r\n\r\n                if ( object === undefined ) {\r\n\r\n                    // meshes\r\n\r\n                    if ( objJSON.type && ( objJSON.type in scope.hierarchyHandlers ) ) {\r\n\r\n                        if ( objJSON.loading === undefined ) {\r\n\r\n                            var reservedTypes = {\r\n                                \"type\": 1, \"url\": 1, \"material\": 1,\r\n                                \"position\": 1, \"rotation\": 1, \"scale\" : 1,\r\n                                \"visible\": 1, \"children\": 1, \"userData\": 1,\r\n                                \"skin\": 1, \"morph\": 1, \"mirroredLoop\": 1, \"duration\": 1\r\n                            };\r\n\r\n                            var loaderParameters = {};\r\n\r\n                            for ( var parType in objJSON ) {\r\n\r\n                                if ( ! ( parType in reservedTypes ) ) {\r\n\r\n                                    loaderParameters[ parType ] = objJSON[ parType ];\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            material = result.materials[ objJSON.material ];\r\n\r\n                            objJSON.loading = true;\r\n\r\n                            var loader = scope.hierarchyHandlers[ objJSON.type ][ \"loaderObject\" ];\r\n\r\n                            // ColladaLoader\r\n\r\n                            if ( loader.options ) {\r\n\r\n                                loader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ) );\r\n\r\n                                // UTF8Loader\r\n                                // OBJLoader\r\n\r\n                            } else {\r\n\r\n                                loader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ), loaderParameters );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    } else if ( objJSON.geometry !== undefined ) {\r\n\r\n                        geometry = result.geometries[ objJSON.geometry ];\r\n\r\n                        // geometry already loaded\r\n\r\n                        if ( geometry ) {\r\n\r\n                            var needsTangents = false;\r\n\r\n                            material = result.materials[ objJSON.material ];\r\n                            needsTangents = material instanceof THREE.ShaderMaterial;\r\n\r\n                            pos = objJSON.position;\r\n                            rot = objJSON.rotation;\r\n                            scl = objJSON.scale;\r\n                            mat = objJSON.matrix;\r\n                            quat = objJSON.quaternion;\r\n\r\n                            // use materials from the model file\r\n                            // if there is no material specified in the object\r\n\r\n                            if ( ! objJSON.material ) {\r\n\r\n                                material = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );\r\n\r\n                            }\r\n\r\n                            // use materials from the model file\r\n                            // if there is just empty face material\r\n                            // (must create new material as each model has its own face material)\r\n\r\n                            if ( ( material instanceof THREE.MeshFaceMaterial ) && material.materials.length === 0 ) {\r\n\r\n                                material = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );\r\n\r\n                            }\r\n\r\n                            if ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n                                for ( var i = 0; i < material.materials.length; i ++ ) {\r\n\r\n                                    needsTangents = needsTangents || ( material.materials[ i ] instanceof THREE.ShaderMaterial );\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            if ( needsTangents ) {\r\n\r\n                                geometry.computeTangents();\r\n\r\n                            }\r\n\r\n                            if ( objJSON.skin ) {\r\n\r\n                                object = new THREE.SkinnedMesh( geometry, material );\r\n\r\n                            } else if ( objJSON.morph ) {\r\n\r\n                                object = new THREE.MorphAnimMesh( geometry, material );\r\n\r\n                                if ( objJSON.duration !== undefined ) {\r\n\r\n                                    object.duration = objJSON.duration;\r\n\r\n                                }\r\n\r\n                                if ( objJSON.time !== undefined ) {\r\n\r\n                                    object.time = objJSON.time;\r\n\r\n                                }\r\n\r\n                                if ( objJSON.mirroredLoop !== undefined ) {\r\n\r\n                                    object.mirroredLoop = objJSON.mirroredLoop;\r\n\r\n                                }\r\n\r\n                                if ( material.morphNormals ) {\r\n\r\n                                    geometry.computeMorphNormals();\r\n\r\n                                }\r\n\r\n                            } else {\r\n\r\n                                object = new THREE.Mesh( geometry, material );\r\n\r\n                            }\r\n\r\n                            object.name = objID;\r\n\r\n                            if ( mat ) {\r\n\r\n                                object.matrixAutoUpdate = false;\r\n                                object.matrix.set(\r\n                                    mat[0],  mat[1],  mat[2],  mat[3],\r\n                                    mat[4],  mat[5],  mat[6],  mat[7],\r\n                                    mat[8],  mat[9],  mat[10], mat[11],\r\n                                    mat[12], mat[13], mat[14], mat[15]\r\n                                );\r\n\r\n                            } else {\r\n\r\n                                object.position.fromArray( pos );\r\n\r\n                                if ( quat ) {\r\n\r\n                                    object.quaternion.fromArray( quat );\r\n\r\n                                } else {\r\n\r\n                                    object.rotation.fromArray( rot );\r\n\r\n                                }\r\n\r\n                                object.scale.fromArray( scl );\r\n\r\n                            }\r\n\r\n                            object.visible = objJSON.visible;\r\n                            object.castShadow = objJSON.castShadow;\r\n                            object.receiveShadow = objJSON.receiveShadow;\r\n\r\n                            parent.add( object );\r\n\r\n                            result.objects[ objID ] = object;\r\n\r\n                        }\r\n\r\n                        // lights\r\n\r\n                    } else if ( objJSON.type === \"DirectionalLight\" || objJSON.type === \"PointLight\" || objJSON.type === \"AmbientLight\" ) {\r\n\r\n                        hex = ( objJSON.color !== undefined ) ? objJSON.color : 0xffffff;\r\n                        intensity = ( objJSON.intensity !== undefined ) ? objJSON.intensity : 1;\r\n\r\n                        if ( objJSON.type === \"DirectionalLight\" ) {\r\n\r\n                            pos = objJSON.direction;\r\n\r\n                            light = new THREE.DirectionalLight( hex, intensity );\r\n                            light.position.fromArray( pos );\r\n\r\n                            if ( objJSON.target ) {\r\n\r\n                                target_array.push( { \"object\": light, \"targetName\" : objJSON.target } );\r\n\r\n                                // kill existing default target\r\n                                // otherwise it gets added to scene when parent gets added\r\n\r\n                                light.target = null;\r\n\r\n                            }\r\n\r\n                        } else if ( objJSON.type === \"PointLight\" ) {\r\n\r\n                            pos = objJSON.position;\r\n                            dst = objJSON.distance;\r\n\r\n                            light = new THREE.PointLight( hex, intensity, dst );\r\n                            light.position.fromArray( pos );\r\n\r\n                        } else if ( objJSON.type === \"AmbientLight\" ) {\r\n\r\n                            light = new THREE.AmbientLight( hex );\r\n\r\n                        }\r\n\r\n                        parent.add( light );\r\n\r\n                        light.name = objID;\r\n                        result.lights[ objID ] = light;\r\n                        result.objects[ objID ] = light;\r\n\r\n                        // cameras\r\n\r\n                    } else if ( objJSON.type === \"PerspectiveCamera\" || objJSON.type === \"OrthographicCamera\" ) {\r\n\r\n                        pos = objJSON.position;\r\n                        rot = objJSON.rotation;\r\n                        quat = objJSON.quaternion;\r\n\r\n                        if ( objJSON.type === \"PerspectiveCamera\" ) {\r\n\r\n                            camera = new THREE.PerspectiveCamera( objJSON.fov, objJSON.aspect, objJSON.near, objJSON.far );\r\n\r\n                        } else if ( objJSON.type === \"OrthographicCamera\" ) {\r\n\r\n                            camera = new THREE.OrthographicCamera( objJSON.left, objJSON.right, objJSON.top, objJSON.bottom, objJSON.near, objJSON.far );\r\n\r\n                        }\r\n\r\n                        camera.name = objID;\r\n                        camera.position.fromArray( pos );\r\n\r\n                        if ( quat !== undefined ) {\r\n\r\n                            camera.quaternion.fromArray( quat );\r\n\r\n                        } else if ( rot !== undefined ) {\r\n\r\n                            camera.rotation.fromArray( rot );\r\n\r\n                        }\r\n\r\n                        parent.add( camera );\r\n\r\n                        result.cameras[ objID ] = camera;\r\n                        result.objects[ objID ] = camera;\r\n\r\n                        // pure Object3D\r\n\r\n                    } else {\r\n\r\n                        pos = objJSON.position;\r\n                        rot = objJSON.rotation;\r\n                        scl = objJSON.scale;\r\n                        quat = objJSON.quaternion;\r\n\r\n                        object = new THREE.Object3D();\r\n                        object.name = objID;\r\n                        object.position.fromArray( pos );\r\n\r\n                        if ( quat ) {\r\n\r\n                            object.quaternion.fromArray( quat );\r\n\r\n                        } else {\r\n\r\n                            object.rotation.fromArray( rot );\r\n\r\n                        }\r\n\r\n                        object.scale.fromArray( scl );\r\n                        object.visible = ( objJSON.visible !== undefined ) ? objJSON.visible : false;\r\n\r\n                        parent.add( object );\r\n\r\n                        result.objects[ objID ] = object;\r\n                        result.empties[ objID ] = object;\r\n\r\n                    }\r\n\r\n                    if ( object ) {\r\n\r\n                        if ( objJSON.userData !== undefined ) {\r\n\r\n                            for ( var key in objJSON.userData ) {\r\n\r\n                                var value = objJSON.userData[ key ];\r\n                                object.userData[ key ] = value;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( objJSON.groups !== undefined ) {\r\n\r\n                            for ( var i = 0; i < objJSON.groups.length; i ++ ) {\r\n\r\n                                var groupID = objJSON.groups[ i ];\r\n\r\n                                if ( result.groups[ groupID ] === undefined ) {\r\n\r\n                                    result.groups[ groupID ] = [];\r\n\r\n                                }\r\n\r\n                                result.groups[ groupID ].push( objID );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if ( object !== undefined && objJSON.children !== undefined ) {\r\n\r\n                    handle_children( object, objJSON.children );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        function handle_mesh( geo, mat, id ) {\r\n\r\n            result.geometries[ id ] = geo;\r\n            result.face_materials[ id ] = mat;\r\n            handle_objects();\r\n\r\n        };\r\n\r\n        function handle_hierarchy( node, id, parent, material, obj ) {\r\n\r\n            var p = obj.position;\r\n            var r = obj.rotation;\r\n            var q = obj.quaternion;\r\n            var s = obj.scale;\r\n\r\n            node.position.fromArray( p );\r\n\r\n            if ( q ) {\r\n\r\n                node.quaternion.fromArray( q );\r\n\r\n            } else {\r\n\r\n                node.rotation.fromArray( r );\r\n\r\n            }\r\n\r\n            node.scale.fromArray( s );\r\n\r\n            // override children materials\r\n            // if object material was specified in JSON explicitly\r\n\r\n            if ( material ) {\r\n\r\n                node.traverse( function ( child ) {\r\n\r\n                    child.material = material;\r\n\r\n                } );\r\n\r\n            }\r\n\r\n            // override children visibility\r\n            // with root node visibility as specified in JSON\r\n\r\n            var visible = ( obj.visible !== undefined ) ? obj.visible : true;\r\n\r\n            node.traverse( function ( child ) {\r\n\r\n                child.visible = visible;\r\n\r\n            } );\r\n\r\n            parent.add( node );\r\n\r\n            node.name = id;\r\n\r\n            result.objects[ id ] = node;\r\n            handle_objects();\r\n\r\n        };\r\n\r\n        function create_callback_geometry( id ) {\r\n\r\n            return function ( geo, mat ) {\r\n\r\n                geo.name = id;\r\n\r\n                handle_mesh( geo, mat, id );\r\n\r\n                counter_models -= 1;\r\n\r\n                scope.onLoadComplete();\r\n\r\n                async_callback_gate();\r\n\r\n            }\r\n\r\n        };\r\n\r\n        function create_callback_hierachy( id, parent, material, obj ) {\r\n\r\n            return function ( event ) {\r\n\r\n                var result;\r\n\r\n                // loaders which use EventDispatcher\r\n\r\n                if ( event.content ) {\r\n\r\n                    result = event.content;\r\n\r\n                    // ColladaLoader\r\n\r\n                } else if ( event.dae ) {\r\n\r\n                    result = event.scene;\r\n\r\n\r\n                    // UTF8Loader\r\n\r\n                } else {\r\n\r\n                    result = event;\r\n\r\n                }\r\n\r\n                handle_hierarchy( result, id, parent, material, obj );\r\n\r\n                counter_models -= 1;\r\n\r\n                scope.onLoadComplete();\r\n\r\n                async_callback_gate();\r\n\r\n            }\r\n\r\n        };\r\n\r\n        function create_callback_embed( id ) {\r\n\r\n            return function ( geo, mat ) {\r\n\r\n                geo.name = id;\r\n\r\n                result.geometries[ id ] = geo;\r\n                result.face_materials[ id ] = mat;\r\n\r\n            }\r\n\r\n        };\r\n\r\n        function async_callback_gate() {\r\n\r\n            var progress = {\r\n\r\n                totalModels : total_models,\r\n                totalTextures : total_textures,\r\n                loadedModels : total_models - counter_models,\r\n                loadedTextures : total_textures - counter_textures\r\n\r\n            };\r\n\r\n            scope.callbackProgress( progress, result );\r\n\r\n            scope.onLoadProgress();\r\n\r\n            if ( counter_models === 0 && counter_textures === 0 ) {\r\n\r\n                finalize();\r\n                callbackFinished( result );\r\n\r\n            }\r\n\r\n        };\r\n\r\n        function finalize() {\r\n\r\n            // take care of targets which could be asynchronously loaded objects\r\n\r\n            for ( var i = 0; i < target_array.length; i ++ ) {\r\n\r\n                var ta = target_array[ i ];\r\n\r\n                var target = result.objects[ ta.targetName ];\r\n\r\n                if ( target ) {\r\n\r\n                    ta.object.target = target;\r\n\r\n                } else {\r\n\r\n                    // if there was error and target of specified name doesn't exist in the scene file\r\n                    // create instead dummy target\r\n                    // (target must be added to scene explicitly as parent is already added)\r\n\r\n                    ta.object.target = new THREE.Object3D();\r\n                    result.scene.add( ta.object.target );\r\n\r\n                }\r\n\r\n                ta.object.target.userData.targetInverse = ta.object;\r\n\r\n            }\r\n\r\n        };\r\n\r\n        var callbackTexture = function ( count ) {\r\n\r\n            counter_textures -= count;\r\n            async_callback_gate();\r\n\r\n            scope.onLoadComplete();\r\n\r\n        };\r\n\r\n        // must use this instead of just directly calling callbackTexture\r\n        // because of closure in the calling context loop\r\n\r\n        var generateTextureCallback = function ( count ) {\r\n\r\n            return function () {\r\n\r\n                callbackTexture( count );\r\n\r\n            };\r\n\r\n        };\r\n\r\n        function traverse_json_hierarchy( objJSON, callback ) {\r\n\r\n            callback( objJSON );\r\n\r\n            if ( objJSON.children !== undefined ) {\r\n\r\n                for ( var objChildID in objJSON.children ) {\r\n\r\n                    traverse_json_hierarchy( objJSON.children[ objChildID ], callback );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // first go synchronous elements\r\n\r\n        // fogs\r\n\r\n        var fogID, fogJSON;\r\n\r\n        for ( fogID in data.fogs ) {\r\n\r\n            fogJSON = data.fogs[ fogID ];\r\n\r\n            if ( fogJSON.type === \"linear\" ) {\r\n\r\n                fog = new THREE.Fog( 0x000000, fogJSON.near, fogJSON.far );\r\n\r\n            } else if ( fogJSON.type === \"exp2\" ) {\r\n\r\n                fog = new THREE.FogExp2( 0x000000, fogJSON.density );\r\n\r\n            }\r\n\r\n            color = fogJSON.color;\r\n            fog.color.setRGB( color[0], color[1], color[2] );\r\n\r\n            result.fogs[ fogID ] = fog;\r\n\r\n        }\r\n\r\n        // now come potentially asynchronous elements\r\n\r\n        // geometries\r\n\r\n        // count how many geometries will be loaded asynchronously\r\n\r\n        var geoID, geoJSON;\r\n\r\n        for ( geoID in data.geometries ) {\r\n\r\n            geoJSON = data.geometries[ geoID ];\r\n\r\n            if ( geoJSON.type in this.geometryHandlers ) {\r\n\r\n                counter_models += 1;\r\n\r\n                scope.onLoadStart();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // count how many hierarchies will be loaded asynchronously\r\n\r\n        for ( var objID in data.objects ) {\r\n\r\n            traverse_json_hierarchy( data.objects[ objID ], function ( objJSON ) {\r\n\r\n                if ( objJSON.type && ( objJSON.type in scope.hierarchyHandlers ) ) {\r\n\r\n                    counter_models += 1;\r\n\r\n                    scope.onLoadStart();\r\n\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n        total_models = counter_models;\r\n\r\n        for ( geoID in data.geometries ) {\r\n\r\n            geoJSON = data.geometries[ geoID ];\r\n\r\n            if ( geoJSON.type === \"cube\" ) {\r\n\r\n                geometry = new THREE.CubeGeometry( geoJSON.width, geoJSON.height, geoJSON.depth, geoJSON.widthSegments, geoJSON.heightSegments, geoJSON.depthSegments );\r\n                geometry.name = geoID;\r\n                result.geometries[ geoID ] = geometry;\r\n\r\n            } else if ( geoJSON.type === \"plane\" ) {\r\n\r\n                geometry = new THREE.PlaneGeometry( geoJSON.width, geoJSON.height, geoJSON.widthSegments, geoJSON.heightSegments );\r\n                geometry.name = geoID;\r\n                result.geometries[ geoID ] = geometry;\r\n\r\n            } else if ( geoJSON.type === \"sphere\" ) {\r\n\r\n                geometry = new THREE.SphereGeometry( geoJSON.radius, geoJSON.widthSegments, geoJSON.heightSegments );\r\n                geometry.name = geoID;\r\n                result.geometries[ geoID ] = geometry;\r\n\r\n            } else if ( geoJSON.type === \"cylinder\" ) {\r\n\r\n                geometry = new THREE.CylinderGeometry( geoJSON.topRad, geoJSON.botRad, geoJSON.height, geoJSON.radSegs, geoJSON.heightSegs );\r\n                geometry.name = geoID;\r\n                result.geometries[ geoID ] = geometry;\r\n\r\n            } else if ( geoJSON.type === \"torus\" ) {\r\n\r\n                geometry = new THREE.TorusGeometry( geoJSON.radius, geoJSON.tube, geoJSON.segmentsR, geoJSON.segmentsT );\r\n                geometry.name = geoID;\r\n                result.geometries[ geoID ] = geometry;\r\n\r\n            } else if ( geoJSON.type === \"icosahedron\" ) {\r\n\r\n                geometry = new THREE.IcosahedronGeometry( geoJSON.radius, geoJSON.subdivisions );\r\n                geometry.name = geoID;\r\n                result.geometries[ geoID ] = geometry;\r\n\r\n            } else if ( geoJSON.type in this.geometryHandlers ) {\r\n\r\n                var loaderParameters = {};\r\n\r\n                for ( var parType in geoJSON ) {\r\n\r\n                    if ( parType !== \"type\" && parType !== \"url\" ) {\r\n\r\n                        loaderParameters[ parType ] = geoJSON[ parType ];\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                var loader = this.geometryHandlers[ geoJSON.type ][ \"loaderObject\" ];\r\n                loader.load( get_url( geoJSON.url, data.urlBaseType ), create_callback_geometry( geoID ), loaderParameters );\r\n\r\n            } else if ( geoJSON.type === \"embedded\" ) {\r\n\r\n                var modelJson = data.embeds[ geoJSON.id ],\r\n                    texture_path = \"\";\r\n\r\n                // pass metadata along to jsonLoader so it knows the format version\r\n\r\n                modelJson.metadata = data.metadata;\r\n\r\n                if ( modelJson ) {\r\n\r\n                    var jsonLoader = this.geometryHandlers[ \"ascii\" ][ \"loaderObject\" ];\r\n                    var model = jsonLoader.parse( modelJson, texture_path );\r\n                    create_callback_embed( geoID )( model.geometry, model.materials );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // textures\r\n\r\n        // count how many textures will be loaded asynchronously\r\n\r\n        var textureID, textureJSON;\r\n\r\n        for ( textureID in data.textures ) {\r\n\r\n            textureJSON = data.textures[ textureID ];\r\n\r\n            if ( textureJSON.url instanceof Array ) {\r\n\r\n                counter_textures += textureJSON.url.length;\r\n\r\n                for( var n = 0; n < textureJSON.url.length; n ++ ) {\r\n\r\n                    scope.onLoadStart();\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                counter_textures += 1;\r\n\r\n                scope.onLoadStart();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        total_textures = counter_textures;\r\n\r\n        for ( textureID in data.textures ) {\r\n\r\n            textureJSON = data.textures[ textureID ];\r\n\r\n            if ( textureJSON.mapping !== undefined && THREE[ textureJSON.mapping ] !== undefined ) {\r\n\r\n                textureJSON.mapping = new THREE[ textureJSON.mapping ]();\r\n\r\n            }\r\n\r\n            if ( textureJSON.url instanceof Array ) {\r\n\r\n                var count = textureJSON.url.length;\r\n                var url_array = [];\r\n\r\n                for( var i = 0; i < count; i ++ ) {\r\n\r\n                    url_array[ i ] = get_url( textureJSON.url[ i ], data.urlBaseType );\r\n\r\n                }\r\n\r\n                var isCompressed = /\\.dds$/i.test( url_array[ 0 ] );\r\n\r\n                if ( isCompressed ) {\r\n\r\n                    texture = THREE.ImageUtils.loadCompressedTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );\r\n\r\n                } else {\r\n\r\n                    texture = THREE.ImageUtils.loadTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                var isCompressed = /\\.dds$/i.test( textureJSON.url );\r\n                var fullUrl = get_url( textureJSON.url, data.urlBaseType );\r\n                var textureCallback = generateTextureCallback( 1 );\r\n\r\n                if ( isCompressed ) {\r\n\r\n                    texture = THREE.ImageUtils.loadCompressedTexture( fullUrl, textureJSON.mapping, textureCallback );\r\n\r\n                } else {\r\n\r\n                    texture = THREE.ImageUtils.loadTexture( fullUrl, textureJSON.mapping, textureCallback );\r\n\r\n                }\r\n\r\n                if ( THREE[ textureJSON.minFilter ] !== undefined )\r\n                    texture.minFilter = THREE[ textureJSON.minFilter ];\r\n\r\n                if ( THREE[ textureJSON.magFilter ] !== undefined )\r\n                    texture.magFilter = THREE[ textureJSON.magFilter ];\r\n\r\n                if ( textureJSON.anisotropy ) texture.anisotropy = textureJSON.anisotropy;\r\n\r\n                if ( textureJSON.repeat ) {\r\n\r\n                    texture.repeat.set( textureJSON.repeat[ 0 ], textureJSON.repeat[ 1 ] );\r\n\r\n                    if ( textureJSON.repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n                    if ( textureJSON.repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n                }\r\n\r\n                if ( textureJSON.offset ) {\r\n\r\n                    texture.offset.set( textureJSON.offset[ 0 ], textureJSON.offset[ 1 ] );\r\n\r\n                }\r\n\r\n                // handle wrap after repeat so that default repeat can be overriden\r\n\r\n                if ( textureJSON.wrap ) {\r\n\r\n                    var wrapMap = {\r\n                        \"repeat\": THREE.RepeatWrapping,\r\n                        \"mirror\": THREE.MirroredRepeatWrapping\r\n                    }\r\n\r\n                    if ( wrapMap[ textureJSON.wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ textureJSON.wrap[ 0 ] ];\r\n                    if ( wrapMap[ textureJSON.wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ textureJSON.wrap[ 1 ] ];\r\n\r\n                }\r\n\r\n            }\r\n\r\n            result.textures[ textureID ] = texture;\r\n\r\n        }\r\n\r\n        // materials\r\n\r\n        var matID, matJSON;\r\n        var parID;\r\n\r\n        for ( matID in data.materials ) {\r\n\r\n            matJSON = data.materials[ matID ];\r\n\r\n            for ( parID in matJSON.parameters ) {\r\n\r\n                if ( parID === \"envMap\" || parID === \"map\" || parID === \"lightMap\" || parID === \"bumpMap\" ) {\r\n\r\n                    matJSON.parameters[ parID ] = result.textures[ matJSON.parameters[ parID ] ];\r\n\r\n                } else if ( parID === \"shading\" ) {\r\n\r\n                    matJSON.parameters[ parID ] = ( matJSON.parameters[ parID ] === \"flat\" ) ? THREE.FlatShading : THREE.SmoothShading;\r\n\r\n                } else if ( parID === \"side\" ) {\r\n\r\n                    if ( matJSON.parameters[ parID ] == \"double\" ) {\r\n\r\n                        matJSON.parameters[ parID ] = THREE.DoubleSide;\r\n\r\n                    } else if ( matJSON.parameters[ parID ] == \"back\" ) {\r\n\r\n                        matJSON.parameters[ parID ] = THREE.BackSide;\r\n\r\n                    } else {\r\n\r\n                        matJSON.parameters[ parID ] = THREE.FrontSide;\r\n\r\n                    }\r\n\r\n                } else if ( parID === \"blending\" ) {\r\n\r\n                    matJSON.parameters[ parID ] = matJSON.parameters[ parID ] in THREE ? THREE[ matJSON.parameters[ parID ] ] : THREE.NormalBlending;\r\n\r\n                } else if ( parID === \"combine\" ) {\r\n\r\n                    matJSON.parameters[ parID ] = matJSON.parameters[ parID ] in THREE ? THREE[ matJSON.parameters[ parID ] ] : THREE.MultiplyOperation;\r\n\r\n                } else if ( parID === \"vertexColors\" ) {\r\n\r\n                    if ( matJSON.parameters[ parID ] == \"face\" ) {\r\n\r\n                        matJSON.parameters[ parID ] = THREE.FaceColors;\r\n\r\n                        // default to vertex colors if \"vertexColors\" is anything else face colors or 0 / null / false\r\n\r\n                    } else if ( matJSON.parameters[ parID ] ) {\r\n\r\n                        matJSON.parameters[ parID ] = THREE.VertexColors;\r\n\r\n                    }\r\n\r\n                } else if ( parID === \"wrapRGB\" ) {\r\n\r\n                    var v3 = matJSON.parameters[ parID ];\r\n                    matJSON.parameters[ parID ] = new THREE.Vector3( v3[ 0 ], v3[ 1 ], v3[ 2 ] );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( matJSON.parameters.opacity !== undefined && matJSON.parameters.opacity < 1.0 ) {\r\n\r\n                matJSON.parameters.transparent = true;\r\n\r\n            }\r\n\r\n            if ( matJSON.parameters.normalMap ) {\r\n\r\n                var shader = THREE.ShaderLib[ \"normalmap\" ];\r\n                var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n                var diffuse = matJSON.parameters.color;\r\n                var specular = matJSON.parameters.specular;\r\n                var ambient = matJSON.parameters.ambient;\r\n                var shininess = matJSON.parameters.shininess;\r\n\r\n                uniforms[ \"tNormal\" ].value = result.textures[ matJSON.parameters.normalMap ];\r\n\r\n                if ( matJSON.parameters.normalScale ) {\r\n\r\n                    uniforms[ \"uNormalScale\" ].value.set( matJSON.parameters.normalScale[ 0 ], matJSON.parameters.normalScale[ 1 ] );\r\n\r\n                }\r\n\r\n                if ( matJSON.parameters.map ) {\r\n\r\n                    uniforms[ \"tDiffuse\" ].value = matJSON.parameters.map;\r\n                    uniforms[ \"enableDiffuse\" ].value = true;\r\n\r\n                }\r\n\r\n                if ( matJSON.parameters.envMap ) {\r\n\r\n                    uniforms[ \"tCube\" ].value = matJSON.parameters.envMap;\r\n                    uniforms[ \"enableReflection\" ].value = true;\r\n                    uniforms[ \"uReflectivity\" ].value = matJSON.parameters.reflectivity;\r\n\r\n                }\r\n\r\n                if ( matJSON.parameters.lightMap ) {\r\n\r\n                    uniforms[ \"tAO\" ].value = matJSON.parameters.lightMap;\r\n                    uniforms[ \"enableAO\" ].value = true;\r\n\r\n                }\r\n\r\n                if ( matJSON.parameters.specularMap ) {\r\n\r\n                    uniforms[ \"tSpecular\" ].value = result.textures[ matJSON.parameters.specularMap ];\r\n                    uniforms[ \"enableSpecular\" ].value = true;\r\n\r\n                }\r\n\r\n                if ( matJSON.parameters.displacementMap ) {\r\n\r\n                    uniforms[ \"tDisplacement\" ].value = result.textures[ matJSON.parameters.displacementMap ];\r\n                    uniforms[ \"enableDisplacement\" ].value = true;\r\n\r\n                    uniforms[ \"uDisplacementBias\" ].value = matJSON.parameters.displacementBias;\r\n                    uniforms[ \"uDisplacementScale\" ].value = matJSON.parameters.displacementScale;\r\n\r\n                }\r\n\r\n                uniforms[ \"uDiffuseColor\" ].value.setHex( diffuse );\r\n                uniforms[ \"uSpecularColor\" ].value.setHex( specular );\r\n                uniforms[ \"uAmbientColor\" ].value.setHex( ambient );\r\n\r\n                uniforms[ \"uShininess\" ].value = shininess;\r\n\r\n                if ( matJSON.parameters.opacity ) {\r\n\r\n                    uniforms[ \"uOpacity\" ].value = matJSON.parameters.opacity;\r\n\r\n                }\r\n\r\n                var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };\r\n\r\n                material = new THREE.ShaderMaterial( parameters );\r\n\r\n            } else {\r\n\r\n                material = new THREE[ matJSON.type ]( matJSON.parameters );\r\n\r\n            }\r\n\r\n            material.name = matID;\r\n\r\n            result.materials[ matID ] = material;\r\n\r\n        }\r\n\r\n        // second pass through all materials to initialize MeshFaceMaterials\r\n        // that could be referring to other materials out of order\r\n\r\n        for ( matID in data.materials ) {\r\n\r\n            matJSON = data.materials[ matID ];\r\n\r\n            if ( matJSON.parameters.materials ) {\r\n\r\n                var materialArray = [];\r\n\r\n                for ( var i = 0; i < matJSON.parameters.materials.length; i ++ ) {\r\n\r\n                    var label = matJSON.parameters.materials[ i ];\r\n                    materialArray.push( result.materials[ label ] );\r\n\r\n                }\r\n\r\n                result.materials[ matID ].materials = materialArray;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // objects ( synchronous init of procedural primitives )\r\n\r\n        handle_objects();\r\n\r\n        // defaults\r\n\r\n        if ( result.cameras && data.defaults.camera ) {\r\n\r\n            result.currentCamera = result.cameras[ data.defaults.camera ];\r\n\r\n        }\r\n\r\n        if ( result.fogs && data.defaults.fog ) {\r\n\r\n            result.scene.fog = result.fogs[ data.defaults.fog ];\r\n\r\n        }\r\n\r\n        // synchronous callback\r\n\r\n        scope.callbackSync( result );\r\n\r\n        // just in case there are no async elements\r\n\r\n        async_callback_gate();\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n    constructor: THREE.TextureLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.ImageLoader( scope.manager );\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( image ) {\r\n\r\n            var texture = new THREE.Texture( image );\r\n            texture.needsUpdate = true;\r\n\r\n            if ( onLoad !== undefined ) {\r\n\r\n                onLoad( texture );\r\n\r\n            }\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    setCrossOrigin: function ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n    this.id = THREE.MaterialIdCount ++;\r\n    this.uuid = THREE.Math.generateUUID();\r\n\r\n    this.name = '';\r\n\r\n    this.side = THREE.FrontSide;\r\n\r\n    this.opacity = 1;\r\n    this.transparent = false;\r\n\r\n    this.blending = THREE.NormalBlending;\r\n\r\n    this.blendSrc = THREE.SrcAlphaFactor;\r\n    this.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n    this.blendEquation = THREE.AddEquation;\r\n\r\n    this.depthTest = true;\r\n    this.depthWrite = true;\r\n\r\n    this.polygonOffset = false;\r\n    this.polygonOffsetFactor = 0;\r\n    this.polygonOffsetUnits = 0;\r\n\r\n    this.alphaTest = 0;\r\n\r\n    this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n    this.visible = true;\r\n\r\n    this.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n    constructor: THREE.Material,\r\n\r\n    setValues: function ( values ) {\r\n\r\n        if ( values === undefined ) return;\r\n\r\n        for ( var key in values ) {\r\n\r\n            var newValue = values[ key ];\r\n\r\n            if ( newValue === undefined ) {\r\n\r\n                console.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\r\n                continue;\r\n\r\n            }\r\n\r\n            if ( key in this ) {\r\n\r\n                var currentValue = this[ key ];\r\n\r\n                if ( currentValue instanceof THREE.Color ) {\r\n\r\n                    currentValue.set( newValue );\r\n\r\n                } else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n                    currentValue.copy( newValue );\r\n\r\n                } else if ( key == 'overdraw') {\r\n\r\n                    // ensure overdraw is backwards-compatable with legacy boolean type\r\n                    this[ key ] = Number(newValue);\r\n\r\n                } else {\r\n\r\n                    this[ key ] = newValue;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    clone: function ( material ) {\r\n\r\n        if ( material === undefined ) material = new THREE.Material();\r\n\r\n        material.name = this.name;\r\n\r\n        material.side = this.side;\r\n\r\n        material.opacity = this.opacity;\r\n        material.transparent = this.transparent;\r\n\r\n        material.blending = this.blending;\r\n\r\n        material.blendSrc = this.blendSrc;\r\n        material.blendDst = this.blendDst;\r\n        material.blendEquation = this.blendEquation;\r\n\r\n        material.depthTest = this.depthTest;\r\n        material.depthWrite = this.depthWrite;\r\n\r\n        material.polygonOffset = this.polygonOffset;\r\n        material.polygonOffsetFactor = this.polygonOffsetFactor;\r\n        material.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n        material.alphaTest = this.alphaTest;\r\n\r\n        material.overdraw = this.overdraw;\r\n\r\n        material.visible = this.visible;\r\n\r\n        return material;\r\n\r\n    },\r\n\r\n    dispose: function () {\r\n\r\n        this.dispatchEvent( { type: 'dispose' } );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff );\r\n\r\n    this.linewidth = 1;\r\n    this.linecap = 'round';\r\n    this.linejoin = 'round';\r\n\r\n    this.vertexColors = false;\r\n\r\n    this.fog = true;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.LineBasicMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.LineBasicMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n\r\n    material.linewidth = this.linewidth;\r\n    material.linecap = this.linecap;\r\n    material.linejoin = this.linejoin;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.fog = this.fog;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff );\r\n\r\n    this.linewidth = 1;\r\n\r\n    this.scale = 1;\r\n    this.dashSize = 3;\r\n    this.gapSize = 1;\r\n\r\n    this.vertexColors = false;\r\n\r\n    this.fog = true;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.LineDashedMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.LineDashedMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n\r\n    material.linewidth = this.linewidth;\r\n\r\n    material.scale = this.scale;\r\n    material.dashSize = this.dashSize;\r\n    material.gapSize = this.gapSize;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.fog = this.fog;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n    this.map = null;\r\n\r\n    this.lightMap = null;\r\n\r\n    this.specularMap = null;\r\n\r\n    this.envMap = null;\r\n    this.combine = THREE.MultiplyOperation;\r\n    this.reflectivity = 1;\r\n    this.refractionRatio = 0.98;\r\n\r\n    this.fog = true;\r\n\r\n    this.shading = THREE.SmoothShading;\r\n\r\n    this.wireframe = false;\r\n    this.wireframeLinewidth = 1;\r\n    this.wireframeLinecap = 'round';\r\n    this.wireframeLinejoin = 'round';\r\n\r\n    this.vertexColors = THREE.NoColors;\r\n\r\n    this.skinning = false;\r\n    this.morphTargets = false;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshBasicMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.MeshBasicMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n\r\n    material.map = this.map;\r\n\r\n    material.lightMap = this.lightMap;\r\n\r\n    material.specularMap = this.specularMap;\r\n\r\n    material.envMap = this.envMap;\r\n    material.combine = this.combine;\r\n    material.reflectivity = this.reflectivity;\r\n    material.refractionRatio = this.refractionRatio;\r\n\r\n    material.fog = this.fog;\r\n\r\n    material.shading = this.shading;\r\n\r\n    material.wireframe = this.wireframe;\r\n    material.wireframeLinewidth = this.wireframeLinewidth;\r\n    material.wireframeLinecap = this.wireframeLinecap;\r\n    material.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.skinning = this.skinning;\r\n    material.morphTargets = this.morphTargets;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  ambient: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff ); // diffuse\r\n    this.ambient = new THREE.Color( 0xffffff );\r\n    this.emissive = new THREE.Color( 0x000000 );\r\n\r\n    this.wrapAround = false;\r\n    this.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n    this.map = null;\r\n\r\n    this.lightMap = null;\r\n\r\n    this.specularMap = null;\r\n\r\n    this.envMap = null;\r\n    this.combine = THREE.MultiplyOperation;\r\n    this.reflectivity = 1;\r\n    this.refractionRatio = 0.98;\r\n\r\n    this.fog = true;\r\n\r\n    this.shading = THREE.SmoothShading;\r\n\r\n    this.wireframe = false;\r\n    this.wireframeLinewidth = 1;\r\n    this.wireframeLinecap = 'round';\r\n    this.wireframeLinejoin = 'round';\r\n\r\n    this.vertexColors = THREE.NoColors;\r\n\r\n    this.skinning = false;\r\n    this.morphTargets = false;\r\n    this.morphNormals = false;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshLambertMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.MeshLambertMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n    material.ambient.copy( this.ambient );\r\n    material.emissive.copy( this.emissive );\r\n\r\n    material.wrapAround = this.wrapAround;\r\n    material.wrapRGB.copy( this.wrapRGB );\r\n\r\n    material.map = this.map;\r\n\r\n    material.lightMap = this.lightMap;\r\n\r\n    material.specularMap = this.specularMap;\r\n\r\n    material.envMap = this.envMap;\r\n    material.combine = this.combine;\r\n    material.reflectivity = this.reflectivity;\r\n    material.refractionRatio = this.refractionRatio;\r\n\r\n    material.fog = this.fog;\r\n\r\n    material.shading = this.shading;\r\n\r\n    material.wireframe = this.wireframe;\r\n    material.wireframeLinewidth = this.wireframeLinewidth;\r\n    material.wireframeLinecap = this.wireframeLinecap;\r\n    material.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.skinning = this.skinning;\r\n    material.morphTargets = this.morphTargets;\r\n    material.morphNormals = this.morphNormals;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  ambient: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff ); // diffuse\r\n    this.ambient = new THREE.Color( 0xffffff );\r\n    this.emissive = new THREE.Color( 0x000000 );\r\n    this.specular = new THREE.Color( 0x111111 );\r\n    this.shininess = 30;\r\n\r\n    this.metal = false;\r\n    this.perPixel = true;\r\n\r\n    this.wrapAround = false;\r\n    this.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n    this.map = null;\r\n\r\n    this.lightMap = null;\r\n\r\n    this.bumpMap = null;\r\n    this.bumpScale = 1;\r\n\r\n    this.normalMap = null;\r\n    this.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n    this.specularMap = null;\r\n\r\n    this.envMap = null;\r\n    this.combine = THREE.MultiplyOperation;\r\n    this.reflectivity = 1;\r\n    this.refractionRatio = 0.98;\r\n\r\n    this.fog = true;\r\n\r\n    this.shading = THREE.SmoothShading;\r\n\r\n    this.wireframe = false;\r\n    this.wireframeLinewidth = 1;\r\n    this.wireframeLinecap = 'round';\r\n    this.wireframeLinejoin = 'round';\r\n\r\n    this.vertexColors = THREE.NoColors;\r\n\r\n    this.skinning = false;\r\n    this.morphTargets = false;\r\n    this.morphNormals = false;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshPhongMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.MeshPhongMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n    material.ambient.copy( this.ambient );\r\n    material.emissive.copy( this.emissive );\r\n    material.specular.copy( this.specular );\r\n    material.shininess = this.shininess;\r\n\r\n    material.metal = this.metal;\r\n    material.perPixel = this.perPixel;\r\n\r\n    material.wrapAround = this.wrapAround;\r\n    material.wrapRGB.copy( this.wrapRGB );\r\n\r\n    material.map = this.map;\r\n\r\n    material.lightMap = this.lightMap;\r\n\r\n    material.bumpMap = this.bumpMap;\r\n    material.bumpScale = this.bumpScale;\r\n\r\n    material.normalMap = this.normalMap;\r\n    material.normalScale.copy( this.normalScale );\r\n\r\n    material.specularMap = this.specularMap;\r\n\r\n    material.envMap = this.envMap;\r\n    material.combine = this.combine;\r\n    material.reflectivity = this.reflectivity;\r\n    material.refractionRatio = this.refractionRatio;\r\n\r\n    material.fog = this.fog;\r\n\r\n    material.shading = this.shading;\r\n\r\n    material.wireframe = this.wireframe;\r\n    material.wireframeLinewidth = this.wireframeLinewidth;\r\n    material.wireframeLinecap = this.wireframeLinecap;\r\n    material.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.skinning = this.skinning;\r\n    material.morphTargets = this.morphTargets;\r\n    material.morphNormals = this.morphNormals;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.wireframe = false;\r\n    this.wireframeLinewidth = 1;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshDepthMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.MeshDepthMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.wireframe = this.wireframe;\r\n    material.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this, parameters );\r\n\r\n    this.shading = THREE.FlatShading;\r\n\r\n    this.wireframe = false;\r\n    this.wireframeLinewidth = 1;\r\n\r\n    this.morphTargets = false;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshNormalMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.MeshNormalMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.shading = this.shading;\r\n\r\n    material.wireframe = this.wireframe;\r\n    material.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MeshFaceMaterial = function ( materials ) {\r\n\r\n    this.materials = materials instanceof Array ? materials : [];\r\n\r\n};\r\n\r\nTHREE.MeshFaceMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.MeshFaceMaterial();\r\n\r\n    for ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n        material.materials.push( this.materials[ i ].clone() );\r\n\r\n    }\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff );\r\n\r\n    this.map = null;\r\n\r\n    this.size = 1;\r\n    this.sizeAttenuation = true;\r\n\r\n    this.vertexColors = false;\r\n\r\n    this.fog = true;\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.ParticleBasicMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.ParticleBasicMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n\r\n    material.map = this.map;\r\n\r\n    material.size = this.size;\r\n    material.sizeAttenuation = this.sizeAttenuation;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.fog = this.fog;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  program: <function>,\r\n *  opacity: <float>,\r\n *  blending: THREE.NormalBlending\r\n * }\r\n */\r\n\r\nTHREE.ParticleCanvasMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.color = new THREE.Color( 0xffffff );\r\n    this.program = function ( context, color ) {};\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.ParticleCanvasMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.ParticleCanvasMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n    material.program = this.program;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  defines: { \"label\" : \"value\" },\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    this.fragmentShader = \"void main() {}\";\r\n    this.vertexShader = \"void main() {}\";\r\n    this.uniforms = {};\r\n    this.defines = {};\r\n    this.attributes = null;\r\n\r\n    this.shading = THREE.SmoothShading;\r\n\r\n    this.linewidth = 1;\r\n\r\n    this.wireframe = false;\r\n    this.wireframeLinewidth = 1;\r\n\r\n    this.fog = false; // set to use scene fog\r\n\r\n    this.lights = false; // set to use scene lights\r\n\r\n    this.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n    this.skinning = false; // set to use skinning attribute streams\r\n\r\n    this.morphTargets = false; // set to use morph targets\r\n    this.morphNormals = false; // set to use morph normals\r\n\r\n    // When rendered geometry doesn't include these attributes but the material does,\r\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\r\n    this.defaultAttributeValues = {\r\n        \"color\" : [ 1, 1, 1],\r\n        \"uv\" : [ 0, 0 ],\r\n        \"uv2\" : [ 0, 0 ]\r\n    };\r\n\r\n    // By default, bind position to attribute index 0. In WebGL, attribute 0\r\n    // should always be used to avoid potentially expensive emulation.\r\n    this.index0AttributeName = \"position\";\r\n\r\n    this.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.ShaderMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.ShaderMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.fragmentShader = this.fragmentShader;\r\n    material.vertexShader = this.vertexShader;\r\n\r\n    material.uniforms = THREE.UniformsUtils.clone( this.uniforms );\r\n\r\n    material.attributes = this.attributes;\r\n    material.defines = this.defines;\r\n\r\n    material.shading = this.shading;\r\n\r\n    material.wireframe = this.wireframe;\r\n    material.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n    material.fog = this.fog;\r\n\r\n    material.lights = this.lights;\r\n\r\n    material.vertexColors = this.vertexColors;\r\n\r\n    material.skinning = this.skinning;\r\n\r\n    material.morphTargets = this.morphTargets;\r\n    material.morphNormals = this.morphNormals;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  useScreenCoordinates: <bool>,\r\n *  sizeAttenuation: <bool>,\r\n *  scaleByViewport: <bool>,\r\n *  alignment: THREE.SpriteAlignment.center,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n    THREE.Material.call( this );\r\n\r\n    // defaults\r\n\r\n    this.color = new THREE.Color( 0xffffff );\r\n    this.map = new THREE.Texture();\r\n\r\n    this.useScreenCoordinates = true;\r\n    this.depthTest = !this.useScreenCoordinates;\r\n    this.sizeAttenuation = !this.useScreenCoordinates;\r\n    this.scaleByViewport = !this.sizeAttenuation;\r\n    this.alignment = THREE.SpriteAlignment.center.clone();\r\n\r\n    this.fog = false;\r\n\r\n    this.uvOffset = new THREE.Vector2( 0, 0 );\r\n    this.uvScale  = new THREE.Vector2( 1, 1 );\r\n\r\n    // set parameters\r\n\r\n    this.setValues( parameters );\r\n\r\n    // override coupled defaults if not specified explicitly by parameters\r\n\r\n    parameters = parameters || {};\r\n\r\n    if ( parameters.depthTest === undefined ) this.depthTest = !this.useScreenCoordinates;\r\n    if ( parameters.sizeAttenuation === undefined ) this.sizeAttenuation = !this.useScreenCoordinates;\r\n    if ( parameters.scaleByViewport === undefined ) this.scaleByViewport = !this.sizeAttenuation;\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.SpriteMaterial.prototype.clone = function () {\r\n\r\n    var material = new THREE.SpriteMaterial();\r\n\r\n    THREE.Material.prototype.clone.call( this, material );\r\n\r\n    material.color.copy( this.color );\r\n    material.map = this.map;\r\n\r\n    material.useScreenCoordinates = this.useScreenCoordinates;\r\n    material.sizeAttenuation = this.sizeAttenuation;\r\n    material.scaleByViewport = this.scaleByViewport;\r\n    material.alignment.copy( this.alignment );\r\n\r\n    material.uvOffset.copy( this.uvOffset );\r\n    material.uvScale.copy( this.uvScale );\r\n\r\n    material.fog = this.fog;\r\n\r\n    return material;\r\n\r\n};\r\n\r\n// Alignment enums\r\n\r\nTHREE.SpriteAlignment = {};\r\nTHREE.SpriteAlignment.topLeft = new THREE.Vector2( 1, -1 );\r\nTHREE.SpriteAlignment.topCenter = new THREE.Vector2( 0, -1 );\r\nTHREE.SpriteAlignment.topRight = new THREE.Vector2( -1, -1 );\r\nTHREE.SpriteAlignment.centerLeft = new THREE.Vector2( 1, 0 );\r\nTHREE.SpriteAlignment.center = new THREE.Vector2( 0, 0 );\r\nTHREE.SpriteAlignment.centerRight = new THREE.Vector2( -1, 0 );\r\nTHREE.SpriteAlignment.bottomLeft = new THREE.Vector2( 1, 1 );\r\nTHREE.SpriteAlignment.bottomCenter = new THREE.Vector2( 0, 1 );\r\nTHREE.SpriteAlignment.bottomRight = new THREE.Vector2( -1, 1 );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n    this.id = THREE.TextureIdCount ++;\r\n    this.uuid = THREE.Math.generateUUID();\r\n\r\n    this.name = '';\r\n\r\n    this.image = image;\r\n    this.mipmaps = [];\r\n\r\n    this.mapping = mapping !== undefined ? mapping : new THREE.UVMapping();\r\n\r\n    this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n    this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n    this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n    this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n    this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n    this.format = format !== undefined ? format : THREE.RGBAFormat;\r\n    this.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n    this.offset = new THREE.Vector2( 0, 0 );\r\n    this.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n    this.generateMipmaps = true;\r\n    this.premultiplyAlpha = false;\r\n    this.flipY = true;\r\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n    this.needsUpdate = false;\r\n    this.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n    constructor: THREE.Texture,\r\n\r\n    clone: function ( texture ) {\r\n\r\n        if ( texture === undefined ) texture = new THREE.Texture();\r\n\r\n        texture.image = this.image;\r\n        texture.mipmaps = this.mipmaps.slice(0);\r\n\r\n        texture.mapping = this.mapping;\r\n\r\n        texture.wrapS = this.wrapS;\r\n        texture.wrapT = this.wrapT;\r\n\r\n        texture.magFilter = this.magFilter;\r\n        texture.minFilter = this.minFilter;\r\n\r\n        texture.anisotropy = this.anisotropy;\r\n\r\n        texture.format = this.format;\r\n        texture.type = this.type;\r\n\r\n        texture.offset.copy( this.offset );\r\n        texture.repeat.copy( this.repeat );\r\n\r\n        texture.generateMipmaps = this.generateMipmaps;\r\n        texture.premultiplyAlpha = this.premultiplyAlpha;\r\n        texture.flipY = this.flipY;\r\n        texture.unpackAlignment = this.unpackAlignment;\r\n\r\n        return texture;\r\n\r\n    },\r\n\r\n    dispose: function () {\r\n\r\n        this.dispatchEvent( { type: 'dispose' } );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n    THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n    this.image = { width: width, height: height };\r\n    this.mipmaps = mipmaps;\r\n\r\n    this.generateMipmaps = false; // WebGL currently can't generate mipmaps for compressed textures, they must be embedded in DDS file\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\r\nTHREE.CompressedTexture.prototype.clone = function () {\r\n\r\n    var texture = new THREE.CompressedTexture();\r\n\r\n    THREE.Texture.prototype.clone.call( this, texture );\r\n\r\n    return texture;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n    THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n    this.image = { data: data, width: width, height: height };\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\r\nTHREE.DataTexture.prototype.clone = function () {\r\n\r\n    var texture = new THREE.DataTexture();\r\n\r\n    THREE.Texture.prototype.clone.call( this, texture );\r\n\r\n    return texture;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Particle = function ( material ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.material = material;\r\n\r\n};\r\n\r\nTHREE.Particle.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Particle.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.Particle( this.material );\r\n\r\n    THREE.Object3D.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n    this.material = material !== undefined ? material : new THREE.ParticleBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n    this.sortParticles = false;\r\n    this.frustumCulled = false;\r\n\r\n};\r\n\r\nTHREE.ParticleSystem.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.ParticleSystem.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.ParticleSystem( this.geometry, this.material );\r\n\r\n    object.sortParticles = this.sortParticles;\r\n\r\n    THREE.Object3D.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, type ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n    this.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n    this.type = ( type !== undefined ) ? type : THREE.LineStrip;\r\n\r\n};\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Line.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.type );\r\n\r\n    THREE.Object3D.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n    this.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n    this.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n    if ( this.geometry.morphTargets.length > 0 ) {\r\n\r\n        this.morphTargetBase = -1;\r\n        this.morphTargetForcedOrder = [];\r\n        this.morphTargetInfluences = [];\r\n        this.morphTargetDictionary = {};\r\n\r\n        for ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n            this.morphTargetInfluences.push( 0 );\r\n            this.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n    if ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n        return this.morphTargetDictionary[ name ];\r\n\r\n    }\r\n\r\n    console.log( \"THREE.Mesh.getMorphTargetIndexByName: morph target \" + name + \" does not exist. Returning 0.\" );\r\n\r\n    return 0;\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\r\n\r\n    THREE.Object3D.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Bone = function( belongsToSkin ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.skin = belongsToSkin;\r\n    this.skinMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Bone.prototype.update = function ( parentSkinMatrix, forceUpdate ) {\r\n\r\n    // update local\r\n\r\n    if ( this.matrixAutoUpdate ) {\r\n\r\n        forceUpdate |= this.updateMatrix();\r\n\r\n    }\r\n\r\n    // update skin matrix\r\n\r\n    if ( forceUpdate || this.matrixWorldNeedsUpdate ) {\r\n\r\n        if( parentSkinMatrix ) {\r\n\r\n            this.skinMatrix.multiplyMatrices( parentSkinMatrix, this.matrix );\r\n\r\n        } else {\r\n\r\n            this.skinMatrix.copy( this.matrix );\r\n\r\n        }\r\n\r\n        this.matrixWorldNeedsUpdate = false;\r\n        forceUpdate = true;\r\n\r\n    }\r\n\r\n    // update children\r\n\r\n    var child, i, l = this.children.length;\r\n\r\n    for ( i = 0; i < l; i ++ ) {\r\n\r\n        this.children[ i ].update( this.skinMatrix, forceUpdate );\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n    THREE.Mesh.call( this, geometry, material );\r\n\r\n    //\r\n\r\n    this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n    // init bones\r\n\r\n    this.identityMatrix = new THREE.Matrix4();\r\n\r\n    this.bones = [];\r\n    this.boneMatrices = [];\r\n\r\n    var b, bone, gbone, p, q, s;\r\n\r\n    if ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n        for ( b = 0; b < this.geometry.bones.length; b ++ ) {\r\n\r\n            gbone = this.geometry.bones[ b ];\r\n\r\n            p = gbone.pos;\r\n            q = gbone.rotq;\r\n            s = gbone.scl;\r\n\r\n            bone = this.addBone();\r\n\r\n            bone.name = gbone.name;\r\n            bone.position.set( p[0], p[1], p[2] );\r\n            bone.quaternion.set( q[0], q[1], q[2], q[3] );\r\n\r\n            if ( s !== undefined ) {\r\n\r\n                bone.scale.set( s[0], s[1], s[2] );\r\n\r\n            } else {\r\n\r\n                bone.scale.set( 1, 1, 1 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for ( b = 0; b < this.bones.length; b ++ ) {\r\n\r\n            gbone = this.geometry.bones[ b ];\r\n            bone = this.bones[ b ];\r\n\r\n            if ( gbone.parent === -1 ) {\r\n\r\n                this.add( bone );\r\n\r\n            } else {\r\n\r\n                this.bones[ gbone.parent ].add( bone );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        //\r\n\r\n        var nBones = this.bones.length;\r\n\r\n        if ( this.useVertexTexture ) {\r\n\r\n            // layout (1 matrix = 4 pixels)\r\n            //\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n            //  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\r\n            //  \t 16x16 pixel texture max   64 bones (16 * 16 / 4)\r\n            //  \t 32x32 pixel texture max  256 bones (32 * 32 / 4)\r\n            //  \t 64x64 pixel texture max 1024 bones (64 * 64 / 4)\r\n\r\n            var size;\r\n\r\n            if ( nBones > 256 )\r\n                size = 64;\r\n            else if ( nBones > 64 )\r\n                size = 32;\r\n            else if ( nBones > 16 )\r\n                size = 16;\r\n            else\r\n                size = 8;\r\n\r\n            this.boneTextureWidth = size;\r\n            this.boneTextureHeight = size;\r\n\r\n            this.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n            this.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n            this.boneTexture.minFilter = THREE.NearestFilter;\r\n            this.boneTexture.magFilter = THREE.NearestFilter;\r\n            this.boneTexture.generateMipmaps = false;\r\n            this.boneTexture.flipY = false;\r\n\r\n        } else {\r\n\r\n            this.boneMatrices = new Float32Array( 16 * nBones );\r\n\r\n        }\r\n\r\n        this.pose();\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.SkinnedMesh.prototype.addBone = function( bone ) {\r\n\r\n    if ( bone === undefined ) {\r\n\r\n        bone = new THREE.Bone( this );\r\n\r\n    }\r\n\r\n    this.bones.push( bone );\r\n\r\n    return bone;\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function () {\r\n\r\n    var offsetMatrix = new THREE.Matrix4();\r\n\r\n    return function ( force ) {\r\n\r\n        this.matrixAutoUpdate && this.updateMatrix();\r\n\r\n        // update matrixWorld\r\n\r\n        if ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n            if ( this.parent ) {\r\n\r\n                this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n            } else {\r\n\r\n                this.matrixWorld.copy( this.matrix );\r\n\r\n            }\r\n\r\n            this.matrixWorldNeedsUpdate = false;\r\n\r\n            force = true;\r\n\r\n        }\r\n\r\n        // update children\r\n\r\n        for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n            var child = this.children[ i ];\r\n\r\n            if ( child instanceof THREE.Bone ) {\r\n\r\n                child.update( this.identityMatrix, false );\r\n\r\n            } else {\r\n\r\n                child.updateMatrixWorld( true );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // make a snapshot of the bones' rest position\r\n\r\n        if ( this.boneInverses == undefined ) {\r\n\r\n            this.boneInverses = [];\r\n\r\n            for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n                var inverse = new THREE.Matrix4();\r\n\r\n                inverse.getInverse( this.bones[ b ].skinMatrix );\r\n\r\n                this.boneInverses.push( inverse );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // flatten bone matrices to array\r\n\r\n        for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n            // compute the offset between the current and the original transform;\r\n\r\n            // TODO: we could get rid of this multiplication step if the skinMatrix\r\n            // was already representing the offset; however, this requires some\r\n            // major changes to the animation system\r\n\r\n            offsetMatrix.multiplyMatrices( this.bones[ b ].skinMatrix, this.boneInverses[ b ] );\r\n            offsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n        }\r\n\r\n        if ( this.useVertexTexture ) {\r\n\r\n            this.boneTexture.needsUpdate = true;\r\n\r\n        }\r\n\r\n    };\r\n\r\n}();\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n    this.updateMatrixWorld( true );\r\n\r\n    this.normalizeSkinWeights();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n    if ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n        for ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n            var sw = this.geometry.skinWeights[ i ];\r\n\r\n            var scale = 1.0 / sw.lengthManhattan();\r\n\r\n            if ( scale !== Infinity ) {\r\n\r\n                sw.multiplyScalar( scale );\r\n\r\n            } else {\r\n\r\n                sw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        // skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) {\r\n\r\n        object = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\r\n\r\n    }\r\n\r\n    THREE.Mesh.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n    THREE.Mesh.call( this, geometry, material );\r\n\r\n    // API\r\n\r\n    this.duration = 1000; // milliseconds\r\n    this.mirroredLoop = false;\r\n    this.time = 0;\r\n\r\n    // internals\r\n\r\n    this.lastKeyframe = 0;\r\n    this.currentKeyframe = 0;\r\n\r\n    this.direction = 1;\r\n    this.directionBackwards = false;\r\n\r\n    this.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n    this.startKeyframe = start;\r\n    this.endKeyframe = end;\r\n\r\n    this.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n    this.direction = 1;\r\n    this.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n    this.direction = -1;\r\n    this.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n    var geometry = this.geometry;\r\n\r\n    if ( ! geometry.animations ) geometry.animations = {};\r\n\r\n    var firstAnimation, animations = geometry.animations;\r\n\r\n    var pattern = /([a-z]+)(\\d+)/;\r\n\r\n    for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n        var morph = geometry.morphTargets[ i ];\r\n        var parts = morph.name.match( pattern );\r\n\r\n        if ( parts && parts.length > 1 ) {\r\n\r\n            var label = parts[ 1 ];\r\n            var num = parts[ 2 ];\r\n\r\n            if ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: -Infinity };\r\n\r\n            var animation = animations[ label ];\r\n\r\n            if ( i < animation.start ) animation.start = i;\r\n            if ( i > animation.end ) animation.end = i;\r\n\r\n            if ( ! firstAnimation ) firstAnimation = label;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    geometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n    if ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n    this.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n    var animation = this.geometry.animations[ label ];\r\n\r\n    if ( animation ) {\r\n\r\n        this.setFrameRange( animation.start, animation.end );\r\n        this.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n        this.time = 0;\r\n\r\n    } else {\r\n\r\n        console.warn( \"animation[\" + label + \"] undefined\" );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n    var frameTime = this.duration / this.length;\r\n\r\n    this.time += this.direction * delta;\r\n\r\n    if ( this.mirroredLoop ) {\r\n\r\n        if ( this.time > this.duration || this.time < 0 ) {\r\n\r\n            this.direction *= -1;\r\n\r\n            if ( this.time > this.duration ) {\r\n\r\n                this.time = this.duration;\r\n                this.directionBackwards = true;\r\n\r\n            }\r\n\r\n            if ( this.time < 0 ) {\r\n\r\n                this.time = 0;\r\n                this.directionBackwards = false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        this.time = this.time % this.duration;\r\n\r\n        if ( this.time < 0 ) this.time += this.duration;\r\n\r\n    }\r\n\r\n    var keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n    if ( keyframe !== this.currentKeyframe ) {\r\n\r\n        this.morphTargetInfluences[ this.lastKeyframe ] = 0;\r\n        this.morphTargetInfluences[ this.currentKeyframe ] = 1;\r\n\r\n        this.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n        this.lastKeyframe = this.currentKeyframe;\r\n        this.currentKeyframe = keyframe;\r\n\r\n    }\r\n\r\n    var mix = ( this.time % frameTime ) / frameTime;\r\n\r\n    if ( this.directionBackwards ) {\r\n\r\n        mix = 1 - mix;\r\n\r\n    }\r\n\r\n    this.morphTargetInfluences[ this.currentKeyframe ] = mix;\r\n    this.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\r\n\r\n    object.duration = this.duration;\r\n    object.mirroredLoop = this.mirroredLoop;\r\n    object.time = this.time;\r\n\r\n    object.lastKeyframe = this.lastKeyframe;\r\n    object.currentKeyframe = this.currentKeyframe;\r\n\r\n    object.direction = this.direction;\r\n    object.directionBackwards = this.directionBackwards;\r\n\r\n    THREE.Mesh.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.objects = [];\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n    if ( distance === undefined ) distance = 0;\r\n\r\n    distance = Math.abs( distance );\r\n\r\n    for ( var l = 0; l < this.objects.length; l ++ ) {\r\n\r\n        if ( distance < this.objects[ l ].distance ) {\r\n\r\n            break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.objects.splice( l, 0, { distance: distance, object: object } );\r\n    this.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n    for ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n        if ( distance < this.objects[ i ].distance ) {\r\n\r\n            break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return this.objects[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n    var v1 = new THREE.Vector3();\r\n    var v2 = new THREE.Vector3();\r\n\r\n    return function ( camera ) {\r\n\r\n        if ( this.objects.length > 1 ) {\r\n\r\n            v1.getPositionFromMatrix( camera.matrixWorld );\r\n            v2.getPositionFromMatrix( this.matrixWorld );\r\n\r\n            var distance = v1.distanceTo( v2 );\r\n\r\n            this.objects[ 0 ].object.visible = true;\r\n\r\n            for ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n                if ( distance >= this.objects[ i ].distance ) {\r\n\r\n                    this.objects[ i - 1 ].object.visible = false;\r\n                    this.objects[ i     ].object.visible = true;\r\n\r\n                } else {\r\n\r\n                    break;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            for( ; i < l; i ++ ) {\r\n\r\n                this.objects[ i ].object.visible = false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.clone = function () {\r\n\r\n    // TODO\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = function ( material ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n    this.rotation3d = this.rotation;\r\n    this.rotation = 0;\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n/*\r\n * Custom update matrix\r\n */\r\n\r\nTHREE.Sprite.prototype.updateMatrix = function () {\r\n\r\n    this.rotation3d.set( 0, 0, this.rotation, this.rotation3d.order );\r\n    this.quaternion.setFromEuler( this.rotation3d );\r\n    this.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n    this.matrixWorldNeedsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.Sprite( this.material );\r\n\r\n    THREE.Object3D.prototype.clone.call( this, object );\r\n\r\n    return object;\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.fog = null;\r\n    this.overrideMaterial = null;\r\n\r\n    this.autoUpdate = true; // checked by the renderer\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.__lights = [];\r\n\r\n    this.__objectsAdded = [];\r\n    this.__objectsRemoved = [];\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Scene.prototype.__addObject = function ( object ) {\r\n\r\n    if ( object instanceof THREE.Light ) {\r\n\r\n        if ( this.__lights.indexOf( object ) === - 1 ) {\r\n\r\n            this.__lights.push( object );\r\n\r\n        }\r\n\r\n        if ( object.target && object.target.parent === undefined ) {\r\n\r\n            this.add( object.target );\r\n\r\n        }\r\n\r\n    } else if ( !( object instanceof THREE.Camera || object instanceof THREE.Bone ) ) {\r\n\r\n        this.__objectsAdded.push( object );\r\n\r\n        // check if previously removed\r\n\r\n        var i = this.__objectsRemoved.indexOf( object );\r\n\r\n        if ( i !== -1 ) {\r\n\r\n            this.__objectsRemoved.splice( i, 1 );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for ( var c = 0; c < object.children.length; c ++ ) {\r\n\r\n        this.__addObject( object.children[ c ] );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.Scene.prototype.__removeObject = function ( object ) {\r\n\r\n    if ( object instanceof THREE.Light ) {\r\n\r\n        var i = this.__lights.indexOf( object );\r\n\r\n        if ( i !== -1 ) {\r\n\r\n            this.__lights.splice( i, 1 );\r\n\r\n        }\r\n\r\n        if ( object.shadowCascadeArray ) {\r\n\r\n            for ( var x = 0; x < object.shadowCascadeArray.length; x ++ ) {\r\n\r\n                this.__removeObject( object.shadowCascadeArray[ x ] );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else if ( !( object instanceof THREE.Camera ) ) {\r\n\r\n        this.__objectsRemoved.push( object );\r\n\r\n        // check if previously added\r\n\r\n        var i = this.__objectsAdded.indexOf( object );\r\n\r\n        if ( i !== -1 ) {\r\n\r\n            this.__objectsAdded.splice( i, 1 );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for ( var c = 0; c < object.children.length; c ++ ) {\r\n\r\n        this.__removeObject( object.children[ c ] );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.Scene.prototype.clone = function ( object ) {\r\n\r\n    if ( object === undefined ) object = new THREE.Scene();\r\n\r\n    THREE.Object3D.prototype.clone.call(this, object);\r\n\r\n    if ( this.fog !== null ) object.fog = this.fog.clone();\r\n    if ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\r\n\r\n    object.autoUpdate = this.autoUpdate;\r\n    object.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\r\n    return object;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( hex, near, far ) {\r\n\r\n    this.name = '';\r\n\r\n    this.color = new THREE.Color( hex );\r\n\r\n    this.near = ( near !== undefined ) ? near : 1;\r\n    this.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n    return new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( hex, density ) {\r\n\r\n    this.name = '';\r\n\r\n    this.color = new THREE.Color( hex );\r\n    this.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n    return new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasRenderer = function ( parameters ) {\r\n\r\n    console.log( 'THREE.CanvasRenderer', THREE.REVISION );\r\n\r\n    var smoothstep = THREE.Math.smoothstep;\r\n\r\n    parameters = parameters || {};\r\n\r\n    var _this = this,\r\n        _renderData, _elements, _lights,\r\n        _projector = new THREE.Projector(),\r\n\r\n        _canvas = parameters.canvas !== undefined\r\n            ? parameters.canvas\r\n            : document.createElement( 'canvas' ),\r\n\r\n        _canvasWidth, _canvasHeight, _canvasWidthHalf, _canvasHeightHalf,\r\n        _context = _canvas.getContext( '2d' ),\r\n\r\n        _clearColor = new THREE.Color( 0x000000 ),\r\n        _clearAlpha = 0,\r\n\r\n        _contextGlobalAlpha = 1,\r\n        _contextGlobalCompositeOperation = 0,\r\n        _contextStrokeStyle = null,\r\n        _contextFillStyle = null,\r\n        _contextLineWidth = null,\r\n        _contextLineCap = null,\r\n        _contextLineJoin = null,\r\n        _contextDashSize = null,\r\n        _contextGapSize = 0,\r\n\r\n        _camera,\r\n\r\n        _v1, _v2, _v3, _v4,\r\n        _v5 = new THREE.RenderableVertex(),\r\n        _v6 = new THREE.RenderableVertex(),\r\n\r\n        _v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\r\n        _v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\r\n\r\n        _color = new THREE.Color(),\r\n        _color1 = new THREE.Color(),\r\n        _color2 = new THREE.Color(),\r\n        _color3 = new THREE.Color(),\r\n        _color4 = new THREE.Color(),\r\n\r\n        _diffuseColor = new THREE.Color(),\r\n        _emissiveColor = new THREE.Color(),\r\n\r\n        _lightColor = new THREE.Color(),\r\n\r\n        _patterns = {}, _imagedatas = {},\r\n\r\n        _near, _far,\r\n\r\n        _image, _uvs,\r\n        _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\r\n\r\n        _clipBox = new THREE.Box2(),\r\n        _clearBox = new THREE.Box2(),\r\n        _elemBox = new THREE.Box2(),\r\n\r\n        _ambientLight = new THREE.Color(),\r\n        _directionalLights = new THREE.Color(),\r\n        _pointLights = new THREE.Color(),\r\n\r\n        _vector3 = new THREE.Vector3(), // Needed for PointLight\r\n\r\n        _pixelMap, _pixelMapContext, _pixelMapImage, _pixelMapData,\r\n        _gradientMap, _gradientMapContext, _gradientMapQuality = 16;\r\n\r\n    _pixelMap = document.createElement( 'canvas' );\r\n    _pixelMap.width = _pixelMap.height = 2;\r\n\r\n    _pixelMapContext = _pixelMap.getContext( '2d' );\r\n    _pixelMapContext.fillStyle = 'rgba(0,0,0,1)';\r\n    _pixelMapContext.fillRect( 0, 0, 2, 2 );\r\n\r\n    _pixelMapImage = _pixelMapContext.getImageData( 0, 0, 2, 2 );\r\n    _pixelMapData = _pixelMapImage.data;\r\n\r\n    _gradientMap = document.createElement( 'canvas' );\r\n    _gradientMap.width = _gradientMap.height = _gradientMapQuality;\r\n\r\n    _gradientMapContext = _gradientMap.getContext( '2d' );\r\n    _gradientMapContext.translate( - _gradientMapQuality / 2, - _gradientMapQuality / 2 );\r\n    _gradientMapContext.scale( _gradientMapQuality, _gradientMapQuality );\r\n\r\n    _gradientMapQuality --; // Fix UVs\r\n\r\n    // dash+gap fallbacks for Firefox and everything else\r\n\r\n    if ( _context.setLineDash === undefined ) {\r\n\r\n        if ( _context.mozDash !== undefined ) {\r\n\r\n            _context.setLineDash = function ( values ) {\r\n\r\n                _context.mozDash = values[ 0 ] !== null ? values : null;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            _context.setLineDash = function () {}\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.domElement = _canvas;\r\n\r\n    this.devicePixelRatio = parameters.devicePixelRatio !== undefined\r\n        ? parameters.devicePixelRatio\r\n        : self.devicePixelRatio !== undefined\r\n            ? self.devicePixelRatio\r\n            : 1;\r\n\r\n    this.autoClear = true;\r\n    this.sortObjects = true;\r\n    this.sortElements = true;\r\n\r\n    this.info = {\r\n\r\n        render: {\r\n\r\n            vertices: 0,\r\n            faces: 0\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // WebGLRenderer compatibility\r\n\r\n    this.supportsVertexTextures = function () {};\r\n    this.setFaceCulling = function () {};\r\n\r\n    this.setSize = function ( width, height, updateStyle ) {\r\n\r\n        _canvasWidth = width * this.devicePixelRatio;\r\n        _canvasHeight = height * this.devicePixelRatio;\r\n\r\n        _canvasWidthHalf = Math.floor( _canvasWidth / 2 );\r\n        _canvasHeightHalf = Math.floor( _canvasHeight / 2 );\r\n\r\n        _canvas.width = _canvasWidth;\r\n        _canvas.height = _canvasHeight;\r\n\r\n        if ( this.devicePixelRatio !== 1 && updateStyle !== false ) {\r\n\r\n            _canvas.style.width = width + 'px';\r\n            _canvas.style.height = height + 'px';\r\n\r\n        }\r\n\r\n        _clipBox.set(\r\n            new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),\r\n            new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )\r\n        );\r\n\r\n        _clearBox.set(\r\n            new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),\r\n            new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )\r\n        );\r\n\r\n        _contextGlobalAlpha = 1;\r\n        _contextGlobalCompositeOperation = 0;\r\n        _contextStrokeStyle = null;\r\n        _contextFillStyle = null;\r\n        _contextLineWidth = null;\r\n        _contextLineCap = null;\r\n        _contextLineJoin = null;\r\n\r\n    };\r\n\r\n    this.setClearColor = function ( color, alpha ) {\r\n\r\n        _clearColor.set( color );\r\n        _clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n        _clearBox.set(\r\n            new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),\r\n            new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )\r\n        );\r\n\r\n    };\r\n\r\n    this.setClearColorHex = function ( hex, alpha ) {\r\n\r\n        console.warn( 'DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\r\n        this.setClearColor( hex, alpha );\r\n\r\n    };\r\n\r\n    this.getMaxAnisotropy = function () {\r\n\r\n        return 0;\r\n\r\n    };\r\n\r\n    this.clear = function () {\r\n\r\n        _context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );\r\n\r\n        if ( _clearBox.empty() === false ) {\r\n\r\n            _clearBox.intersect( _clipBox );\r\n            _clearBox.expandByScalar( 2 );\r\n\r\n            if ( _clearAlpha < 1 ) {\r\n\r\n                _context.clearRect(\r\n                    _clearBox.min.x | 0,\r\n                    _clearBox.min.y | 0,\r\n                    ( _clearBox.max.x - _clearBox.min.x ) | 0,\r\n                    ( _clearBox.max.y - _clearBox.min.y ) | 0\r\n                );\r\n\r\n            }\r\n\r\n            if ( _clearAlpha > 0 ) {\r\n\r\n                setBlending( THREE.NormalBlending );\r\n                setOpacity( 1 );\r\n\r\n                setFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\r\n\r\n                _context.fillRect(\r\n                    _clearBox.min.x | 0,\r\n                    _clearBox.min.y | 0,\r\n                    ( _clearBox.max.x - _clearBox.min.x ) | 0,\r\n                    ( _clearBox.max.y - _clearBox.min.y ) | 0\r\n                );\r\n\r\n            }\r\n\r\n            _clearBox.makeEmpty();\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    this.render = function ( scene, camera ) {\r\n\r\n        if ( camera instanceof THREE.Camera === false ) {\r\n\r\n            console.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\r\n            return;\r\n\r\n        }\r\n\r\n        if ( this.autoClear === true ) this.clear();\r\n\r\n        _context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );\r\n\r\n        _this.info.render.vertices = 0;\r\n        _this.info.render.faces = 0;\r\n\r\n        _renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\r\n        _elements = _renderData.elements;\r\n        _lights = _renderData.lights;\r\n        _camera = camera;\r\n\r\n        /* DEBUG\r\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\r\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\r\n\t\t*/\r\n\r\n        calculateLights();\r\n\r\n        for ( var e = 0, el = _elements.length; e < el; e++ ) {\r\n\r\n            var element = _elements[ e ];\r\n\r\n            var material = element.material;\r\n\r\n            if ( material === undefined || material.visible === false ) continue;\r\n\r\n            _elemBox.makeEmpty();\r\n\r\n            if ( element instanceof THREE.RenderableParticle ) {\r\n\r\n                _v1 = element;\r\n                _v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\r\n\r\n                renderParticle( _v1, element, material );\r\n\r\n            } else if ( element instanceof THREE.RenderableLine ) {\r\n\r\n                _v1 = element.v1; _v2 = element.v2;\r\n\r\n                _v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\r\n                _v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\r\n\r\n                _elemBox.setFromPoints( [\r\n                    _v1.positionScreen,\r\n                    _v2.positionScreen\r\n                ] );\r\n\r\n                if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\r\n\r\n                    renderLine( _v1, _v2, element, material );\r\n\r\n                }\r\n\r\n            } else if ( element instanceof THREE.RenderableFace3 ) {\r\n\r\n                _v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\r\n\r\n                if ( _v1.positionScreen.z < -1 || _v1.positionScreen.z > 1 ) continue;\r\n                if ( _v2.positionScreen.z < -1 || _v2.positionScreen.z > 1 ) continue;\r\n                if ( _v3.positionScreen.z < -1 || _v3.positionScreen.z > 1 ) continue;\r\n\r\n                _v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\r\n                _v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\r\n                _v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\r\n\r\n                if ( material.overdraw > 0 ) {\r\n\r\n                    expand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\r\n                    expand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\r\n                    expand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\r\n\r\n                }\r\n\r\n                _elemBox.setFromPoints( [\r\n                    _v1.positionScreen,\r\n                    _v2.positionScreen,\r\n                    _v3.positionScreen\r\n                ] );\r\n\r\n                if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\r\n\r\n                    renderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* DEBUG\r\n\t\t\tsetLineWidth( 1 );\r\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\r\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\r\n\t\t\t*/\r\n\r\n            _clearBox.union( _elemBox );\r\n\r\n        }\r\n\r\n        /* DEBUG\r\n\t\tsetLineWidth( 1 );\r\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\r\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\r\n\t\t*/\r\n\r\n        _context.setTransform( 1, 0, 0, 1, 0, 0 );\r\n\r\n    };\r\n\r\n    //\r\n\r\n    function calculateLights() {\r\n\r\n        _ambientLight.setRGB( 0, 0, 0 );\r\n        _directionalLights.setRGB( 0, 0, 0 );\r\n        _pointLights.setRGB( 0, 0, 0 );\r\n\r\n        for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\r\n\r\n            var light = _lights[ l ];\r\n            var lightColor = light.color;\r\n\r\n            if ( light instanceof THREE.AmbientLight ) {\r\n\r\n                _ambientLight.add( lightColor );\r\n\r\n            } else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n                // for particles\r\n\r\n                _directionalLights.add( lightColor );\r\n\r\n            } else if ( light instanceof THREE.PointLight ) {\r\n\r\n                // for particles\r\n\r\n                _pointLights.add( lightColor );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function calculateLight( position, normal, color ) {\r\n\r\n        for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\r\n\r\n            var light = _lights[ l ];\r\n\r\n            _lightColor.copy( light.color );\r\n\r\n            if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n                var lightPosition = _vector3.getPositionFromMatrix( light.matrixWorld ).normalize();\r\n\r\n                var amount = normal.dot( lightPosition );\r\n\r\n                if ( amount <= 0 ) continue;\r\n\r\n                amount *= light.intensity;\r\n\r\n                color.add( _lightColor.multiplyScalar( amount ) );\r\n\r\n            } else if ( light instanceof THREE.PointLight ) {\r\n\r\n                var lightPosition = _vector3.getPositionFromMatrix( light.matrixWorld );\r\n\r\n                var amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\r\n\r\n                if ( amount <= 0 ) continue;\r\n\r\n                amount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\r\n\r\n                if ( amount == 0 ) continue;\r\n\r\n                amount *= light.intensity;\r\n\r\n                color.add( _lightColor.multiplyScalar( amount ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function renderParticle( v1, element, material ) {\r\n\r\n        setOpacity( material.opacity );\r\n        setBlending( material.blending );\r\n\r\n        var width, height, scaleX, scaleY,\r\n            bitmap, bitmapWidth, bitmapHeight;\r\n\r\n        if ( material instanceof THREE.ParticleBasicMaterial ) {\r\n\r\n            if ( material.map === null ) {\r\n\r\n                scaleX = element.object.scale.x;\r\n                scaleY = element.object.scale.y;\r\n\r\n                // TODO: Be able to disable this\r\n\r\n                scaleX *= element.scale.x * _canvasWidthHalf;\r\n                scaleY *= element.scale.y * _canvasHeightHalf;\r\n\r\n                _elemBox.min.set( v1.x - scaleX, v1.y - scaleY );\r\n                _elemBox.max.set( v1.x + scaleX, v1.y + scaleY );\r\n\r\n                if ( _clipBox.isIntersectionBox( _elemBox ) === false ) {\r\n\r\n                    _elemBox.makeEmpty();\r\n                    return;\r\n\r\n                }\r\n\r\n                setFillStyle( material.color.getStyle() );\r\n\r\n                _context.save();\r\n                _context.translate( v1.x, v1.y );\r\n                _context.rotate( - element.rotation );\r\n                _context.scale( scaleX, scaleY );\r\n                _context.fillRect( -1, -1, 2, 2 );\r\n                _context.restore();\r\n\r\n            } else {\r\n\r\n                bitmap = material.map.image;\r\n                bitmapWidth = bitmap.width >> 1;\r\n                bitmapHeight = bitmap.height >> 1;\r\n\r\n                scaleX = element.scale.x * _canvasWidthHalf;\r\n                scaleY = element.scale.y * _canvasHeightHalf;\r\n\r\n                width = scaleX * bitmapWidth;\r\n                height = scaleY * bitmapHeight;\r\n\r\n                // TODO: Rotations break this...\r\n\r\n                _elemBox.min.set( v1.x - width, v1.y - height );\r\n                _elemBox.max.set( v1.x + width, v1.y + height );\r\n\r\n                if ( _clipBox.isIntersectionBox( _elemBox ) === false ) {\r\n\r\n                    _elemBox.makeEmpty();\r\n                    return;\r\n\r\n                }\r\n\r\n                _context.save();\r\n                _context.translate( v1.x, v1.y );\r\n                _context.rotate( - element.rotation );\r\n                _context.scale( scaleX, - scaleY );\r\n\r\n                _context.translate( - bitmapWidth, - bitmapHeight );\r\n                _context.drawImage( bitmap, 0, 0 );\r\n                _context.restore();\r\n\r\n            }\r\n\r\n            /* DEBUG\r\n\t\t\tsetStrokeStyle( 'rgb(255,255,0)' );\r\n\t\t\t_context.beginPath();\r\n\t\t\t_context.moveTo( v1.x - 10, v1.y );\r\n\t\t\t_context.lineTo( v1.x + 10, v1.y );\r\n\t\t\t_context.moveTo( v1.x, v1.y - 10 );\r\n\t\t\t_context.lineTo( v1.x, v1.y + 10 );\r\n\t\t\t_context.stroke();\r\n\t\t\t*/\r\n\r\n        } else if ( material instanceof THREE.ParticleCanvasMaterial ) {\r\n\r\n            width = element.scale.x * _canvasWidthHalf;\r\n            height = element.scale.y * _canvasHeightHalf;\r\n\r\n            _elemBox.min.set( v1.x - width, v1.y - height );\r\n            _elemBox.max.set( v1.x + width, v1.y + height );\r\n\r\n            if ( _clipBox.isIntersectionBox( _elemBox ) === false ) {\r\n\r\n                _elemBox.makeEmpty();\r\n                return;\r\n\r\n            }\r\n\r\n            setStrokeStyle( material.color.getStyle() );\r\n            setFillStyle( material.color.getStyle() );\r\n\r\n            _context.save();\r\n            _context.translate( v1.x, v1.y );\r\n            _context.rotate( - element.rotation );\r\n            _context.scale( width, height );\r\n\r\n            material.program( _context );\r\n\r\n            _context.restore();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function renderLine( v1, v2, element, material ) {\r\n\r\n        setOpacity( material.opacity );\r\n        setBlending( material.blending );\r\n\r\n        _context.beginPath();\r\n        _context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\r\n        _context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\r\n\r\n        if ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n            setLineWidth( material.linewidth );\r\n            setLineCap( material.linecap );\r\n            setLineJoin( material.linejoin );\r\n\r\n            if ( material.vertexColors !== THREE.VertexColors ) {\r\n\r\n                setStrokeStyle( material.color.getStyle() );\r\n\r\n            } else {\r\n\r\n                var colorStyle1 = element.vertexColors[0].getStyle();\r\n                var colorStyle2 = element.vertexColors[1].getStyle();\r\n\r\n                if ( colorStyle1 === colorStyle2 ) {\r\n\r\n                    setStrokeStyle( colorStyle1 );\r\n\r\n                } else {\r\n\r\n                    try {\r\n\r\n                        var grad = _context.createLinearGradient(\r\n                            v1.positionScreen.x,\r\n                            v1.positionScreen.y,\r\n                            v2.positionScreen.x,\r\n                            v2.positionScreen.y\r\n                        );\r\n                        grad.addColorStop( 0, colorStyle1 );\r\n                        grad.addColorStop( 1, colorStyle2 );\r\n\r\n                    } catch ( exception ) {\r\n\r\n                        grad = colorStyle1;\r\n\r\n                    }\r\n\r\n                    setStrokeStyle( grad );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            _context.stroke();\r\n            _elemBox.expandByScalar( material.linewidth * 2 );\r\n\r\n        } else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n            setLineWidth( material.linewidth );\r\n            setLineCap( material.linecap );\r\n            setLineJoin( material.linejoin );\r\n            setStrokeStyle( material.color.getStyle() );\r\n            setDashAndGap( material.dashSize, material.gapSize );\r\n\r\n            _context.stroke();\r\n\r\n            _elemBox.expandByScalar( material.linewidth * 2 );\r\n\r\n            setDashAndGap( null, null );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\r\n\r\n        _this.info.render.vertices += 3;\r\n        _this.info.render.faces ++;\r\n\r\n        setOpacity( material.opacity );\r\n        setBlending( material.blending );\r\n\r\n        _v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\r\n        _v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\r\n        _v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\r\n\r\n        drawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\r\n\r\n        if ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\r\n\r\n            _diffuseColor.copy( material.color );\r\n            _emissiveColor.copy( material.emissive );\r\n\r\n            if ( material.vertexColors === THREE.FaceColors ) {\r\n\r\n                _diffuseColor.multiply( element.color );\r\n\r\n            }\r\n\r\n            if ( material.wireframe === false && material.shading == THREE.SmoothShading && element.vertexNormalsLength == 3 ) {\r\n\r\n                _color1.copy( _ambientLight );\r\n                _color2.copy( _ambientLight );\r\n                _color3.copy( _ambientLight );\r\n\r\n                calculateLight( element.v1.positionWorld, element.vertexNormalsModel[ 0 ], _color1 );\r\n                calculateLight( element.v2.positionWorld, element.vertexNormalsModel[ 1 ], _color2 );\r\n                calculateLight( element.v3.positionWorld, element.vertexNormalsModel[ 2 ], _color3 );\r\n\r\n                _color1.multiply( _diffuseColor ).add( _emissiveColor );\r\n                _color2.multiply( _diffuseColor ).add( _emissiveColor );\r\n                _color3.multiply( _diffuseColor ).add( _emissiveColor );\r\n                _color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );\r\n\r\n                _image = getGradientTexture( _color1, _color2, _color3, _color4 );\r\n\r\n                clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );\r\n\r\n            } else {\r\n\r\n                _color.copy( _ambientLight );\r\n\r\n                calculateLight( element.centroidModel, element.normalModel, _color );\r\n\r\n                _color.multiply( _diffuseColor ).add( _emissiveColor );\r\n\r\n                material.wireframe === true\r\n                    ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\r\n                    : fillPath( _color );\r\n\r\n            }\r\n\r\n        } else if ( material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n            if ( material.map !== null ) {\r\n\r\n                if ( material.map.mapping instanceof THREE.UVMapping ) {\r\n\r\n                    _uvs = element.uvs[ 0 ];\r\n                    patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\r\n\r\n                }\r\n\r\n\r\n            } else if ( material.envMap !== null ) {\r\n\r\n                if ( material.envMap.mapping instanceof THREE.SphericalReflectionMapping ) {\r\n\r\n                    _vector3.copy( element.vertexNormalsModelView[ uv1 ] );\r\n                    _uv1x = 0.5 * _vector3.x + 0.5;\r\n                    _uv1y = 0.5 * _vector3.y + 0.5;\r\n\r\n                    _vector3.copy( element.vertexNormalsModelView[ uv2 ] );\r\n                    _uv2x = 0.5 * _vector3.x + 0.5;\r\n                    _uv2y = 0.5 * _vector3.y + 0.5;\r\n\r\n                    _vector3.copy( element.vertexNormalsModelView[ uv3 ] );\r\n                    _uv3x = 0.5 * _vector3.x + 0.5;\r\n                    _uv3y = 0.5 * _vector3.y + 0.5;\r\n\r\n                    patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\r\n\r\n                }/* else if ( material.envMap.mapping == THREE.SphericalRefractionMapping ) {\r\n\r\n\r\n\r\n\t\t\t\t}*/\r\n\r\n\r\n            } else {\r\n\r\n                _color.copy( material.color );\r\n\r\n                if ( material.vertexColors === THREE.FaceColors ) {\r\n\r\n                    _color.multiply( element.color );\r\n\r\n                }\r\n\r\n                material.wireframe === true\r\n                    ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\r\n                    : fillPath( _color );\r\n\r\n            }\r\n\r\n        } else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n            _near = _camera.near;\r\n            _far = _camera.far;\r\n\r\n            _color1.r = _color1.g = _color1.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _near, _far );\r\n            _color2.r = _color2.g = _color2.b = 1 - smoothstep( v2.positionScreen.z * v2.positionScreen.w, _near, _far );\r\n            _color3.r = _color3.g = _color3.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );\r\n            _color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );\r\n\r\n            _image = getGradientTexture( _color1, _color2, _color3, _color4 );\r\n\r\n            clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );\r\n\r\n        } else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n            var normal;\r\n\r\n            if ( material.shading == THREE.FlatShading ) {\r\n\r\n                normal = element.normalModelView;\r\n\r\n                _color.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n                material.wireframe === true\r\n                    ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\r\n                    : fillPath( _color );\r\n\r\n            } else if ( material.shading == THREE.SmoothShading ) {\r\n\r\n                normal = element.vertexNormalsModelView[ uv1 ];\r\n                _color1.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n                normal = element.vertexNormalsModelView[ uv2 ];\r\n                _color2.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n                normal = element.vertexNormalsModelView[ uv3 ];\r\n                _color3.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n                _color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );\r\n\r\n                _image = getGradientTexture( _color1, _color2, _color3, _color4 );\r\n\r\n                clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //\r\n\r\n    function drawTriangle( x0, y0, x1, y1, x2, y2 ) {\r\n\r\n        _context.beginPath();\r\n        _context.moveTo( x0, y0 );\r\n        _context.lineTo( x1, y1 );\r\n        _context.lineTo( x2, y2 );\r\n        _context.closePath();\r\n\r\n    }\r\n\r\n    function strokePath( color, linewidth, linecap, linejoin ) {\r\n\r\n        setLineWidth( linewidth );\r\n        setLineCap( linecap );\r\n        setLineJoin( linejoin );\r\n        setStrokeStyle( color.getStyle() );\r\n\r\n        _context.stroke();\r\n\r\n        _elemBox.expandByScalar( linewidth * 2 );\r\n\r\n    }\r\n\r\n    function fillPath( color ) {\r\n\r\n        setFillStyle( color.getStyle() );\r\n        _context.fill();\r\n\r\n    }\r\n\r\n    function patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\r\n\r\n        if ( texture instanceof THREE.DataTexture || texture.image === undefined || texture.image.width == 0 ) return;\r\n\r\n        if ( texture.needsUpdate === true ) {\r\n\r\n            var repeatX = texture.wrapS == THREE.RepeatWrapping;\r\n            var repeatY = texture.wrapT == THREE.RepeatWrapping;\r\n\r\n            _patterns[ texture.id ] = _context.createPattern(\r\n                texture.image, repeatX === true && repeatY === true\r\n                    ? 'repeat'\r\n                    : repeatX === true && repeatY === false\r\n                        ? 'repeat-x'\r\n                        : repeatX === false && repeatY === true\r\n                            ? 'repeat-y'\r\n                            : 'no-repeat'\r\n            );\r\n\r\n            texture.needsUpdate = false;\r\n\r\n        }\r\n\r\n        _patterns[ texture.id ] === undefined\r\n            ? setFillStyle( 'rgba(0,0,0,1)' )\r\n            : setFillStyle( _patterns[ texture.id ] );\r\n\r\n        // http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\r\n\r\n        var a, b, c, d, e, f, det, idet,\r\n            offsetX = texture.offset.x / texture.repeat.x,\r\n            offsetY = texture.offset.y / texture.repeat.y,\r\n            width = texture.image.width * texture.repeat.x,\r\n            height = texture.image.height * texture.repeat.y;\r\n\r\n        u0 = ( u0 + offsetX ) * width;\r\n        v0 = ( 1.0 - v0 + offsetY ) * height;\r\n\r\n        u1 = ( u1 + offsetX ) * width;\r\n        v1 = ( 1.0 - v1 + offsetY ) * height;\r\n\r\n        u2 = ( u2 + offsetX ) * width;\r\n        v2 = ( 1.0 - v2 + offsetY ) * height;\r\n\r\n        x1 -= x0; y1 -= y0;\r\n        x2 -= x0; y2 -= y0;\r\n\r\n        u1 -= u0; v1 -= v0;\r\n        u2 -= u0; v2 -= v0;\r\n\r\n        det = u1 * v2 - u2 * v1;\r\n\r\n        if ( det === 0 ) {\r\n\r\n            if ( _imagedatas[ texture.id ] === undefined ) {\r\n\r\n                var canvas = document.createElement( 'canvas' )\r\n                canvas.width = texture.image.width;\r\n                canvas.height = texture.image.height;\r\n\r\n                var context = canvas.getContext( '2d' );\r\n                context.drawImage( texture.image, 0, 0 );\r\n\r\n                _imagedatas[ texture.id ] = context.getImageData( 0, 0, texture.image.width, texture.image.height ).data;\r\n\r\n            }\r\n\r\n            var data = _imagedatas[ texture.id ];\r\n            var index = ( Math.floor( u0 ) + Math.floor( v0 ) * texture.image.width ) * 4;\r\n\r\n            _color.setRGB( data[ index ] / 255, data[ index + 1 ] / 255, data[ index + 2 ] / 255 );\r\n            fillPath( _color );\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        idet = 1 / det;\r\n\r\n        a = ( v2 * x1 - v1 * x2 ) * idet;\r\n        b = ( v2 * y1 - v1 * y2 ) * idet;\r\n        c = ( u1 * x2 - u2 * x1 ) * idet;\r\n        d = ( u1 * y2 - u2 * y1 ) * idet;\r\n\r\n        e = x0 - a * u0 - c * v0;\r\n        f = y0 - b * u0 - d * v0;\r\n\r\n        _context.save();\r\n        _context.transform( a, b, c, d, e, f );\r\n        _context.fill();\r\n        _context.restore();\r\n\r\n    }\r\n\r\n    function clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\r\n\r\n        // http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\r\n\r\n        var a, b, c, d, e, f, det, idet,\r\n            width = image.width - 1,\r\n            height = image.height - 1;\r\n\r\n        u0 *= width; v0 *= height;\r\n        u1 *= width; v1 *= height;\r\n        u2 *= width; v2 *= height;\r\n\r\n        x1 -= x0; y1 -= y0;\r\n        x2 -= x0; y2 -= y0;\r\n\r\n        u1 -= u0; v1 -= v0;\r\n        u2 -= u0; v2 -= v0;\r\n\r\n        det = u1 * v2 - u2 * v1;\r\n\r\n        idet = 1 / det;\r\n\r\n        a = ( v2 * x1 - v1 * x2 ) * idet;\r\n        b = ( v2 * y1 - v1 * y2 ) * idet;\r\n        c = ( u1 * x2 - u2 * x1 ) * idet;\r\n        d = ( u1 * y2 - u2 * y1 ) * idet;\r\n\r\n        e = x0 - a * u0 - c * v0;\r\n        f = y0 - b * u0 - d * v0;\r\n\r\n        _context.save();\r\n        _context.transform( a, b, c, d, e, f );\r\n        _context.clip();\r\n        _context.drawImage( image, 0, 0 );\r\n        _context.restore();\r\n\r\n    }\r\n\r\n    function getGradientTexture( color1, color2, color3, color4 ) {\r\n\r\n        // http://mrdoob.com/blog/post/710\r\n\r\n        _pixelMapData[ 0 ] = ( color1.r * 255 ) | 0;\r\n        _pixelMapData[ 1 ] = ( color1.g * 255 ) | 0;\r\n        _pixelMapData[ 2 ] = ( color1.b * 255 ) | 0;\r\n\r\n        _pixelMapData[ 4 ] = ( color2.r * 255 ) | 0;\r\n        _pixelMapData[ 5 ] = ( color2.g * 255 ) | 0;\r\n        _pixelMapData[ 6 ] = ( color2.b * 255 ) | 0;\r\n\r\n        _pixelMapData[ 8 ] = ( color3.r * 255 ) | 0;\r\n        _pixelMapData[ 9 ] = ( color3.g * 255 ) | 0;\r\n        _pixelMapData[ 10 ] = ( color3.b * 255 ) | 0;\r\n\r\n        _pixelMapData[ 12 ] = ( color4.r * 255 ) | 0;\r\n        _pixelMapData[ 13 ] = ( color4.g * 255 ) | 0;\r\n        _pixelMapData[ 14 ] = ( color4.b * 255 ) | 0;\r\n\r\n        _pixelMapContext.putImageData( _pixelMapImage, 0, 0 );\r\n        _gradientMapContext.drawImage( _pixelMap, 0, 0 );\r\n\r\n        return _gradientMap;\r\n\r\n    }\r\n\r\n    // Hide anti-alias gaps\r\n\r\n    function expand( v1, v2, pixels ) {\r\n\r\n        var x = v2.x - v1.x, y = v2.y - v1.y,\r\n            det = x * x + y * y, idet;\r\n\r\n        if ( det === 0 ) return;\r\n\r\n        idet = pixels / Math.sqrt( det );\r\n\r\n        x *= idet; y *= idet;\r\n\r\n        v2.x += x; v2.y += y;\r\n        v1.x -= x; v1.y -= y;\r\n\r\n    }\r\n\r\n    // Context cached methods.\r\n\r\n    function setOpacity( value ) {\r\n\r\n        if ( _contextGlobalAlpha !== value ) {\r\n\r\n            _context.globalAlpha = value;\r\n            _contextGlobalAlpha = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setBlending( value ) {\r\n\r\n        if ( _contextGlobalCompositeOperation !== value ) {\r\n\r\n            if ( value === THREE.NormalBlending ) {\r\n\r\n                _context.globalCompositeOperation = 'source-over';\r\n\r\n            } else if ( value === THREE.AdditiveBlending ) {\r\n\r\n                _context.globalCompositeOperation = 'lighter';\r\n\r\n            } else if ( value === THREE.SubtractiveBlending ) {\r\n\r\n                _context.globalCompositeOperation = 'darker';\r\n\r\n            }\r\n\r\n            _contextGlobalCompositeOperation = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setLineWidth( value ) {\r\n\r\n        if ( _contextLineWidth !== value ) {\r\n\r\n            _context.lineWidth = value;\r\n            _contextLineWidth = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setLineCap( value ) {\r\n\r\n        // \"butt\", \"round\", \"square\"\r\n\r\n        if ( _contextLineCap !== value ) {\r\n\r\n            _context.lineCap = value;\r\n            _contextLineCap = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setLineJoin( value ) {\r\n\r\n        // \"round\", \"bevel\", \"miter\"\r\n\r\n        if ( _contextLineJoin !== value ) {\r\n\r\n            _context.lineJoin = value;\r\n            _contextLineJoin = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setStrokeStyle( value ) {\r\n\r\n        if ( _contextStrokeStyle !== value ) {\r\n\r\n            _context.strokeStyle = value;\r\n            _contextStrokeStyle = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setFillStyle( value ) {\r\n\r\n        if ( _contextFillStyle !== value ) {\r\n\r\n            _context.fillStyle = value;\r\n            _contextFillStyle = value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function setDashAndGap( dashSizeValue, gapSizeValue ) {\r\n\r\n        if ( _contextDashSize !== dashSizeValue || _contextGapSize !== gapSizeValue ) {\r\n\r\n            _context.setLineDash( [ dashSizeValue, gapSizeValue ] );\r\n            _contextDashSize = dashSizeValue;\r\n            _contextGapSize = gapSizeValue;\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.ShaderChunk = {\r\n\r\n    // FOG\r\n\r\n    fog_pars_fragment: [\r\n\r\n        \"#ifdef USE_FOG\",\r\n\r\n        \"uniform vec3 fogColor;\",\r\n\r\n        \"#ifdef FOG_EXP2\",\r\n\r\n        \"uniform float fogDensity;\",\r\n\r\n        \"#else\",\r\n\r\n        \"uniform float fogNear;\",\r\n        \"uniform float fogFar;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    fog_fragment: [\r\n\r\n        \"#ifdef USE_FOG\",\r\n\r\n        \"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n        \"#ifdef FOG_EXP2\",\r\n\r\n        \"const float LOG2 = 1.442695;\",\r\n        \"float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\",\r\n        \"fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\",\r\n\r\n        \"#else\",\r\n\r\n        \"float fogFactor = smoothstep( fogNear, fogFar, depth );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // ENVIRONMENT MAP\r\n\r\n    envmap_pars_fragment: [\r\n\r\n        \"#ifdef USE_ENVMAP\",\r\n\r\n        \"uniform float reflectivity;\",\r\n        \"uniform samplerCube envMap;\",\r\n        \"uniform float flipEnvMap;\",\r\n        \"uniform int combine;\",\r\n\r\n        \"#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\",\r\n\r\n        \"uniform bool useRefract;\",\r\n        \"uniform float refractionRatio;\",\r\n\r\n        \"#else\",\r\n\r\n        \"varying vec3 vReflect;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    envmap_fragment: [\r\n\r\n        \"#ifdef USE_ENVMAP\",\r\n\r\n        \"vec3 reflectVec;\",\r\n\r\n        \"#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\",\r\n\r\n        \"vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\r\n\r\n        \"if ( useRefract ) {\",\r\n\r\n        \"reflectVec = refract( cameraToVertex, normal, refractionRatio );\",\r\n\r\n        \"} else { \",\r\n\r\n        \"reflectVec = reflect( cameraToVertex, normal );\",\r\n\r\n        \"}\",\r\n\r\n        \"#else\",\r\n\r\n        \"reflectVec = vReflect;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n        \"vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\r\n\r\n        \"#else\",\r\n\r\n        \"vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef GAMMA_INPUT\",\r\n\r\n        \"cubeColor.xyz *= cubeColor.xyz;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"if ( combine == 1 ) {\",\r\n\r\n        \"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\",\r\n\r\n        \"} else if ( combine == 2 ) {\",\r\n\r\n        \"gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\",\r\n\r\n        \"} else {\",\r\n\r\n        \"gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    envmap_pars_vertex: [\r\n\r\n        \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\",\r\n\r\n        \"varying vec3 vReflect;\",\r\n\r\n        \"uniform float refractionRatio;\",\r\n        \"uniform bool useRefract;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    worldpos_vertex : [\r\n\r\n        \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\",\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"vec4 worldPosition = modelMatrix * skinned;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\",\r\n\r\n        \"vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\",\r\n\r\n        \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    envmap_vertex : [\r\n\r\n        \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\",\r\n\r\n        \"vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\",\r\n        \"worldNormal = normalize( worldNormal );\",\r\n\r\n        \"vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\",\r\n\r\n        \"if ( useRefract ) {\",\r\n\r\n        \"vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\",\r\n\r\n        \"} else {\",\r\n\r\n        \"vReflect = reflect( cameraToVertex, worldNormal );\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // COLOR MAP (particles)\r\n\r\n    map_particle_pars_fragment: [\r\n\r\n        \"#ifdef USE_MAP\",\r\n\r\n        \"uniform sampler2D map;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n\r\n    map_particle_fragment: [\r\n\r\n        \"#ifdef USE_MAP\",\r\n\r\n        \"gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // COLOR MAP (triangles)\r\n\r\n    map_pars_vertex: [\r\n\r\n        \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\",\r\n\r\n        \"varying vec2 vUv;\",\r\n        \"uniform vec4 offsetRepeat;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    map_pars_fragment: [\r\n\r\n        \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\",\r\n\r\n        \"varying vec2 vUv;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef USE_MAP\",\r\n\r\n        \"uniform sampler2D map;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    map_vertex: [\r\n\r\n        \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\",\r\n\r\n        \"vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    map_fragment: [\r\n\r\n        \"#ifdef USE_MAP\",\r\n\r\n        \"vec4 texelColor = texture2D( map, vUv );\",\r\n\r\n        \"#ifdef GAMMA_INPUT\",\r\n\r\n        \"texelColor.xyz *= texelColor.xyz;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"gl_FragColor = gl_FragColor * texelColor;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // LIGHT MAP\r\n\r\n    lightmap_pars_fragment: [\r\n\r\n        \"#ifdef USE_LIGHTMAP\",\r\n\r\n        \"varying vec2 vUv2;\",\r\n        \"uniform sampler2D lightMap;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    lightmap_pars_vertex: [\r\n\r\n        \"#ifdef USE_LIGHTMAP\",\r\n\r\n        \"varying vec2 vUv2;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    lightmap_fragment: [\r\n\r\n        \"#ifdef USE_LIGHTMAP\",\r\n\r\n        \"gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    lightmap_vertex: [\r\n\r\n        \"#ifdef USE_LIGHTMAP\",\r\n\r\n        \"vUv2 = uv2;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // BUMP MAP\r\n\r\n    bumpmap_pars_fragment: [\r\n\r\n        \"#ifdef USE_BUMPMAP\",\r\n\r\n        \"uniform sampler2D bumpMap;\",\r\n        \"uniform float bumpScale;\",\r\n\r\n        // Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\r\n        //\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\r\n\r\n        // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n        \"vec2 dHdxy_fwd() {\",\r\n\r\n        \"vec2 dSTdx = dFdx( vUv );\",\r\n        \"vec2 dSTdy = dFdy( vUv );\",\r\n\r\n        \"float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\",\r\n        \"float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\",\r\n        \"float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\",\r\n\r\n        \"return vec2( dBx, dBy );\",\r\n\r\n        \"}\",\r\n\r\n        \"vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\",\r\n\r\n        \"vec3 vSigmaX = dFdx( surf_pos );\",\r\n        \"vec3 vSigmaY = dFdy( surf_pos );\",\r\n        \"vec3 vN = surf_norm;\",\t\t// normalized\r\n\r\n        \"vec3 R1 = cross( vSigmaY, vN );\",\r\n        \"vec3 R2 = cross( vN, vSigmaX );\",\r\n\r\n        \"float fDet = dot( vSigmaX, R1 );\",\r\n\r\n        \"vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\",\r\n        \"return normalize( abs( fDet ) * surf_norm - vGrad );\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // NORMAL MAP\r\n\r\n    normalmap_pars_fragment: [\r\n\r\n        \"#ifdef USE_NORMALMAP\",\r\n\r\n        \"uniform sampler2D normalMap;\",\r\n        \"uniform vec2 normalScale;\",\r\n\r\n        // Per-Pixel Tangent Space Normal Mapping\r\n        // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\r\n\r\n        \"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\",\r\n\r\n        \"vec3 q0 = dFdx( eye_pos.xyz );\",\r\n        \"vec3 q1 = dFdy( eye_pos.xyz );\",\r\n        \"vec2 st0 = dFdx( vUv.st );\",\r\n        \"vec2 st1 = dFdy( vUv.st );\",\r\n\r\n        \"vec3 S = normalize(  q0 * st1.t - q1 * st0.t );\",\r\n        \"vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\",\r\n        \"vec3 N = normalize( surf_norm );\",\r\n\r\n        \"vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\",\r\n        \"mapN.xy = normalScale * mapN.xy;\",\r\n        \"mat3 tsn = mat3( S, T, N );\",\r\n        \"return normalize( tsn * mapN );\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // SPECULAR MAP\r\n\r\n    specularmap_pars_fragment: [\r\n\r\n        \"#ifdef USE_SPECULARMAP\",\r\n\r\n        \"uniform sampler2D specularMap;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    specularmap_fragment: [\r\n\r\n        \"float specularStrength;\",\r\n\r\n        \"#ifdef USE_SPECULARMAP\",\r\n\r\n        \"vec4 texelSpecular = texture2D( specularMap, vUv );\",\r\n        \"specularStrength = texelSpecular.r;\",\r\n\r\n        \"#else\",\r\n\r\n        \"specularStrength = 1.0;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // LIGHTS LAMBERT\r\n\r\n    lights_lambert_pars_vertex: [\r\n\r\n        \"uniform vec3 ambient;\",\r\n        \"uniform vec3 diffuse;\",\r\n        \"uniform vec3 emissive;\",\r\n\r\n        \"uniform vec3 ambientLightColor;\",\r\n\r\n        \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n        \"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n        \"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n        \"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n        \"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n        \"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"uniform vec3 wrapRGB;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    lights_lambert_vertex: [\r\n\r\n        \"vLightFront = vec3( 0.0 );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vLightBack = vec3( 0.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"transformedNormal = normalize( transformedNormal );\",\r\n\r\n        \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n        \"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n        \"vec3 dirVector = normalize( lDirection.xyz );\",\r\n\r\n        \"float dotProduct = dot( transformedNormal, dirVector );\",\r\n        \"vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n        \"directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n        \"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\r\n\r\n        \"float lDistance = 1.0;\",\r\n        \"if ( pointLightDistance[ i ] > 0.0 )\",\r\n        \"lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\",\r\n\r\n        \"lVector = normalize( lVector );\",\r\n        \"float dotProduct = dot( transformedNormal, lVector );\",\r\n\r\n        \"vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n        \"pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n        \"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\r\n\r\n        \"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\",\r\n\r\n        \"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n        \"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\",\r\n\r\n        \"float lDistance = 1.0;\",\r\n        \"if ( spotLightDistance[ i ] > 0.0 )\",\r\n        \"lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\",\r\n\r\n        \"lVector = normalize( lVector );\",\r\n\r\n        \"float dotProduct = dot( transformedNormal, lVector );\",\r\n        \"vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n        \"spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n        \"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n        \"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n        \"float dotProduct = dot( transformedNormal, lVector );\",\r\n\r\n        \"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\r\n        \"float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\",\r\n\r\n        \"vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // LIGHTS PHONG\r\n\r\n    lights_phong_pars_vertex: [\r\n\r\n        \"#ifndef PHONG_PER_PIXEL\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n        \"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\r\n        \"varying vec4 vPointLight[ MAX_POINT_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\r\n        \"varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\",\r\n\r\n        \"varying vec3 vWorldPosition;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n\r\n    lights_phong_vertex: [\r\n\r\n        \"#ifndef PHONG_PER_PIXEL\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n        \"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\r\n\r\n        \"float lDistance = 1.0;\",\r\n        \"if ( pointLightDistance[ i ] > 0.0 )\",\r\n        \"lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\",\r\n\r\n        \"vPointLight[ i ] = vec4( lVector, lDistance );\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n        \"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\r\n\r\n        \"float lDistance = 1.0;\",\r\n        \"if ( spotLightDistance[ i ] > 0.0 )\",\r\n        \"lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\",\r\n\r\n        \"vSpotLight[ i ] = vec4( lVector, lDistance );\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\",\r\n\r\n        \"vWorldPosition = worldPosition.xyz;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    lights_phong_pars_fragment: [\r\n\r\n        \"uniform vec3 ambientLightColor;\",\r\n\r\n        \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n        \"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n        \"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n        \"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n\r\n        \"#ifdef PHONG_PER_PIXEL\",\r\n\r\n        \"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n        \"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\r\n        \"#else\",\r\n\r\n        \"varying vec4 vPointLight[ MAX_POINT_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n        \"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n\r\n        \"#ifdef PHONG_PER_PIXEL\",\r\n\r\n        \"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\r\n        \"#else\",\r\n\r\n        \"varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\",\r\n\r\n        \"varying vec3 vWorldPosition;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"uniform vec3 wrapRGB;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"varying vec3 vViewPosition;\",\r\n        \"varying vec3 vNormal;\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    lights_phong_fragment: [\r\n\r\n        \"vec3 normal = normalize( vNormal );\",\r\n        \"vec3 viewPosition = normalize( vViewPosition );\",\r\n\r\n        \"#ifdef DOUBLE_SIDED\",\r\n\r\n        \"normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef USE_NORMALMAP\",\r\n\r\n        \"normal = perturbNormal2Arb( -vViewPosition, normal );\",\r\n\r\n        \"#elif defined( USE_BUMPMAP )\",\r\n\r\n        \"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"vec3 pointDiffuse  = vec3( 0.0 );\",\r\n        \"vec3 pointSpecular = vec3( 0.0 );\",\r\n\r\n        \"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n        \"#ifdef PHONG_PER_PIXEL\",\r\n\r\n        \"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n        \"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n        \"float lDistance = 1.0;\",\r\n        \"if ( pointLightDistance[ i ] > 0.0 )\",\r\n        \"lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\",\r\n\r\n        \"lVector = normalize( lVector );\",\r\n\r\n        \"#else\",\r\n\r\n        \"vec3 lVector = normalize( vPointLight[ i ].xyz );\",\r\n        \"float lDistance = vPointLight[ i ].w;\",\r\n\r\n        \"#endif\",\r\n\r\n        // diffuse\r\n\r\n        \"float dotProduct = dot( normal, lVector );\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"float pointDiffuseWeightFull = max( dotProduct, 0.0 );\",\r\n        \"float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\r\n\r\n        \"vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n        \"#else\",\r\n\r\n        \"float pointDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\",\r\n\r\n        // specular\r\n\r\n        \"vec3 pointHalfVector = normalize( lVector + viewPosition );\",\r\n        \"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\r\n        \"float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\",\r\n\r\n        \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n        // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n        \"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n        \"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\",\r\n        \"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\",\r\n\r\n        \"#else\",\r\n\r\n        \"pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"vec3 spotDiffuse  = vec3( 0.0 );\",\r\n        \"vec3 spotSpecular = vec3( 0.0 );\",\r\n\r\n        \"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n        \"#ifdef PHONG_PER_PIXEL\",\r\n\r\n        \"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n        \"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n        \"float lDistance = 1.0;\",\r\n        \"if ( spotLightDistance[ i ] > 0.0 )\",\r\n        \"lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\",\r\n\r\n        \"lVector = normalize( lVector );\",\r\n\r\n        \"#else\",\r\n\r\n        \"vec3 lVector = normalize( vSpotLight[ i ].xyz );\",\r\n        \"float lDistance = vSpotLight[ i ].w;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\r\n\r\n        \"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n        \"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\",\r\n\r\n        // diffuse\r\n\r\n        \"float dotProduct = dot( normal, lVector );\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"float spotDiffuseWeightFull = max( dotProduct, 0.0 );\",\r\n        \"float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\r\n\r\n        \"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n        \"#else\",\r\n\r\n        \"float spotDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\",\r\n\r\n        // specular\r\n\r\n        \"vec3 spotHalfVector = normalize( lVector + viewPosition );\",\r\n        \"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\r\n        \"float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\",\r\n\r\n        \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n        // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n        \"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n        \"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\",\r\n        \"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\",\r\n\r\n        \"#else\",\r\n\r\n        \"spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n        \"vec3 dirDiffuse  = vec3( 0.0 );\",\r\n        \"vec3 dirSpecular = vec3( 0.0 );\" ,\r\n\r\n        \"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n        \"vec3 dirVector = normalize( lDirection.xyz );\",\r\n\r\n        // diffuse\r\n\r\n        \"float dotProduct = dot( normal, dirVector );\",\r\n\r\n        \"#ifdef WRAP_AROUND\",\r\n\r\n        \"float dirDiffuseWeightFull = max( dotProduct, 0.0 );\",\r\n        \"float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\r\n\r\n        \"vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n        \"#else\",\r\n\r\n        \"float dirDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\",\r\n\r\n        // specular\r\n\r\n        \"vec3 dirHalfVector = normalize( dirVector + viewPosition );\",\r\n        \"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\r\n        \"float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\",\r\n\r\n        \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n        /*\r\n\t\t\t\t\t// fresnel term from skin shader\r\n\t\t\t\t\t\"const float F0 = 0.128;\",\r\n\r\n\t\t\t\t\t\"float base = 1.0 - dot( viewPosition, dirHalfVector );\",\r\n\t\t\t\t\t\"float exponential = pow( base, 5.0 );\",\r\n\r\n\t\t\t\t\t\"float fresnel = exponential + F0 * ( 1.0 - exponential );\",\r\n\t\t\t\t\t*/\r\n\r\n        /*\r\n\t\t\t\t\t// fresnel term from fresnel shader\r\n\t\t\t\t\t\"const float mFresnelBias = 0.08;\",\r\n\t\t\t\t\t\"const float mFresnelScale = 0.3;\",\r\n\t\t\t\t\t\"const float mFresnelPower = 5.0;\",\r\n\r\n\t\t\t\t\t\"float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\",\r\n\t\t\t\t\t*/\r\n\r\n        // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n        \"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n        //\"dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\",\r\n\r\n        \"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\",\r\n        \"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\r\n\r\n        \"#else\",\r\n\r\n        \"dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n        \"vec3 hemiDiffuse  = vec3( 0.0 );\",\r\n        \"vec3 hemiSpecular = vec3( 0.0 );\" ,\r\n\r\n        \"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n        \"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n        \"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n        // diffuse\r\n\r\n        \"float dotProduct = dot( normal, lVector );\",\r\n        \"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\r\n\r\n        \"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\r\n\r\n        \"hemiDiffuse += diffuse * hemiColor;\",\r\n\r\n        // specular (sky light)\r\n\r\n        \"vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\",\r\n        \"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\r\n        \"float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\",\r\n\r\n        // specular (ground light)\r\n\r\n        \"vec3 lVectorGround = -lVector;\",\r\n\r\n        \"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\",\r\n        \"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\r\n        \"float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\",\r\n\r\n        \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n        \"float dotProductGround = dot( normal, lVectorGround );\",\r\n\r\n        // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n        \"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n        \"vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\",\r\n        \"vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\",\r\n        \"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\r\n\r\n        \"#else\",\r\n\r\n        \"hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vec3 totalDiffuse = vec3( 0.0 );\",\r\n        \"vec3 totalSpecular = vec3( 0.0 );\",\r\n\r\n        \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n        \"totalDiffuse += dirDiffuse;\",\r\n        \"totalSpecular += dirSpecular;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n        \"totalDiffuse += hemiDiffuse;\",\r\n        \"totalSpecular += hemiSpecular;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n        \"totalDiffuse += pointDiffuse;\",\r\n        \"totalSpecular += pointSpecular;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n        \"totalDiffuse += spotDiffuse;\",\r\n        \"totalSpecular += spotSpecular;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef METAL\",\r\n\r\n        \"gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\",\r\n\r\n        \"#else\",\r\n\r\n        \"gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // VERTEX COLORS\r\n\r\n    color_pars_fragment: [\r\n\r\n        \"#ifdef USE_COLOR\",\r\n\r\n        \"varying vec3 vColor;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n\r\n    color_fragment: [\r\n\r\n        \"#ifdef USE_COLOR\",\r\n\r\n        \"gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    color_pars_vertex: [\r\n\r\n        \"#ifdef USE_COLOR\",\r\n\r\n        \"varying vec3 vColor;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n\r\n    color_vertex: [\r\n\r\n        \"#ifdef USE_COLOR\",\r\n\r\n        \"#ifdef GAMMA_INPUT\",\r\n\r\n        \"vColor = color * color;\",\r\n\r\n        \"#else\",\r\n\r\n        \"vColor = color;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // SKINNING\r\n\r\n    skinning_pars_vertex: [\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"#ifdef BONE_TEXTURE\",\r\n\r\n        \"uniform sampler2D boneTexture;\",\r\n        \"uniform int boneTextureWidth;\",\r\n        \"uniform int boneTextureHeight;\",\r\n\r\n        \"mat4 getBoneMatrix( const in float i ) {\",\r\n\r\n        \"float j = i * 4.0;\",\r\n        \"float x = mod( j, float( boneTextureWidth ) );\",\r\n        \"float y = floor( j / float( boneTextureWidth ) );\",\r\n\r\n        \"float dx = 1.0 / float( boneTextureWidth );\",\r\n        \"float dy = 1.0 / float( boneTextureHeight );\",\r\n\r\n        \"y = dy * ( y + 0.5 );\",\r\n\r\n        \"vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\",\r\n        \"vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\",\r\n        \"vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\",\r\n        \"vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\",\r\n\r\n        \"mat4 bone = mat4( v1, v2, v3, v4 );\",\r\n\r\n        \"return bone;\",\r\n\r\n        \"}\",\r\n\r\n        \"#else\",\r\n\r\n        \"uniform mat4 boneGlobalMatrices[ MAX_BONES ];\",\r\n\r\n        \"mat4 getBoneMatrix( const in float i ) {\",\r\n\r\n        \"mat4 bone = boneGlobalMatrices[ int(i) ];\",\r\n        \"return bone;\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    skinbase_vertex: [\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"mat4 boneMatX = getBoneMatrix( skinIndex.x );\",\r\n        \"mat4 boneMatY = getBoneMatrix( skinIndex.y );\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    skinning_vertex: [\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"#ifdef USE_MORPHTARGETS\",\r\n\r\n        \"vec4 skinVertex = vec4( morphed, 1.0 );\",\r\n\r\n        \"#else\",\r\n\r\n        \"vec4 skinVertex = vec4( position, 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\r\n        \"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // MORPHING\r\n\r\n    morphtarget_pars_vertex: [\r\n\r\n        \"#ifdef USE_MORPHTARGETS\",\r\n\r\n        \"#ifndef USE_MORPHNORMALS\",\r\n\r\n        \"uniform float morphTargetInfluences[ 8 ];\",\r\n\r\n        \"#else\",\r\n\r\n        \"uniform float morphTargetInfluences[ 4 ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    morphtarget_vertex: [\r\n\r\n        \"#ifdef USE_MORPHTARGETS\",\r\n\r\n        \"vec3 morphed = vec3( 0.0 );\",\r\n        \"morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\",\r\n        \"morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\",\r\n        \"morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\",\r\n        \"morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\",\r\n\r\n        \"#ifndef USE_MORPHNORMALS\",\r\n\r\n        \"morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\",\r\n        \"morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\",\r\n        \"morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\",\r\n        \"morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"morphed += position;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    default_vertex : [\r\n\r\n        \"vec4 mvPosition;\",\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"mvPosition = modelViewMatrix * skinned;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\",\r\n\r\n        \"mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\",\r\n\r\n        \"mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"gl_Position = projectionMatrix * mvPosition;\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    morphnormal_vertex: [\r\n\r\n        \"#ifdef USE_MORPHNORMALS\",\r\n\r\n        \"vec3 morphedNormal = vec3( 0.0 );\",\r\n\r\n        \"morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\",\r\n        \"morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\",\r\n        \"morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\",\r\n        \"morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\",\r\n\r\n        \"morphedNormal += normal;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    skinnormal_vertex: [\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"mat4 skinMatrix = skinWeight.x * boneMatX;\",\r\n        \"skinMatrix \t+= skinWeight.y * boneMatY;\",\r\n\r\n        \"#ifdef USE_MORPHNORMALS\",\r\n\r\n        \"vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\",\r\n\r\n        \"#else\",\r\n\r\n        \"vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    defaultnormal_vertex: [\r\n\r\n        \"vec3 objectNormal;\",\r\n\r\n        \"#ifdef USE_SKINNING\",\r\n\r\n        \"objectNormal = skinnedNormal.xyz;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\",\r\n\r\n        \"objectNormal = morphedNormal;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\",\r\n\r\n        \"objectNormal = normal;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef FLIP_SIDED\",\r\n\r\n        \"objectNormal = -objectNormal;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"vec3 transformedNormal = normalMatrix * objectNormal;\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // SHADOW MAP\r\n\r\n    // based on SpiderGL shadow map and Fabien Sanglard's GLSL shadow mapping examples\r\n    //  http://spidergl.org/example.php?id=6\r\n    // \thttp://fabiensanglard.net/shadowmapping\r\n\r\n    shadowmap_pars_fragment: [\r\n\r\n        \"#ifdef USE_SHADOWMAP\",\r\n\r\n        \"uniform sampler2D shadowMap[ MAX_SHADOWS ];\",\r\n        \"uniform vec2 shadowMapSize[ MAX_SHADOWS ];\",\r\n\r\n        \"uniform float shadowDarkness[ MAX_SHADOWS ];\",\r\n        \"uniform float shadowBias[ MAX_SHADOWS ];\",\r\n\r\n        \"varying vec4 vShadowCoord[ MAX_SHADOWS ];\",\r\n\r\n        \"float unpackDepth( const in vec4 rgba_depth ) {\",\r\n\r\n        \"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\r\n        \"float depth = dot( rgba_depth, bit_shift );\",\r\n        \"return depth;\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    shadowmap_fragment: [\r\n\r\n        \"#ifdef USE_SHADOWMAP\",\r\n\r\n        \"#ifdef SHADOWMAP_DEBUG\",\r\n\r\n        \"vec3 frustumColors[3];\",\r\n        \"frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\",\r\n        \"frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\",\r\n        \"frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#ifdef SHADOWMAP_CASCADE\",\r\n\r\n        \"int inFrustumCount = 0;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"float fDepth;\",\r\n        \"vec3 shadowColor = vec3( 1.0 );\",\r\n\r\n        \"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\r\n\r\n        \"vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\",\r\n\r\n        // \"if ( something && something )\" \t\t breaks ATI OpenGL shader compiler\r\n        // \"if ( all( something, something ) )\"  using this instead\r\n\r\n        \"bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\",\r\n        \"bool inFrustum = all( inFrustumVec );\",\r\n\r\n        // don't shadow pixels outside of light frustum\r\n        // use just first frustum (for cascades)\r\n        // don't shadow pixels behind far plane of light frustum\r\n\r\n        \"#ifdef SHADOWMAP_CASCADE\",\r\n\r\n        \"inFrustumCount += int( inFrustum );\",\r\n        \"bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\",\r\n\r\n        \"#else\",\r\n\r\n        \"bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"bool frustumTest = all( frustumTestVec );\",\r\n\r\n        \"if ( frustumTest ) {\",\r\n\r\n        \"shadowCoord.z += shadowBias[ i ];\",\r\n\r\n        \"#if defined( SHADOWMAP_TYPE_PCF )\",\r\n\r\n        // Percentage-close filtering\r\n        // (9 pixel kernel)\r\n        // http://fabiensanglard.net/shadowmappingPCF/\r\n\r\n        \"float shadow = 0.0;\",\r\n\r\n        /*\r\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\r\n\t\t\t\t\t\t// must enroll loop manually\r\n\r\n\t\t\t\t\t\t\"for ( float y = -1.25; y <= 1.25; y += 1.25 )\",\r\n\t\t\t\t\t\t\t\"for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\",\r\n\r\n\t\t\t\t\t\t\t\t\"vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\",\r\n\r\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple \"texture2D\" lookup\r\n\t\t\t\t\t\t\t\t//\"vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\",\r\n\r\n\t\t\t\t\t\t\t\t\"float fDepth = unpackDepth( rgbaDepth );\",\r\n\r\n\t\t\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z )\",\r\n\t\t\t\t\t\t\t\t\t\"shadow += 1.0;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"shadow /= 9.0;\",\r\n\r\n\t\t\t\t\t\t*/\r\n\r\n        \"const float shadowDelta = 1.0 / 9.0;\",\r\n\r\n        \"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\",\r\n        \"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\",\r\n\r\n        \"float dx0 = -1.25 * xPixelOffset;\",\r\n        \"float dy0 = -1.25 * yPixelOffset;\",\r\n        \"float dx1 = 1.25 * xPixelOffset;\",\r\n        \"float dy1 = 1.25 * yPixelOffset;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\",\r\n        \"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n        \"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\",\r\n\r\n        \"#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\",\r\n\r\n        // Percentage-close filtering\r\n        // (9 pixel kernel)\r\n        // http://fabiensanglard.net/shadowmappingPCF/\r\n\r\n        \"float shadow = 0.0;\",\r\n\r\n        \"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\",\r\n        \"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\",\r\n\r\n        \"float dx0 = -1.0 * xPixelOffset;\",\r\n        \"float dy0 = -1.0 * yPixelOffset;\",\r\n        \"float dx1 = 1.0 * xPixelOffset;\",\r\n        \"float dy1 = 1.0 * yPixelOffset;\",\r\n\r\n        \"mat3 shadowKernel;\",\r\n        \"mat3 depthKernel;\",\r\n\r\n        \"depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\",\r\n        \"depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\",\r\n        \"depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\",\r\n        \"depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\",\r\n        \"depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\",\r\n        \"depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\",\r\n        \"depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\",\r\n        \"depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\",\r\n        \"depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\",\r\n\r\n        \"vec3 shadowZ = vec3( shadowCoord.z );\",\r\n        \"shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\",\r\n        \"shadowKernel[0] *= vec3(0.25);\",\r\n\r\n        \"shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\",\r\n        \"shadowKernel[1] *= vec3(0.25);\",\r\n\r\n        \"shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\",\r\n        \"shadowKernel[2] *= vec3(0.25);\",\r\n\r\n        \"vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\",\r\n\r\n        \"shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\",\r\n        \"shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\",\r\n\r\n        \"vec4 shadowValues;\",\r\n        \"shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\",\r\n        \"shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\",\r\n        \"shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\",\r\n        \"shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\",\r\n\r\n        \"shadow = dot( shadowValues, vec4( 1.0 ) );\",\r\n\r\n        \"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\",\r\n\r\n        \"#else\",\r\n\r\n        \"vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\",\r\n        \"float fDepth = unpackDepth( rgbaDepth );\",\r\n\r\n        \"if ( fDepth < shadowCoord.z )\",\r\n\r\n        // spot with multiple shadows is darker\r\n\r\n        \"shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\",\r\n\r\n        // spot with multiple shadows has the same color as single shadow spot\r\n\r\n        //\"shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n\r\n        \"#ifdef SHADOWMAP_DEBUG\",\r\n\r\n        \"#ifdef SHADOWMAP_CASCADE\",\r\n\r\n        \"if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\",\r\n\r\n        \"#else\",\r\n\r\n        \"if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\",\r\n\r\n        \"#endif\",\r\n\r\n        \"#endif\",\r\n\r\n        \"}\",\r\n\r\n        \"#ifdef GAMMA_OUTPUT\",\r\n\r\n        \"shadowColor *= shadowColor;\",\r\n\r\n        \"#endif\",\r\n\r\n        \"gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    shadowmap_pars_vertex: [\r\n\r\n        \"#ifdef USE_SHADOWMAP\",\r\n\r\n        \"varying vec4 vShadowCoord[ MAX_SHADOWS ];\",\r\n        \"uniform mat4 shadowMatrix[ MAX_SHADOWS ];\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    shadowmap_vertex: [\r\n\r\n        \"#ifdef USE_SHADOWMAP\",\r\n\r\n        \"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\r\n\r\n        \"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\r\n\r\n        \"}\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // ALPHATEST\r\n\r\n    alphatest_fragment: [\r\n\r\n        \"#ifdef ALPHATEST\",\r\n\r\n        \"if ( gl_FragColor.a < ALPHATEST ) discard;\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\"),\r\n\r\n    // LINEAR SPACE\r\n\r\n    linear_to_gamma_fragment: [\r\n\r\n        \"#ifdef GAMMA_OUTPUT\",\r\n\r\n        \"gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\",\r\n\r\n        \"#endif\"\r\n\r\n    ].join(\"\\n\")\r\n\r\n\r\n};\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n    merge: function ( uniforms ) {\r\n\r\n        var u, p, tmp, merged = {};\r\n\r\n        for ( u = 0; u < uniforms.length; u ++ ) {\r\n\r\n            tmp = this.clone( uniforms[ u ] );\r\n\r\n            for ( p in tmp ) {\r\n\r\n                merged[ p ] = tmp[ p ];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return merged;\r\n\r\n    },\r\n\r\n    clone: function ( uniforms_src ) {\r\n\r\n        var u, p, parameter, parameter_src, uniforms_dst = {};\r\n\r\n        for ( u in uniforms_src ) {\r\n\r\n            uniforms_dst[ u ] = {};\r\n\r\n            for ( p in uniforms_src[ u ] ) {\r\n\r\n                parameter_src = uniforms_src[ u ][ p ];\r\n\r\n                if ( parameter_src instanceof THREE.Color ||\r\n                    parameter_src instanceof THREE.Vector2 ||\r\n                    parameter_src instanceof THREE.Vector3 ||\r\n                    parameter_src instanceof THREE.Vector4 ||\r\n                    parameter_src instanceof THREE.Matrix4 ||\r\n                    parameter_src instanceof THREE.Texture ) {\r\n\r\n                    uniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n                } else if ( parameter_src instanceof Array ) {\r\n\r\n                    uniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n                } else {\r\n\r\n                    uniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return uniforms_dst;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.UniformsLib = {\r\n\r\n    common: {\r\n\r\n        \"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n        \"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n        \"map\" : { type: \"t\", value: null },\r\n        \"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n        \"lightMap\" : { type: \"t\", value: null },\r\n        \"specularMap\" : { type: \"t\", value: null },\r\n\r\n        \"envMap\" : { type: \"t\", value: null },\r\n        \"flipEnvMap\" : { type: \"f\", value: -1 },\r\n        \"useRefract\" : { type: \"i\", value: 0 },\r\n        \"reflectivity\" : { type: \"f\", value: 1.0 },\r\n        \"refractionRatio\" : { type: \"f\", value: 0.98 },\r\n        \"combine\" : { type: \"i\", value: 0 },\r\n\r\n        \"morphTargetInfluences\" : { type: \"f\", value: 0 }\r\n\r\n    },\r\n\r\n    bump: {\r\n\r\n        \"bumpMap\" : { type: \"t\", value: null },\r\n        \"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n    },\r\n\r\n    normalmap: {\r\n\r\n        \"normalMap\" : { type: \"t\", value: null },\r\n        \"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n    },\r\n\r\n    fog : {\r\n\r\n        \"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n        \"fogNear\" : { type: \"f\", value: 1 },\r\n        \"fogFar\" : { type: \"f\", value: 2000 },\r\n        \"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n    },\r\n\r\n    lights: {\r\n\r\n        \"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n        \"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n        \"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n        \"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n        \"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n        \"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n        \"pointLightColor\" : { type: \"fv\", value: [] },\r\n        \"pointLightPosition\" : { type: \"fv\", value: [] },\r\n        \"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\r\n        \"spotLightColor\" : { type: \"fv\", value: [] },\r\n        \"spotLightPosition\" : { type: \"fv\", value: [] },\r\n        \"spotLightDirection\" : { type: \"fv\", value: [] },\r\n        \"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n        \"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n        \"spotLightExponent\" : { type: \"fv1\", value: [] }\r\n\r\n    },\r\n\r\n    particle: {\r\n\r\n        \"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n        \"opacity\" : { type: \"f\", value: 1.0 },\r\n        \"size\" : { type: \"f\", value: 1.0 },\r\n        \"scale\" : { type: \"f\", value: 1.0 },\r\n        \"map\" : { type: \"t\", value: null },\r\n\r\n        \"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n        \"fogNear\" : { type: \"f\", value: 1 },\r\n        \"fogFar\" : { type: \"f\", value: 2000 },\r\n        \"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n    },\r\n\r\n    shadowmap: {\r\n\r\n        \"shadowMap\": { type: \"tv\", value: [] },\r\n        \"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n        \"shadowBias\" : { type: \"fv1\", value: [] },\r\n        \"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n        \"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.ShaderLib = {\r\n\r\n    'basic': {\r\n\r\n        uniforms: THREE.UniformsUtils.merge( [\r\n\r\n            THREE.UniformsLib[ \"common\" ],\r\n            THREE.UniformsLib[ \"fog\" ],\r\n            THREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n        ] ),\r\n\r\n        vertexShader: [\r\n\r\n            THREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"map_vertex\" ],\r\n            THREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n            THREE.ShaderChunk[ \"color_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n            \"#ifdef USE_ENVMAP\",\r\n\r\n            THREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n            THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n            \"#endif\",\r\n\r\n            THREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_vertex\" ],\r\n            THREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n            THREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n            THREE.ShaderChunk[ \"envmap_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform vec3 diffuse;\",\r\n            \"uniform float opacity;\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = vec4( diffuse, opacity );\",\r\n\r\n            THREE.ShaderChunk[ \"map_fragment\" ],\r\n            THREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n            THREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"color_fragment\" ],\r\n            THREE.ShaderChunk[ \"envmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    'lambert': {\r\n\r\n        uniforms: THREE.UniformsUtils.merge( [\r\n\r\n            THREE.UniformsLib[ \"common\" ],\r\n            THREE.UniformsLib[ \"fog\" ],\r\n            THREE.UniformsLib[ \"lights\" ],\r\n            THREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n            {\r\n                \"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n                \"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n                \"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n            }\r\n\r\n        ] ),\r\n\r\n        vertexShader: [\r\n\r\n            \"#define LAMBERT\",\r\n\r\n            \"varying vec3 vLightFront;\",\r\n\r\n            \"#ifdef DOUBLE_SIDED\",\r\n\r\n            \"varying vec3 vLightBack;\",\r\n\r\n            \"#endif\",\r\n\r\n            THREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"map_vertex\" ],\r\n            THREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n            THREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n            THREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n            THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n            THREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_vertex\" ],\r\n            THREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n            THREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n            THREE.ShaderChunk[ \"envmap_vertex\" ],\r\n            THREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform float opacity;\",\r\n\r\n            \"varying vec3 vLightFront;\",\r\n\r\n            \"#ifdef DOUBLE_SIDED\",\r\n\r\n            \"varying vec3 vLightBack;\",\r\n\r\n            \"#endif\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\r\n\r\n            THREE.ShaderChunk[ \"map_fragment\" ],\r\n            THREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n            THREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n            \"#ifdef DOUBLE_SIDED\",\r\n\r\n            //\"float isFront = float( gl_FrontFacing );\",\r\n            //\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\r\n\r\n            \"if ( gl_FrontFacing )\",\r\n            \"gl_FragColor.xyz *= vLightFront;\",\r\n            \"else\",\r\n            \"gl_FragColor.xyz *= vLightBack;\",\r\n\r\n            \"#else\",\r\n\r\n            \"gl_FragColor.xyz *= vLightFront;\",\r\n\r\n            \"#endif\",\r\n\r\n            THREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"color_fragment\" ],\r\n            THREE.ShaderChunk[ \"envmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    'phong': {\r\n\r\n        uniforms: THREE.UniformsUtils.merge( [\r\n\r\n            THREE.UniformsLib[ \"common\" ],\r\n            THREE.UniformsLib[ \"bump\" ],\r\n            THREE.UniformsLib[ \"normalmap\" ],\r\n            THREE.UniformsLib[ \"fog\" ],\r\n            THREE.UniformsLib[ \"lights\" ],\r\n            THREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n            {\r\n                \"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n                \"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n                \"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n                \"shininess\": { type: \"f\", value: 30 },\r\n                \"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n            }\r\n\r\n        ] ),\r\n\r\n        vertexShader: [\r\n\r\n            \"#define PHONG\",\r\n\r\n            \"varying vec3 vViewPosition;\",\r\n            \"varying vec3 vNormal;\",\r\n\r\n            THREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"map_vertex\" ],\r\n            THREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n            THREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n            THREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n            THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n            \"vNormal = normalize( transformedNormal );\",\r\n\r\n            THREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_vertex\" ],\r\n            THREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n            \"vViewPosition = -mvPosition.xyz;\",\r\n\r\n            THREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n            THREE.ShaderChunk[ \"envmap_vertex\" ],\r\n            THREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform vec3 diffuse;\",\r\n            \"uniform float opacity;\",\r\n\r\n            \"uniform vec3 ambient;\",\r\n            \"uniform vec3 emissive;\",\r\n            \"uniform vec3 specular;\",\r\n            \"uniform float shininess;\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\r\n\r\n            THREE.ShaderChunk[ \"map_fragment\" ],\r\n            THREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n            THREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"color_fragment\" ],\r\n            THREE.ShaderChunk[ \"envmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n            THREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    'particle_basic': {\r\n\r\n        uniforms:  THREE.UniformsUtils.merge( [\r\n\r\n            THREE.UniformsLib[ \"particle\" ],\r\n            THREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n        ] ),\r\n\r\n        vertexShader: [\r\n\r\n            \"uniform float size;\",\r\n            \"uniform float scale;\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n            \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n            \"#ifdef USE_SIZEATTENUATION\",\r\n            \"gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n            \"#else\",\r\n            \"gl_PointSize = size;\",\r\n            \"#endif\",\r\n\r\n            \"gl_Position = projectionMatrix * mvPosition;\",\r\n\r\n            THREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform vec3 psColor;\",\r\n            \"uniform float opacity;\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = vec4( psColor, opacity );\",\r\n\r\n            THREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n            THREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n            THREE.ShaderChunk[ \"color_fragment\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    'dashed': {\r\n\r\n        uniforms: THREE.UniformsUtils.merge( [\r\n\r\n            THREE.UniformsLib[ \"common\" ],\r\n            THREE.UniformsLib[ \"fog\" ],\r\n\r\n            {\r\n                \"scale\":     { type: \"f\", value: 1 },\r\n                \"dashSize\":  { type: \"f\", value: 1 },\r\n                \"totalSize\": { type: \"f\", value: 2 }\r\n            }\r\n\r\n        ] ),\r\n\r\n        vertexShader: [\r\n\r\n            \"uniform float scale;\",\r\n            \"attribute float lineDistance;\",\r\n\r\n            \"varying float vLineDistance;\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n            \"vLineDistance = scale * lineDistance;\",\r\n\r\n            \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n            \"gl_Position = projectionMatrix * mvPosition;\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform vec3 diffuse;\",\r\n            \"uniform float opacity;\",\r\n\r\n            \"uniform float dashSize;\",\r\n            \"uniform float totalSize;\",\r\n\r\n            \"varying float vLineDistance;\",\r\n\r\n            THREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"if ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n            \"discard;\",\r\n\r\n            \"}\",\r\n\r\n            \"gl_FragColor = vec4( diffuse, opacity );\",\r\n\r\n            THREE.ShaderChunk[ \"color_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    'depth': {\r\n\r\n        uniforms: {\r\n\r\n            \"mNear\": { type: \"f\", value: 1.0 },\r\n            \"mFar\" : { type: \"f\", value: 2000.0 },\r\n            \"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n        },\r\n\r\n        vertexShader: [\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform float mNear;\",\r\n            \"uniform float mFar;\",\r\n            \"uniform float opacity;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n            \"float color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n            \"gl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    'normal': {\r\n\r\n        uniforms: {\r\n\r\n            \"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n        },\r\n\r\n        vertexShader: [\r\n\r\n            \"varying vec3 vNormal;\",\r\n\r\n            THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"vNormal = normalize( normalMatrix * normal );\",\r\n\r\n            THREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n            THREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform float opacity;\",\r\n            \"varying vec3 vNormal;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    /* -------------------------------------------------------------------------\r\n\t//\tNormal map shader\r\n\t//\t\t- Blinn-Phong\r\n\t//\t\t- normal + diffuse + specular + AO + displacement + reflection + shadow maps\r\n\t//\t\t- point and directional lights (use with \"lights: true\" material option)\r\n\t ------------------------------------------------------------------------- */\r\n\r\n    'normalmap' : {\r\n\r\n        uniforms: THREE.UniformsUtils.merge( [\r\n\r\n            THREE.UniformsLib[ \"fog\" ],\r\n            THREE.UniformsLib[ \"lights\" ],\r\n            THREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n            {\r\n\r\n                \"enableAO\"\t\t  : { type: \"i\", value: 0 },\r\n                \"enableDiffuse\"\t  : { type: \"i\", value: 0 },\r\n                \"enableSpecular\"  : { type: \"i\", value: 0 },\r\n                \"enableReflection\": { type: \"i\", value: 0 },\r\n                \"enableDisplacement\": { type: \"i\", value: 0 },\r\n\r\n                \"tDisplacement\": { type: \"t\", value: null }, // must go first as this is vertex texture\r\n                \"tDiffuse\"\t   : { type: \"t\", value: null },\r\n                \"tCube\"\t\t   : { type: \"t\", value: null },\r\n                \"tNormal\"\t   : { type: \"t\", value: null },\r\n                \"tSpecular\"\t   : { type: \"t\", value: null },\r\n                \"tAO\"\t\t   : { type: \"t\", value: null },\r\n\r\n                \"uNormalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\r\n\r\n                \"uDisplacementBias\": { type: \"f\", value: 0.0 },\r\n                \"uDisplacementScale\": { type: \"f\", value: 1.0 },\r\n\r\n                \"uDiffuseColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n                \"uSpecularColor\": { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n                \"uAmbientColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n                \"uShininess\": { type: \"f\", value: 30 },\r\n                \"uOpacity\": { type: \"f\", value: 1 },\r\n\r\n                \"useRefract\": { type: \"i\", value: 0 },\r\n                \"uRefractionRatio\": { type: \"f\", value: 0.98 },\r\n                \"uReflectivity\": { type: \"f\", value: 0.5 },\r\n\r\n                \"uOffset\" : { type: \"v2\", value: new THREE.Vector2( 0, 0 ) },\r\n                \"uRepeat\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\r\n\r\n                \"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\r\n            }\r\n\r\n        ] ),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform vec3 uAmbientColor;\",\r\n            \"uniform vec3 uDiffuseColor;\",\r\n            \"uniform vec3 uSpecularColor;\",\r\n            \"uniform float uShininess;\",\r\n            \"uniform float uOpacity;\",\r\n\r\n            \"uniform bool enableDiffuse;\",\r\n            \"uniform bool enableSpecular;\",\r\n            \"uniform bool enableAO;\",\r\n            \"uniform bool enableReflection;\",\r\n\r\n            \"uniform sampler2D tDiffuse;\",\r\n            \"uniform sampler2D tNormal;\",\r\n            \"uniform sampler2D tSpecular;\",\r\n            \"uniform sampler2D tAO;\",\r\n\r\n            \"uniform samplerCube tCube;\",\r\n\r\n            \"uniform vec2 uNormalScale;\",\r\n\r\n            \"uniform bool useRefract;\",\r\n            \"uniform float uRefractionRatio;\",\r\n            \"uniform float uReflectivity;\",\r\n\r\n            \"varying vec3 vTangent;\",\r\n            \"varying vec3 vBinormal;\",\r\n            \"varying vec3 vNormal;\",\r\n            \"varying vec2 vUv;\",\r\n\r\n            \"uniform vec3 ambientLightColor;\",\r\n\r\n            \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n            \"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n            \"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n            \"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n            \"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n            \"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n            \"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n            \"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n            \"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n            \"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n            \"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n            \"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n            \"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n            \"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n            \"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#ifdef WRAP_AROUND\",\r\n\r\n            \"uniform vec3 wrapRGB;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"varying vec3 vWorldPosition;\",\r\n            \"varying vec3 vViewPosition;\",\r\n\r\n            THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = vec4( vec3( 1.0 ), uOpacity );\",\r\n\r\n            \"vec3 specularTex = vec3( 1.0 );\",\r\n\r\n            \"vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\",\r\n            \"normalTex.xy *= uNormalScale;\",\r\n            \"normalTex = normalize( normalTex );\",\r\n\r\n            \"if( enableDiffuse ) {\",\r\n\r\n            \"#ifdef GAMMA_INPUT\",\r\n\r\n            \"vec4 texelColor = texture2D( tDiffuse, vUv );\",\r\n            \"texelColor.xyz *= texelColor.xyz;\",\r\n\r\n            \"gl_FragColor = gl_FragColor * texelColor;\",\r\n\r\n            \"#else\",\r\n\r\n            \"gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"if( enableAO ) {\",\r\n\r\n            \"#ifdef GAMMA_INPUT\",\r\n\r\n            \"vec4 aoColor = texture2D( tAO, vUv );\",\r\n            \"aoColor.xyz *= aoColor.xyz;\",\r\n\r\n            \"gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\",\r\n\r\n            \"#else\",\r\n\r\n            \"gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"if( enableSpecular )\",\r\n            \"specularTex = texture2D( tSpecular, vUv ).xyz;\",\r\n\r\n            \"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\r\n            \"vec3 finalNormal = tsb * normalTex;\",\r\n\r\n            \"#ifdef FLIP_SIDED\",\r\n\r\n            \"finalNormal = -finalNormal;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"vec3 normal = normalize( finalNormal );\",\r\n            \"vec3 viewPosition = normalize( vViewPosition );\",\r\n\r\n            // point lights\r\n\r\n            \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n            \"vec3 pointDiffuse = vec3( 0.0 );\",\r\n            \"vec3 pointSpecular = vec3( 0.0 );\",\r\n\r\n            \"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n            \"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n            \"vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n            \"float pointDistance = 1.0;\",\r\n            \"if ( pointLightDistance[ i ] > 0.0 )\",\r\n            \"pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\",\r\n\r\n            \"pointVector = normalize( pointVector );\",\r\n\r\n            // diffuse\r\n\r\n            \"#ifdef WRAP_AROUND\",\r\n\r\n            \"float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\",\r\n            \"float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\",\r\n\r\n            \"vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n            \"#else\",\r\n\r\n            \"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\",\r\n\r\n            \"#endif\",\r\n\r\n            \"pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\",\r\n\r\n            // specular\r\n\r\n            \"vec3 pointHalfVector = normalize( pointVector + viewPosition );\",\r\n            \"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\r\n            \"float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\",\r\n\r\n            \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n            // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n            \"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;\",\r\n\r\n            \"vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\",\r\n            \"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\",\r\n\r\n            \"#else\",\r\n\r\n            \"pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"#endif\",\r\n\r\n            // spot lights\r\n\r\n            \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n            \"vec3 spotDiffuse = vec3( 0.0 );\",\r\n            \"vec3 spotSpecular = vec3( 0.0 );\",\r\n\r\n            \"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n            \"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n            \"vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n            \"float spotDistance = 1.0;\",\r\n            \"if ( spotLightDistance[ i ] > 0.0 )\",\r\n            \"spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\",\r\n\r\n            \"spotVector = normalize( spotVector );\",\r\n\r\n            \"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\r\n\r\n            \"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n            \"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\",\r\n\r\n            // diffuse\r\n\r\n            \"#ifdef WRAP_AROUND\",\r\n\r\n            \"float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\",\r\n            \"float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\",\r\n\r\n            \"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n            \"#else\",\r\n\r\n            \"float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\",\r\n\r\n            \"#endif\",\r\n\r\n            \"spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\",\r\n\r\n            // specular\r\n\r\n            \"vec3 spotHalfVector = normalize( spotVector + viewPosition );\",\r\n            \"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\r\n            \"float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\",\r\n\r\n            \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n            // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n            \"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;\",\r\n\r\n            \"vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\",\r\n            \"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\",\r\n\r\n            \"#else\",\r\n\r\n            \"spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"}\",\r\n\r\n            \"#endif\",\r\n\r\n            // directional lights\r\n\r\n            \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n            \"vec3 dirDiffuse = vec3( 0.0 );\",\r\n            \"vec3 dirSpecular = vec3( 0.0 );\",\r\n\r\n            \"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\",\r\n\r\n            \"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n            \"vec3 dirVector = normalize( lDirection.xyz );\",\r\n\r\n            // diffuse\r\n\r\n            \"#ifdef WRAP_AROUND\",\r\n\r\n            \"float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\",\r\n            \"float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\",\r\n\r\n            \"vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\",\r\n\r\n            \"#else\",\r\n\r\n            \"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\",\r\n\r\n            \"#endif\",\r\n\r\n            \"dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\",\r\n\r\n            // specular\r\n\r\n            \"vec3 dirHalfVector = normalize( dirVector + viewPosition );\",\r\n            \"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\r\n            \"float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\",\r\n\r\n            \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n            // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n            \"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;\",\r\n\r\n            \"vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\",\r\n            \"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\r\n\r\n            \"#else\",\r\n\r\n            \"dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"#endif\",\r\n\r\n            // hemisphere lights\r\n\r\n            \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n            \"vec3 hemiDiffuse  = vec3( 0.0 );\",\r\n            \"vec3 hemiSpecular = vec3( 0.0 );\" ,\r\n\r\n            \"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n            \"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n            \"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n            // diffuse\r\n\r\n            \"float dotProduct = dot( normal, lVector );\",\r\n            \"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\r\n\r\n            \"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\r\n\r\n            \"hemiDiffuse += uDiffuseColor * hemiColor;\",\r\n\r\n            // specular (sky light)\r\n\r\n\r\n            \"vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\",\r\n            \"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\r\n            \"float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\",\r\n\r\n            // specular (ground light)\r\n\r\n            \"vec3 lVectorGround = -lVector;\",\r\n\r\n            \"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\",\r\n            \"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\r\n            \"float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\",\r\n\r\n            \"#ifdef PHYSICALLY_BASED_SHADING\",\r\n\r\n            \"float dotProductGround = dot( normal, lVectorGround );\",\r\n\r\n            // 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n            \"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;\",\r\n\r\n            \"vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\",\r\n            \"vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\",\r\n            \"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\r\n\r\n            \"#else\",\r\n\r\n            \"hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"#endif\",\r\n\r\n            // all lights contribution summation\r\n\r\n            \"vec3 totalDiffuse = vec3( 0.0 );\",\r\n            \"vec3 totalSpecular = vec3( 0.0 );\",\r\n\r\n            \"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n            \"totalDiffuse += dirDiffuse;\",\r\n            \"totalSpecular += dirSpecular;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n            \"totalDiffuse += hemiDiffuse;\",\r\n            \"totalSpecular += hemiSpecular;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n            \"totalDiffuse += pointDiffuse;\",\r\n            \"totalSpecular += pointSpecular;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n            \"totalDiffuse += spotDiffuse;\",\r\n            \"totalSpecular += spotSpecular;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#ifdef METAL\",\r\n\r\n            \"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\",\r\n\r\n            \"#else\",\r\n\r\n            \"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"if ( enableReflection ) {\",\r\n\r\n            \"vec3 vReflect;\",\r\n            \"vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\r\n\r\n            \"if ( useRefract ) {\",\r\n\r\n            \"vReflect = refract( cameraToVertex, normal, uRefractionRatio );\",\r\n\r\n            \"} else {\",\r\n\r\n            \"vReflect = reflect( cameraToVertex, normal );\",\r\n\r\n            \"}\",\r\n\r\n            \"vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\r\n\r\n            \"#ifdef GAMMA_INPUT\",\r\n\r\n            \"cubeColor.xyz *= cubeColor.xyz;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\",\r\n\r\n            \"}\",\r\n\r\n            THREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n            THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n            THREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        vertexShader: [\r\n\r\n            \"attribute vec4 tangent;\",\r\n\r\n            \"uniform vec2 uOffset;\",\r\n            \"uniform vec2 uRepeat;\",\r\n\r\n            \"uniform bool enableDisplacement;\",\r\n\r\n            \"#ifdef VERTEX_TEXTURES\",\r\n\r\n            \"uniform sampler2D tDisplacement;\",\r\n            \"uniform float uDisplacementScale;\",\r\n            \"uniform float uDisplacementBias;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"varying vec3 vTangent;\",\r\n            \"varying vec3 vBinormal;\",\r\n            \"varying vec3 vNormal;\",\r\n            \"varying vec2 vUv;\",\r\n\r\n            \"varying vec3 vWorldPosition;\",\r\n            \"varying vec3 vViewPosition;\",\r\n\r\n            THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\r\n            // normal, tangent and binormal vectors\r\n\r\n            \"#ifdef USE_SKINNING\",\r\n\r\n            \"vNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\r\n\r\n            \"vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\r\n            \"vTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\r\n\r\n            \"#else\",\r\n\r\n            \"vNormal = normalize( normalMatrix * normal );\",\r\n            \"vTangent = normalize( normalMatrix * tangent.xyz );\",\r\n\r\n            \"#endif\",\r\n\r\n            \"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\r\n\r\n            \"vUv = uv * uRepeat + uOffset;\",\r\n\r\n            // displacement mapping\r\n\r\n            \"vec3 displacedPosition;\",\r\n\r\n            \"#ifdef VERTEX_TEXTURES\",\r\n\r\n            \"if ( enableDisplacement ) {\",\r\n\r\n            \"vec3 dv = texture2D( tDisplacement, uv ).xyz;\",\r\n            \"float df = uDisplacementScale * dv.x + uDisplacementBias;\",\r\n            \"displacedPosition = position + normalize( normal ) * df;\",\r\n\r\n            \"} else {\",\r\n\r\n            \"#ifdef USE_SKINNING\",\r\n\r\n            \"vec4 skinVertex = vec4( position, 1.0 );\",\r\n\r\n            \"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\r\n            \"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\r\n\r\n            \"displacedPosition  = skinned.xyz;\",\r\n\r\n            \"#else\",\r\n\r\n            \"displacedPosition = position;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\",\r\n\r\n            \"#else\",\r\n\r\n            \"#ifdef USE_SKINNING\",\r\n\r\n            \"vec4 skinVertex = vec4( position, 1.0 );\",\r\n\r\n            \"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\r\n            \"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\r\n\r\n            \"displacedPosition  = skinned.xyz;\",\r\n\r\n            \"#else\",\r\n\r\n            \"displacedPosition = position;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#endif\",\r\n\r\n            //\r\n\r\n            \"vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\",\r\n            \"vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\",\r\n\r\n            \"gl_Position = projectionMatrix * mvPosition;\",\r\n\r\n            //\r\n\r\n            \"vWorldPosition = worldPosition.xyz;\",\r\n            \"vViewPosition = -mvPosition.xyz;\",\r\n\r\n            // shadows\r\n\r\n            \"#ifdef USE_SHADOWMAP\",\r\n\r\n            \"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\r\n\r\n            \"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\r\n\r\n            \"}\",\r\n\r\n            \"#endif\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    /* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n    'cube': {\r\n\r\n        uniforms: { \"tCube\": { type: \"t\", value: null },\r\n            \"tFlip\": { type: \"f\", value: -1 } },\r\n\r\n        vertexShader: [\r\n\r\n            \"varying vec3 vWorldPosition;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\r\n            \"vWorldPosition = worldPosition.xyz;\",\r\n\r\n            \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform samplerCube tCube;\",\r\n            \"uniform float tFlip;\",\r\n\r\n            \"varying vec3 vWorldPosition;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    },\r\n\r\n    // Depth encoding into RGBA texture\r\n    // \tbased on SpiderGL shadow map example\r\n    // \t\thttp://spidergl.org/example.php?id=6\r\n    // \toriginally from\r\n    //\t\thttp://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n    // \tsee also here:\r\n    //\t\thttp://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\r\n    'depthRGBA': {\r\n\r\n        uniforms: {},\r\n\r\n        vertexShader: [\r\n\r\n            THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\r\n            \"void main() {\",\r\n\r\n            THREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n            THREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n            THREE.ShaderChunk[ \"skinning_vertex\" ],\r\n            THREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\"),\r\n\r\n        fragmentShader: [\r\n\r\n            \"vec4 pack_depth( const in float depth ) {\",\r\n\r\n            \"const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n            \"const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n            \"vec4 res = fract( depth * bit_shift );\",\r\n            \"res -= res.xxyz * bit_mask;\",\r\n            \"return res;\",\r\n\r\n            \"}\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n            //\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n            //\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n            //\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n            //\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n            \"}\"\r\n\r\n        ].join(\"\\n\")\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n    console.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n    parameters = parameters || {};\r\n\r\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\r\n        _precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\r\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : true,\r\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n        _clearColor = new THREE.Color( 0x000000 ),\r\n        _clearAlpha = 0;\r\n\r\n    // public properties\r\n\r\n    this.domElement = _canvas;\r\n    this.context = null;\r\n    this.devicePixelRatio = parameters.devicePixelRatio !== undefined\r\n        ? parameters.devicePixelRatio\r\n        : self.devicePixelRatio !== undefined\r\n            ? self.devicePixelRatio\r\n            : 1;\r\n\r\n    // clearing\r\n\r\n    this.autoClear = true;\r\n    this.autoClearColor = true;\r\n    this.autoClearDepth = true;\r\n    this.autoClearStencil = true;\r\n\r\n    // scene graph\r\n\r\n    this.sortObjects = true;\r\n    this.autoUpdateObjects = true;\r\n\r\n    // physically based shading\r\n\r\n    this.gammaInput = false;\r\n    this.gammaOutput = false;\r\n    this.physicallyBasedShading = false;\r\n\r\n    // shadow map\r\n\r\n    this.shadowMapEnabled = false;\r\n    this.shadowMapAutoUpdate = true;\r\n    this.shadowMapType = THREE.PCFShadowMap;\r\n    this.shadowMapCullFace = THREE.CullFaceFront;\r\n    this.shadowMapDebug = false;\r\n    this.shadowMapCascade = false;\r\n\r\n    // morphs\r\n\r\n    this.maxMorphTargets = 8;\r\n    this.maxMorphNormals = 4;\r\n\r\n    // flags\r\n\r\n    this.autoScaleCubemaps = true;\r\n\r\n    // custom render plugins\r\n\r\n    this.renderPluginsPre = [];\r\n    this.renderPluginsPost = [];\r\n\r\n    // info\r\n\r\n    this.info = {\r\n\r\n        memory: {\r\n\r\n            programs: 0,\r\n            geometries: 0,\r\n            textures: 0\r\n\r\n        },\r\n\r\n        render: {\r\n\r\n            calls: 0,\r\n            vertices: 0,\r\n            faces: 0,\r\n            points: 0\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // internal properties\r\n\r\n    var _this = this,\r\n\r\n        _programs = [],\r\n        _programs_counter = 0,\r\n\r\n        // internal state cache\r\n\r\n        _currentProgram = null,\r\n        _currentFramebuffer = null,\r\n        _currentMaterialId = -1,\r\n        _currentGeometryGroupHash = null,\r\n        _currentCamera = null,\r\n        _geometryGroupCounter = 0,\r\n\r\n        _usedTextureUnits = 0,\r\n\r\n        // GL state cache\r\n\r\n        _oldDoubleSided = -1,\r\n        _oldFlipSided = -1,\r\n\r\n        _oldBlending = -1,\r\n\r\n        _oldBlendEquation = -1,\r\n        _oldBlendSrc = -1,\r\n        _oldBlendDst = -1,\r\n\r\n        _oldDepthTest = -1,\r\n        _oldDepthWrite = -1,\r\n\r\n        _oldPolygonOffset = null,\r\n        _oldPolygonOffsetFactor = null,\r\n        _oldPolygonOffsetUnits = null,\r\n\r\n        _oldLineWidth = null,\r\n\r\n        _viewportX = 0,\r\n        _viewportY = 0,\r\n        _viewportWidth = 0,\r\n        _viewportHeight = 0,\r\n        _currentWidth = 0,\r\n        _currentHeight = 0,\r\n\r\n        _enabledAttributes = {},\r\n\r\n        // frustum\r\n\r\n        _frustum = new THREE.Frustum(),\r\n\r\n        // camera matrices cache\r\n\r\n        _projScreenMatrix = new THREE.Matrix4(),\r\n        _projScreenMatrixPS = new THREE.Matrix4(),\r\n\r\n        _vector3 = new THREE.Vector3(),\r\n\r\n        // light arrays cache\r\n\r\n        _direction = new THREE.Vector3(),\r\n\r\n        _lightsNeedUpdate = true,\r\n\r\n        _lights = {\r\n\r\n            ambient: [ 0, 0, 0 ],\r\n            directional: { length: 0, colors: new Array(), positions: new Array() },\r\n            point: { length: 0, colors: new Array(), positions: new Array(), distances: new Array() },\r\n            spot: { length: 0, colors: new Array(), positions: new Array(), distances: new Array(), directions: new Array(), anglesCos: new Array(), exponents: new Array() },\r\n            hemi: { length: 0, skyColors: new Array(), groundColors: new Array(), positions: new Array() }\r\n\r\n        };\r\n\r\n    // initialize\r\n\r\n    var _gl;\r\n\r\n    var _glExtensionTextureFloat;\r\n    var _glExtensionTextureFloatLinear;\r\n    var _glExtensionStandardDerivatives;\r\n    var _glExtensionTextureFilterAnisotropic;\r\n    var _glExtensionCompressedTextureS3TC;\r\n\r\n    initGL();\r\n\r\n    setDefaultGLState();\r\n\r\n    this.context = _gl;\r\n\r\n    // GPU capabilities\r\n\r\n    var _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\r\n    var _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n    var _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\r\n    var _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n    var _maxAnisotropy = _glExtensionTextureFilterAnisotropic ? _gl.getParameter( _glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\r\n\r\n    var _supportsVertexTextures = ( _maxVertexTextures > 0 );\r\n    var _supportsBoneTextures = _supportsVertexTextures && _glExtensionTextureFloat;\r\n\r\n    var _compressedTextureFormats = _glExtensionCompressedTextureS3TC ? _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS ) : [];\r\n\r\n    //\r\n\r\n    var _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\r\n    var _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\r\n    var _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );\r\n\r\n    var _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\r\n    var _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\r\n    var _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );\r\n\r\n    var _vertexShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_INT );\r\n    var _vertexShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_INT );\r\n    var _vertexShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_INT );\r\n\r\n    var _fragmentShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_INT );\r\n    var _fragmentShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_INT );\r\n    var _fragmentShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_INT );\r\n\r\n    // clamp precision to maximum available\r\n\r\n    var highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\r\n    var mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\r\n\r\n    if ( _precision === \"highp\" && ! highpAvailable ) {\r\n\r\n        if ( mediumpAvailable ) {\r\n\r\n            _precision = \"mediump\";\r\n            console.warn( \"WebGLRenderer: highp not supported, using mediump\" );\r\n\r\n        } else {\r\n\r\n            _precision = \"lowp\";\r\n            console.warn( \"WebGLRenderer: highp and mediump not supported, using lowp\" );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if ( _precision === \"mediump\" && ! mediumpAvailable ) {\r\n\r\n        _precision = \"lowp\";\r\n        console.warn( \"WebGLRenderer: mediump not supported, using lowp\" );\r\n\r\n    }\r\n\r\n    // API\r\n\r\n    this.getContext = function () {\r\n\r\n        return _gl;\r\n\r\n    };\r\n\r\n    this.supportsVertexTextures = function () {\r\n\r\n        return _supportsVertexTextures;\r\n\r\n    };\r\n\r\n    this.supportsFloatTextures = function () {\r\n\r\n        return _glExtensionTextureFloat;\r\n\r\n    };\r\n\r\n    this.supportsStandardDerivatives = function () {\r\n\r\n        return _glExtensionStandardDerivatives;\r\n\r\n    };\r\n\r\n    this.supportsCompressedTextureS3TC = function () {\r\n\r\n        return _glExtensionCompressedTextureS3TC;\r\n\r\n    };\r\n\r\n    this.getMaxAnisotropy  = function () {\r\n\r\n        return _maxAnisotropy;\r\n\r\n    };\r\n\r\n    this.getPrecision = function () {\r\n\r\n        return _precision;\r\n\r\n    };\r\n\r\n    this.setSize = function ( width, height, updateStyle ) {\r\n\r\n        _canvas.width = width * this.devicePixelRatio;\r\n        _canvas.height = height * this.devicePixelRatio;\r\n\r\n        if ( this.devicePixelRatio !== 1 && updateStyle !== false ) {\r\n\r\n            _canvas.style.width = width + 'px';\r\n            _canvas.style.height = height + 'px';\r\n\r\n        }\r\n\r\n        this.setViewport( 0, 0, _canvas.width, _canvas.height );\r\n\r\n    };\r\n\r\n    this.setViewport = function ( x, y, width, height ) {\r\n\r\n        _viewportX = x !== undefined ? x : 0;\r\n        _viewportY = y !== undefined ? y : 0;\r\n\r\n        _viewportWidth = width !== undefined ? width : _canvas.width;\r\n        _viewportHeight = height !== undefined ? height : _canvas.height;\r\n\r\n        _gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n    };\r\n\r\n    this.setScissor = function ( x, y, width, height ) {\r\n\r\n        _gl.scissor( x, y, width, height );\r\n\r\n    };\r\n\r\n    this.enableScissorTest = function ( enable ) {\r\n\r\n        enable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\r\n\r\n    };\r\n\r\n    // Clearing\r\n\r\n    this.setClearColor = function ( color, alpha ) {\r\n\r\n        _clearColor.set( color );\r\n        _clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n        _gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n    };\r\n\r\n    this.setClearColorHex = function ( hex, alpha ) {\r\n\r\n        console.warn( 'DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\r\n        this.setClearColor( hex, alpha );\r\n\r\n    };\r\n\r\n    this.getClearColor = function () {\r\n\r\n        return _clearColor;\r\n\r\n    };\r\n\r\n    this.getClearAlpha = function () {\r\n\r\n        return _clearAlpha;\r\n\r\n    };\r\n\r\n    this.clear = function ( color, depth, stencil ) {\r\n\r\n        var bits = 0;\r\n\r\n        if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n        if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n        if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n        _gl.clear( bits );\r\n\r\n    };\r\n\r\n    this.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n        this.setRenderTarget( renderTarget );\r\n        this.clear( color, depth, stencil );\r\n\r\n    };\r\n\r\n    // Plugins\r\n\r\n    this.addPostPlugin = function ( plugin ) {\r\n\r\n        plugin.init( this );\r\n        this.renderPluginsPost.push( plugin );\r\n\r\n    };\r\n\r\n    this.addPrePlugin = function ( plugin ) {\r\n\r\n        plugin.init( this );\r\n        this.renderPluginsPre.push( plugin );\r\n\r\n    };\r\n\r\n    // Rendering\r\n\r\n    this.updateShadowMap = function ( scene, camera ) {\r\n\r\n        _currentProgram = null;\r\n        _oldBlending = -1;\r\n        _oldDepthTest = -1;\r\n        _oldDepthWrite = -1;\r\n        _currentGeometryGroupHash = -1;\r\n        _currentMaterialId = -1;\r\n        _lightsNeedUpdate = true;\r\n        _oldDoubleSided = -1;\r\n        _oldFlipSided = -1;\r\n\r\n        this.shadowMapPlugin.update( scene, camera );\r\n\r\n    };\r\n\r\n    // Internal functions\r\n\r\n    // Buffer allocation\r\n\r\n    function createParticleBuffers ( geometry ) {\r\n\r\n        geometry.__webglVertexBuffer = _gl.createBuffer();\r\n        geometry.__webglColorBuffer = _gl.createBuffer();\r\n\r\n        _this.info.memory.geometries ++;\r\n\r\n    };\r\n\r\n    function createLineBuffers ( geometry ) {\r\n\r\n        geometry.__webglVertexBuffer = _gl.createBuffer();\r\n        geometry.__webglColorBuffer = _gl.createBuffer();\r\n        geometry.__webglLineDistanceBuffer = _gl.createBuffer();\r\n\r\n        _this.info.memory.geometries ++;\r\n\r\n    };\r\n\r\n    function createMeshBuffers ( geometryGroup ) {\r\n\r\n        geometryGroup.__webglVertexBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglNormalBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglTangentBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglColorBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglUVBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglUV2Buffer = _gl.createBuffer();\r\n\r\n        geometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\r\n\r\n        geometryGroup.__webglFaceBuffer = _gl.createBuffer();\r\n        geometryGroup.__webglLineBuffer = _gl.createBuffer();\r\n\r\n        var m, ml;\r\n\r\n        if ( geometryGroup.numMorphTargets ) {\r\n\r\n            geometryGroup.__webglMorphTargetsBuffers = [];\r\n\r\n            for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n                geometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( geometryGroup.numMorphNormals ) {\r\n\r\n            geometryGroup.__webglMorphNormalsBuffers = [];\r\n\r\n            for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n                geometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        _this.info.memory.geometries ++;\r\n\r\n    };\r\n\r\n    // Events\r\n\r\n    var onGeometryDispose = function ( event ) {\r\n\r\n        var geometry = event.target;\r\n\r\n        geometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n        deallocateGeometry( geometry );\r\n\r\n    };\r\n\r\n    var onTextureDispose = function ( event ) {\r\n\r\n        var texture = event.target;\r\n\r\n        texture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n        deallocateTexture( texture );\r\n\r\n        _this.info.memory.textures --;\r\n\r\n\r\n    };\r\n\r\n    var onRenderTargetDispose = function ( event ) {\r\n\r\n        var renderTarget = event.target;\r\n\r\n        renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n        deallocateRenderTarget( renderTarget );\r\n\r\n        _this.info.memory.textures --;\r\n\r\n    };\r\n\r\n    var onMaterialDispose = function ( event ) {\r\n\r\n        var material = event.target;\r\n\r\n        material.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n        deallocateMaterial( material );\r\n\r\n    };\r\n\r\n    // Buffer deallocation\r\n\r\n    var deleteBuffers = function ( geometry ) {\r\n\r\n        if ( geometry.__webglVertexBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglVertexBuffer );\r\n        if ( geometry.__webglNormalBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglNormalBuffer );\r\n        if ( geometry.__webglTangentBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglTangentBuffer );\r\n        if ( geometry.__webglColorBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglColorBuffer );\r\n        if ( geometry.__webglUVBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglUVBuffer );\r\n        if ( geometry.__webglUV2Buffer !== undefined ) _gl.deleteBuffer( geometry.__webglUV2Buffer );\r\n\r\n        if ( geometry.__webglSkinIndicesBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinIndicesBuffer );\r\n        if ( geometry.__webglSkinWeightsBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinWeightsBuffer );\r\n\r\n        if ( geometry.__webglFaceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglFaceBuffer );\r\n        if ( geometry.__webglLineBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineBuffer );\r\n\r\n        if ( geometry.__webglLineDistanceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineDistanceBuffer );\r\n        // custom attributes\r\n\r\n        if ( geometry.__webglCustomAttributesList !== undefined ) {\r\n\r\n            for ( var id in geometry.__webglCustomAttributesList ) {\r\n\r\n                _gl.deleteBuffer( geometry.__webglCustomAttributesList[ id ].buffer );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        _this.info.memory.geometries --;\r\n\r\n    };\r\n\r\n    var deallocateGeometry = function ( geometry ) {\r\n\r\n        geometry.__webglInit = undefined;\r\n\r\n        if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n            var attributes = geometry.attributes;\r\n\r\n            for ( var key in attributes ) {\r\n\r\n                if ( attributes[ key ].buffer !== undefined ) {\r\n\r\n                    _gl.deleteBuffer( attributes[ key ].buffer );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            _this.info.memory.geometries --;\r\n\r\n        } else {\r\n\r\n            if ( geometry.geometryGroups !== undefined ) {\r\n\r\n                for ( var g in geometry.geometryGroups ) {\r\n\r\n                    var geometryGroup = geometry.geometryGroups[ g ];\r\n\r\n                    if ( geometryGroup.numMorphTargets !== undefined ) {\r\n\r\n                        for ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n                            _gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    if ( geometryGroup.numMorphNormals !== undefined ) {\r\n\r\n                        for ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n                            _gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    deleteBuffers( geometryGroup );\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                deleteBuffers( geometry );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var deallocateTexture = function ( texture ) {\r\n\r\n        if ( texture.image && texture.image.__webglTextureCube ) {\r\n\r\n            // cube texture\r\n\r\n            _gl.deleteTexture( texture.image.__webglTextureCube );\r\n\r\n        } else {\r\n\r\n            // 2D texture\r\n\r\n            if ( ! texture.__webglInit ) return;\r\n\r\n            texture.__webglInit = false;\r\n            _gl.deleteTexture( texture.__webglTexture );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var deallocateRenderTarget = function ( renderTarget ) {\r\n\r\n        if ( !renderTarget || ! renderTarget.__webglTexture ) return;\r\n\r\n        _gl.deleteTexture( renderTarget.__webglTexture );\r\n\r\n        if ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n            for ( var i = 0; i < 6; i ++ ) {\r\n\r\n                _gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\r\n                _gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            _gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\r\n            _gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var deallocateMaterial = function ( material ) {\r\n\r\n        var program = material.program;\r\n\r\n        if ( program === undefined ) return;\r\n\r\n        material.program = undefined;\r\n\r\n        // only deallocate GL program if this was the last use of shared program\r\n        // assumed there is only single copy of any program in the _programs list\r\n        // (that's how it's constructed)\r\n\r\n        var i, il, programInfo;\r\n        var deleteProgram = false;\r\n\r\n        for ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n            programInfo = _programs[ i ];\r\n\r\n            if ( programInfo.program === program ) {\r\n\r\n                programInfo.usedTimes --;\r\n\r\n                if ( programInfo.usedTimes === 0 ) {\r\n\r\n                    deleteProgram = true;\r\n\r\n                }\r\n\r\n                break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( deleteProgram === true ) {\r\n\r\n            // avoid using array.splice, this is costlier than creating new array from scratch\r\n\r\n            var newPrograms = [];\r\n\r\n            for ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n                programInfo = _programs[ i ];\r\n\r\n                if ( programInfo.program !== program ) {\r\n\r\n                    newPrograms.push( programInfo );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            _programs = newPrograms;\r\n\r\n            _gl.deleteProgram( program );\r\n\r\n            _this.info.memory.programs --;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Buffer initialization\r\n\r\n    function initCustomAttributes ( geometry, object ) {\r\n\r\n        var nvertices = geometry.vertices.length;\r\n\r\n        var material = object.material;\r\n\r\n        if ( material.attributes ) {\r\n\r\n            if ( geometry.__webglCustomAttributesList === undefined ) {\r\n\r\n                geometry.__webglCustomAttributesList = [];\r\n\r\n            }\r\n\r\n            for ( var a in material.attributes ) {\r\n\r\n                var attribute = material.attributes[ a ];\r\n\r\n                if ( !attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n                    attribute.__webglInitialized = true;\r\n\r\n                    var size = 1;\t\t// \"f\" and \"i\"\r\n\r\n                    if ( attribute.type === \"v2\" ) size = 2;\r\n                    else if ( attribute.type === \"v3\" ) size = 3;\r\n                    else if ( attribute.type === \"v4\" ) size = 4;\r\n                    else if ( attribute.type === \"c\"  ) size = 3;\r\n\r\n                    attribute.size = size;\r\n\r\n                    attribute.array = new Float32Array( nvertices * size );\r\n\r\n                    attribute.buffer = _gl.createBuffer();\r\n                    attribute.buffer.belongsToAttribute = a;\r\n\r\n                    attribute.needsUpdate = true;\r\n\r\n                }\r\n\r\n                geometry.__webglCustomAttributesList.push( attribute );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function initParticleBuffers ( geometry, object ) {\r\n\r\n        var nvertices = geometry.vertices.length;\r\n\r\n        geometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n        geometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n        geometry.__sortArray = [];\r\n\r\n        geometry.__webglParticleCount = nvertices;\r\n\r\n        initCustomAttributes ( geometry, object );\r\n\r\n    };\r\n\r\n    function initLineBuffers ( geometry, object ) {\r\n\r\n        var nvertices = geometry.vertices.length;\r\n\r\n        geometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n        geometry.__colorArray = new Float32Array( nvertices * 3 );\r\n        geometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\r\n\r\n        geometry.__webglLineCount = nvertices;\r\n\r\n        initCustomAttributes ( geometry, object );\r\n\r\n    };\r\n\r\n    function initMeshBuffers ( geometryGroup, object ) {\r\n\r\n        var geometry = object.geometry,\r\n            faces3 = geometryGroup.faces3,\r\n\r\n            nvertices = faces3.length * 3,\r\n            ntris     = faces3.length * 1,\r\n            nlines    = faces3.length * 3,\r\n\r\n            material = getBufferMaterial( object, geometryGroup ),\r\n\r\n            uvType = bufferGuessUVType( material ),\r\n            normalType = bufferGuessNormalType( material ),\r\n            vertexColorType = bufferGuessVertexColorType( material );\r\n\r\n        // console.log( \"uvType\", uvType, \"normalType\", normalType, \"vertexColorType\", vertexColorType, object, geometryGroup, material );\r\n\r\n        geometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\r\n\r\n        if ( normalType ) {\r\n\r\n            geometryGroup.__normalArray = new Float32Array( nvertices * 3 );\r\n\r\n        }\r\n\r\n        if ( geometry.hasTangents ) {\r\n\r\n            geometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\r\n\r\n        }\r\n\r\n        if ( vertexColorType ) {\r\n\r\n            geometryGroup.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n        }\r\n\r\n        if ( uvType ) {\r\n\r\n            if ( geometry.faceVertexUvs.length > 0 ) {\r\n\r\n                geometryGroup.__uvArray = new Float32Array( nvertices * 2 );\r\n\r\n            }\r\n\r\n            if ( geometry.faceVertexUvs.length > 1 ) {\r\n\r\n                geometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\r\n\r\n            geometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\r\n            geometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\r\n\r\n        }\r\n\r\n        geometryGroup.__faceArray = new Uint16Array( ntris * 3 );\r\n        geometryGroup.__lineArray = new Uint16Array( nlines * 2 );\r\n\r\n        var m, ml;\r\n\r\n        if ( geometryGroup.numMorphTargets ) {\r\n\r\n            geometryGroup.__morphTargetsArrays = [];\r\n\r\n            for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n                geometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( geometryGroup.numMorphNormals ) {\r\n\r\n            geometryGroup.__morphNormalsArrays = [];\r\n\r\n            for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n                geometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        geometryGroup.__webglFaceCount = ntris * 3;\r\n        geometryGroup.__webglLineCount = nlines * 2;\r\n\r\n\r\n        // custom attributes\r\n\r\n        if ( material.attributes ) {\r\n\r\n            if ( geometryGroup.__webglCustomAttributesList === undefined ) {\r\n\r\n                geometryGroup.__webglCustomAttributesList = [];\r\n\r\n            }\r\n\r\n            for ( var a in material.attributes ) {\r\n\r\n                // Do a shallow copy of the attribute object so different geometryGroup chunks use different\r\n                // attribute buffers which are correctly indexed in the setMeshBuffers function\r\n\r\n                var originalAttribute = material.attributes[ a ];\r\n\r\n                var attribute = {};\r\n\r\n                for ( var property in originalAttribute ) {\r\n\r\n                    attribute[ property ] = originalAttribute[ property ];\r\n\r\n                }\r\n\r\n                if ( !attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n                    attribute.__webglInitialized = true;\r\n\r\n                    var size = 1;\t\t// \"f\" and \"i\"\r\n\r\n                    if( attribute.type === \"v2\" ) size = 2;\r\n                    else if( attribute.type === \"v3\" ) size = 3;\r\n                    else if( attribute.type === \"v4\" ) size = 4;\r\n                    else if( attribute.type === \"c\"  ) size = 3;\r\n\r\n                    attribute.size = size;\r\n\r\n                    attribute.array = new Float32Array( nvertices * size );\r\n\r\n                    attribute.buffer = _gl.createBuffer();\r\n                    attribute.buffer.belongsToAttribute = a;\r\n\r\n                    originalAttribute.needsUpdate = true;\r\n                    attribute.__original = originalAttribute;\r\n\r\n                }\r\n\r\n                geometryGroup.__webglCustomAttributesList.push( attribute );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        geometryGroup.__inittedArrays = true;\r\n\r\n    };\r\n\r\n    function getBufferMaterial( object, geometryGroup ) {\r\n\r\n        return object.material instanceof THREE.MeshFaceMaterial\r\n            ? object.material.materials[ geometryGroup.materialIndex ]\r\n            : object.material;\r\n\r\n    };\r\n\r\n    function materialNeedsSmoothNormals ( material ) {\r\n\r\n        return material && material.shading !== undefined && material.shading === THREE.SmoothShading;\r\n\r\n    };\r\n\r\n    function bufferGuessNormalType ( material ) {\r\n\r\n        // only MeshBasicMaterial and MeshDepthMaterial don't need normals\r\n\r\n        if ( ( material instanceof THREE.MeshBasicMaterial && !material.envMap ) || material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        if ( materialNeedsSmoothNormals( material ) ) {\r\n\r\n            return THREE.SmoothShading;\r\n\r\n        } else {\r\n\r\n            return THREE.FlatShading;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function bufferGuessVertexColorType( material ) {\r\n\r\n        if ( material.vertexColors ) {\r\n\r\n            return material.vertexColors;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    };\r\n\r\n    function bufferGuessUVType( material ) {\r\n\r\n        // material must use some texture to require uvs\r\n\r\n        if ( material.map ||\r\n            material.lightMap ||\r\n            material.bumpMap ||\r\n            material.normalMap ||\r\n            material.specularMap ||\r\n            material instanceof THREE.ShaderMaterial ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    };\r\n\r\n    //\r\n\r\n    function initDirectBuffers( geometry ) {\r\n\r\n        var a, attribute, type;\r\n\r\n        for ( a in geometry.attributes ) {\r\n\r\n            if ( a === \"index\" ) {\r\n\r\n                type = _gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n            } else {\r\n\r\n                type = _gl.ARRAY_BUFFER;\r\n\r\n            }\r\n\r\n            attribute = geometry.attributes[ a ];\r\n\r\n            if ( attribute.numItems === undefined ) {\r\n\r\n                attribute.numItems = attribute.array.length;\r\n\r\n            }\r\n\r\n            attribute.buffer = _gl.createBuffer();\r\n\r\n            _gl.bindBuffer( type, attribute.buffer );\r\n            _gl.bufferData( type, attribute.array, _gl.STATIC_DRAW );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Buffer setting\r\n\r\n    function setParticleBuffers ( geometry, hint, object ) {\r\n\r\n        var v, c, vertex, offset, index, color,\r\n\r\n            vertices = geometry.vertices,\r\n            vl = vertices.length,\r\n\r\n            colors = geometry.colors,\r\n            cl = colors.length,\r\n\r\n            vertexArray = geometry.__vertexArray,\r\n            colorArray = geometry.__colorArray,\r\n\r\n            sortArray = geometry.__sortArray,\r\n\r\n            dirtyVertices = geometry.verticesNeedUpdate,\r\n            dirtyElements = geometry.elementsNeedUpdate,\r\n            dirtyColors = geometry.colorsNeedUpdate,\r\n\r\n            customAttributes = geometry.__webglCustomAttributesList,\r\n            i, il,\r\n            a, ca, cal, value,\r\n            customAttribute;\r\n\r\n        if ( object.sortParticles ) {\r\n\r\n            _projScreenMatrixPS.copy( _projScreenMatrix );\r\n            _projScreenMatrixPS.multiply( object.matrixWorld );\r\n\r\n            for ( v = 0; v < vl; v ++ ) {\r\n\r\n                vertex = vertices[ v ];\r\n\r\n                _vector3.copy( vertex );\r\n                _vector3.applyProjection( _projScreenMatrixPS );\r\n\r\n                sortArray[ v ] = [ _vector3.z, v ];\r\n\r\n            }\r\n\r\n            sortArray.sort( numericalSort );\r\n\r\n            for ( v = 0; v < vl; v ++ ) {\r\n\r\n                vertex = vertices[ sortArray[v][1] ];\r\n\r\n                offset = v * 3;\r\n\r\n                vertexArray[ offset ]     = vertex.x;\r\n                vertexArray[ offset + 1 ] = vertex.y;\r\n                vertexArray[ offset + 2 ] = vertex.z;\r\n\r\n            }\r\n\r\n            for ( c = 0; c < cl; c ++ ) {\r\n\r\n                offset = c * 3;\r\n\r\n                color = colors[ sortArray[c][1] ];\r\n\r\n                colorArray[ offset ]     = color.r;\r\n                colorArray[ offset + 1 ] = color.g;\r\n                colorArray[ offset + 2 ] = color.b;\r\n\r\n            }\r\n\r\n            if ( customAttributes ) {\r\n\r\n                for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n                    customAttribute = customAttributes[ i ];\r\n\r\n                    if ( ! ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) ) continue;\r\n\r\n                    offset = 0;\r\n\r\n                    cal = customAttribute.value.length;\r\n\r\n                    if ( customAttribute.size === 1 ) {\r\n\r\n                        for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                            index = sortArray[ ca ][ 1 ];\r\n\r\n                            customAttribute.array[ ca ] = customAttribute.value[ index ];\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.size === 2 ) {\r\n\r\n                        for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                            index = sortArray[ ca ][ 1 ];\r\n\r\n                            value = customAttribute.value[ index ];\r\n\r\n                            customAttribute.array[ offset ] \t= value.x;\r\n                            customAttribute.array[ offset + 1 ] = value.y;\r\n\r\n                            offset += 2;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.size === 3 ) {\r\n\r\n                        if ( customAttribute.type === \"c\" ) {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                index = sortArray[ ca ][ 1 ];\r\n\r\n                                value = customAttribute.value[ index ];\r\n\r\n                                customAttribute.array[ offset ]     = value.r;\r\n                                customAttribute.array[ offset + 1 ] = value.g;\r\n                                customAttribute.array[ offset + 2 ] = value.b;\r\n\r\n                                offset += 3;\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                index = sortArray[ ca ][ 1 ];\r\n\r\n                                value = customAttribute.value[ index ];\r\n\r\n                                customAttribute.array[ offset ] \t= value.x;\r\n                                customAttribute.array[ offset + 1 ] = value.y;\r\n                                customAttribute.array[ offset + 2 ] = value.z;\r\n\r\n                                offset += 3;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.size === 4 ) {\r\n\r\n                        for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                            index = sortArray[ ca ][ 1 ];\r\n\r\n                            value = customAttribute.value[ index ];\r\n\r\n                            customAttribute.array[ offset ]      = value.x;\r\n                            customAttribute.array[ offset + 1  ] = value.y;\r\n                            customAttribute.array[ offset + 2  ] = value.z;\r\n                            customAttribute.array[ offset + 3  ] = value.w;\r\n\r\n                            offset += 4;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            if ( dirtyVertices ) {\r\n\r\n                for ( v = 0; v < vl; v ++ ) {\r\n\r\n                    vertex = vertices[ v ];\r\n\r\n                    offset = v * 3;\r\n\r\n                    vertexArray[ offset ]     = vertex.x;\r\n                    vertexArray[ offset + 1 ] = vertex.y;\r\n                    vertexArray[ offset + 2 ] = vertex.z;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( dirtyColors ) {\r\n\r\n                for ( c = 0; c < cl; c ++ ) {\r\n\r\n                    color = colors[ c ];\r\n\r\n                    offset = c * 3;\r\n\r\n                    colorArray[ offset ]     = color.r;\r\n                    colorArray[ offset + 1 ] = color.g;\r\n                    colorArray[ offset + 2 ] = color.b;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( customAttributes ) {\r\n\r\n                for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n                    customAttribute = customAttributes[ i ];\r\n\r\n                    if ( customAttribute.needsUpdate &&\r\n                        ( customAttribute.boundTo === undefined ||\r\n                            customAttribute.boundTo === \"vertices\") ) {\r\n\r\n                        cal = customAttribute.value.length;\r\n\r\n                        offset = 0;\r\n\r\n                        if ( customAttribute.size === 1 ) {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                customAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n                            }\r\n\r\n                        } else if ( customAttribute.size === 2 ) {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                value = customAttribute.value[ ca ];\r\n\r\n                                customAttribute.array[ offset ] \t= value.x;\r\n                                customAttribute.array[ offset + 1 ] = value.y;\r\n\r\n                                offset += 2;\r\n\r\n                            }\r\n\r\n                        } else if ( customAttribute.size === 3 ) {\r\n\r\n                            if ( customAttribute.type === \"c\" ) {\r\n\r\n                                for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                    value = customAttribute.value[ ca ];\r\n\r\n                                    customAttribute.array[ offset ] \t= value.r;\r\n                                    customAttribute.array[ offset + 1 ] = value.g;\r\n                                    customAttribute.array[ offset + 2 ] = value.b;\r\n\r\n                                    offset += 3;\r\n\r\n                                }\r\n\r\n                            } else {\r\n\r\n                                for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                    value = customAttribute.value[ ca ];\r\n\r\n                                    customAttribute.array[ offset ] \t= value.x;\r\n                                    customAttribute.array[ offset + 1 ] = value.y;\r\n                                    customAttribute.array[ offset + 2 ] = value.z;\r\n\r\n                                    offset += 3;\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        } else if ( customAttribute.size === 4 ) {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                value = customAttribute.value[ ca ];\r\n\r\n                                customAttribute.array[ offset ]      = value.x;\r\n                                customAttribute.array[ offset + 1  ] = value.y;\r\n                                customAttribute.array[ offset + 2  ] = value.z;\r\n                                customAttribute.array[ offset + 3  ] = value.w;\r\n\r\n                                offset += 4;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( dirtyVertices || object.sortParticles ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n        }\r\n\r\n        if ( dirtyColors || object.sortParticles ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n        }\r\n\r\n        if ( customAttributes ) {\r\n\r\n            for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n                customAttribute = customAttributes[ i ];\r\n\r\n                if ( customAttribute.needsUpdate || object.sortParticles ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n                    _gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    function setLineBuffers ( geometry, hint ) {\r\n\r\n        var v, c, d, vertex, offset, color,\r\n\r\n            vertices = geometry.vertices,\r\n            colors = geometry.colors,\r\n            lineDistances = geometry.lineDistances,\r\n\r\n            vl = vertices.length,\r\n            cl = colors.length,\r\n            dl = lineDistances.length,\r\n\r\n            vertexArray = geometry.__vertexArray,\r\n            colorArray = geometry.__colorArray,\r\n            lineDistanceArray = geometry.__lineDistanceArray,\r\n\r\n            dirtyVertices = geometry.verticesNeedUpdate,\r\n            dirtyColors = geometry.colorsNeedUpdate,\r\n            dirtyLineDistances = geometry.lineDistancesNeedUpdate,\r\n\r\n            customAttributes = geometry.__webglCustomAttributesList,\r\n\r\n            i, il,\r\n            a, ca, cal, value,\r\n            customAttribute;\r\n\r\n        if ( dirtyVertices ) {\r\n\r\n            for ( v = 0; v < vl; v ++ ) {\r\n\r\n                vertex = vertices[ v ];\r\n\r\n                offset = v * 3;\r\n\r\n                vertexArray[ offset ]     = vertex.x;\r\n                vertexArray[ offset + 1 ] = vertex.y;\r\n                vertexArray[ offset + 2 ] = vertex.z;\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n        }\r\n\r\n        if ( dirtyColors ) {\r\n\r\n            for ( c = 0; c < cl; c ++ ) {\r\n\r\n                color = colors[ c ];\r\n\r\n                offset = c * 3;\r\n\r\n                colorArray[ offset ]     = color.r;\r\n                colorArray[ offset + 1 ] = color.g;\r\n                colorArray[ offset + 2 ] = color.b;\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n        }\r\n\r\n        if ( dirtyLineDistances ) {\r\n\r\n            for ( d = 0; d < dl; d ++ ) {\r\n\r\n                lineDistanceArray[ d ] = lineDistances[ d ];\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\r\n\r\n        }\r\n\r\n        if ( customAttributes ) {\r\n\r\n            for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n                customAttribute = customAttributes[ i ];\r\n\r\n                if ( customAttribute.needsUpdate &&\r\n                    ( customAttribute.boundTo === undefined ||\r\n                        customAttribute.boundTo === \"vertices\" ) ) {\r\n\r\n                    offset = 0;\r\n\r\n                    cal = customAttribute.value.length;\r\n\r\n                    if ( customAttribute.size === 1 ) {\r\n\r\n                        for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                            customAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.size === 2 ) {\r\n\r\n                        for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                            value = customAttribute.value[ ca ];\r\n\r\n                            customAttribute.array[ offset ] \t= value.x;\r\n                            customAttribute.array[ offset + 1 ] = value.y;\r\n\r\n                            offset += 2;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.size === 3 ) {\r\n\r\n                        if ( customAttribute.type === \"c\" ) {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                value = customAttribute.value[ ca ];\r\n\r\n                                customAttribute.array[ offset ] \t= value.r;\r\n                                customAttribute.array[ offset + 1 ] = value.g;\r\n                                customAttribute.array[ offset + 2 ] = value.b;\r\n\r\n                                offset += 3;\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                                value = customAttribute.value[ ca ];\r\n\r\n                                customAttribute.array[ offset ] \t= value.x;\r\n                                customAttribute.array[ offset + 1 ] = value.y;\r\n                                customAttribute.array[ offset + 2 ] = value.z;\r\n\r\n                                offset += 3;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.size === 4 ) {\r\n\r\n                        for ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n                            value = customAttribute.value[ ca ];\r\n\r\n                            customAttribute.array[ offset ] \t = value.x;\r\n                            customAttribute.array[ offset + 1  ] = value.y;\r\n                            customAttribute.array[ offset + 2  ] = value.z;\r\n                            customAttribute.array[ offset + 3  ] = value.w;\r\n\r\n                            offset += 4;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n                    _gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\r\n\r\n        if ( ! geometryGroup.__inittedArrays ) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var normalType = bufferGuessNormalType( material ),\r\n            vertexColorType = bufferGuessVertexColorType( material ),\r\n            uvType = bufferGuessUVType( material ),\r\n\r\n            needsSmoothNormals = ( normalType === THREE.SmoothShading );\r\n\r\n        var f, fl, fi, face,\r\n            vertexNormals, faceNormal, normal,\r\n            vertexColors, faceColor,\r\n            vertexTangents,\r\n            uv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,\r\n            c1, c2, c3, c4,\r\n            sw1, sw2, sw3, sw4,\r\n            si1, si2, si3, si4,\r\n            sa1, sa2, sa3, sa4,\r\n            sb1, sb2, sb3, sb4,\r\n            m, ml, i, il,\r\n            vn, uvi, uv2i,\r\n            vk, vkl, vka,\r\n            nka, chf, faceVertexNormals,\r\n            a,\r\n\r\n            vertexIndex = 0,\r\n\r\n            offset = 0,\r\n            offset_uv = 0,\r\n            offset_uv2 = 0,\r\n            offset_face = 0,\r\n            offset_normal = 0,\r\n            offset_tangent = 0,\r\n            offset_line = 0,\r\n            offset_color = 0,\r\n            offset_skin = 0,\r\n            offset_morphTarget = 0,\r\n            offset_custom = 0,\r\n            offset_customSrc = 0,\r\n\r\n            value,\r\n\r\n            vertexArray = geometryGroup.__vertexArray,\r\n            uvArray = geometryGroup.__uvArray,\r\n            uv2Array = geometryGroup.__uv2Array,\r\n            normalArray = geometryGroup.__normalArray,\r\n            tangentArray = geometryGroup.__tangentArray,\r\n            colorArray = geometryGroup.__colorArray,\r\n\r\n            skinIndexArray = geometryGroup.__skinIndexArray,\r\n            skinWeightArray = geometryGroup.__skinWeightArray,\r\n\r\n            morphTargetsArrays = geometryGroup.__morphTargetsArrays,\r\n            morphNormalsArrays = geometryGroup.__morphNormalsArrays,\r\n\r\n            customAttributes = geometryGroup.__webglCustomAttributesList,\r\n            customAttribute,\r\n\r\n            faceArray = geometryGroup.__faceArray,\r\n            lineArray = geometryGroup.__lineArray,\r\n\r\n            geometry = object.geometry, // this is shared for all chunks\r\n\r\n            dirtyVertices = geometry.verticesNeedUpdate,\r\n            dirtyElements = geometry.elementsNeedUpdate,\r\n            dirtyUvs = geometry.uvsNeedUpdate,\r\n            dirtyNormals = geometry.normalsNeedUpdate,\r\n            dirtyTangents = geometry.tangentsNeedUpdate,\r\n            dirtyColors = geometry.colorsNeedUpdate,\r\n            dirtyMorphTargets = geometry.morphTargetsNeedUpdate,\r\n\r\n            vertices = geometry.vertices,\r\n            chunk_faces3 = geometryGroup.faces3,\r\n            obj_faces = geometry.faces,\r\n\r\n            obj_uvs  = geometry.faceVertexUvs[ 0 ],\r\n            obj_uvs2 = geometry.faceVertexUvs[ 1 ],\r\n\r\n            obj_colors = geometry.colors,\r\n\r\n            obj_skinIndices = geometry.skinIndices,\r\n            obj_skinWeights = geometry.skinWeights,\r\n\r\n            morphTargets = geometry.morphTargets,\r\n            morphNormals = geometry.morphNormals;\r\n\r\n        if ( dirtyVertices ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                face = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n                v1 = vertices[ face.a ];\r\n                v2 = vertices[ face.b ];\r\n                v3 = vertices[ face.c ];\r\n\r\n                vertexArray[ offset ]     = v1.x;\r\n                vertexArray[ offset + 1 ] = v1.y;\r\n                vertexArray[ offset + 2 ] = v1.z;\r\n\r\n                vertexArray[ offset + 3 ] = v2.x;\r\n                vertexArray[ offset + 4 ] = v2.y;\r\n                vertexArray[ offset + 5 ] = v2.z;\r\n\r\n                vertexArray[ offset + 6 ] = v3.x;\r\n                vertexArray[ offset + 7 ] = v3.y;\r\n                vertexArray[ offset + 8 ] = v3.z;\r\n\r\n                offset += 9;\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n        }\r\n\r\n        if ( dirtyMorphTargets ) {\r\n\r\n            for ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\r\n\r\n                offset_morphTarget = 0;\r\n\r\n                for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                    chf = chunk_faces3[ f ];\r\n                    face = obj_faces[ chf ];\r\n\r\n                    // morph positions\r\n\r\n                    v1 = morphTargets[ vk ].vertices[ face.a ];\r\n                    v2 = morphTargets[ vk ].vertices[ face.b ];\r\n                    v3 = morphTargets[ vk ].vertices[ face.c ];\r\n\r\n                    vka = morphTargetsArrays[ vk ];\r\n\r\n                    vka[ offset_morphTarget ] \t  = v1.x;\r\n                    vka[ offset_morphTarget + 1 ] = v1.y;\r\n                    vka[ offset_morphTarget + 2 ] = v1.z;\r\n\r\n                    vka[ offset_morphTarget + 3 ] = v2.x;\r\n                    vka[ offset_morphTarget + 4 ] = v2.y;\r\n                    vka[ offset_morphTarget + 5 ] = v2.z;\r\n\r\n                    vka[ offset_morphTarget + 6 ] = v3.x;\r\n                    vka[ offset_morphTarget + 7 ] = v3.y;\r\n                    vka[ offset_morphTarget + 8 ] = v3.z;\r\n\r\n                    // morph normals\r\n\r\n                    if ( material.morphNormals ) {\r\n\r\n                        if ( needsSmoothNormals ) {\r\n\r\n                            faceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\r\n\r\n                            n1 = faceVertexNormals.a;\r\n                            n2 = faceVertexNormals.b;\r\n                            n3 = faceVertexNormals.c;\r\n\r\n                        } else {\r\n\r\n                            n1 = morphNormals[ vk ].faceNormals[ chf ];\r\n                            n2 = n1;\r\n                            n3 = n1;\r\n\r\n                        }\r\n\r\n                        nka = morphNormalsArrays[ vk ];\r\n\r\n                        nka[ offset_morphTarget ] \t  = n1.x;\r\n                        nka[ offset_morphTarget + 1 ] = n1.y;\r\n                        nka[ offset_morphTarget + 2 ] = n1.z;\r\n\r\n                        nka[ offset_morphTarget + 3 ] = n2.x;\r\n                        nka[ offset_morphTarget + 4 ] = n2.y;\r\n                        nka[ offset_morphTarget + 5 ] = n2.z;\r\n\r\n                        nka[ offset_morphTarget + 6 ] = n3.x;\r\n                        nka[ offset_morphTarget + 7 ] = n3.y;\r\n                        nka[ offset_morphTarget + 8 ] = n3.z;\r\n\r\n                    }\r\n\r\n                    //\r\n\r\n                    offset_morphTarget += 9;\r\n\r\n                }\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\r\n\r\n                if ( material.morphNormals ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\r\n                    _gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( obj_skinWeights.length ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                // weights\r\n\r\n                sw1 = obj_skinWeights[ face.a ];\r\n                sw2 = obj_skinWeights[ face.b ];\r\n                sw3 = obj_skinWeights[ face.c ];\r\n\r\n                skinWeightArray[ offset_skin ]     = sw1.x;\r\n                skinWeightArray[ offset_skin + 1 ] = sw1.y;\r\n                skinWeightArray[ offset_skin + 2 ] = sw1.z;\r\n                skinWeightArray[ offset_skin + 3 ] = sw1.w;\r\n\r\n                skinWeightArray[ offset_skin + 4 ] = sw2.x;\r\n                skinWeightArray[ offset_skin + 5 ] = sw2.y;\r\n                skinWeightArray[ offset_skin + 6 ] = sw2.z;\r\n                skinWeightArray[ offset_skin + 7 ] = sw2.w;\r\n\r\n                skinWeightArray[ offset_skin + 8 ]  = sw3.x;\r\n                skinWeightArray[ offset_skin + 9 ]  = sw3.y;\r\n                skinWeightArray[ offset_skin + 10 ] = sw3.z;\r\n                skinWeightArray[ offset_skin + 11 ] = sw3.w;\r\n\r\n                // indices\r\n\r\n                si1 = obj_skinIndices[ face.a ];\r\n                si2 = obj_skinIndices[ face.b ];\r\n                si3 = obj_skinIndices[ face.c ];\r\n\r\n                skinIndexArray[ offset_skin ]     = si1.x;\r\n                skinIndexArray[ offset_skin + 1 ] = si1.y;\r\n                skinIndexArray[ offset_skin + 2 ] = si1.z;\r\n                skinIndexArray[ offset_skin + 3 ] = si1.w;\r\n\r\n                skinIndexArray[ offset_skin + 4 ] = si2.x;\r\n                skinIndexArray[ offset_skin + 5 ] = si2.y;\r\n                skinIndexArray[ offset_skin + 6 ] = si2.z;\r\n                skinIndexArray[ offset_skin + 7 ] = si2.w;\r\n\r\n                skinIndexArray[ offset_skin + 8 ]  = si3.x;\r\n                skinIndexArray[ offset_skin + 9 ]  = si3.y;\r\n                skinIndexArray[ offset_skin + 10 ] = si3.z;\r\n                skinIndexArray[ offset_skin + 11 ] = si3.w;\r\n\r\n                offset_skin += 12;\r\n\r\n            }\r\n\r\n            if ( offset_skin > 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( dirtyColors && vertexColorType ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                vertexColors = face.vertexColors;\r\n                faceColor = face.color;\r\n\r\n                if ( vertexColors.length === 3 && vertexColorType === THREE.VertexColors ) {\r\n\r\n                    c1 = vertexColors[ 0 ];\r\n                    c2 = vertexColors[ 1 ];\r\n                    c3 = vertexColors[ 2 ];\r\n\r\n                } else {\r\n\r\n                    c1 = faceColor;\r\n                    c2 = faceColor;\r\n                    c3 = faceColor;\r\n\r\n                }\r\n\r\n                colorArray[ offset_color ]     = c1.r;\r\n                colorArray[ offset_color + 1 ] = c1.g;\r\n                colorArray[ offset_color + 2 ] = c1.b;\r\n\r\n                colorArray[ offset_color + 3 ] = c2.r;\r\n                colorArray[ offset_color + 4 ] = c2.g;\r\n                colorArray[ offset_color + 5 ] = c2.b;\r\n\r\n                colorArray[ offset_color + 6 ] = c3.r;\r\n                colorArray[ offset_color + 7 ] = c3.g;\r\n                colorArray[ offset_color + 8 ] = c3.b;\r\n\r\n                offset_color += 9;\r\n\r\n            }\r\n\r\n            if ( offset_color > 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( dirtyTangents && geometry.hasTangents ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                vertexTangents = face.vertexTangents;\r\n\r\n                t1 = vertexTangents[ 0 ];\r\n                t2 = vertexTangents[ 1 ];\r\n                t3 = vertexTangents[ 2 ];\r\n\r\n                tangentArray[ offset_tangent ]     = t1.x;\r\n                tangentArray[ offset_tangent + 1 ] = t1.y;\r\n                tangentArray[ offset_tangent + 2 ] = t1.z;\r\n                tangentArray[ offset_tangent + 3 ] = t1.w;\r\n\r\n                tangentArray[ offset_tangent + 4 ] = t2.x;\r\n                tangentArray[ offset_tangent + 5 ] = t2.y;\r\n                tangentArray[ offset_tangent + 6 ] = t2.z;\r\n                tangentArray[ offset_tangent + 7 ] = t2.w;\r\n\r\n                tangentArray[ offset_tangent + 8 ]  = t3.x;\r\n                tangentArray[ offset_tangent + 9 ]  = t3.y;\r\n                tangentArray[ offset_tangent + 10 ] = t3.z;\r\n                tangentArray[ offset_tangent + 11 ] = t3.w;\r\n\r\n                offset_tangent += 12;\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\r\n\r\n        }\r\n\r\n        if ( dirtyNormals && normalType ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                vertexNormals = face.vertexNormals;\r\n                faceNormal = face.normal;\r\n\r\n                if ( vertexNormals.length === 3 && needsSmoothNormals ) {\r\n\r\n                    for ( i = 0; i < 3; i ++ ) {\r\n\r\n                        vn = vertexNormals[ i ];\r\n\r\n                        normalArray[ offset_normal ]     = vn.x;\r\n                        normalArray[ offset_normal + 1 ] = vn.y;\r\n                        normalArray[ offset_normal + 2 ] = vn.z;\r\n\r\n                        offset_normal += 3;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for ( i = 0; i < 3; i ++ ) {\r\n\r\n                        normalArray[ offset_normal ]     = faceNormal.x;\r\n                        normalArray[ offset_normal + 1 ] = faceNormal.y;\r\n                        normalArray[ offset_normal + 2 ] = faceNormal.z;\r\n\r\n                        offset_normal += 3;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\r\n\r\n        }\r\n\r\n        if ( dirtyUvs && obj_uvs && uvType ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                fi = chunk_faces3[ f ];\r\n\r\n                uv = obj_uvs[ fi ];\r\n\r\n                if ( uv === undefined ) continue;\r\n\r\n                for ( i = 0; i < 3; i ++ ) {\r\n\r\n                    uvi = uv[ i ];\r\n\r\n                    uvArray[ offset_uv ]     = uvi.x;\r\n                    uvArray[ offset_uv + 1 ] = uvi.y;\r\n\r\n                    offset_uv += 2;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( offset_uv > 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( dirtyUvs && obj_uvs2 && uvType ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                fi = chunk_faces3[ f ];\r\n\r\n                uv2 = obj_uvs2[ fi ];\r\n\r\n                if ( uv2 === undefined ) continue;\r\n\r\n                for ( i = 0; i < 3; i ++ ) {\r\n\r\n                    uv2i = uv2[ i ];\r\n\r\n                    uv2Array[ offset_uv2 ]     = uv2i.x;\r\n                    uv2Array[ offset_uv2 + 1 ] = uv2i.y;\r\n\r\n                    offset_uv2 += 2;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( offset_uv2 > 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( dirtyElements ) {\r\n\r\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                faceArray[ offset_face ] \t = vertexIndex;\r\n                faceArray[ offset_face + 1 ] = vertexIndex + 1;\r\n                faceArray[ offset_face + 2 ] = vertexIndex + 2;\r\n\r\n                offset_face += 3;\r\n\r\n                lineArray[ offset_line ]     = vertexIndex;\r\n                lineArray[ offset_line + 1 ] = vertexIndex + 1;\r\n\r\n                lineArray[ offset_line + 2 ] = vertexIndex;\r\n                lineArray[ offset_line + 3 ] = vertexIndex + 2;\r\n\r\n                lineArray[ offset_line + 4 ] = vertexIndex + 1;\r\n                lineArray[ offset_line + 5 ] = vertexIndex + 2;\r\n\r\n                offset_line += 6;\r\n\r\n                vertexIndex += 3;\r\n\r\n            }\r\n\r\n            _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n            _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\r\n\r\n            _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n            _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\r\n\r\n        }\r\n\r\n        if ( customAttributes ) {\r\n\r\n            for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n                customAttribute = customAttributes[ i ];\r\n\r\n                if ( ! customAttribute.__original.needsUpdate ) continue;\r\n\r\n                offset_custom = 0;\r\n                offset_customSrc = 0;\r\n\r\n                if ( customAttribute.size === 1 ) {\r\n\r\n                    if ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = customAttribute.value[ face.a ];\r\n                            customAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\r\n                            customAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\r\n\r\n                            offset_custom += 3;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            value = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = value;\r\n                            customAttribute.array[ offset_custom + 1 ] = value;\r\n                            customAttribute.array[ offset_custom + 2 ] = value;\r\n\r\n                            offset_custom += 3;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else if ( customAttribute.size === 2 ) {\r\n\r\n                    if ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                            v1 = customAttribute.value[ face.a ];\r\n                            v2 = customAttribute.value[ face.b ];\r\n                            v3 = customAttribute.value[ face.c ];\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = v1.x;\r\n                            customAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n                            customAttribute.array[ offset_custom + 2 ] = v2.x;\r\n                            customAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n                            customAttribute.array[ offset_custom + 4 ] = v3.x;\r\n                            customAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n                            offset_custom += 6;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            value = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n                            v1 = value;\r\n                            v2 = value;\r\n                            v3 = value;\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = v1.x;\r\n                            customAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n                            customAttribute.array[ offset_custom + 2 ] = v2.x;\r\n                            customAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n                            customAttribute.array[ offset_custom + 4 ] = v3.x;\r\n                            customAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n                            offset_custom += 6;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else if ( customAttribute.size === 3 ) {\r\n\r\n                    var pp;\r\n\r\n                    if ( customAttribute.type === \"c\" ) {\r\n\r\n                        pp = [ \"r\", \"g\", \"b\" ];\r\n\r\n                    } else {\r\n\r\n                        pp = [ \"x\", \"y\", \"z\" ];\r\n\r\n                    }\r\n\r\n                    if ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                            v1 = customAttribute.value[ face.a ];\r\n                            v2 = customAttribute.value[ face.b ];\r\n                            v3 = customAttribute.value[ face.c ];\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = v1[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n                            customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n                            customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n                            offset_custom += 9;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            value = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n                            v1 = value;\r\n                            v2 = value;\r\n                            v3 = value;\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = v1[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n                            customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n                            customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n                            offset_custom += 9;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.boundTo === \"faceVertices\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            value = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n                            v1 = value[ 0 ];\r\n                            v2 = value[ 1 ];\r\n                            v3 = value[ 2 ];\r\n\r\n                            customAttribute.array[ offset_custom ] \t   = v1[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n                            customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n                            customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n                            customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n                            customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n                            offset_custom += 9;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else if ( customAttribute.size === 4 ) {\r\n\r\n                    if ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            face = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n                            v1 = customAttribute.value[ face.a ];\r\n                            v2 = customAttribute.value[ face.b ];\r\n                            v3 = customAttribute.value[ face.c ];\r\n\r\n                            customAttribute.array[ offset_custom  ] \t= v1.x;\r\n                            customAttribute.array[ offset_custom + 1  ] = v1.y;\r\n                            customAttribute.array[ offset_custom + 2  ] = v1.z;\r\n                            customAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n                            customAttribute.array[ offset_custom + 4  ] = v2.x;\r\n                            customAttribute.array[ offset_custom + 5  ] = v2.y;\r\n                            customAttribute.array[ offset_custom + 6  ] = v2.z;\r\n                            customAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n                            customAttribute.array[ offset_custom + 8  ] = v3.x;\r\n                            customAttribute.array[ offset_custom + 9  ] = v3.y;\r\n                            customAttribute.array[ offset_custom + 10 ] = v3.z;\r\n                            customAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n                            offset_custom += 12;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            value = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n                            v1 = value;\r\n                            v2 = value;\r\n                            v3 = value;\r\n\r\n                            customAttribute.array[ offset_custom  ] \t= v1.x;\r\n                            customAttribute.array[ offset_custom + 1  ] = v1.y;\r\n                            customAttribute.array[ offset_custom + 2  ] = v1.z;\r\n                            customAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n                            customAttribute.array[ offset_custom + 4  ] = v2.x;\r\n                            customAttribute.array[ offset_custom + 5  ] = v2.y;\r\n                            customAttribute.array[ offset_custom + 6  ] = v2.z;\r\n                            customAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n                            customAttribute.array[ offset_custom + 8  ] = v3.x;\r\n                            customAttribute.array[ offset_custom + 9  ] = v3.y;\r\n                            customAttribute.array[ offset_custom + 10 ] = v3.z;\r\n                            customAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n                            offset_custom += 12;\r\n\r\n                        }\r\n\r\n                    } else if ( customAttribute.boundTo === \"faceVertices\" ) {\r\n\r\n                        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n                            value = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n                            v1 = value[ 0 ];\r\n                            v2 = value[ 1 ];\r\n                            v3 = value[ 2 ];\r\n\r\n                            customAttribute.array[ offset_custom  ] \t= v1.x;\r\n                            customAttribute.array[ offset_custom + 1  ] = v1.y;\r\n                            customAttribute.array[ offset_custom + 2  ] = v1.z;\r\n                            customAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n                            customAttribute.array[ offset_custom + 4  ] = v2.x;\r\n                            customAttribute.array[ offset_custom + 5  ] = v2.y;\r\n                            customAttribute.array[ offset_custom + 6  ] = v2.z;\r\n                            customAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n                            customAttribute.array[ offset_custom + 8  ] = v3.x;\r\n                            customAttribute.array[ offset_custom + 9  ] = v3.y;\r\n                            customAttribute.array[ offset_custom + 10 ] = v3.z;\r\n                            customAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n                            offset_custom += 12;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n                _gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( dispose ) {\r\n\r\n            delete geometryGroup.__inittedArrays;\r\n            delete geometryGroup.__colorArray;\r\n            delete geometryGroup.__normalArray;\r\n            delete geometryGroup.__tangentArray;\r\n            delete geometryGroup.__uvArray;\r\n            delete geometryGroup.__uv2Array;\r\n            delete geometryGroup.__faceArray;\r\n            delete geometryGroup.__vertexArray;\r\n            delete geometryGroup.__lineArray;\r\n            delete geometryGroup.__skinIndexArray;\r\n            delete geometryGroup.__skinWeightArray;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setDirectBuffers ( geometry, hint, dispose ) {\r\n\r\n        var attributes = geometry.attributes;\r\n\r\n        var attributeName, attributeItem;\r\n\r\n        for ( attributeName in attributes ) {\r\n\r\n            attributeItem = attributes[ attributeName ];\r\n\r\n            if ( attributeItem.needsUpdate ) {\r\n\r\n                if ( attributeName === 'index' ) {\r\n\r\n                    _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.buffer );\r\n                    _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.array, hint );\r\n\r\n                } else {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n                    _gl.bufferData( _gl.ARRAY_BUFFER, attributeItem.array, hint );\r\n\r\n                }\r\n\r\n                attributeItem.needsUpdate = false;\r\n\r\n            }\r\n\r\n            if ( dispose && ! attributeItem.dynamic ) {\r\n\r\n                attributeItem.array = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Buffer rendering\r\n\r\n    this.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n        if ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\r\n        if ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\r\n        if ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\r\n        if ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\r\n\r\n        if ( object.hasPositions ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n            _gl.enableVertexAttribArray( program.attributes.position );\r\n            _gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n        }\r\n\r\n        if ( object.hasNormals ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\r\n\r\n            if ( material.shading === THREE.FlatShading ) {\r\n\r\n                var nx, ny, nz,\r\n                    nax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\r\n                    normalArray,\r\n                    i, il = object.count * 3;\r\n\r\n                for( i = 0; i < il; i += 9 ) {\r\n\r\n                    normalArray = object.normalArray;\r\n\r\n                    nax  = normalArray[ i ];\r\n                    nay  = normalArray[ i + 1 ];\r\n                    naz  = normalArray[ i + 2 ];\r\n\r\n                    nbx  = normalArray[ i + 3 ];\r\n                    nby  = normalArray[ i + 4 ];\r\n                    nbz  = normalArray[ i + 5 ];\r\n\r\n                    ncx  = normalArray[ i + 6 ];\r\n                    ncy  = normalArray[ i + 7 ];\r\n                    ncz  = normalArray[ i + 8 ];\r\n\r\n                    nx = ( nax + nbx + ncx ) / 3;\r\n                    ny = ( nay + nby + ncy ) / 3;\r\n                    nz = ( naz + nbz + ncz ) / 3;\r\n\r\n                    normalArray[ i ] \t = nx;\r\n                    normalArray[ i + 1 ] = ny;\r\n                    normalArray[ i + 2 ] = nz;\r\n\r\n                    normalArray[ i + 3 ] = nx;\r\n                    normalArray[ i + 4 ] = ny;\r\n                    normalArray[ i + 5 ] = nz;\r\n\r\n                    normalArray[ i + 6 ] = nx;\r\n                    normalArray[ i + 7 ] = ny;\r\n                    normalArray[ i + 8 ] = nz;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n            _gl.enableVertexAttribArray( program.attributes.normal );\r\n            _gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n        }\r\n\r\n        if ( object.hasUvs && material.map ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n            _gl.enableVertexAttribArray( program.attributes.uv );\r\n            _gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n        }\r\n\r\n        if ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\r\n            _gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n            _gl.enableVertexAttribArray( program.attributes.color );\r\n            _gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n        }\r\n\r\n        _gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n        object.count = 0;\r\n\r\n    };\r\n\r\n    this.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\r\n\r\n        if ( material.visible === false ) return;\r\n\r\n        var linewidth, a, attribute;\r\n        var attributeItem, attributeName, attributePointer, attributeSize;\r\n\r\n        var program = setProgram( camera, lights, fog, material, object );\r\n\r\n        var programAttributes = program.attributes;\r\n        var geometryAttributes = geometry.attributes;\r\n\r\n        var updateBuffers = false,\r\n            wireframeBit = material.wireframe ? 1 : 0,\r\n            geometryHash = ( geometry.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\r\n\r\n        if ( geometryHash !== _currentGeometryGroupHash ) {\r\n\r\n            _currentGeometryGroupHash = geometryHash;\r\n            updateBuffers = true;\r\n\r\n        }\r\n\r\n        if ( updateBuffers ) {\r\n\r\n            disableAttributes();\r\n\r\n        }\r\n\r\n        // render mesh\r\n\r\n        if ( object instanceof THREE.Mesh ) {\r\n\r\n            var index = geometryAttributes[ \"index\" ];\r\n\r\n            // indexed triangles\r\n\r\n            if ( index ) {\r\n\r\n                var offsets = geometry.offsets;\r\n\r\n                // if there is more than 1 chunk\r\n                // must set attribute pointers to use new offsets for each chunk\r\n                // even if geometry and materials didn't change\r\n\r\n                if ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n                for ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n                    var startIndex = offsets[ i ].index;\r\n\r\n                    if ( updateBuffers ) {\r\n\r\n                        for ( attributeName in programAttributes ) {\r\n\r\n                            attributePointer = programAttributes[ attributeName ];\r\n                            attributeItem = geometryAttributes[ attributeName ];\r\n\r\n                            if ( attributePointer >= 0 ) {\r\n\r\n                                if ( attributeItem ) {\r\n\r\n                                    attributeSize = attributeItem.itemSize;\r\n                                    _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n                                    enableAttribute( attributePointer );\r\n                                    _gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, startIndex * attributeSize * 4 ); // 4 bytes per Float32\r\n\r\n                                } else if ( material.defaultAttributeValues ) {\r\n\r\n                                    if ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n                                        _gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                                    } else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n                                        _gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                                    }\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        // indices\r\n\r\n                        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n                    }\r\n\r\n                    // render indexed triangles\r\n\r\n                    _gl.drawElements( _gl.TRIANGLES, offsets[ i ].count, _gl.UNSIGNED_SHORT, offsets[ i ].start * 2 ); // 2 bytes per Uint16\r\n\r\n                    _this.info.render.calls ++;\r\n                    _this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n                    _this.info.render.faces += offsets[ i ].count / 3;\r\n\r\n                }\r\n\r\n                // non-indexed triangles\r\n\r\n            } else {\r\n\r\n                if ( updateBuffers ) {\r\n\r\n                    for ( attributeName in programAttributes ) {\r\n\r\n                        if ( attributeName === 'index') continue;\r\n\r\n                        attributePointer = programAttributes[ attributeName ];\r\n                        attributeItem = geometryAttributes[ attributeName ];\r\n\r\n                        if ( attributePointer >= 0 ) {\r\n\r\n                            if ( attributeItem ) {\r\n\r\n                                attributeSize = attributeItem.itemSize;\r\n                                _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n                                enableAttribute( attributePointer );\r\n                                _gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );\r\n\r\n                            } else if ( material.defaultAttributeValues && material.defaultAttributeValues[ attributeName ] ) {\r\n\r\n                                if ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n                                    _gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                                } else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n                                    _gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                var position = geometry.attributes[ \"position\" ];\r\n\r\n                // render non-indexed triangles\r\n\r\n                _gl.drawArrays( _gl.TRIANGLES, 0, position.numItems / 3 );\r\n\r\n                _this.info.render.calls ++;\r\n                _this.info.render.vertices += position.numItems / 3;\r\n                _this.info.render.faces += position.numItems / 3 / 3;\r\n\r\n            }\r\n\r\n            // render particles\r\n\r\n        } else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n            if ( updateBuffers ) {\r\n\r\n                for ( attributeName in programAttributes ) {\r\n\r\n                    attributePointer = programAttributes[ attributeName ];\r\n                    attributeItem = geometryAttributes[ attributeName ];\r\n\r\n                    if ( attributePointer >= 0 ) {\r\n\r\n                        if ( attributeItem ) {\r\n\r\n                            attributeSize = attributeItem.itemSize;\r\n                            _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n                            enableAttribute( attributePointer );\r\n                            _gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );\r\n\r\n                        } else if ( material.defaultAttributeValues && material.defaultAttributeValues[ attributeName ] ) {\r\n\r\n                            if ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n                                _gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                            } else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n                                _gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                var position = geometryAttributes[ \"position\" ];\r\n\r\n                // render particles\r\n\r\n                _gl.drawArrays( _gl.POINTS, 0, position.numItems / 3 );\r\n\r\n                _this.info.render.calls ++;\r\n                _this.info.render.points += position.numItems / 3;\r\n\r\n            }\r\n\r\n        } else if ( object instanceof THREE.Line ) {\r\n\r\n            if ( updateBuffers ) {\r\n\r\n                for ( attributeName in programAttributes ) {\r\n\r\n                    attributePointer = programAttributes[ attributeName ];\r\n                    attributeItem = geometryAttributes[ attributeName ];\r\n\r\n                    if ( attributePointer >= 0 ) {\r\n\r\n                        if ( attributeItem ) {\r\n\r\n                            attributeSize = attributeItem.itemSize;\r\n                            _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n                            enableAttribute( attributePointer );\r\n                            _gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );\r\n\r\n                        } else if ( material.defaultAttributeValues && material.defaultAttributeValues[ attributeName ] ) {\r\n\r\n                            if ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n                                _gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                            } else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n                                _gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // render lines\r\n\r\n                var primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n                setLineWidth( material.linewidth );\r\n\r\n                var position = geometryAttributes[ \"position\" ];\r\n\r\n                _gl.drawArrays( primitives, 0, position.numItems / 3 );\r\n\r\n                _this.info.render.calls ++;\r\n                _this.info.render.points += position.numItems;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\r\n\r\n        if ( material.visible === false ) return;\r\n\r\n        var linewidth, a, attribute, i, il;\r\n\r\n        var program = setProgram( camera, lights, fog, material, object );\r\n\r\n        var attributes = program.attributes;\r\n\r\n        var updateBuffers = false,\r\n            wireframeBit = material.wireframe ? 1 : 0,\r\n            geometryGroupHash = ( geometryGroup.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\r\n\r\n        if ( geometryGroupHash !== _currentGeometryGroupHash ) {\r\n\r\n            _currentGeometryGroupHash = geometryGroupHash;\r\n            updateBuffers = true;\r\n\r\n        }\r\n\r\n        if ( updateBuffers ) {\r\n\r\n            disableAttributes();\r\n\r\n        }\r\n\r\n        // vertices\r\n\r\n        if ( !material.morphTargets && attributes.position >= 0 ) {\r\n\r\n            if ( updateBuffers ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n                enableAttribute( attributes.position );\r\n                _gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            if ( object.morphTargetBase ) {\r\n\r\n                setupMorphTargets( material, geometryGroup, object );\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if ( updateBuffers ) {\r\n\r\n            // custom attributes\r\n\r\n            // Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\r\n\r\n            if ( geometryGroup.__webglCustomAttributesList ) {\r\n\r\n                for ( i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\r\n\r\n                    attribute = geometryGroup.__webglCustomAttributesList[ i ];\r\n\r\n                    if ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\r\n\r\n                        _gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\r\n                        enableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\r\n                        _gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // colors\r\n\r\n            if ( attributes.color >= 0 ) {\r\n\r\n                if ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n                    enableAttribute( attributes.color );\r\n                    _gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n                } else if ( material.defaultAttributeValues ) {\r\n\r\n\r\n                    _gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // normals\r\n\r\n            if ( attributes.normal >= 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n                enableAttribute( attributes.normal );\r\n                _gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n            }\r\n\r\n            // tangents\r\n\r\n            if ( attributes.tangent >= 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n                enableAttribute( attributes.tangent );\r\n                _gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n            }\r\n\r\n            // uvs\r\n\r\n            if ( attributes.uv >= 0 ) {\r\n\r\n                if ( object.geometry.faceVertexUvs[0] ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n                    enableAttribute( attributes.uv );\r\n                    _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n                } else if ( material.defaultAttributeValues ) {\r\n\r\n\r\n                    _gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( attributes.uv2 >= 0 ) {\r\n\r\n                if ( object.geometry.faceVertexUvs[1] ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n                    enableAttribute( attributes.uv2 );\r\n                    _gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n                } else if ( material.defaultAttributeValues ) {\r\n\r\n\r\n                    _gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( material.skinning &&\r\n                attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n                enableAttribute( attributes.skinIndex );\r\n                _gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n                enableAttribute( attributes.skinWeight );\r\n                _gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n            }\r\n\r\n            // line distances\r\n\r\n            if ( attributes.lineDistance >= 0 ) {\r\n\r\n                _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\r\n                enableAttribute( attributes.lineDistance );\r\n                _gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // render mesh\r\n\r\n        if ( object instanceof THREE.Mesh ) {\r\n\r\n            // wireframe\r\n\r\n            if ( material.wireframe ) {\r\n\r\n                setLineWidth( material.wireframeLinewidth );\r\n\r\n                if ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n                _gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n                // triangles\r\n\r\n            } else {\r\n\r\n                if ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n                _gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n            }\r\n\r\n            _this.info.render.calls ++;\r\n            _this.info.render.vertices += geometryGroup.__webglFaceCount;\r\n            _this.info.render.faces += geometryGroup.__webglFaceCount / 3;\r\n\r\n            // render lines\r\n\r\n        } else if ( object instanceof THREE.Line ) {\r\n\r\n            var primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n            setLineWidth( material.linewidth );\r\n\r\n            _gl.drawArrays( primitives, 0, geometryGroup.__webglLineCount );\r\n\r\n            _this.info.render.calls ++;\r\n\r\n            // render particles\r\n\r\n        } else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n            _gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\r\n\r\n            _this.info.render.calls ++;\r\n            _this.info.render.points += geometryGroup.__webglParticleCount;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function enableAttribute( attribute ) {\r\n\r\n        if ( ! _enabledAttributes[ attribute ] ) {\r\n\r\n            _gl.enableVertexAttribArray( attribute );\r\n            _enabledAttributes[ attribute ] = true;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function disableAttributes() {\r\n\r\n        for ( var attribute in _enabledAttributes ) {\r\n\r\n            if ( _enabledAttributes[ attribute ] ) {\r\n\r\n                _gl.disableVertexAttribArray( attribute );\r\n                _enabledAttributes[ attribute ] = false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setupMorphTargets ( material, geometryGroup, object ) {\r\n\r\n        // set base\r\n\r\n        var attributes = material.program.attributes;\r\n\r\n        if ( object.morphTargetBase !== -1 && attributes.position >= 0 ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\r\n            enableAttribute( attributes.position );\r\n            _gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n        } else if ( attributes.position >= 0 ) {\r\n\r\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n            enableAttribute( attributes.position );\r\n            _gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n        }\r\n\r\n        if ( object.morphTargetForcedOrder.length ) {\r\n\r\n            // set forced order\r\n\r\n            var m = 0;\r\n            var order = object.morphTargetForcedOrder;\r\n            var influences = object.morphTargetInfluences;\r\n\r\n            while ( m < material.numSupportedMorphTargets && m < order.length ) {\r\n\r\n                if ( attributes[ \"morphTarget\" + m ] >= 0 ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\r\n                    enableAttribute( attributes[ \"morphTarget\" + m ] );\r\n                    _gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n                }\r\n\r\n                if ( attributes[ \"morphNormal\" + m ] >= 0 && material.morphNormals ) {\r\n\r\n                    _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\r\n                    enableAttribute( attributes[ \"morphNormal\" + m ] );\r\n                    _gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n                }\r\n\r\n                object.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\r\n\r\n                m ++;\r\n            }\r\n\r\n        } else {\r\n\r\n            // find the most influencing\r\n\r\n            var influence, activeInfluenceIndices = [];\r\n            var influences = object.morphTargetInfluences;\r\n            var i, il = influences.length;\r\n\r\n            for ( i = 0; i < il; i ++ ) {\r\n\r\n                influence = influences[ i ];\r\n\r\n                if ( influence > 0 ) {\r\n\r\n                    activeInfluenceIndices.push( [ influence, i ] );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\r\n\r\n                activeInfluenceIndices.sort( numericalSort );\r\n                activeInfluenceIndices.length = material.numSupportedMorphTargets;\r\n\r\n            } else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\r\n\r\n                activeInfluenceIndices.sort( numericalSort );\r\n\r\n            } else if ( activeInfluenceIndices.length === 0 ) {\r\n\r\n                activeInfluenceIndices.push( [ 0, 0 ] );\r\n\r\n            };\r\n\r\n            var influenceIndex, m = 0;\r\n\r\n            while ( m < material.numSupportedMorphTargets ) {\r\n\r\n                if ( activeInfluenceIndices[ m ] ) {\r\n\r\n                    influenceIndex = activeInfluenceIndices[ m ][ 1 ];\r\n\r\n                    if ( attributes[ \"morphTarget\" + m ] >= 0 ) {\r\n\r\n                        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\r\n                        enableAttribute( attributes[ \"morphTarget\" + m ] );\r\n                        _gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n                    }\r\n\r\n                    if ( attributes[ \"morphNormal\" + m ] >= 0 && material.morphNormals ) {\r\n\r\n                        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\r\n                        enableAttribute( attributes[ \"morphNormal\" + m ] );\r\n                        _gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\r\n                    }\r\n\r\n                    object.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\r\n\r\n                } else {\r\n\r\n                    /*\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n                    object.__webglMorphTargetInfluences[ m ] = 0;\r\n\r\n                }\r\n\r\n                m ++;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // load updated influences uniform\r\n\r\n        if ( material.program.uniforms.morphTargetInfluences !== null ) {\r\n\r\n            _gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Sorting\r\n\r\n    function painterSortStable ( a, b ) {\r\n\r\n        if ( a.z !== b.z ) {\r\n\r\n            return b.z - a.z;\r\n\r\n        } else {\r\n\r\n            return a.id - b.id;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function numericalSort ( a, b ) {\r\n\r\n        return b[ 0 ] - a[ 0 ];\r\n\r\n    };\r\n\r\n\r\n    // Rendering\r\n\r\n    this.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n        if ( camera instanceof THREE.Camera === false ) {\r\n\r\n            console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n            return;\r\n\r\n        }\r\n\r\n        var i, il,\r\n\r\n            webglObject, object,\r\n            renderList,\r\n\r\n            lights = scene.__lights,\r\n            fog = scene.fog;\r\n\r\n        // reset caching for this frame\r\n\r\n        _currentMaterialId = -1;\r\n        _lightsNeedUpdate = true;\r\n\r\n        // update scene graph\r\n\r\n        if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n        // update camera matrices and frustum\r\n\r\n        if ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n        camera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n        _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n        _frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n        // update WebGL objects\r\n\r\n        if ( this.autoUpdateObjects ) this.initWebGLObjects( scene );\r\n\r\n        // custom render plugins (pre pass)\r\n\r\n        renderPlugins( this.renderPluginsPre, scene, camera );\r\n\r\n        //\r\n\r\n        _this.info.render.calls = 0;\r\n        _this.info.render.vertices = 0;\r\n        _this.info.render.faces = 0;\r\n        _this.info.render.points = 0;\r\n\r\n        this.setRenderTarget( renderTarget );\r\n\r\n        if ( this.autoClear || forceClear ) {\r\n\r\n            this.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n        }\r\n\r\n        // set matrices for regular objects (frustum culled)\r\n\r\n        renderList = scene.__webglObjects;\r\n\r\n        for ( i = 0, il = renderList.length; i < il; i ++ ) {\r\n\r\n            webglObject = renderList[ i ];\r\n            object = webglObject.object;\r\n\r\n            webglObject.id = i;\r\n            webglObject.render = false;\r\n\r\n            if ( object.visible ) {\r\n\r\n                if ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {\r\n\r\n                    setupMatrices( object, camera );\r\n\r\n                    unrollBufferMaterial( webglObject );\r\n\r\n                    webglObject.render = true;\r\n\r\n                    if ( this.sortObjects === true ) {\r\n\r\n                        if ( object.renderDepth !== null ) {\r\n\r\n                            webglObject.z = object.renderDepth;\r\n\r\n                        } else {\r\n\r\n                            _vector3.getPositionFromMatrix( object.matrixWorld );\r\n                            _vector3.applyProjection( _projScreenMatrix );\r\n\r\n                            webglObject.z = _vector3.z;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( this.sortObjects ) {\r\n\r\n            renderList.sort( painterSortStable );\r\n\r\n        }\r\n\r\n        // set matrices for immediate objects\r\n\r\n        renderList = scene.__webglObjectsImmediate;\r\n\r\n        for ( i = 0, il = renderList.length; i < il; i ++ ) {\r\n\r\n            webglObject = renderList[ i ];\r\n            object = webglObject.object;\r\n\r\n            if ( object.visible ) {\r\n\r\n                setupMatrices( object, camera );\r\n\r\n                unrollImmediateBufferMaterial( webglObject );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( scene.overrideMaterial ) {\r\n\r\n            var material = scene.overrideMaterial;\r\n\r\n            this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n            this.setDepthTest( material.depthTest );\r\n            this.setDepthWrite( material.depthWrite );\r\n            setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n            renderObjects( scene.__webglObjects, false, \"\", camera, lights, fog, true, material );\r\n            renderObjectsImmediate( scene.__webglObjectsImmediate, \"\", camera, lights, fog, false, material );\r\n\r\n        } else {\r\n\r\n            var material = null;\r\n\r\n            // opaque pass (front-to-back order)\r\n\r\n            this.setBlending( THREE.NoBlending );\r\n\r\n            renderObjects( scene.__webglObjects, true, \"opaque\", camera, lights, fog, false, material );\r\n            renderObjectsImmediate( scene.__webglObjectsImmediate, \"opaque\", camera, lights, fog, false, material );\r\n\r\n            // transparent pass (back-to-front order)\r\n\r\n            renderObjects( scene.__webglObjects, false, \"transparent\", camera, lights, fog, true, material );\r\n            renderObjectsImmediate( scene.__webglObjectsImmediate, \"transparent\", camera, lights, fog, true, material );\r\n\r\n        }\r\n\r\n        // custom render plugins (post pass)\r\n\r\n        renderPlugins( this.renderPluginsPost, scene, camera );\r\n\r\n\r\n        // Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n        if ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n            updateRenderTargetMipmap( renderTarget );\r\n\r\n        }\r\n\r\n        // Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n        this.setDepthTest( true );\r\n        this.setDepthWrite( true );\r\n\r\n        // _gl.finish();\r\n\r\n    };\r\n\r\n    function renderPlugins( plugins, scene, camera ) {\r\n\r\n        if ( ! plugins.length ) return;\r\n\r\n        for ( var i = 0, il = plugins.length; i < il; i ++ ) {\r\n\r\n            // reset state for plugin (to start from clean slate)\r\n\r\n            _currentProgram = null;\r\n            _currentCamera = null;\r\n\r\n            _oldBlending = -1;\r\n            _oldDepthTest = -1;\r\n            _oldDepthWrite = -1;\r\n            _oldDoubleSided = -1;\r\n            _oldFlipSided = -1;\r\n            _currentGeometryGroupHash = -1;\r\n            _currentMaterialId = -1;\r\n\r\n            _lightsNeedUpdate = true;\r\n\r\n            plugins[ i ].render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n            // reset state after plugin (anything could have changed)\r\n\r\n            _currentProgram = null;\r\n            _currentCamera = null;\r\n\r\n            _oldBlending = -1;\r\n            _oldDepthTest = -1;\r\n            _oldDepthWrite = -1;\r\n            _oldDoubleSided = -1;\r\n            _oldFlipSided = -1;\r\n            _currentGeometryGroupHash = -1;\r\n            _currentMaterialId = -1;\r\n\r\n            _lightsNeedUpdate = true;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function renderObjects ( renderList, reverse, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\r\n\r\n        var webglObject, object, buffer, material, start, end, delta;\r\n\r\n        if ( reverse ) {\r\n\r\n            start = renderList.length - 1;\r\n            end = -1;\r\n            delta = -1;\r\n\r\n        } else {\r\n\r\n            start = 0;\r\n            end = renderList.length;\r\n            delta = 1;\r\n        }\r\n\r\n        for ( var i = start; i !== end; i += delta ) {\r\n\r\n            webglObject = renderList[ i ];\r\n\r\n            if ( webglObject.render ) {\r\n\r\n                object = webglObject.object;\r\n                buffer = webglObject.buffer;\r\n\r\n                if ( overrideMaterial ) {\r\n\r\n                    material = overrideMaterial;\r\n\r\n                } else {\r\n\r\n                    material = webglObject[ materialType ];\r\n\r\n                    if ( ! material ) continue;\r\n\r\n                    if ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\r\n                    _this.setDepthTest( material.depthTest );\r\n                    _this.setDepthWrite( material.depthWrite );\r\n                    setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n                }\r\n\r\n                _this.setMaterialFaces( material );\r\n\r\n                if ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n                    _this.renderBufferDirect( camera, lights, fog, material, buffer, object );\r\n\r\n                } else {\r\n\r\n                    _this.renderBuffer( camera, lights, fog, material, buffer, object );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\r\n\r\n        var webglObject, object, material, program;\r\n\r\n        for ( var i = 0, il = renderList.length; i < il; i ++ ) {\r\n\r\n            webglObject = renderList[ i ];\r\n            object = webglObject.object;\r\n\r\n            if ( object.visible ) {\r\n\r\n                if ( overrideMaterial ) {\r\n\r\n                    material = overrideMaterial;\r\n\r\n                } else {\r\n\r\n                    material = webglObject[ materialType ];\r\n\r\n                    if ( ! material ) continue;\r\n\r\n                    if ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\r\n                    _this.setDepthTest( material.depthTest );\r\n                    _this.setDepthWrite( material.depthWrite );\r\n                    setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n                }\r\n\r\n                _this.renderImmediateObject( camera, lights, fog, material, object );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.renderImmediateObject = function ( camera, lights, fog, material, object ) {\r\n\r\n        var program = setProgram( camera, lights, fog, material, object );\r\n\r\n        _currentGeometryGroupHash = -1;\r\n\r\n        _this.setMaterialFaces( material );\r\n\r\n        if ( object.immediateRenderCallback ) {\r\n\r\n            object.immediateRenderCallback( program, _gl, _frustum );\r\n\r\n        } else {\r\n\r\n            object.render( function( object ) { _this.renderBufferImmediate( object, program, material ); } );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function unrollImmediateBufferMaterial ( globject ) {\r\n\r\n        var object = globject.object,\r\n            material = object.material;\r\n\r\n        if ( material.transparent ) {\r\n\r\n            globject.transparent = material;\r\n            globject.opaque = null;\r\n\r\n        } else {\r\n\r\n            globject.opaque = material;\r\n            globject.transparent = null;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function unrollBufferMaterial ( globject ) {\r\n\r\n        var object = globject.object,\r\n            buffer = globject.buffer,\r\n            material, materialIndex, meshMaterial;\r\n\r\n        meshMaterial = object.material;\r\n\r\n        if ( meshMaterial instanceof THREE.MeshFaceMaterial ) {\r\n\r\n            materialIndex = buffer.materialIndex;\r\n\r\n            material = meshMaterial.materials[ materialIndex ];\r\n\r\n            if ( material.transparent ) {\r\n\r\n                globject.transparent = material;\r\n                globject.opaque = null;\r\n\r\n            } else {\r\n\r\n                globject.opaque = material;\r\n                globject.transparent = null;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            material = meshMaterial;\r\n\r\n            if ( material ) {\r\n\r\n                if ( material.transparent ) {\r\n\r\n                    globject.transparent = material;\r\n                    globject.opaque = null;\r\n\r\n                } else {\r\n\r\n                    globject.opaque = material;\r\n                    globject.transparent = null;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Geometry splitting\r\n\r\n    function sortFacesByMaterial ( geometry, material ) {\r\n\r\n        var f, fl, face, materialIndex, vertices,\r\n            groupHash, hash_map = {};\r\n\r\n        var numMorphTargets = geometry.morphTargets.length;\r\n        var numMorphNormals = geometry.morphNormals.length;\r\n\r\n        var usesFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\r\n        geometry.geometryGroups = {};\r\n\r\n        for ( f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n            face = geometry.faces[ f ];\r\n            materialIndex = usesFaceMaterial ? face.materialIndex : 0;\r\n\r\n            if ( hash_map[ materialIndex ] === undefined ) {\r\n\r\n                hash_map[ materialIndex ] = { 'hash': materialIndex, 'counter': 0 };\r\n\r\n            }\r\n\r\n            groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n            if ( geometry.geometryGroups[ groupHash ] === undefined ) {\r\n\r\n                geometry.geometryGroups[ groupHash ] = { 'faces3': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };\r\n\r\n            }\r\n\r\n            vertices = 3;\r\n\r\n            if ( geometry.geometryGroups[ groupHash ].vertices + vertices > 65535 ) {\r\n\r\n                hash_map[ materialIndex ].counter += 1;\r\n                groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n                if ( geometry.geometryGroups[ groupHash ] === undefined ) {\r\n\r\n                    geometry.geometryGroups[ groupHash ] = { 'faces3': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };\r\n\r\n                }\r\n\r\n            }\r\n\r\n            geometry.geometryGroups[ groupHash ].faces3.push( f );\r\n            geometry.geometryGroups[ groupHash ].vertices += vertices;\r\n\r\n        }\r\n\r\n        geometry.geometryGroupsList = [];\r\n\r\n        for ( var g in geometry.geometryGroups ) {\r\n\r\n            geometry.geometryGroups[ g ].id = _geometryGroupCounter ++;\r\n\r\n            geometry.geometryGroupsList.push( geometry.geometryGroups[ g ] );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Objects refresh\r\n\r\n    this.initWebGLObjects = function ( scene ) {\r\n\r\n        if ( !scene.__webglObjects ) {\r\n\r\n            scene.__webglObjects = [];\r\n            scene.__webglObjectsImmediate = [];\r\n            scene.__webglSprites = [];\r\n            scene.__webglFlares = [];\r\n\r\n        }\r\n\r\n        while ( scene.__objectsAdded.length ) {\r\n\r\n            addObject( scene.__objectsAdded[ 0 ], scene );\r\n            scene.__objectsAdded.splice( 0, 1 );\r\n\r\n        }\r\n\r\n        while ( scene.__objectsRemoved.length ) {\r\n\r\n            removeObject( scene.__objectsRemoved[ 0 ], scene );\r\n            scene.__objectsRemoved.splice( 0, 1 );\r\n\r\n        }\r\n\r\n        // update must be called after objects adding / removal\r\n\r\n        for ( var o = 0, ol = scene.__webglObjects.length; o < ol; o ++ ) {\r\n\r\n            var object = scene.__webglObjects[ o ].object;\r\n\r\n            // TODO: Remove this hack (WebGLRenderer refactoring)\r\n\r\n            if ( object.__webglInit === undefined ) {\r\n\r\n                if ( object.__webglActive !== undefined ) {\r\n\r\n                    removeObject( object, scene );\r\n\r\n                }\r\n\r\n                addObject( object, scene );\r\n\r\n            }\r\n\r\n            updateObject( object );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Objects adding\r\n\r\n    function addObject( object, scene ) {\r\n\r\n        var g, geometry, material, geometryGroup;\r\n\r\n        if ( object.__webglInit === undefined ) {\r\n\r\n            object.__webglInit = true;\r\n\r\n            object._modelViewMatrix = new THREE.Matrix4();\r\n            object._normalMatrix = new THREE.Matrix3();\r\n\r\n            if ( object.geometry !== undefined && object.geometry.__webglInit === undefined ) {\r\n\r\n                object.geometry.__webglInit = true;\r\n                object.geometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n            }\r\n\r\n            geometry = object.geometry;\r\n\r\n            if ( geometry === undefined ) {\r\n\r\n                // fail silently for now\r\n\r\n            } else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n                initDirectBuffers( geometry );\r\n\r\n            } else if ( object instanceof THREE.Mesh ) {\r\n\r\n                material = object.material;\r\n\r\n                if ( geometry.geometryGroups === undefined ) {\r\n\r\n                    sortFacesByMaterial( geometry, material );\r\n\r\n                }\r\n\r\n                // create separate VBOs per geometry chunk\r\n\r\n                for ( g in geometry.geometryGroups ) {\r\n\r\n                    geometryGroup = geometry.geometryGroups[ g ];\r\n\r\n                    // initialise VBO on the first access\r\n\r\n                    if ( ! geometryGroup.__webglVertexBuffer ) {\r\n\r\n                        createMeshBuffers( geometryGroup );\r\n                        initMeshBuffers( geometryGroup, object );\r\n\r\n                        geometry.verticesNeedUpdate = true;\r\n                        geometry.morphTargetsNeedUpdate = true;\r\n                        geometry.elementsNeedUpdate = true;\r\n                        geometry.uvsNeedUpdate = true;\r\n                        geometry.normalsNeedUpdate = true;\r\n                        geometry.tangentsNeedUpdate = true;\r\n                        geometry.colorsNeedUpdate = true;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else if ( object instanceof THREE.Line ) {\r\n\r\n                if ( ! geometry.__webglVertexBuffer ) {\r\n\r\n                    createLineBuffers( geometry );\r\n                    initLineBuffers( geometry, object );\r\n\r\n                    geometry.verticesNeedUpdate = true;\r\n                    geometry.colorsNeedUpdate = true;\r\n                    geometry.lineDistancesNeedUpdate = true;\r\n\r\n                }\r\n\r\n            } else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n                if ( ! geometry.__webglVertexBuffer ) {\r\n\r\n                    createParticleBuffers( geometry );\r\n                    initParticleBuffers( geometry, object );\r\n\r\n                    geometry.verticesNeedUpdate = true;\r\n                    geometry.colorsNeedUpdate = true;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( object.__webglActive === undefined ) {\r\n\r\n            if ( object instanceof THREE.Mesh ) {\r\n\r\n                geometry = object.geometry;\r\n\r\n                if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n                    addBuffer( scene.__webglObjects, geometry, object );\r\n\r\n                } else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n                    for ( g in geometry.geometryGroups ) {\r\n\r\n                        geometryGroup = geometry.geometryGroups[ g ];\r\n\r\n                        addBuffer( scene.__webglObjects, geometryGroup, object );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else if ( object instanceof THREE.Line ||\r\n                object instanceof THREE.ParticleSystem ) {\r\n\r\n                geometry = object.geometry;\r\n                addBuffer( scene.__webglObjects, geometry, object );\r\n\r\n            } else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n                addBufferImmediate( scene.__webglObjectsImmediate, object );\r\n\r\n            } else if ( object instanceof THREE.Sprite ) {\r\n\r\n                scene.__webglSprites.push( object );\r\n\r\n            } else if ( object instanceof THREE.LensFlare ) {\r\n\r\n                scene.__webglFlares.push( object );\r\n\r\n            }\r\n\r\n            object.__webglActive = true;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function addBuffer( objlist, buffer, object ) {\r\n\r\n        objlist.push(\r\n            {\r\n                id: null,\r\n                buffer: buffer,\r\n                object: object,\r\n                opaque: null,\r\n                transparent: null,\r\n                z: 0\r\n            }\r\n        );\r\n\r\n    };\r\n\r\n    function addBufferImmediate( objlist, object ) {\r\n\r\n        objlist.push(\r\n            {\r\n                id: null,\r\n                object: object,\r\n                opaque: null,\r\n                transparent: null,\r\n                z: 0\r\n            }\r\n        );\r\n\r\n    };\r\n\r\n    // Objects updates\r\n\r\n    function updateObject( object ) {\r\n\r\n        var geometry = object.geometry,\r\n            geometryGroup, customAttributesDirty, material;\r\n\r\n        if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n            setDirectBuffers( geometry, _gl.DYNAMIC_DRAW, !geometry.dynamic );\r\n\r\n        } else if ( object instanceof THREE.Mesh ) {\r\n\r\n            // check all geometry groups\r\n\r\n            for( var i = 0, il = geometry.geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n                geometryGroup = geometry.geometryGroupsList[ i ];\r\n\r\n                material = getBufferMaterial( object, geometryGroup );\r\n\r\n                if ( geometry.buffersNeedUpdate ) {\r\n\r\n                    initMeshBuffers( geometryGroup, object );\r\n\r\n                }\r\n\r\n                customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n                if ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\r\n                    geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\r\n                    geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\r\n\r\n                    setMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, !geometry.dynamic, material );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            geometry.verticesNeedUpdate = false;\r\n            geometry.morphTargetsNeedUpdate = false;\r\n            geometry.elementsNeedUpdate = false;\r\n            geometry.uvsNeedUpdate = false;\r\n            geometry.normalsNeedUpdate = false;\r\n            geometry.colorsNeedUpdate = false;\r\n            geometry.tangentsNeedUpdate = false;\r\n\r\n            geometry.buffersNeedUpdate = false;\r\n\r\n            material.attributes && clearCustomAttributes( material );\r\n\r\n        } else if ( object instanceof THREE.Line ) {\r\n\r\n            material = getBufferMaterial( object, geometry );\r\n\r\n            customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n            if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\r\n\r\n                setLineBuffers( geometry, _gl.DYNAMIC_DRAW );\r\n\r\n            }\r\n\r\n            geometry.verticesNeedUpdate = false;\r\n            geometry.colorsNeedUpdate = false;\r\n            geometry.lineDistancesNeedUpdate = false;\r\n\r\n            material.attributes && clearCustomAttributes( material );\r\n\r\n\r\n        } else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n            material = getBufferMaterial( object, geometry );\r\n\r\n            customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n            if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || object.sortParticles || customAttributesDirty ) {\r\n\r\n                setParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\r\n\r\n            }\r\n\r\n            geometry.verticesNeedUpdate = false;\r\n            geometry.colorsNeedUpdate = false;\r\n\r\n            material.attributes && clearCustomAttributes( material );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Objects updates - custom attributes check\r\n\r\n    function areCustomAttributesDirty( material ) {\r\n\r\n        for ( var a in material.attributes ) {\r\n\r\n            if ( material.attributes[ a ].needsUpdate ) return true;\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    };\r\n\r\n    function clearCustomAttributes( material ) {\r\n\r\n        for ( var a in material.attributes ) {\r\n\r\n            material.attributes[ a ].needsUpdate = false;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Objects removal\r\n\r\n    function removeObject( object, scene ) {\r\n\r\n        if ( object instanceof THREE.Mesh  ||\r\n            object instanceof THREE.ParticleSystem ||\r\n            object instanceof THREE.Line ) {\r\n\r\n            removeInstances( scene.__webglObjects, object );\r\n\r\n        } else if ( object instanceof THREE.Sprite ) {\r\n\r\n            removeInstancesDirect( scene.__webglSprites, object );\r\n\r\n        } else if ( object instanceof THREE.LensFlare ) {\r\n\r\n            removeInstancesDirect( scene.__webglFlares, object );\r\n\r\n        } else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n            removeInstances( scene.__webglObjectsImmediate, object );\r\n\r\n        }\r\n\r\n        delete object.__webglActive;\r\n\r\n    };\r\n\r\n    function removeInstances( objlist, object ) {\r\n\r\n        for ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n            if ( objlist[ o ].object === object ) {\r\n\r\n                objlist.splice( o, 1 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function removeInstancesDirect( objlist, object ) {\r\n\r\n        for ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n            if ( objlist[ o ] === object ) {\r\n\r\n                objlist.splice( o, 1 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Materials\r\n\r\n    this.initMaterial = function ( material, lights, fog, object ) {\r\n\r\n        material.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n        var u, a, identifiers, i, parameters, maxLightCount, maxBones, maxShadows, shaderID;\r\n\r\n        if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n            shaderID = 'depth';\r\n\r\n        } else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n            shaderID = 'normal';\r\n\r\n        } else if ( material instanceof THREE.MeshBasicMaterial ) {\r\n\r\n            shaderID = 'basic';\r\n\r\n        } else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n            shaderID = 'lambert';\r\n\r\n        } else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n            shaderID = 'phong';\r\n\r\n        } else if ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n            shaderID = 'basic';\r\n\r\n        } else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n            shaderID = 'dashed';\r\n\r\n        } else if ( material instanceof THREE.ParticleBasicMaterial ) {\r\n\r\n            shaderID = 'particle_basic';\r\n\r\n        }\r\n\r\n        if ( shaderID ) {\r\n\r\n            setMaterialShaders( material, THREE.ShaderLib[ shaderID ] );\r\n\r\n        }\r\n\r\n        // heuristics to create shader parameters according to lights in the scene\r\n        // (not to blow over maxLights budget)\r\n\r\n        maxLightCount = allocateLights( lights );\r\n\r\n        maxShadows = allocateShadows( lights );\r\n\r\n        maxBones = allocateBones( object );\r\n\r\n        parameters = {\r\n\r\n            map: !!material.map,\r\n            envMap: !!material.envMap,\r\n            lightMap: !!material.lightMap,\r\n            bumpMap: !!material.bumpMap,\r\n            normalMap: !!material.normalMap,\r\n            specularMap: !!material.specularMap,\r\n\r\n            vertexColors: material.vertexColors,\r\n\r\n            fog: fog,\r\n            useFog: material.fog,\r\n            fogExp: fog instanceof THREE.FogExp2,\r\n\r\n            sizeAttenuation: material.sizeAttenuation,\r\n\r\n            skinning: material.skinning,\r\n            maxBones: maxBones,\r\n            useVertexTexture: _supportsBoneTextures && object && object.useVertexTexture,\r\n\r\n            morphTargets: material.morphTargets,\r\n            morphNormals: material.morphNormals,\r\n            maxMorphTargets: this.maxMorphTargets,\r\n            maxMorphNormals: this.maxMorphNormals,\r\n\r\n            maxDirLights: maxLightCount.directional,\r\n            maxPointLights: maxLightCount.point,\r\n            maxSpotLights: maxLightCount.spot,\r\n            maxHemiLights: maxLightCount.hemi,\r\n\r\n            maxShadows: maxShadows,\r\n            shadowMapEnabled: this.shadowMapEnabled && object.receiveShadow,\r\n            shadowMapType: this.shadowMapType,\r\n            shadowMapDebug: this.shadowMapDebug,\r\n            shadowMapCascade: this.shadowMapCascade,\r\n\r\n            alphaTest: material.alphaTest,\r\n            metal: material.metal,\r\n            perPixel: material.perPixel,\r\n            wrapAround: material.wrapAround,\r\n            doubleSided: material.side === THREE.DoubleSide,\r\n            flipSided: material.side === THREE.BackSide\r\n\r\n        };\r\n\r\n        material.program = buildProgram( shaderID, material.fragmentShader, material.vertexShader, material.uniforms, material.attributes, material.defines, parameters, material.index0AttributeName );\r\n\r\n        var attributes = material.program.attributes;\r\n\r\n        if ( material.morphTargets ) {\r\n\r\n            material.numSupportedMorphTargets = 0;\r\n\r\n            var id, base = \"morphTarget\";\r\n\r\n            for ( i = 0; i < this.maxMorphTargets; i ++ ) {\r\n\r\n                id = base + i;\r\n\r\n                if ( attributes[ id ] >= 0 ) {\r\n\r\n                    material.numSupportedMorphTargets ++;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( material.morphNormals ) {\r\n\r\n            material.numSupportedMorphNormals = 0;\r\n\r\n            var id, base = \"morphNormal\";\r\n\r\n            for ( i = 0; i < this.maxMorphNormals; i ++ ) {\r\n\r\n                id = base + i;\r\n\r\n                if ( attributes[ id ] >= 0 ) {\r\n\r\n                    material.numSupportedMorphNormals ++;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        material.uniformsList = [];\r\n\r\n        for ( u in material.uniforms ) {\r\n\r\n            material.uniformsList.push( [ material.uniforms[ u ], u ] );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setMaterialShaders( material, shaders ) {\r\n\r\n        material.uniforms = THREE.UniformsUtils.clone( shaders.uniforms );\r\n        material.vertexShader = shaders.vertexShader;\r\n        material.fragmentShader = shaders.fragmentShader;\r\n\r\n    };\r\n\r\n    function setProgram( camera, lights, fog, material, object ) {\r\n\r\n        _usedTextureUnits = 0;\r\n\r\n        if ( material.needsUpdate ) {\r\n\r\n            if ( material.program ) deallocateMaterial( material );\r\n\r\n            _this.initMaterial( material, lights, fog, object );\r\n            material.needsUpdate = false;\r\n\r\n        }\r\n\r\n        if ( material.morphTargets ) {\r\n\r\n            if ( ! object.__webglMorphTargetInfluences ) {\r\n\r\n                object.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var refreshMaterial = false;\r\n\r\n        var program = material.program,\r\n            p_uniforms = program.uniforms,\r\n            m_uniforms = material.uniforms;\r\n\r\n        if ( program !== _currentProgram ) {\r\n\r\n            _gl.useProgram( program );\r\n            _currentProgram = program;\r\n\r\n            refreshMaterial = true;\r\n\r\n        }\r\n\r\n        if ( material.id !== _currentMaterialId ) {\r\n\r\n            _currentMaterialId = material.id;\r\n            refreshMaterial = true;\r\n\r\n        }\r\n\r\n        if ( refreshMaterial || camera !== _currentCamera ) {\r\n\r\n            _gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n            if ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n        }\r\n\r\n        // skinning uniforms must be set even if material didn't change\r\n        // auto-setting of texture unit for bone texture must go before other textures\r\n        // not sure why, but otherwise weird things happen\r\n\r\n        if ( material.skinning ) {\r\n\r\n            if ( _supportsBoneTextures && object.useVertexTexture ) {\r\n\r\n                if ( p_uniforms.boneTexture !== null ) {\r\n\r\n                    var textureUnit = getTextureUnit();\r\n\r\n                    _gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n                    _this.setTexture( object.boneTexture, textureUnit );\r\n\r\n                }\r\n\r\n                if ( p_uniforms.boneTextureWidth !== null ) {\r\n\r\n                    _gl.uniform1i( p_uniforms.boneTextureWidth, object.boneTextureWidth );\r\n\r\n                }\r\n\r\n                if ( p_uniforms.boneTextureHeight !== null ) {\r\n\r\n                    _gl.uniform1i( p_uniforms.boneTextureHeight, object.boneTextureHeight );\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                if ( p_uniforms.boneGlobalMatrices !== null ) {\r\n\r\n                    _gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.boneMatrices );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( refreshMaterial ) {\r\n\r\n            // refresh uniforms common to several materials\r\n\r\n            if ( fog && material.fog ) {\r\n\r\n                refreshUniformsFog( m_uniforms, fog );\r\n\r\n            }\r\n\r\n            if ( material instanceof THREE.MeshPhongMaterial ||\r\n                material instanceof THREE.MeshLambertMaterial ||\r\n                material.lights ) {\r\n\r\n                if ( _lightsNeedUpdate ) {\r\n\r\n                    setupLights( program, lights );\r\n                    _lightsNeedUpdate = false;\r\n\r\n                }\r\n\r\n                refreshUniformsLights( m_uniforms, _lights );\r\n\r\n            }\r\n\r\n            if ( material instanceof THREE.MeshBasicMaterial ||\r\n                material instanceof THREE.MeshLambertMaterial ||\r\n                material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n                refreshUniformsCommon( m_uniforms, material );\r\n\r\n            }\r\n\r\n            // refresh single material specific uniforms\r\n\r\n            if ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n                refreshUniformsLine( m_uniforms, material );\r\n\r\n            } else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n                refreshUniformsLine( m_uniforms, material );\r\n                refreshUniformsDash( m_uniforms, material );\r\n\r\n            } else if ( material instanceof THREE.ParticleBasicMaterial ) {\r\n\r\n                refreshUniformsParticle( m_uniforms, material );\r\n\r\n            } else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n                refreshUniformsPhong( m_uniforms, material );\r\n\r\n            } else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n                refreshUniformsLambert( m_uniforms, material );\r\n\r\n            } else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n                m_uniforms.mNear.value = camera.near;\r\n                m_uniforms.mFar.value = camera.far;\r\n                m_uniforms.opacity.value = material.opacity;\r\n\r\n            } else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n                m_uniforms.opacity.value = material.opacity;\r\n\r\n            }\r\n\r\n            if ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n                refreshUniformsShadow( m_uniforms, lights );\r\n\r\n            }\r\n\r\n            // load common uniforms\r\n\r\n            loadUniformsGeneric( program, material.uniformsList );\r\n\r\n            // load material specific uniforms\r\n            // (shader material also gets them for the sake of genericity)\r\n\r\n            if ( material instanceof THREE.ShaderMaterial ||\r\n                material instanceof THREE.MeshPhongMaterial ||\r\n                material.envMap ) {\r\n\r\n                if ( p_uniforms.cameraPosition !== null ) {\r\n\r\n                    _vector3.getPositionFromMatrix( camera.matrixWorld );\r\n                    _gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( material instanceof THREE.MeshPhongMaterial ||\r\n                material instanceof THREE.MeshLambertMaterial ||\r\n                material instanceof THREE.ShaderMaterial ||\r\n                material.skinning ) {\r\n\r\n                if ( p_uniforms.viewMatrix !== null ) {\r\n\r\n                    _gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        loadUniformsMatrices( p_uniforms, object );\r\n\r\n        if ( p_uniforms.modelMatrix !== null ) {\r\n\r\n            _gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n        }\r\n\r\n        return program;\r\n\r\n    };\r\n\r\n    // Uniforms (refresh uniforms objects)\r\n\r\n    function refreshUniformsCommon ( uniforms, material ) {\r\n\r\n        uniforms.opacity.value = material.opacity;\r\n\r\n        if ( _this.gammaInput ) {\r\n\r\n            uniforms.diffuse.value.copyGammaToLinear( material.color );\r\n\r\n        } else {\r\n\r\n            uniforms.diffuse.value = material.color;\r\n\r\n        }\r\n\r\n        uniforms.map.value = material.map;\r\n        uniforms.lightMap.value = material.lightMap;\r\n        uniforms.specularMap.value = material.specularMap;\r\n\r\n        if ( material.bumpMap ) {\r\n\r\n            uniforms.bumpMap.value = material.bumpMap;\r\n            uniforms.bumpScale.value = material.bumpScale;\r\n\r\n        }\r\n\r\n        if ( material.normalMap ) {\r\n\r\n            uniforms.normalMap.value = material.normalMap;\r\n            uniforms.normalScale.value.copy( material.normalScale );\r\n\r\n        }\r\n\r\n        // uv repeat and offset setting priorities\r\n        //\t1. color map\r\n        //\t2. specular map\r\n        //\t3. normal map\r\n        //\t4. bump map\r\n\r\n        var uvScaleMap;\r\n\r\n        if ( material.map ) {\r\n\r\n            uvScaleMap = material.map;\r\n\r\n        } else if ( material.specularMap ) {\r\n\r\n            uvScaleMap = material.specularMap;\r\n\r\n        } else if ( material.normalMap ) {\r\n\r\n            uvScaleMap = material.normalMap;\r\n\r\n        } else if ( material.bumpMap ) {\r\n\r\n            uvScaleMap = material.bumpMap;\r\n\r\n        }\r\n\r\n        if ( uvScaleMap !== undefined ) {\r\n\r\n            var offset = uvScaleMap.offset;\r\n            var repeat = uvScaleMap.repeat;\r\n\r\n            uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n        }\r\n\r\n        uniforms.envMap.value = material.envMap;\r\n        uniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : -1;\r\n\r\n        if ( _this.gammaInput ) {\r\n\r\n            //uniforms.reflectivity.value = material.reflectivity * material.reflectivity;\r\n            uniforms.reflectivity.value = material.reflectivity;\r\n\r\n        } else {\r\n\r\n            uniforms.reflectivity.value = material.reflectivity;\r\n\r\n        }\r\n\r\n        uniforms.refractionRatio.value = material.refractionRatio;\r\n        uniforms.combine.value = material.combine;\r\n        uniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;\r\n\r\n    };\r\n\r\n    function refreshUniformsLine ( uniforms, material ) {\r\n\r\n        uniforms.diffuse.value = material.color;\r\n        uniforms.opacity.value = material.opacity;\r\n\r\n    };\r\n\r\n    function refreshUniformsDash ( uniforms, material ) {\r\n\r\n        uniforms.dashSize.value = material.dashSize;\r\n        uniforms.totalSize.value = material.dashSize + material.gapSize;\r\n        uniforms.scale.value = material.scale;\r\n\r\n    };\r\n\r\n    function refreshUniformsParticle ( uniforms, material ) {\r\n\r\n        uniforms.psColor.value = material.color;\r\n        uniforms.opacity.value = material.opacity;\r\n        uniforms.size.value = material.size;\r\n        uniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n        uniforms.map.value = material.map;\r\n\r\n    };\r\n\r\n    function refreshUniformsFog ( uniforms, fog ) {\r\n\r\n        uniforms.fogColor.value = fog.color;\r\n\r\n        if ( fog instanceof THREE.Fog ) {\r\n\r\n            uniforms.fogNear.value = fog.near;\r\n            uniforms.fogFar.value = fog.far;\r\n\r\n        } else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n            uniforms.fogDensity.value = fog.density;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function refreshUniformsPhong ( uniforms, material ) {\r\n\r\n        uniforms.shininess.value = material.shininess;\r\n\r\n        if ( _this.gammaInput ) {\r\n\r\n            uniforms.ambient.value.copyGammaToLinear( material.ambient );\r\n            uniforms.emissive.value.copyGammaToLinear( material.emissive );\r\n            uniforms.specular.value.copyGammaToLinear( material.specular );\r\n\r\n        } else {\r\n\r\n            uniforms.ambient.value = material.ambient;\r\n            uniforms.emissive.value = material.emissive;\r\n            uniforms.specular.value = material.specular;\r\n\r\n        }\r\n\r\n        if ( material.wrapAround ) {\r\n\r\n            uniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function refreshUniformsLambert ( uniforms, material ) {\r\n\r\n        if ( _this.gammaInput ) {\r\n\r\n            uniforms.ambient.value.copyGammaToLinear( material.ambient );\r\n            uniforms.emissive.value.copyGammaToLinear( material.emissive );\r\n\r\n        } else {\r\n\r\n            uniforms.ambient.value = material.ambient;\r\n            uniforms.emissive.value = material.emissive;\r\n\r\n        }\r\n\r\n        if ( material.wrapAround ) {\r\n\r\n            uniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function refreshUniformsLights ( uniforms, lights ) {\r\n\r\n        uniforms.ambientLightColor.value = lights.ambient;\r\n\r\n        uniforms.directionalLightColor.value = lights.directional.colors;\r\n        uniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n        uniforms.pointLightColor.value = lights.point.colors;\r\n        uniforms.pointLightPosition.value = lights.point.positions;\r\n        uniforms.pointLightDistance.value = lights.point.distances;\r\n\r\n        uniforms.spotLightColor.value = lights.spot.colors;\r\n        uniforms.spotLightPosition.value = lights.spot.positions;\r\n        uniforms.spotLightDistance.value = lights.spot.distances;\r\n        uniforms.spotLightDirection.value = lights.spot.directions;\r\n        uniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n        uniforms.spotLightExponent.value = lights.spot.exponents;\r\n\r\n        uniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n        uniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n        uniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n    };\r\n\r\n    function refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n        if ( uniforms.shadowMatrix ) {\r\n\r\n            var j = 0;\r\n\r\n            for ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n                var light = lights[ i ];\r\n\r\n                if ( ! light.castShadow ) continue;\r\n\r\n                if ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\r\n\r\n                    uniforms.shadowMap.value[ j ] = light.shadowMap;\r\n                    uniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n                    uniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n                    uniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n                    uniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n                    j ++;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Uniforms (load to GPU)\r\n\r\n    function loadUniformsMatrices ( uniforms, object ) {\r\n\r\n        _gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\r\n\r\n        if ( uniforms.normalMatrix ) {\r\n\r\n            _gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getTextureUnit() {\r\n\r\n        var textureUnit = _usedTextureUnits;\r\n\r\n        if ( textureUnit >= _maxTextures ) {\r\n\r\n            console.warn( \"WebGLRenderer: trying to use \" + textureUnit + \" texture units while this GPU supports only \" + _maxTextures );\r\n\r\n        }\r\n\r\n        _usedTextureUnits += 1;\r\n\r\n        return textureUnit;\r\n\r\n    };\r\n\r\n    function loadUniformsGeneric ( program, uniforms ) {\r\n\r\n        var uniform, value, type, location, texture, textureUnit, i, il, j, jl, offset;\r\n\r\n        for ( j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n            location = program.uniforms[ uniforms[ j ][ 1 ] ];\r\n            if ( !location ) continue;\r\n\r\n            uniform = uniforms[ j ][ 0 ];\r\n\r\n            type = uniform.type;\r\n            value = uniform.value;\r\n\r\n            if ( type === \"i\" ) { // single integer\r\n\r\n                _gl.uniform1i( location, value );\r\n\r\n            } else if ( type === \"f\" ) { // single float\r\n\r\n                _gl.uniform1f( location, value );\r\n\r\n            } else if ( type === \"v2\" ) { // single THREE.Vector2\r\n\r\n                _gl.uniform2f( location, value.x, value.y );\r\n\r\n            } else if ( type === \"v3\" ) { // single THREE.Vector3\r\n\r\n                _gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n            } else if ( type === \"v4\" ) { // single THREE.Vector4\r\n\r\n                _gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n            } else if ( type === \"c\" ) { // single THREE.Color\r\n\r\n                _gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n            } else if ( type === \"iv1\" ) { // flat array of integers (JS or typed array)\r\n\r\n                _gl.uniform1iv( location, value );\r\n\r\n            } else if ( type === \"iv\" ) { // flat array of integers with 3 x N size (JS or typed array)\r\n\r\n                _gl.uniform3iv( location, value );\r\n\r\n            } else if ( type === \"fv1\" ) { // flat array of floats (JS or typed array)\r\n\r\n                _gl.uniform1fv( location, value );\r\n\r\n            } else if ( type === \"fv\" ) { // flat array of floats with 3 x N size (JS or typed array)\r\n\r\n                _gl.uniform3fv( location, value );\r\n\r\n            } else if ( type === \"v2v\" ) { // array of THREE.Vector2\r\n\r\n                if ( uniform._array === undefined ) {\r\n\r\n                    uniform._array = new Float32Array( 2 * value.length );\r\n\r\n                }\r\n\r\n                for ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n                    offset = i * 2;\r\n\r\n                    uniform._array[ offset ] \t = value[ i ].x;\r\n                    uniform._array[ offset + 1 ] = value[ i ].y;\r\n\r\n                }\r\n\r\n                _gl.uniform2fv( location, uniform._array );\r\n\r\n            } else if ( type === \"v3v\" ) { // array of THREE.Vector3\r\n\r\n                if ( uniform._array === undefined ) {\r\n\r\n                    uniform._array = new Float32Array( 3 * value.length );\r\n\r\n                }\r\n\r\n                for ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n                    offset = i * 3;\r\n\r\n                    uniform._array[ offset ] \t = value[ i ].x;\r\n                    uniform._array[ offset + 1 ] = value[ i ].y;\r\n                    uniform._array[ offset + 2 ] = value[ i ].z;\r\n\r\n                }\r\n\r\n                _gl.uniform3fv( location, uniform._array );\r\n\r\n            } else if ( type === \"v4v\" ) { // array of THREE.Vector4\r\n\r\n                if ( uniform._array === undefined ) {\r\n\r\n                    uniform._array = new Float32Array( 4 * value.length );\r\n\r\n                }\r\n\r\n                for ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n                    offset = i * 4;\r\n\r\n                    uniform._array[ offset ] \t = value[ i ].x;\r\n                    uniform._array[ offset + 1 ] = value[ i ].y;\r\n                    uniform._array[ offset + 2 ] = value[ i ].z;\r\n                    uniform._array[ offset + 3 ] = value[ i ].w;\r\n\r\n                }\r\n\r\n                _gl.uniform4fv( location, uniform._array );\r\n\r\n            } else if ( type === \"m4\") { // single THREE.Matrix4\r\n\r\n                if ( uniform._array === undefined ) {\r\n\r\n                    uniform._array = new Float32Array( 16 );\r\n\r\n                }\r\n\r\n                value.flattenToArray( uniform._array );\r\n                _gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n            } else if ( type === \"m4v\" ) { // array of THREE.Matrix4\r\n\r\n                if ( uniform._array === undefined ) {\r\n\r\n                    uniform._array = new Float32Array( 16 * value.length );\r\n\r\n                }\r\n\r\n                for ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n                    value[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n                }\r\n\r\n                _gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n            } else if ( type === \"t\" ) { // single THREE.Texture (2d or cube)\r\n\r\n                texture = value;\r\n                textureUnit = getTextureUnit();\r\n\r\n                _gl.uniform1i( location, textureUnit );\r\n\r\n                if ( !texture ) continue;\r\n\r\n                if ( texture.image instanceof Array && texture.image.length === 6 ) {\r\n\r\n                    setCubeTexture( texture, textureUnit );\r\n\r\n                } else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n                    setCubeTextureDynamic( texture, textureUnit );\r\n\r\n                } else {\r\n\r\n                    _this.setTexture( texture, textureUnit );\r\n\r\n                }\r\n\r\n            } else if ( type === \"tv\" ) { // array of THREE.Texture (2d)\r\n\r\n                if ( uniform._array === undefined ) {\r\n\r\n                    uniform._array = [];\r\n\r\n                }\r\n\r\n                for( i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n                    uniform._array[ i ] = getTextureUnit();\r\n\r\n                }\r\n\r\n                _gl.uniform1iv( location, uniform._array );\r\n\r\n                for( i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n                    texture = uniform.value[ i ];\r\n                    textureUnit = uniform._array[ i ];\r\n\r\n                    if ( !texture ) continue;\r\n\r\n                    _this.setTexture( texture, textureUnit );\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                console.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setupMatrices ( object, camera ) {\r\n\r\n        object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n        object._normalMatrix.getNormalMatrix( object._modelViewMatrix );\r\n\r\n    };\r\n\r\n    //\r\n\r\n    function setColorGamma( array, offset, color, intensitySq ) {\r\n\r\n        array[ offset ]     = color.r * color.r * intensitySq;\r\n        array[ offset + 1 ] = color.g * color.g * intensitySq;\r\n        array[ offset + 2 ] = color.b * color.b * intensitySq;\r\n\r\n    };\r\n\r\n    function setColorLinear( array, offset, color, intensity ) {\r\n\r\n        array[ offset ]     = color.r * intensity;\r\n        array[ offset + 1 ] = color.g * intensity;\r\n        array[ offset + 2 ] = color.b * intensity;\r\n\r\n    };\r\n\r\n    function setupLights ( program, lights ) {\r\n\r\n        var l, ll, light, n,\r\n            r = 0, g = 0, b = 0,\r\n            color, skyColor, groundColor,\r\n            intensity,  intensitySq,\r\n            position,\r\n            distance,\r\n\r\n            zlights = _lights,\r\n\r\n            dirColors = zlights.directional.colors,\r\n            dirPositions = zlights.directional.positions,\r\n\r\n            pointColors = zlights.point.colors,\r\n            pointPositions = zlights.point.positions,\r\n            pointDistances = zlights.point.distances,\r\n\r\n            spotColors = zlights.spot.colors,\r\n            spotPositions = zlights.spot.positions,\r\n            spotDistances = zlights.spot.distances,\r\n            spotDirections = zlights.spot.directions,\r\n            spotAnglesCos = zlights.spot.anglesCos,\r\n            spotExponents = zlights.spot.exponents,\r\n\r\n            hemiSkyColors = zlights.hemi.skyColors,\r\n            hemiGroundColors = zlights.hemi.groundColors,\r\n            hemiPositions = zlights.hemi.positions,\r\n\r\n            dirLength = 0,\r\n            pointLength = 0,\r\n            spotLength = 0,\r\n            hemiLength = 0,\r\n\r\n            dirCount = 0,\r\n            pointCount = 0,\r\n            spotCount = 0,\r\n            hemiCount = 0,\r\n\r\n            dirOffset = 0,\r\n            pointOffset = 0,\r\n            spotOffset = 0,\r\n            hemiOffset = 0;\r\n\r\n        for ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n            light = lights[ l ];\r\n\r\n            if ( light.onlyShadow ) continue;\r\n\r\n            color = light.color;\r\n            intensity = light.intensity;\r\n            distance = light.distance;\r\n\r\n            if ( light instanceof THREE.AmbientLight ) {\r\n\r\n                if ( ! light.visible ) continue;\r\n\r\n                if ( _this.gammaInput ) {\r\n\r\n                    r += color.r * color.r;\r\n                    g += color.g * color.g;\r\n                    b += color.b * color.b;\r\n\r\n                } else {\r\n\r\n                    r += color.r;\r\n                    g += color.g;\r\n                    b += color.b;\r\n\r\n                }\r\n\r\n            } else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n                dirCount += 1;\r\n\r\n                if ( ! light.visible ) continue;\r\n\r\n                _direction.getPositionFromMatrix( light.matrixWorld );\r\n                _vector3.getPositionFromMatrix( light.target.matrixWorld );\r\n                _direction.sub( _vector3 );\r\n                _direction.normalize();\r\n\r\n                // skip lights with undefined direction\r\n                // these create troubles in OpenGL (making pixel black)\r\n\r\n                if ( _direction.x === 0 && _direction.y === 0 && _direction.z === 0 ) continue;\r\n\r\n                dirOffset = dirLength * 3;\r\n\r\n                dirPositions[ dirOffset ]     = _direction.x;\r\n                dirPositions[ dirOffset + 1 ] = _direction.y;\r\n                dirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n                if ( _this.gammaInput ) {\r\n\r\n                    setColorGamma( dirColors, dirOffset, color, intensity * intensity );\r\n\r\n                } else {\r\n\r\n                    setColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n                }\r\n\r\n                dirLength += 1;\r\n\r\n            } else if ( light instanceof THREE.PointLight ) {\r\n\r\n                pointCount += 1;\r\n\r\n                if ( ! light.visible ) continue;\r\n\r\n                pointOffset = pointLength * 3;\r\n\r\n                if ( _this.gammaInput ) {\r\n\r\n                    setColorGamma( pointColors, pointOffset, color, intensity * intensity );\r\n\r\n                } else {\r\n\r\n                    setColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n                }\r\n\r\n                _vector3.getPositionFromMatrix( light.matrixWorld );\r\n\r\n                pointPositions[ pointOffset ]     = _vector3.x;\r\n                pointPositions[ pointOffset + 1 ] = _vector3.y;\r\n                pointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n                pointDistances[ pointLength ] = distance;\r\n\r\n                pointLength += 1;\r\n\r\n            } else if ( light instanceof THREE.SpotLight ) {\r\n\r\n                spotCount += 1;\r\n\r\n                if ( ! light.visible ) continue;\r\n\r\n                spotOffset = spotLength * 3;\r\n\r\n                if ( _this.gammaInput ) {\r\n\r\n                    setColorGamma( spotColors, spotOffset, color, intensity * intensity );\r\n\r\n                } else {\r\n\r\n                    setColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n                }\r\n\r\n                _vector3.getPositionFromMatrix( light.matrixWorld );\r\n\r\n                spotPositions[ spotOffset ]     = _vector3.x;\r\n                spotPositions[ spotOffset + 1 ] = _vector3.y;\r\n                spotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n                spotDistances[ spotLength ] = distance;\r\n\r\n                _direction.copy( _vector3 );\r\n                _vector3.getPositionFromMatrix( light.target.matrixWorld );\r\n                _direction.sub( _vector3 );\r\n                _direction.normalize();\r\n\r\n                spotDirections[ spotOffset ]     = _direction.x;\r\n                spotDirections[ spotOffset + 1 ] = _direction.y;\r\n                spotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n                spotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n                spotExponents[ spotLength ] = light.exponent;\r\n\r\n                spotLength += 1;\r\n\r\n            } else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n                hemiCount += 1;\r\n\r\n                if ( ! light.visible ) continue;\r\n\r\n                _direction.getPositionFromMatrix( light.matrixWorld );\r\n                _direction.normalize();\r\n\r\n                // skip lights with undefined direction\r\n                // these create troubles in OpenGL (making pixel black)\r\n\r\n                if ( _direction.x === 0 && _direction.y === 0 && _direction.z === 0 ) continue;\r\n\r\n                hemiOffset = hemiLength * 3;\r\n\r\n                hemiPositions[ hemiOffset ]     = _direction.x;\r\n                hemiPositions[ hemiOffset + 1 ] = _direction.y;\r\n                hemiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n                skyColor = light.color;\r\n                groundColor = light.groundColor;\r\n\r\n                if ( _this.gammaInput ) {\r\n\r\n                    intensitySq = intensity * intensity;\r\n\r\n                    setColorGamma( hemiSkyColors, hemiOffset, skyColor, intensitySq );\r\n                    setColorGamma( hemiGroundColors, hemiOffset, groundColor, intensitySq );\r\n\r\n                } else {\r\n\r\n                    setColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n                    setColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n                }\r\n\r\n                hemiLength += 1;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // null eventual remains from removed lights\r\n        // (this is to avoid if in shader)\r\n\r\n        for ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n        for ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n        for ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n        for ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n        for ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n        zlights.directional.length = dirLength;\r\n        zlights.point.length = pointLength;\r\n        zlights.spot.length = spotLength;\r\n        zlights.hemi.length = hemiLength;\r\n\r\n        zlights.ambient[ 0 ] = r;\r\n        zlights.ambient[ 1 ] = g;\r\n        zlights.ambient[ 2 ] = b;\r\n\r\n    };\r\n\r\n    // GL state setting\r\n\r\n    this.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n        if ( cullFace === THREE.CullFaceNone ) {\r\n\r\n            _gl.disable( _gl.CULL_FACE );\r\n\r\n        } else {\r\n\r\n            if ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n                _gl.frontFace( _gl.CW );\r\n\r\n            } else {\r\n\r\n                _gl.frontFace( _gl.CCW );\r\n\r\n            }\r\n\r\n            if ( cullFace === THREE.CullFaceBack ) {\r\n\r\n                _gl.cullFace( _gl.BACK );\r\n\r\n            } else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n                _gl.cullFace( _gl.FRONT );\r\n\r\n            } else {\r\n\r\n                _gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n            }\r\n\r\n            _gl.enable( _gl.CULL_FACE );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.setMaterialFaces = function ( material ) {\r\n\r\n        var doubleSided = material.side === THREE.DoubleSide;\r\n        var flipSided = material.side === THREE.BackSide;\r\n\r\n        if ( _oldDoubleSided !== doubleSided ) {\r\n\r\n            if ( doubleSided ) {\r\n\r\n                _gl.disable( _gl.CULL_FACE );\r\n\r\n            } else {\r\n\r\n                _gl.enable( _gl.CULL_FACE );\r\n\r\n            }\r\n\r\n            _oldDoubleSided = doubleSided;\r\n\r\n        }\r\n\r\n        if ( _oldFlipSided !== flipSided ) {\r\n\r\n            if ( flipSided ) {\r\n\r\n                _gl.frontFace( _gl.CW );\r\n\r\n            } else {\r\n\r\n                _gl.frontFace( _gl.CCW );\r\n\r\n            }\r\n\r\n            _oldFlipSided = flipSided;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.setDepthTest = function ( depthTest ) {\r\n\r\n        if ( _oldDepthTest !== depthTest ) {\r\n\r\n            if ( depthTest ) {\r\n\r\n                _gl.enable( _gl.DEPTH_TEST );\r\n\r\n            } else {\r\n\r\n                _gl.disable( _gl.DEPTH_TEST );\r\n\r\n            }\r\n\r\n            _oldDepthTest = depthTest;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.setDepthWrite = function ( depthWrite ) {\r\n\r\n        if ( _oldDepthWrite !== depthWrite ) {\r\n\r\n            _gl.depthMask( depthWrite );\r\n            _oldDepthWrite = depthWrite;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setLineWidth ( width ) {\r\n\r\n        if ( width !== _oldLineWidth ) {\r\n\r\n            _gl.lineWidth( width );\r\n\r\n            _oldLineWidth = width;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setPolygonOffset ( polygonoffset, factor, units ) {\r\n\r\n        if ( _oldPolygonOffset !== polygonoffset ) {\r\n\r\n            if ( polygonoffset ) {\r\n\r\n                _gl.enable( _gl.POLYGON_OFFSET_FILL );\r\n\r\n            } else {\r\n\r\n                _gl.disable( _gl.POLYGON_OFFSET_FILL );\r\n\r\n            }\r\n\r\n            _oldPolygonOffset = polygonoffset;\r\n\r\n        }\r\n\r\n        if ( polygonoffset && ( _oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units ) ) {\r\n\r\n            _gl.polygonOffset( factor, units );\r\n\r\n            _oldPolygonOffsetFactor = factor;\r\n            _oldPolygonOffsetUnits = units;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {\r\n\r\n        if ( blending !== _oldBlending ) {\r\n\r\n            if ( blending === THREE.NoBlending ) {\r\n\r\n                _gl.disable( _gl.BLEND );\r\n\r\n            } else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n                _gl.enable( _gl.BLEND );\r\n                _gl.blendEquation( _gl.FUNC_ADD );\r\n                _gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE );\r\n\r\n            } else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n                // TODO: Find blendFuncSeparate() combination\r\n                _gl.enable( _gl.BLEND );\r\n                _gl.blendEquation( _gl.FUNC_ADD );\r\n                _gl.blendFunc( _gl.ZERO, _gl.ONE_MINUS_SRC_COLOR );\r\n\r\n            } else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n                // TODO: Find blendFuncSeparate() combination\r\n                _gl.enable( _gl.BLEND );\r\n                _gl.blendEquation( _gl.FUNC_ADD );\r\n                _gl.blendFunc( _gl.ZERO, _gl.SRC_COLOR );\r\n\r\n            } else if ( blending === THREE.CustomBlending ) {\r\n\r\n                _gl.enable( _gl.BLEND );\r\n\r\n            } else {\r\n\r\n                _gl.enable( _gl.BLEND );\r\n                _gl.blendEquationSeparate( _gl.FUNC_ADD, _gl.FUNC_ADD );\r\n                _gl.blendFuncSeparate( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n            }\r\n\r\n            _oldBlending = blending;\r\n\r\n        }\r\n\r\n        if ( blending === THREE.CustomBlending ) {\r\n\r\n            if ( blendEquation !== _oldBlendEquation ) {\r\n\r\n                _gl.blendEquation( paramThreeToGL( blendEquation ) );\r\n\r\n                _oldBlendEquation = blendEquation;\r\n\r\n            }\r\n\r\n            if ( blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst ) {\r\n\r\n                _gl.blendFunc( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ) );\r\n\r\n                _oldBlendSrc = blendSrc;\r\n                _oldBlendDst = blendDst;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            _oldBlendEquation = null;\r\n            _oldBlendSrc = null;\r\n            _oldBlendDst = null;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Defines\r\n\r\n    function generateDefines ( defines ) {\r\n\r\n        var value, chunk, chunks = [];\r\n\r\n        for ( var d in defines ) {\r\n\r\n            value = defines[ d ];\r\n            if ( value === false ) continue;\r\n\r\n            chunk = \"#define \" + d + \" \" + value;\r\n            chunks.push( chunk );\r\n\r\n        }\r\n\r\n        return chunks.join( \"\\n\" );\r\n\r\n    };\r\n\r\n    // Shaders\r\n\r\n    function buildProgram ( shaderID, fragmentShader, vertexShader, uniforms, attributes, defines, parameters, index0AttributeName ) {\r\n\r\n        var p, pl, d, program, code;\r\n        var chunks = [];\r\n\r\n        // Generate code\r\n\r\n        if ( shaderID ) {\r\n\r\n            chunks.push( shaderID );\r\n\r\n        } else {\r\n\r\n            chunks.push( fragmentShader );\r\n            chunks.push( vertexShader );\r\n\r\n        }\r\n\r\n        for ( d in defines ) {\r\n\r\n            chunks.push( d );\r\n            chunks.push( defines[ d ] );\r\n\r\n        }\r\n\r\n        for ( p in parameters ) {\r\n\r\n            chunks.push( p );\r\n            chunks.push( parameters[ p ] );\r\n\r\n        }\r\n\r\n        code = chunks.join();\r\n\r\n        // Check if code has been already compiled\r\n\r\n        for ( p = 0, pl = _programs.length; p < pl; p ++ ) {\r\n\r\n            var programInfo = _programs[ p ];\r\n\r\n            if ( programInfo.code === code ) {\r\n\r\n                // console.log( \"Code already compiled.\" /*: \\n\\n\" + code*/ );\r\n\r\n                programInfo.usedTimes ++;\r\n\r\n                return programInfo.program;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var shadowMapTypeDefine = \"SHADOWMAP_TYPE_BASIC\";\r\n\r\n        if ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n            shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF\";\r\n\r\n        } else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n            shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF_SOFT\";\r\n\r\n        }\r\n\r\n        // console.log( \"building new program \" );\r\n\r\n        //\r\n\r\n        var customDefines = generateDefines( defines );\r\n\r\n        //\r\n\r\n        program = _gl.createProgram();\r\n\r\n        var prefix_vertex = [\r\n\r\n            \"precision \" + _precision + \" float;\",\r\n            \"precision \" + _precision + \" int;\",\r\n\r\n            customDefines,\r\n\r\n            _supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\r\n\r\n            _this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\r\n            _this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\r\n            _this.physicallyBasedShading ? \"#define PHYSICALLY_BASED_SHADING\" : \"\",\r\n\r\n            \"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\r\n            \"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\r\n            \"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\r\n            \"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\r\n\r\n            \"#define MAX_SHADOWS \" + parameters.maxShadows,\r\n\r\n            \"#define MAX_BONES \" + parameters.maxBones,\r\n\r\n            parameters.map ? \"#define USE_MAP\" : \"\",\r\n            parameters.envMap ? \"#define USE_ENVMAP\" : \"\",\r\n            parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\r\n            parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\r\n            parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\r\n            parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\r\n            parameters.vertexColors ? \"#define USE_COLOR\" : \"\",\r\n\r\n            parameters.skinning ? \"#define USE_SKINNING\" : \"\",\r\n            parameters.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\r\n\r\n            parameters.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\r\n            parameters.morphNormals ? \"#define USE_MORPHNORMALS\" : \"\",\r\n            parameters.perPixel ? \"#define PHONG_PER_PIXEL\" : \"\",\r\n            parameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\r\n            parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\r\n            parameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\r\n\r\n            parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\r\n            parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\r\n            parameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\r\n            parameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\r\n\r\n            parameters.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\r\n\r\n            \"uniform mat4 modelMatrix;\",\r\n            \"uniform mat4 modelViewMatrix;\",\r\n            \"uniform mat4 projectionMatrix;\",\r\n            \"uniform mat4 viewMatrix;\",\r\n            \"uniform mat3 normalMatrix;\",\r\n            \"uniform vec3 cameraPosition;\",\r\n\r\n            \"attribute vec3 position;\",\r\n            \"attribute vec3 normal;\",\r\n            \"attribute vec2 uv;\",\r\n            \"attribute vec2 uv2;\",\r\n\r\n            \"#ifdef USE_COLOR\",\r\n\r\n            \"attribute vec3 color;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#ifdef USE_MORPHTARGETS\",\r\n\r\n            \"attribute vec3 morphTarget0;\",\r\n            \"attribute vec3 morphTarget1;\",\r\n            \"attribute vec3 morphTarget2;\",\r\n            \"attribute vec3 morphTarget3;\",\r\n\r\n            \"#ifdef USE_MORPHNORMALS\",\r\n\r\n            \"attribute vec3 morphNormal0;\",\r\n            \"attribute vec3 morphNormal1;\",\r\n            \"attribute vec3 morphNormal2;\",\r\n            \"attribute vec3 morphNormal3;\",\r\n\r\n            \"#else\",\r\n\r\n            \"attribute vec3 morphTarget4;\",\r\n            \"attribute vec3 morphTarget5;\",\r\n            \"attribute vec3 morphTarget6;\",\r\n            \"attribute vec3 morphTarget7;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#endif\",\r\n\r\n            \"#ifdef USE_SKINNING\",\r\n\r\n            \"attribute vec4 skinIndex;\",\r\n            \"attribute vec4 skinWeight;\",\r\n\r\n            \"#endif\",\r\n\r\n            \"\"\r\n\r\n        ].join(\"\\n\");\r\n\r\n        var prefix_fragment = [\r\n\r\n            \"precision \" + _precision + \" float;\",\r\n            \"precision \" + _precision + \" int;\",\r\n\r\n            ( parameters.bumpMap || parameters.normalMap ) ? \"#extension GL_OES_standard_derivatives : enable\" : \"\",\r\n\r\n            customDefines,\r\n\r\n            \"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\r\n            \"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\r\n            \"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\r\n            \"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\r\n\r\n            \"#define MAX_SHADOWS \" + parameters.maxShadows,\r\n\r\n            parameters.alphaTest ? \"#define ALPHATEST \" + parameters.alphaTest: \"\",\r\n\r\n            _this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\r\n            _this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\r\n            _this.physicallyBasedShading ? \"#define PHYSICALLY_BASED_SHADING\" : \"\",\r\n\r\n            ( parameters.useFog && parameters.fog ) ? \"#define USE_FOG\" : \"\",\r\n            ( parameters.useFog && parameters.fogExp ) ? \"#define FOG_EXP2\" : \"\",\r\n\r\n            parameters.map ? \"#define USE_MAP\" : \"\",\r\n            parameters.envMap ? \"#define USE_ENVMAP\" : \"\",\r\n            parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\r\n            parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\r\n            parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\r\n            parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\r\n            parameters.vertexColors ? \"#define USE_COLOR\" : \"\",\r\n\r\n            parameters.metal ? \"#define METAL\" : \"\",\r\n            parameters.perPixel ? \"#define PHONG_PER_PIXEL\" : \"\",\r\n            parameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\r\n            parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\r\n            parameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\r\n\r\n            parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\r\n            parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\r\n            parameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\r\n            parameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\r\n\r\n            \"uniform mat4 viewMatrix;\",\r\n            \"uniform vec3 cameraPosition;\",\r\n            \"\"\r\n\r\n        ].join(\"\\n\");\r\n\r\n        var glVertexShader = getShader( \"vertex\", prefix_vertex + vertexShader );\r\n        var glFragmentShader = getShader( \"fragment\", prefix_fragment + fragmentShader );\r\n\r\n        _gl.attachShader( program, glVertexShader );\r\n        _gl.attachShader( program, glFragmentShader );\r\n\r\n        //Force a particular attribute to index 0.\r\n        // because potentially expensive emulation is done by browser if attribute 0 is disabled.\r\n        //And, color, for example is often automatically bound to index 0 so disabling it\r\n        if ( index0AttributeName ) {\r\n            _gl.bindAttribLocation( program, 0, index0AttributeName );\r\n        }\r\n\r\n        _gl.linkProgram( program );\r\n\r\n        if ( !_gl.getProgramParameter( program, _gl.LINK_STATUS ) ) {\r\n\r\n            console.error( \"Could not initialise shader\\n\" + \"VALIDATE_STATUS: \" + _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ) + \", gl error [\" + _gl.getError() + \"]\" );\r\n            console.error( \"Program Info Log: \" + _gl.getProgramInfoLog( program ) );\r\n        }\r\n\r\n        // clean up\r\n\r\n        _gl.deleteShader( glFragmentShader );\r\n        _gl.deleteShader( glVertexShader );\r\n\r\n        // console.log( prefix_fragment + fragmentShader );\r\n        // console.log( prefix_vertex + vertexShader );\r\n\r\n        program.uniforms = {};\r\n        program.attributes = {};\r\n\r\n        var identifiers, u, a, i;\r\n\r\n        // cache uniform locations\r\n\r\n        identifiers = [\r\n\r\n            'viewMatrix', 'modelViewMatrix', 'projectionMatrix', 'normalMatrix', 'modelMatrix', 'cameraPosition',\r\n            'morphTargetInfluences'\r\n\r\n        ];\r\n\r\n        if ( parameters.useVertexTexture ) {\r\n\r\n            identifiers.push( 'boneTexture' );\r\n            identifiers.push( 'boneTextureWidth' );\r\n            identifiers.push( 'boneTextureHeight' );\r\n\r\n        } else {\r\n\r\n            identifiers.push( 'boneGlobalMatrices' );\r\n\r\n        }\r\n\r\n        for ( u in uniforms ) {\r\n\r\n            identifiers.push( u );\r\n\r\n        }\r\n\r\n        cacheUniformLocations( program, identifiers );\r\n\r\n        // cache attributes locations\r\n\r\n        identifiers = [\r\n\r\n            \"position\", \"normal\", \"uv\", \"uv2\", \"tangent\", \"color\",\r\n            \"skinIndex\", \"skinWeight\", \"lineDistance\"\r\n\r\n        ];\r\n\r\n        for ( i = 0; i < parameters.maxMorphTargets; i ++ ) {\r\n\r\n            identifiers.push( \"morphTarget\" + i );\r\n\r\n        }\r\n\r\n        for ( i = 0; i < parameters.maxMorphNormals; i ++ ) {\r\n\r\n            identifiers.push( \"morphNormal\" + i );\r\n\r\n        }\r\n\r\n        for ( a in attributes ) {\r\n\r\n            identifiers.push( a );\r\n\r\n        }\r\n\r\n        cacheAttributeLocations( program, identifiers );\r\n\r\n        program.id = _programs_counter ++;\r\n\r\n        _programs.push( { program: program, code: code, usedTimes: 1 } );\r\n\r\n        _this.info.memory.programs = _programs.length;\r\n\r\n        return program;\r\n\r\n    };\r\n\r\n    // Shader parameters cache\r\n\r\n    function cacheUniformLocations ( program, identifiers ) {\r\n\r\n        var i, l, id;\r\n\r\n        for( i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n            id = identifiers[ i ];\r\n            program.uniforms[ id ] = _gl.getUniformLocation( program, id );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function cacheAttributeLocations ( program, identifiers ) {\r\n\r\n        var i, l, id;\r\n\r\n        for( i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n            id = identifiers[ i ];\r\n            program.attributes[ id ] = _gl.getAttribLocation( program, id );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function addLineNumbers ( string ) {\r\n\r\n        var chunks = string.split( \"\\n\" );\r\n\r\n        for ( var i = 0, il = chunks.length; i < il; i ++ ) {\r\n\r\n            // Chrome reports shader errors on lines\r\n            // starting counting from 1\r\n\r\n            chunks[ i ] = ( i + 1 ) + \": \" + chunks[ i ];\r\n\r\n        }\r\n\r\n        return chunks.join( \"\\n\" );\r\n\r\n    };\r\n\r\n    function getShader ( type, string ) {\r\n\r\n        var shader;\r\n\r\n        if ( type === \"fragment\" ) {\r\n\r\n            shader = _gl.createShader( _gl.FRAGMENT_SHADER );\r\n\r\n        } else if ( type === \"vertex\" ) {\r\n\r\n            shader = _gl.createShader( _gl.VERTEX_SHADER );\r\n\r\n        }\r\n\r\n        _gl.shaderSource( shader, string );\r\n        _gl.compileShader( shader );\r\n\r\n        if ( !_gl.getShaderParameter( shader, _gl.COMPILE_STATUS ) ) {\r\n\r\n            console.error( _gl.getShaderInfoLog( shader ) );\r\n            console.error( addLineNumbers( string ) );\r\n            return null;\r\n\r\n        }\r\n\r\n        return shader;\r\n\r\n    };\r\n\r\n    // Textures\r\n\r\n\r\n    function isPowerOfTwo ( value ) {\r\n\r\n        return ( value & ( value - 1 ) ) === 0;\r\n\r\n    };\r\n\r\n    function setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n        if ( isImagePowerOfTwo ) {\r\n\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n        } else {\r\n\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n            _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n        }\r\n\r\n        if ( _glExtensionTextureFilterAnisotropic && texture.type !== THREE.FloatType ) {\r\n\r\n            if ( texture.anisotropy > 1 || texture.__oldAnisotropy ) {\r\n\r\n                _gl.texParameterf( textureType, _glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _maxAnisotropy ) );\r\n                texture.__oldAnisotropy = texture.anisotropy;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.setTexture = function ( texture, slot ) {\r\n\r\n        if ( texture.needsUpdate ) {\r\n\r\n            if ( ! texture.__webglInit ) {\r\n\r\n                texture.__webglInit = true;\r\n\r\n                texture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n                texture.__webglTexture = _gl.createTexture();\r\n\r\n                _this.info.memory.textures ++;\r\n\r\n            }\r\n\r\n            _gl.activeTexture( _gl.TEXTURE0 + slot );\r\n            _gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n            _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n            _gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n            _gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n            var image = texture.image,\r\n                isImagePowerOfTwo = isPowerOfTwo( image.width ) && isPowerOfTwo( image.height ),\r\n                glFormat = paramThreeToGL( texture.format ),\r\n                glType = paramThreeToGL( texture.type );\r\n\r\n            setTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n            var mipmap, mipmaps = texture.mipmaps;\r\n\r\n            if ( texture instanceof THREE.DataTexture ) {\r\n\r\n                // use manually created mipmaps if available\r\n                // if there are no manual mipmaps\r\n                // set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n                if ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n                    for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n                        mipmap = mipmaps[ i ];\r\n                        _gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n                    }\r\n\r\n                    texture.generateMipmaps = false;\r\n\r\n                } else {\r\n\r\n                    _gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n                }\r\n\r\n            } else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n                for( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n                    mipmap = mipmaps[ i ];\r\n                    if ( texture.format!==THREE.RGBAFormat ) {\r\n                        _gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n                    } else {\r\n                        _gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n                    }\r\n\r\n                }\r\n\r\n            } else { // regular Texture (image, video, canvas)\r\n\r\n                // use manually created mipmaps if available\r\n                // if there are no manual mipmaps\r\n                // set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n                if ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n                    for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n                        mipmap = mipmaps[ i ];\r\n                        _gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n                    }\r\n\r\n                    texture.generateMipmaps = false;\r\n\r\n                } else {\r\n\r\n                    _gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n            texture.needsUpdate = false;\r\n\r\n            if ( texture.onUpdate ) texture.onUpdate();\r\n\r\n        } else {\r\n\r\n            _gl.activeTexture( _gl.TEXTURE0 + slot );\r\n            _gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function clampToMaxSize ( image, maxSize ) {\r\n\r\n        if ( image.width <= maxSize && image.height <= maxSize ) {\r\n\r\n            return image;\r\n\r\n        }\r\n\r\n        // Warning: Scaling through the canvas will only work with images that use\r\n        // premultiplied alpha.\r\n\r\n        var maxDimension = Math.max( image.width, image.height );\r\n        var newWidth = Math.floor( image.width * maxSize / maxDimension );\r\n        var newHeight = Math.floor( image.height * maxSize / maxDimension );\r\n\r\n        var canvas = document.createElement( 'canvas' );\r\n        canvas.width = newWidth;\r\n        canvas.height = newHeight;\r\n\r\n        var ctx = canvas.getContext( \"2d\" );\r\n        ctx.drawImage( image, 0, 0, image.width, image.height, 0, 0, newWidth, newHeight );\r\n\r\n        return canvas;\r\n\r\n    }\r\n\r\n    function setCubeTexture ( texture, slot ) {\r\n\r\n        if ( texture.image.length === 6 ) {\r\n\r\n            if ( texture.needsUpdate ) {\r\n\r\n                if ( ! texture.image.__webglTextureCube ) {\r\n\r\n                    texture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n                    texture.image.__webglTextureCube = _gl.createTexture();\r\n\r\n                    _this.info.memory.textures ++;\r\n\r\n                }\r\n\r\n                _gl.activeTexture( _gl.TEXTURE0 + slot );\r\n                _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n                _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n                var isCompressed = texture instanceof THREE.CompressedTexture;\r\n\r\n                var cubeImage = [];\r\n\r\n                for ( var i = 0; i < 6; i ++ ) {\r\n\r\n                    if ( _this.autoScaleCubemaps && ! isCompressed ) {\r\n\r\n                        cubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\r\n\r\n                    } else {\r\n\r\n                        cubeImage[ i ] = texture.image[ i ];\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                var image = cubeImage[ 0 ],\r\n                    isImagePowerOfTwo = isPowerOfTwo( image.width ) && isPowerOfTwo( image.height ),\r\n                    glFormat = paramThreeToGL( texture.format ),\r\n                    glType = paramThreeToGL( texture.type );\r\n\r\n                setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n                for ( var i = 0; i < 6; i ++ ) {\r\n\r\n                    if( !isCompressed ) {\r\n\r\n                        _gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n                    } else {\r\n\r\n                        var mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n                        for( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n                            mipmap = mipmaps[ j ];\r\n                            if ( texture.format!==THREE.RGBAFormat ) {\r\n\r\n                                _gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n                            } else {\r\n                                _gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n                    _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n                }\r\n\r\n                texture.needsUpdate = false;\r\n\r\n                if ( texture.onUpdate ) texture.onUpdate();\r\n\r\n            } else {\r\n\r\n                _gl.activeTexture( _gl.TEXTURE0 + slot );\r\n                _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setCubeTextureDynamic ( texture, slot ) {\r\n\r\n        _gl.activeTexture( _gl.TEXTURE0 + slot );\r\n        _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\r\n\r\n    };\r\n\r\n    // Render targets\r\n\r\n    function setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n        _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n        _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\r\n\r\n    };\r\n\r\n    function setupRenderBuffer ( renderbuffer, renderTarget  ) {\r\n\r\n        _gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n        if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n            _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n            _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n            /* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n        } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n            _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n            _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n        } else {\r\n\r\n            _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.setRenderTarget = function ( renderTarget ) {\r\n\r\n        var isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n        if ( renderTarget && ! renderTarget.__webglFramebuffer ) {\r\n\r\n            if ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n            if ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n            renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n            renderTarget.__webglTexture = _gl.createTexture();\r\n\r\n            _this.info.memory.textures ++;\r\n\r\n            // Setup texture, create render and frame buffers\r\n\r\n            var isTargetPowerOfTwo = isPowerOfTwo( renderTarget.width ) && isPowerOfTwo( renderTarget.height ),\r\n                glFormat = paramThreeToGL( renderTarget.format ),\r\n                glType = paramThreeToGL( renderTarget.type );\r\n\r\n            if ( isCube ) {\r\n\r\n                renderTarget.__webglFramebuffer = [];\r\n                renderTarget.__webglRenderbuffer = [];\r\n\r\n                _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n                setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n                for ( var i = 0; i < 6; i ++ ) {\r\n\r\n                    renderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n                    renderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n                    _gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n                    setupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n                    setupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n                }\r\n\r\n                if ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n            } else {\r\n\r\n                renderTarget.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n                if ( renderTarget.shareDepthFrom ) {\r\n\r\n                    renderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n                } else {\r\n\r\n                    renderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n                }\r\n\r\n                _gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n                setTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n                _gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n                setupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n                if ( renderTarget.shareDepthFrom ) {\r\n\r\n                    if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n                        _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n                    } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n                        _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    setupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\r\n\r\n                }\r\n\r\n                if ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n            }\r\n\r\n            // Release everything\r\n\r\n            if ( isCube ) {\r\n\r\n                _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n            } else {\r\n\r\n                _gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n            }\r\n\r\n            _gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n            _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n        }\r\n\r\n        var framebuffer, width, height, vx, vy;\r\n\r\n        if ( renderTarget ) {\r\n\r\n            if ( isCube ) {\r\n\r\n                framebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n            } else {\r\n\r\n                framebuffer = renderTarget.__webglFramebuffer;\r\n\r\n            }\r\n\r\n            width = renderTarget.width;\r\n            height = renderTarget.height;\r\n\r\n            vx = 0;\r\n            vy = 0;\r\n\r\n        } else {\r\n\r\n            framebuffer = null;\r\n\r\n            width = _viewportWidth;\r\n            height = _viewportHeight;\r\n\r\n            vx = _viewportX;\r\n            vy = _viewportY;\r\n\r\n        }\r\n\r\n        if ( framebuffer !== _currentFramebuffer ) {\r\n\r\n            _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n            _gl.viewport( vx, vy, width, height );\r\n\r\n            _currentFramebuffer = framebuffer;\r\n\r\n        }\r\n\r\n        _currentWidth = width;\r\n        _currentHeight = height;\r\n\r\n    };\r\n\r\n    function updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n        if ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n            _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n            _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n            _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n        } else {\r\n\r\n            _gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n            _gl.generateMipmap( _gl.TEXTURE_2D );\r\n            _gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Fallback filters for non-power-of-2 textures\r\n\r\n    function filterFallback ( f ) {\r\n\r\n        if ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n            return _gl.NEAREST;\r\n\r\n        }\r\n\r\n        return _gl.LINEAR;\r\n\r\n    };\r\n\r\n    // Map three.js constants to WebGL constants\r\n\r\n    function paramThreeToGL ( p ) {\r\n\r\n        if ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n        if ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n        if ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n        if ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n        if ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n        if ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n        if ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n        if ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n        if ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n        if ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n        if ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n        if ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n        if ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n        if ( p === THREE.ByteType ) return _gl.BYTE;\r\n        if ( p === THREE.ShortType ) return _gl.SHORT;\r\n        if ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n        if ( p === THREE.IntType ) return _gl.INT;\r\n        if ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n        if ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n        if ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n        if ( p === THREE.RGBFormat ) return _gl.RGB;\r\n        if ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n        if ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n        if ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n        if ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n        if ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n        if ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n        if ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n        if ( p === THREE.OneFactor ) return _gl.ONE;\r\n        if ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n        if ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n        if ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n        if ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n        if ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n        if ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n        if ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n        if ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n        if ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n        if ( _glExtensionCompressedTextureS3TC !== undefined ) {\r\n\r\n            if ( p === THREE.RGB_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n            if ( p === THREE.RGBA_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n            if ( p === THREE.RGBA_S3TC_DXT3_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n            if ( p === THREE.RGBA_S3TC_DXT5_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n        }\r\n\r\n        return 0;\r\n\r\n    };\r\n\r\n    // Allocations\r\n\r\n    function allocateBones ( object ) {\r\n\r\n        if ( _supportsBoneTextures && object && object.useVertexTexture ) {\r\n\r\n            return 1024;\r\n\r\n        } else {\r\n\r\n            // default for when object is not specified\r\n            // ( for example when prebuilding shader\r\n            //   to be used with multiple objects )\r\n            //\r\n            // \t- leave some extra space for other uniforms\r\n            //  - limit here is ANGLE's 254 max uniform vectors\r\n            //    (up to 54 should be safe)\r\n\r\n            var nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n            var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n            var maxBones = nVertexMatrices;\r\n\r\n            if ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n                maxBones = Math.min( object.bones.length, maxBones );\r\n\r\n                if ( maxBones < object.bones.length ) {\r\n\r\n                    console.warn( \"WebGLRenderer: too many bones - \" + object.bones.length + \", this GPU supports just \" + maxBones + \" (try OpenGL instead of ANGLE)\" );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return maxBones;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function allocateLights( lights ) {\r\n\r\n        var dirLights = 0;\r\n        var pointLights = 0;\r\n        var spotLights = 0;\r\n        var hemiLights = 0;\r\n\r\n        for ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n            var light = lights[ l ];\r\n\r\n            if ( light.onlyShadow ) continue;\r\n\r\n            if ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n            if ( light instanceof THREE.PointLight ) pointLights ++;\r\n            if ( light instanceof THREE.SpotLight ) spotLights ++;\r\n            if ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n        }\r\n\r\n        return { 'directional' : dirLights, 'point' : pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n    };\r\n\r\n    function allocateShadows( lights ) {\r\n\r\n        var maxShadows = 0;\r\n\r\n        for ( var l = 0, ll = lights.length; l < ll; l++ ) {\r\n\r\n            var light = lights[ l ];\r\n\r\n            if ( ! light.castShadow ) continue;\r\n\r\n            if ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n            if ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\r\n\r\n        }\r\n\r\n        return maxShadows;\r\n\r\n    };\r\n\r\n    // Initialization\r\n\r\n    function initGL() {\r\n\r\n        try {\r\n\r\n            var attributes = {\r\n                alpha: _alpha,\r\n                premultipliedAlpha: _premultipliedAlpha,\r\n                antialias: _antialias,\r\n                stencil: _stencil,\r\n                preserveDrawingBuffer: _preserveDrawingBuffer\r\n            };\r\n\r\n            _gl = _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n            if ( _gl === null ) {\r\n\r\n                throw 'Error creating WebGL context.';\r\n\r\n            }\r\n\r\n        } catch ( error ) {\r\n\r\n            console.error( error );\r\n\r\n        }\r\n\r\n        _glExtensionTextureFloat = _gl.getExtension( 'OES_texture_float' );\r\n        _glExtensionTextureFloatLinear = _gl.getExtension( 'OES_texture_float_linear' );\r\n        _glExtensionStandardDerivatives = _gl.getExtension( 'OES_standard_derivatives' );\r\n\r\n        _glExtensionTextureFilterAnisotropic = _gl.getExtension( 'EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\r\n        _glExtensionCompressedTextureS3TC = _gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\r\n        if ( ! _glExtensionTextureFloat ) {\r\n\r\n            console.log( 'THREE.WebGLRenderer: Float textures not supported.' );\r\n\r\n        }\r\n\r\n        if ( ! _glExtensionStandardDerivatives ) {\r\n\r\n            console.log( 'THREE.WebGLRenderer: Standard derivatives not supported.' );\r\n\r\n        }\r\n\r\n        if ( ! _glExtensionTextureFilterAnisotropic ) {\r\n\r\n            console.log( 'THREE.WebGLRenderer: Anisotropic texture filtering not supported.' );\r\n\r\n        }\r\n\r\n        if ( ! _glExtensionCompressedTextureS3TC ) {\r\n\r\n            console.log( 'THREE.WebGLRenderer: S3TC compressed textures not supported.' );\r\n\r\n        }\r\n\r\n        if ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n            _gl.getShaderPrecisionFormat = function() {\r\n\r\n                return {\r\n                    \"rangeMin\"  : 1,\r\n                    \"rangeMax\"  : 1,\r\n                    \"precision\" : 1\r\n                };\r\n\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    function setDefaultGLState () {\r\n\r\n        _gl.clearColor( 0, 0, 0, 1 );\r\n        _gl.clearDepth( 1 );\r\n        _gl.clearStencil( 0 );\r\n\r\n        _gl.enable( _gl.DEPTH_TEST );\r\n        _gl.depthFunc( _gl.LEQUAL );\r\n\r\n        _gl.frontFace( _gl.CCW );\r\n        _gl.cullFace( _gl.BACK );\r\n        _gl.enable( _gl.CULL_FACE );\r\n\r\n        _gl.enable( _gl.BLEND );\r\n        _gl.blendEquation( _gl.FUNC_ADD );\r\n        _gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n        _gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n    };\r\n\r\n    // default plugins (order is important)\r\n\r\n    this.shadowMapPlugin = new THREE.ShadowMapPlugin();\r\n    this.addPrePlugin( this.shadowMapPlugin );\r\n\r\n    this.addPostPlugin( new THREE.SpritePlugin() );\r\n    this.addPostPlugin( new THREE.LensFlarePlugin() );\r\n\r\n};\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    options = options || {};\r\n\r\n    this.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n    this.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n    this.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n    this.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n    this.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n    this.offset = new THREE.Vector2( 0, 0 );\r\n    this.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n    this.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n    this.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n    this.generateMipmaps = true;\r\n\r\n    this.shareDepthFrom = null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n    constructor: THREE.WebGLRenderTarget,\r\n\r\n    clone: function () {\r\n\r\n        var tmp = new THREE.WebGLRenderTarget( this.width, this.height );\r\n\r\n        tmp.wrapS = this.wrapS;\r\n        tmp.wrapT = this.wrapT;\r\n\r\n        tmp.magFilter = this.magFilter;\r\n        tmp.minFilter = this.minFilter;\r\n\r\n        tmp.anisotropy = this.anisotropy;\r\n\r\n        tmp.offset.copy( this.offset );\r\n        tmp.repeat.copy( this.repeat );\r\n\r\n        tmp.format = this.format;\r\n        tmp.type = this.type;\r\n\r\n        tmp.depthBuffer = this.depthBuffer;\r\n        tmp.stencilBuffer = this.stencilBuffer;\r\n\r\n        tmp.generateMipmaps = this.generateMipmaps;\r\n\r\n        tmp.shareDepthFrom = this.shareDepthFrom;\r\n\r\n        return tmp;\r\n\r\n    },\r\n\r\n    dispose: function () {\r\n\r\n        this.dispatchEvent( { type: 'dispose' } );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n    THREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n    this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableVertex = function () {\r\n\r\n    this.positionWorld = new THREE.Vector3();\r\n    this.positionScreen = new THREE.Vector4();\r\n\r\n    this.visible = true;\r\n\r\n};\r\n\r\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\r\n\r\n    this.positionWorld.copy( vertex.positionWorld );\r\n    this.positionScreen.copy( vertex.positionScreen );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableFace3 = function () {\r\n\r\n    this.id = 0;\r\n\r\n    this.v1 = new THREE.RenderableVertex();\r\n    this.v2 = new THREE.RenderableVertex();\r\n    this.v3 = new THREE.RenderableVertex();\r\n\r\n    this.centroidModel = new THREE.Vector3();\r\n\r\n    this.normalModel = new THREE.Vector3();\r\n    this.normalModelView = new THREE.Vector3();\r\n\r\n    this.vertexNormalsLength = 0;\r\n    this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\r\n    this.vertexNormalsModelView = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\r\n\r\n    this.color = null;\r\n    this.material = null;\r\n    this.uvs = [[]];\r\n\r\n    this.z = 0;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableObject = function () {\r\n\r\n    this.id = 0;\r\n\r\n    this.object = null;\r\n    this.z = 0;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableParticle = function () {\r\n\r\n    this.id = 0;\r\n\r\n    this.object = null;\r\n\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.z = 0;\r\n\r\n    this.rotation = null;\r\n    this.scale = new THREE.Vector2();\r\n\r\n    this.material = null;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableLine = function () {\r\n\r\n    this.id = 0;\r\n\r\n    this.v1 = new THREE.RenderableVertex();\r\n    this.v2 = new THREE.RenderableVertex();\r\n\r\n    this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\r\n    this.material = null;\r\n\r\n    this.z = 0;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n    // Merge two geometries or geometry and geometry from object (using object's transform)\r\n\r\n    merge: function ( geometry1, object2 /* mesh | geometry */, materialIndexOffset ) {\r\n\r\n        var matrix, normalMatrix,\r\n            vertexOffset = geometry1.vertices.length,\r\n            uvPosition = geometry1.faceVertexUvs[ 0 ].length,\r\n            geometry2 = object2 instanceof THREE.Mesh ? object2.geometry : object2,\r\n            vertices1 = geometry1.vertices,\r\n            vertices2 = geometry2.vertices,\r\n            faces1 = geometry1.faces,\r\n            faces2 = geometry2.faces,\r\n            uvs1 = geometry1.faceVertexUvs[ 0 ],\r\n            uvs2 = geometry2.faceVertexUvs[ 0 ];\r\n\r\n        if ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n        if ( object2 instanceof THREE.Mesh ) {\r\n\r\n            object2.matrixAutoUpdate && object2.updateMatrix();\r\n\r\n            matrix = object2.matrix;\r\n\r\n            normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n        }\r\n\r\n        // vertices\r\n\r\n        for ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n            var vertex = vertices2[ i ];\r\n\r\n            var vertexCopy = vertex.clone();\r\n\r\n            if ( matrix ) vertexCopy.applyMatrix4( matrix );\r\n\r\n            vertices1.push( vertexCopy );\r\n\r\n        }\r\n\r\n        // faces\r\n\r\n        for ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n            var face = faces2[ i ], faceCopy, normal, color,\r\n                faceVertexNormals = face.vertexNormals,\r\n                faceVertexColors = face.vertexColors;\r\n\r\n            faceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n            faceCopy.normal.copy( face.normal );\r\n\r\n            if ( normalMatrix ) {\r\n\r\n                faceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n            }\r\n\r\n            for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n                normal = faceVertexNormals[ j ].clone();\r\n\r\n                if ( normalMatrix ) {\r\n\r\n                    normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n                }\r\n\r\n                faceCopy.vertexNormals.push( normal );\r\n\r\n            }\r\n\r\n            faceCopy.color.copy( face.color );\r\n\r\n            for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n                color = faceVertexColors[ j ];\r\n                faceCopy.vertexColors.push( color.clone() );\r\n\r\n            }\r\n\r\n            faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n            faceCopy.centroid.copy( face.centroid );\r\n\r\n            if ( matrix ) {\r\n\r\n                faceCopy.centroid.applyMatrix4( matrix );\r\n\r\n            }\r\n\r\n            faces1.push( faceCopy );\r\n\r\n        }\r\n\r\n        // uvs\r\n\r\n        for ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n            var uv = uvs2[ i ], uvCopy = [];\r\n\r\n            for ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n                uvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\r\n\r\n            }\r\n\r\n            uvs1.push( uvCopy );\r\n\r\n        }\r\n\r\n    },\r\n\r\n    // Get random point in triangle (via barycentric coordinates)\r\n    // \t(uniform distribution)\r\n    // \thttp://www.cgafaq.info/wiki/Random_Point_In_Triangle\r\n\r\n    randomPointInTriangle: function () {\r\n\r\n        var vector = new THREE.Vector3();\r\n\r\n        return function ( vectorA, vectorB, vectorC ) {\r\n\r\n            var point = new THREE.Vector3();\r\n\r\n            var a = THREE.Math.random16();\r\n            var b = THREE.Math.random16();\r\n\r\n            if ( ( a + b ) > 1 ) {\r\n\r\n                a = 1 - a;\r\n                b = 1 - b;\r\n\r\n            }\r\n\r\n            var c = 1 - a - b;\r\n\r\n            point.copy( vectorA );\r\n            point.multiplyScalar( a );\r\n\r\n            vector.copy( vectorB );\r\n            vector.multiplyScalar( b );\r\n\r\n            point.add( vector );\r\n\r\n            vector.copy( vectorC );\r\n            vector.multiplyScalar( c );\r\n\r\n            point.add( vector );\r\n\r\n            return point;\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    // Get random point in face (triangle / quad)\r\n    // (uniform distribution)\r\n\r\n    randomPointInFace: function ( face, geometry, useCachedAreas ) {\r\n\r\n        var vA, vB, vC, vD;\r\n\r\n        vA = geometry.vertices[ face.a ];\r\n        vB = geometry.vertices[ face.b ];\r\n        vC = geometry.vertices[ face.c ];\r\n\r\n        return THREE.GeometryUtils.randomPointInTriangle( vA, vB, vC );\r\n\r\n    },\r\n\r\n    // Get uniformly distributed random points in mesh\r\n    // \t- create array with cumulative sums of face areas\r\n    //  - pick random number from 0 to total area\r\n    //  - find corresponding place in area array by binary search\r\n    //\t- get random point in face\r\n\r\n    randomPointsInGeometry: function ( geometry, n ) {\r\n\r\n        var face, i,\r\n            faces = geometry.faces,\r\n            vertices = geometry.vertices,\r\n            il = faces.length,\r\n            totalArea = 0,\r\n            cumulativeAreas = [],\r\n            vA, vB, vC, vD;\r\n\r\n        // precompute face areas\r\n\r\n        for ( i = 0; i < il; i ++ ) {\r\n\r\n            face = faces[ i ];\r\n\r\n            vA = vertices[ face.a ];\r\n            vB = vertices[ face.b ];\r\n            vC = vertices[ face.c ];\r\n\r\n            face._area = THREE.GeometryUtils.triangleArea( vA, vB, vC );\r\n\r\n            totalArea += face._area;\r\n\r\n            cumulativeAreas[ i ] = totalArea;\r\n\r\n        }\r\n\r\n        // binary search cumulative areas array\r\n\r\n        function binarySearchIndices( value ) {\r\n\r\n            function binarySearch( start, end ) {\r\n\r\n                // return closest larger index\r\n                // if exact number is not found\r\n\r\n                if ( end < start )\r\n                    return start;\r\n\r\n                var mid = start + Math.floor( ( end - start ) / 2 );\r\n\r\n                if ( cumulativeAreas[ mid ] > value ) {\r\n\r\n                    return binarySearch( start, mid - 1 );\r\n\r\n                } else if ( cumulativeAreas[ mid ] < value ) {\r\n\r\n                    return binarySearch( mid + 1, end );\r\n\r\n                } else {\r\n\r\n                    return mid;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            var result = binarySearch( 0, cumulativeAreas.length - 1 )\r\n            return result;\r\n\r\n        }\r\n\r\n        // pick random face weighted by face area\r\n\r\n        var r, index,\r\n            result = [];\r\n\r\n        var stats = {};\r\n\r\n        for ( i = 0; i < n; i ++ ) {\r\n\r\n            r = THREE.Math.random16() * totalArea;\r\n\r\n            index = binarySearchIndices( r );\r\n\r\n            result[ i ] = THREE.GeometryUtils.randomPointInFace( faces[ index ], geometry, true );\r\n\r\n            if ( ! stats[ index ] ) {\r\n\r\n                stats[ index ] = 1;\r\n\r\n            } else {\r\n\r\n                stats[ index ] += 1;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    },\r\n\r\n    // Get triangle area (half of parallelogram)\r\n    //\thttp://mathworld.wolfram.com/TriangleArea.html\r\n\r\n    triangleArea: function () {\r\n\r\n        var vector1 = new THREE.Vector3();\r\n        var vector2 = new THREE.Vector3();\r\n\r\n        return function ( vectorA, vectorB, vectorC ) {\r\n\r\n            vector1.subVectors( vectorB, vectorA );\r\n            vector2.subVectors( vectorC, vectorA );\r\n            vector1.cross( vector2 );\r\n\r\n            return 0.5 * vector1.length();\r\n\r\n        };\r\n\r\n    }(),\r\n\r\n    // Center geometry so that 0,0,0 is in center of bounding box\r\n\r\n    center: function ( geometry ) {\r\n\r\n        geometry.computeBoundingBox();\r\n\r\n        var bb = geometry.boundingBox;\r\n\r\n        var offset = new THREE.Vector3();\r\n\r\n        offset.addVectors( bb.min, bb.max );\r\n        offset.multiplyScalar( -0.5 );\r\n\r\n        geometry.applyMatrix( new THREE.Matrix4().makeTranslation( offset.x, offset.y, offset.z ) );\r\n        geometry.computeBoundingBox();\r\n\r\n        return offset;\r\n\r\n    },\r\n\r\n    triangulateQuads: function ( geometry ) {\r\n\r\n        var i, il, j, jl;\r\n\r\n        var faces = [];\r\n        var faceVertexUvs = [];\r\n\r\n        for ( i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n            faceVertexUvs[ i ] = [];\r\n\r\n        }\r\n\r\n        for ( i = 0, il = geometry.faces.length; i < il; i ++ ) {\r\n\r\n            var face = geometry.faces[ i ];\r\n\r\n            faces.push( face );\r\n\r\n            for ( j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n                faceVertexUvs[ j ].push( geometry.faceVertexUvs[ j ][ i ] );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        geometry.faces = faces;\r\n        geometry.faceVertexUvs = faceVertexUvs;\r\n\r\n        geometry.computeCentroids();\r\n        geometry.computeFaceNormals();\r\n        geometry.computeVertexNormals();\r\n\r\n        if ( geometry.hasTangents ) geometry.computeTangents();\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n    crossOrigin: 'anonymous',\r\n\r\n    loadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n        var loader = new THREE.ImageLoader();\r\n        loader.crossOrigin = this.crossOrigin;\r\n\r\n        var texture = new THREE.Texture( undefined, mapping );\r\n\r\n        var image = loader.load( url, function () {\r\n\r\n            texture.needsUpdate = true;\r\n\r\n            if ( onLoad ) onLoad( texture );\r\n\r\n        } );\r\n\r\n        texture.image = image;\r\n        texture.sourceFile = url;\r\n\r\n        return texture;\r\n\r\n    },\r\n\r\n    loadCompressedTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n        var texture = new THREE.CompressedTexture();\r\n        texture.mapping = mapping;\r\n\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.onload = function () {\r\n\r\n            var buffer = request.response;\r\n            var dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n            texture.format = dds.format;\r\n\r\n            texture.mipmaps = dds.mipmaps;\r\n            texture.image.width = dds.width;\r\n            texture.image.height = dds.height;\r\n\r\n            // gl.generateMipmap fails for compressed textures\r\n            // mipmaps must be embedded in the DDS file\r\n            // or texture filters must not use mipmapping\r\n\r\n            texture.generateMipmaps = false;\r\n\r\n            texture.needsUpdate = true;\r\n\r\n            if ( onLoad ) onLoad( texture );\r\n\r\n        }\r\n\r\n        request.onerror = onError;\r\n\r\n        request.open( 'GET', url, true );\r\n        request.responseType = \"arraybuffer\";\r\n        request.send( null );\r\n\r\n        return texture;\r\n\r\n    },\r\n\r\n    loadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n        var images = [];\r\n        images.loadCount = 0;\r\n\r\n        var texture = new THREE.Texture();\r\n        texture.image = images;\r\n        if ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n        // no flipping needed for cube textures\r\n\r\n        texture.flipY = false;\r\n\r\n        for ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n            var cubeImage = new Image();\r\n            images[ i ] = cubeImage;\r\n\r\n            cubeImage.onload = function () {\r\n\r\n                images.loadCount += 1;\r\n\r\n                if ( images.loadCount === 6 ) {\r\n\r\n                    texture.needsUpdate = true;\r\n                    if ( onLoad ) onLoad( texture );\r\n\r\n                }\r\n\r\n            };\r\n\r\n            cubeImage.onerror = onError;\r\n\r\n            cubeImage.crossOrigin = this.crossOrigin;\r\n            cubeImage.src = array[ i ];\r\n\r\n        }\r\n\r\n        return texture;\r\n\r\n    },\r\n\r\n    loadCompressedTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n        var images = [];\r\n        images.loadCount = 0;\r\n\r\n        var texture = new THREE.CompressedTexture();\r\n        texture.image = images;\r\n        if ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n        // no flipping for cube textures\r\n        // (also flipping doesn't work for compressed textures )\r\n\r\n        texture.flipY = false;\r\n\r\n        // can't generate mipmaps for compressed textures\r\n        // mips must be embedded in DDS files\r\n\r\n        texture.generateMipmaps = false;\r\n\r\n        var generateCubeFaceCallback = function ( rq, img ) {\r\n\r\n            return function () {\r\n\r\n                var buffer = rq.response;\r\n                var dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n                img.format = dds.format;\r\n\r\n                img.mipmaps = dds.mipmaps;\r\n                img.width = dds.width;\r\n                img.height = dds.height;\r\n\r\n                images.loadCount += 1;\r\n\r\n                if ( images.loadCount === 6 ) {\r\n\r\n                    texture.format = dds.format;\r\n                    texture.needsUpdate = true;\r\n                    if ( onLoad ) onLoad( texture );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // compressed cubemap textures as 6 separate DDS files\r\n\r\n        if ( array instanceof Array ) {\r\n\r\n            for ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n                var cubeImage = {};\r\n                images[ i ] = cubeImage;\r\n\r\n                var request = new XMLHttpRequest();\r\n\r\n                request.onload = generateCubeFaceCallback( request, cubeImage );\r\n                request.onerror = onError;\r\n\r\n                var url = array[ i ];\r\n\r\n                request.open( 'GET', url, true );\r\n                request.responseType = \"arraybuffer\";\r\n                request.send( null );\r\n\r\n            }\r\n\r\n            // compressed cubemap texture stored in a single DDS file\r\n\r\n        } else {\r\n\r\n            var url = array;\r\n            var request = new XMLHttpRequest();\r\n\r\n            request.onload = function( ) {\r\n\r\n                var buffer = request.response;\r\n                var dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n                if ( dds.isCubemap ) {\r\n\r\n                    var faces = dds.mipmaps.length / dds.mipmapCount;\r\n\r\n                    for ( var f = 0; f < faces; f ++ ) {\r\n\r\n                        images[ f ] = { mipmaps : [] };\r\n\r\n                        for ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n                            images[ f ].mipmaps.push( dds.mipmaps[ f * dds.mipmapCount + i ] );\r\n                            images[ f ].format = dds.format;\r\n                            images[ f ].width = dds.width;\r\n                            images[ f ].height = dds.height;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    texture.format = dds.format;\r\n                    texture.needsUpdate = true;\r\n                    if ( onLoad ) onLoad( texture );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            request.onerror = onError;\r\n\r\n            request.open( 'GET', url, true );\r\n            request.responseType = \"arraybuffer\";\r\n            request.send( null );\r\n\r\n        }\r\n\r\n        return texture;\r\n\r\n    },\r\n\r\n    loadDDSTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n        var images = [];\r\n        images.loadCount = 0;\r\n\r\n        var texture = new THREE.CompressedTexture();\r\n        texture.image = images;\r\n        if ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n        // no flipping for cube textures\r\n        // (also flipping doesn't work for compressed textures )\r\n\r\n        texture.flipY = false;\r\n\r\n        // can't generate mipmaps for compressed textures\r\n        // mips must be embedded in DDS files\r\n\r\n        texture.generateMipmaps = false;\r\n\r\n        {\r\n            var request = new XMLHttpRequest();\r\n\r\n            request.onload = function( ) {\r\n\r\n                var buffer = request.response;\r\n                var dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n                if ( dds.isCubemap ) {\r\n\r\n                    var faces = dds.mipmaps.length / dds.mipmapCount;\r\n\r\n                    for ( var f = 0; f < faces; f ++ ) {\r\n\r\n                        images[ f ] = { mipmaps : [] };\r\n\r\n                        for ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n                            images[ f ].mipmaps.push( dds.mipmaps[ f * dds.mipmapCount + i ] );\r\n                            images[ f ].format = dds.format;\r\n                            images[ f ].width = dds.width;\r\n                            images[ f ].height = dds.height;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                } else {\r\n                    texture.image.width = dds.width;\r\n                    texture.image.height = dds.height;\r\n                    texture.mipmaps = dds.mipmaps;\r\n                }\r\n\r\n                texture.format = dds.format;\r\n                texture.needsUpdate = true;\r\n                if ( onLoad ) onLoad( texture );\r\n\r\n            }\r\n\r\n            request.onerror = onError;\r\n\r\n            request.open( 'GET', url, true );\r\n            request.responseType = \"arraybuffer\";\r\n            request.send( null );\r\n\r\n        }\r\n\r\n        return texture;\r\n\r\n    },\r\n\r\n    parseDDS: function ( buffer, loadMipmaps ) {\r\n\r\n        var dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\r\n\r\n        // Adapted from @toji's DDS utils\r\n        //\thttps://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\r\n\r\n        // All values and structures referenced from:\r\n        // http://msdn.microsoft.com/en-us/library/bb943991.aspx/\r\n\r\n        var DDS_MAGIC = 0x20534444;\r\n\r\n        var DDSD_CAPS = 0x1,\r\n            DDSD_HEIGHT = 0x2,\r\n            DDSD_WIDTH = 0x4,\r\n            DDSD_PITCH = 0x8,\r\n            DDSD_PIXELFORMAT = 0x1000,\r\n            DDSD_MIPMAPCOUNT = 0x20000,\r\n            DDSD_LINEARSIZE = 0x80000,\r\n            DDSD_DEPTH = 0x800000;\r\n\r\n        var DDSCAPS_COMPLEX = 0x8,\r\n            DDSCAPS_MIPMAP = 0x400000,\r\n            DDSCAPS_TEXTURE = 0x1000;\r\n\r\n        var DDSCAPS2_CUBEMAP = 0x200,\r\n            DDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\r\n            DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\r\n            DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\r\n            DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\r\n            DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\r\n            DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\r\n            DDSCAPS2_VOLUME = 0x200000;\r\n\r\n        var DDPF_ALPHAPIXELS = 0x1,\r\n            DDPF_ALPHA = 0x2,\r\n            DDPF_FOURCC = 0x4,\r\n            DDPF_RGB = 0x40,\r\n            DDPF_YUV = 0x200,\r\n            DDPF_LUMINANCE = 0x20000;\r\n\r\n        function fourCCToInt32( value ) {\r\n\r\n            return value.charCodeAt(0) +\r\n                (value.charCodeAt(1) << 8) +\r\n                (value.charCodeAt(2) << 16) +\r\n                (value.charCodeAt(3) << 24);\r\n\r\n        }\r\n\r\n        function int32ToFourCC( value ) {\r\n\r\n            return String.fromCharCode(\r\n                value & 0xff,\r\n                (value >> 8) & 0xff,\r\n                (value >> 16) & 0xff,\r\n                (value >> 24) & 0xff\r\n            );\r\n        }\r\n\r\n        function loadARGBMip( buffer, dataOffset, width, height ) {\r\n            var dataLength = width*height*4;\r\n            var srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\r\n            var byteArray = new Uint8Array( dataLength );\r\n            var dst = 0;\r\n            var src = 0;\r\n            for ( var y = 0; y < height; y++ ) {\r\n                for ( var x = 0; x < width; x++ ) {\r\n                    var b = srcBuffer[src]; src++;\r\n                    var g = srcBuffer[src]; src++;\r\n                    var r = srcBuffer[src]; src++;\r\n                    var a = srcBuffer[src]; src++;\r\n                    byteArray[dst] = r; dst++;\t//r\r\n                    byteArray[dst] = g; dst++;\t//g\r\n                    byteArray[dst] = b; dst++;\t//b\r\n                    byteArray[dst] = a; dst++;\t//a\r\n                }\r\n            }\r\n            return byteArray;\r\n        }\r\n\r\n        var FOURCC_DXT1 = fourCCToInt32(\"DXT1\");\r\n        var FOURCC_DXT3 = fourCCToInt32(\"DXT3\");\r\n        var FOURCC_DXT5 = fourCCToInt32(\"DXT5\");\r\n\r\n        var headerLengthInt = 31; // The header length in 32 bit ints\r\n\r\n        // Offsets into the header array\r\n\r\n        var off_magic = 0;\r\n\r\n        var off_size = 1;\r\n        var off_flags = 2;\r\n        var off_height = 3;\r\n        var off_width = 4;\r\n\r\n        var off_mipmapCount = 7;\r\n\r\n        var off_pfFlags = 20;\r\n        var off_pfFourCC = 21;\r\n        var off_RGBBitCount = 22;\r\n        var off_RBitMask = 23;\r\n        var off_GBitMask = 24;\r\n        var off_BBitMask = 25;\r\n        var off_ABitMask = 26;\r\n\r\n        var off_caps = 27;\r\n        var off_caps2 = 28;\r\n        var off_caps3 = 29;\r\n        var off_caps4 = 30;\r\n\r\n        // Parse header\r\n\r\n        var header = new Int32Array( buffer, 0, headerLengthInt );\r\n\r\n        if ( header[ off_magic ] !== DDS_MAGIC ) {\r\n\r\n            console.error( \"ImageUtils.parseDDS(): Invalid magic number in DDS header\" );\r\n            return dds;\r\n\r\n        }\r\n\r\n        if ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\r\n\r\n            console.error( \"ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code\" );\r\n            return dds;\r\n\r\n        }\r\n\r\n        var blockBytes;\r\n\r\n        var fourCC = header[ off_pfFourCC ];\r\n\r\n        var isRGBAUncompressed = false;\r\n\r\n        switch ( fourCC ) {\r\n\r\n            case FOURCC_DXT1:\r\n\r\n                blockBytes = 8;\r\n                dds.format = THREE.RGB_S3TC_DXT1_Format;\r\n                break;\r\n\r\n            case FOURCC_DXT3:\r\n\r\n                blockBytes = 16;\r\n                dds.format = THREE.RGBA_S3TC_DXT3_Format;\r\n                break;\r\n\r\n            case FOURCC_DXT5:\r\n\r\n                blockBytes = 16;\r\n                dds.format = THREE.RGBA_S3TC_DXT5_Format;\r\n                break;\r\n\r\n            default:\r\n\r\n                if( header[off_RGBBitCount] ==32\r\n                    && header[off_RBitMask]&0xff0000\r\n                    && header[off_GBitMask]&0xff00\r\n                    && header[off_BBitMask]&0xff\r\n                    && header[off_ABitMask]&0xff000000  ) {\r\n                    isRGBAUncompressed = true;\r\n                    blockBytes = 64;\r\n                    dds.format = THREE.RGBAFormat;\r\n                } else {\r\n                    console.error( \"ImageUtils.parseDDS(): Unsupported FourCC code: \", int32ToFourCC( fourCC ) );\r\n                    return dds;\r\n                }\r\n        }\r\n\r\n        dds.mipmapCount = 1;\r\n\r\n        if ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\r\n\r\n            dds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\r\n\r\n        }\r\n\r\n        //TODO: Verify that all faces of the cubemap are present with DDSCAPS2_CUBEMAP_POSITIVEX, etc.\r\n\r\n        dds.isCubemap = header[ off_caps2 ] & DDSCAPS2_CUBEMAP ? true : false;\r\n\r\n        dds.width = header[ off_width ];\r\n        dds.height = header[ off_height ];\r\n\r\n        var dataOffset = header[ off_size ] + 4;\r\n\r\n        // Extract mipmaps buffers\r\n\r\n        var width = dds.width;\r\n        var height = dds.height;\r\n\r\n        var faces = dds.isCubemap ? 6 : 1;\r\n\r\n        for ( var face = 0; face < faces; face ++ ) {\r\n\r\n            for ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n                if( isRGBAUncompressed ) {\r\n                    var byteArray = loadARGBMip( buffer, dataOffset, width, height );\r\n                    var dataLength = byteArray.length;\r\n                } else {\r\n                    var dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\r\n                    var byteArray = new Uint8Array( buffer, dataOffset, dataLength );\r\n                }\r\n\r\n                var mipmap = { \"data\": byteArray, \"width\": width, \"height\": height };\r\n                dds.mipmaps.push( mipmap );\r\n\r\n                dataOffset += dataLength;\r\n\r\n                width = Math.max( width * 0.5, 1 );\r\n                height = Math.max( height * 0.5, 1 );\r\n\r\n            }\r\n\r\n            width = dds.width;\r\n            height = dds.height;\r\n\r\n        }\r\n\r\n        return dds;\r\n\r\n    },\r\n\r\n    getNormalMap: function ( image, depth ) {\r\n\r\n        // Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n        var cross = function ( a, b ) {\r\n\r\n            return [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n        }\r\n\r\n        var subtract = function ( a, b ) {\r\n\r\n            return [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n        }\r\n\r\n        var normalize = function ( a ) {\r\n\r\n            var l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n            return [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n        }\r\n\r\n        depth = depth | 1;\r\n\r\n        var width = image.width;\r\n        var height = image.height;\r\n\r\n        var canvas = document.createElement( 'canvas' );\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        var context = canvas.getContext( '2d' );\r\n        context.drawImage( image, 0, 0 );\r\n\r\n        var data = context.getImageData( 0, 0, width, height ).data;\r\n        var imageData = context.createImageData( width, height );\r\n        var output = imageData.data;\r\n\r\n        for ( var x = 0; x < width; x ++ ) {\r\n\r\n            for ( var y = 0; y < height; y ++ ) {\r\n\r\n                var ly = y - 1 < 0 ? 0 : y - 1;\r\n                var uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n                var lx = x - 1 < 0 ? 0 : x - 1;\r\n                var ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n                var points = [];\r\n                var origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n                points.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n                points.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n                points.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n                points.push( [  1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n                points.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n                points.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n                points.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n                points.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n                var normals = [];\r\n                var num_points = points.length;\r\n\r\n                for ( var i = 0; i < num_points; i ++ ) {\r\n\r\n                    var v1 = points[ i ];\r\n                    var v2 = points[ ( i + 1 ) % num_points ];\r\n                    v1 = subtract( v1, origin );\r\n                    v2 = subtract( v2, origin );\r\n                    normals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n                }\r\n\r\n                var normal = [ 0, 0, 0 ];\r\n\r\n                for ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n                    normal[ 0 ] += normals[ i ][ 0 ];\r\n                    normal[ 1 ] += normals[ i ][ 1 ];\r\n                    normal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n                }\r\n\r\n                normal[ 0 ] /= normals.length;\r\n                normal[ 1 ] /= normals.length;\r\n                normal[ 2 ] /= normals.length;\r\n\r\n                var idx = ( y * width + x ) * 4;\r\n\r\n                output[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n                output[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n                output[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n                output[ idx + 3 ] = 255;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        context.putImageData( imageData, 0, 0 );\r\n\r\n        return canvas;\r\n\r\n    },\r\n\r\n    generateDataTexture: function ( width, height, color ) {\r\n\r\n        var size = width * height;\r\n        var data = new Uint8Array( 3 * size );\r\n\r\n        var r = Math.floor( color.r * 255 );\r\n        var g = Math.floor( color.g * 255 );\r\n        var b = Math.floor( color.b * 255 );\r\n\r\n        for ( var i = 0; i < size; i ++ ) {\r\n\r\n            data[ i * 3 ] \t  = r;\r\n            data[ i * 3 + 1 ] = g;\r\n            data[ i * 3 + 2 ] = b;\r\n\r\n        }\r\n\r\n        var texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n        texture.needsUpdate = true;\r\n\r\n        return texture;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n    createMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n        var group = new THREE.Object3D();\r\n\r\n        for ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n            group.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n        }\r\n\r\n        return group;\r\n\r\n    },\r\n\r\n    detach : function ( child, parent, scene ) {\r\n\r\n        child.applyMatrix( parent.matrixWorld );\r\n        parent.remove( child );\r\n        scene.add( child );\r\n\r\n    },\r\n\r\n    attach: function ( child, scene, parent ) {\r\n\r\n        var matrixWorldInverse = new THREE.Matrix4();\r\n        matrixWorldInverse.getInverse( parent.matrixWorld );\r\n        child.applyMatrix( matrixWorldInverse );\r\n\r\n        scene.remove( child );\r\n        parent.add( child );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n * \ttypeface.js and canvastext\r\n * \t\tFor converting fonts and rendering with javascript\r\n *\t\thttp://typeface.neocracy.org\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n    faces : {},\r\n\r\n    // Just for now. face[weight][style]\r\n\r\n    face : \"helvetiker\",\r\n    weight: \"normal\",\r\n    style : \"normal\",\r\n    size : 150,\r\n    divisions : 10,\r\n\r\n    getFace : function() {\r\n\r\n        return this.faces[ this.face ][ this.weight ][ this.style ];\r\n\r\n    },\r\n\r\n    loadFace : function( data ) {\r\n\r\n        var family = data.familyName.toLowerCase();\r\n\r\n        var ThreeFont = this;\r\n\r\n        ThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n        ThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n        ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n        var face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n        return data;\r\n\r\n    },\r\n\r\n    drawText : function( text ) {\r\n\r\n        var characterPts = [], allPts = [];\r\n\r\n        // RenderText\r\n\r\n        var i, p,\r\n            face = this.getFace(),\r\n            scale = this.size / face.resolution,\r\n            offset = 0,\r\n            chars = String( text ).split( '' ),\r\n            length = chars.length;\r\n\r\n        var fontPaths = [];\r\n\r\n        for ( i = 0; i < length; i ++ ) {\r\n\r\n            var path = new THREE.Path();\r\n\r\n            var ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n            offset += ret.offset;\r\n\r\n            fontPaths.push( ret.path );\r\n\r\n        }\r\n\r\n        // get the width\r\n\r\n        var width = offset / 2;\r\n        //\r\n        // for ( p = 0; p < allPts.length; p++ ) {\r\n        //\r\n        // \tallPts[ p ].x -= width;\r\n        //\r\n        // }\r\n\r\n        //var extract = this.extractPoints( allPts, characterPts );\r\n        //extract.contour = allPts;\r\n\r\n        //extract.paths = fontPaths;\r\n        //extract.offset = width;\r\n\r\n        return { paths : fontPaths, offset : width };\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n    extractGlyphPoints : function( c, face, scale, offset, path ) {\r\n\r\n        var pts = [];\r\n\r\n        var i, i2, divisions,\r\n            outline, action, length,\r\n            scaleX, scaleY,\r\n            x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n            laste,\r\n            glyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n        if ( !glyph ) return;\r\n\r\n        if ( glyph.o ) {\r\n\r\n            outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n            length = outline.length;\r\n\r\n            scaleX = scale;\r\n            scaleY = scale;\r\n\r\n            for ( i = 0; i < length; ) {\r\n\r\n                action = outline[ i ++ ];\r\n\r\n                //console.log( action );\r\n\r\n                switch( action ) {\r\n\r\n                    case 'm':\r\n\r\n                        // Move To\r\n\r\n                        x = outline[ i++ ] * scaleX + offset;\r\n                        y = outline[ i++ ] * scaleY;\r\n\r\n                        path.moveTo( x, y );\r\n                        break;\r\n\r\n                    case 'l':\r\n\r\n                        // Line To\r\n\r\n                        x = outline[ i++ ] * scaleX + offset;\r\n                        y = outline[ i++ ] * scaleY;\r\n                        path.lineTo(x,y);\r\n                        break;\r\n\r\n                    case 'q':\r\n\r\n                        // QuadraticCurveTo\r\n\r\n                        cpx  = outline[ i++ ] * scaleX + offset;\r\n                        cpy  = outline[ i++ ] * scaleY;\r\n                        cpx1 = outline[ i++ ] * scaleX + offset;\r\n                        cpy1 = outline[ i++ ] * scaleY;\r\n\r\n                        path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\r\n\r\n                        laste = pts[ pts.length - 1 ];\r\n\r\n                        if ( laste ) {\r\n\r\n                            cpx0 = laste.x;\r\n                            cpy0 = laste.y;\r\n\r\n                            for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n                                var t = i2 / divisions;\r\n                                var tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n                                var ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n                            }\r\n\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 'b':\r\n\r\n                        // Cubic Bezier Curve\r\n\r\n                        cpx  = outline[ i++ ] *  scaleX + offset;\r\n                        cpy  = outline[ i++ ] *  scaleY;\r\n                        cpx1 = outline[ i++ ] *  scaleX + offset;\r\n                        cpy1 = outline[ i++ ] * -scaleY;\r\n                        cpx2 = outline[ i++ ] *  scaleX + offset;\r\n                        cpy2 = outline[ i++ ] * -scaleY;\r\n\r\n                        path.bezierCurveTo( cpx, cpy, cpx1, cpy1, cpx2, cpy2 );\r\n\r\n                        laste = pts[ pts.length - 1 ];\r\n\r\n                        if ( laste ) {\r\n\r\n                            cpx0 = laste.x;\r\n                            cpy0 = laste.y;\r\n\r\n                            for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n                                var t = i2 / divisions;\r\n                                var tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n                                var ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        break;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return { offset: glyph.ha*scale, path:path};\r\n    }\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function( text, parameters ) {\r\n\r\n    // Parameters\r\n\r\n    parameters = parameters || {};\r\n\r\n    var size = parameters.size !== undefined ? parameters.size : 100;\r\n    var curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments: 4;\r\n\r\n    var font = parameters.font !== undefined ? parameters.font : \"helvetiker\";\r\n    var weight = parameters.weight !== undefined ? parameters.weight : \"normal\";\r\n    var style = parameters.style !== undefined ? parameters.style : \"normal\";\r\n\r\n    THREE.FontUtils.size = size;\r\n    THREE.FontUtils.divisions = curveSegments;\r\n\r\n    THREE.FontUtils.face = font;\r\n    THREE.FontUtils.weight = weight;\r\n    THREE.FontUtils.style = style;\r\n\r\n    // Get a Font data json object\r\n\r\n    var data = THREE.FontUtils.drawText( text );\r\n\r\n    var paths = data.paths;\r\n    var shapes = [];\r\n\r\n    for ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n        Array.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n    }\r\n\r\n    return shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function( namespace ) {\r\n\r\n    var EPSILON = 0.0000000001;\r\n\r\n    // takes in an contour array and returns\r\n\r\n    var process = function( contour, indices ) {\r\n\r\n        var n = contour.length;\r\n\r\n        if ( n < 3 ) return null;\r\n\r\n        var result = [],\r\n            verts = [],\r\n            vertIndices = [];\r\n\r\n        /* we want a counter-clockwise polygon in verts */\r\n\r\n        var u, v, w;\r\n\r\n        if ( area( contour ) > 0.0 ) {\r\n\r\n            for ( v = 0; v < n; v++ ) verts[ v ] = v;\r\n\r\n        } else {\r\n\r\n            for ( v = 0; v < n; v++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n        }\r\n\r\n        var nv = n;\r\n\r\n        /*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n        var count = 2 * nv;   /* error detection */\r\n\r\n        for( v = nv - 1; nv > 2; ) {\r\n\r\n            /* if we loop, it is probably a non-simple polygon */\r\n\r\n            if ( ( count-- ) <= 0 ) {\r\n\r\n                //** Triangulate: ERROR - probable bad polygon!\r\n\r\n                //throw ( \"Warning, unable to triangulate polygon!\" );\r\n                //return null;\r\n                // Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n                console.log( \"Warning, unable to triangulate polygon!\" );\r\n\r\n                if ( indices ) return vertIndices;\r\n                return result;\r\n\r\n            }\r\n\r\n            /* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n            u = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n            v = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n            w = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n            if ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n                var a, b, c, s, t;\r\n\r\n                /* true names of the vertices */\r\n\r\n                a = verts[ u ];\r\n                b = verts[ v ];\r\n                c = verts[ w ];\r\n\r\n                /* output Triangle */\r\n\r\n                result.push( [ contour[ a ],\r\n                    contour[ b ],\r\n                    contour[ c ] ] );\r\n\r\n\r\n                vertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n                /* remove v from the remaining polygon */\r\n\r\n                for( s = v, t = v + 1; t < nv; s++, t++ ) {\r\n\r\n                    verts[ s ] = verts[ t ];\r\n\r\n                }\r\n\r\n                nv--;\r\n\r\n                /* reset error detection counter */\r\n\r\n                count = 2 * nv;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( indices ) return vertIndices;\r\n        return result;\r\n\r\n    };\r\n\r\n    // calculate area of the contour polygon\r\n\r\n    var area = function ( contour ) {\r\n\r\n        var n = contour.length;\r\n        var a = 0.0;\r\n\r\n        for( var p = n - 1, q = 0; q < n; p = q++ ) {\r\n\r\n            a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n        }\r\n\r\n        return a * 0.5;\r\n\r\n    };\r\n\r\n    var snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n        var p;\r\n        var ax, ay, bx, by;\r\n        var cx, cy, px, py;\r\n\r\n        ax = contour[ verts[ u ] ].x;\r\n        ay = contour[ verts[ u ] ].y;\r\n\r\n        bx = contour[ verts[ v ] ].x;\r\n        by = contour[ verts[ v ] ].y;\r\n\r\n        cx = contour[ verts[ w ] ].x;\r\n        cy = contour[ verts[ w ] ].y;\r\n\r\n        if ( EPSILON > (((bx-ax)*(cy-ay)) - ((by-ay)*(cx-ax))) ) return false;\r\n\r\n        var aX, aY, bX, bY, cX, cY;\r\n        var apx, apy, bpx, bpy, cpx, cpy;\r\n        var cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n        aX = cx - bx;  aY = cy - by;\r\n        bX = ax - cx;  bY = ay - cy;\r\n        cX = bx - ax;  cY = by - ay;\r\n\r\n        for ( p = 0; p < n; p++ ) {\r\n\r\n            if( (p === u) || (p === v) || (p === w) ) continue;\r\n\r\n            px = contour[ verts[ p ] ].x\r\n            py = contour[ verts[ p ] ].y\r\n\r\n            apx = px - ax;  apy = py - ay;\r\n            bpx = px - bx;  bpy = py - by;\r\n            cpx = px - cx;  cpy = py - cy;\r\n\r\n            // see if p is inside triangle abc\r\n\r\n            aCROSSbp = aX*bpy - aY*bpx;\r\n            cCROSSap = cX*apy - cY*apx;\r\n            bCROSScp = bX*cpy - bY*cpx;\r\n\r\n            if ( (aCROSSbp >= -EPSILON) && (bCROSScp >= -EPSILON) && (cCROSSap >= -EPSILON) ) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n\r\n    namespace.Triangulate = process;\r\n    namespace.Triangulate.area = area;\r\n\r\n    return namespace;\r\n\r\n})(THREE.FontUtils);\r\n\r\n// To use the typeface.js face files, hook up the API\r\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nTHREE.typeface_js = self._typeface_js;\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n    console.log( \"Warning, getPoint() not implemented!\" );\r\n    return null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n    var t = this.getUtoTmapping( u );\r\n    return this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n    if ( !divisions ) divisions = 5;\r\n\r\n    var d, pts = [];\r\n\r\n    for ( d = 0; d <= divisions; d ++ ) {\r\n\r\n        pts.push( this.getPoint( d / divisions ) );\r\n\r\n    }\r\n\r\n    return pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n    if ( !divisions ) divisions = 5;\r\n\r\n    var d, pts = [];\r\n\r\n    for ( d = 0; d <= divisions; d ++ ) {\r\n\r\n        pts.push( this.getPointAt( d / divisions ) );\r\n\r\n    }\r\n\r\n    return pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n    var lengths = this.getLengths();\r\n    return lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n    if ( !divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions): 200;\r\n\r\n    if ( this.cacheArcLengths\r\n        && ( this.cacheArcLengths.length == divisions + 1 )\r\n        && !this.needsUpdate) {\r\n\r\n        //console.log( \"cached\", this.cacheArcLengths );\r\n        return this.cacheArcLengths;\r\n\r\n    }\r\n\r\n    this.needsUpdate = false;\r\n\r\n    var cache = [];\r\n    var current, last = this.getPoint( 0 );\r\n    var p, sum = 0;\r\n\r\n    cache.push( 0 );\r\n\r\n    for ( p = 1; p <= divisions; p ++ ) {\r\n\r\n        current = this.getPoint ( p / divisions );\r\n        sum += current.distanceTo( last );\r\n        cache.push( sum );\r\n        last = current;\r\n\r\n    }\r\n\r\n    this.cacheArcLengths = cache;\r\n\r\n    return cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n    this.needsUpdate = true;\r\n    this.getLengths();\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n    var arcLengths = this.getLengths();\r\n\r\n    var i = 0, il = arcLengths.length;\r\n\r\n    var targetArcLength; // The targeted u distance value to get\r\n\r\n    if ( distance ) {\r\n\r\n        targetArcLength = distance;\r\n\r\n    } else {\r\n\r\n        targetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n    }\r\n\r\n    //var time = Date.now();\r\n\r\n    // binary search for the index with largest value smaller than target u distance\r\n\r\n    var low = 0, high = il - 1, comparison;\r\n\r\n    while ( low <= high ) {\r\n\r\n        i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n        comparison = arcLengths[ i ] - targetArcLength;\r\n\r\n        if ( comparison < 0 ) {\r\n\r\n            low = i + 1;\r\n            continue;\r\n\r\n        } else if ( comparison > 0 ) {\r\n\r\n            high = i - 1;\r\n            continue;\r\n\r\n        } else {\r\n\r\n            high = i;\r\n            break;\r\n\r\n            // DONE\r\n\r\n        }\r\n\r\n    }\r\n\r\n    i = high;\r\n\r\n    //console.log('b' , i, low, high, Date.now()- time);\r\n\r\n    if ( arcLengths[ i ] == targetArcLength ) {\r\n\r\n        var t = i / ( il - 1 );\r\n        return t;\r\n\r\n    }\r\n\r\n    // we could get finer grain at lengths, or use simple interpolatation between two points\r\n\r\n    var lengthBefore = arcLengths[ i ];\r\n    var lengthAfter = arcLengths[ i + 1 ];\r\n\r\n    var segmentLength = lengthAfter - lengthBefore;\r\n\r\n    // determine where we are between the 'before' and 'after' points\r\n\r\n    var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n    // add that fractional amount to t\r\n\r\n    var t = ( i + segmentFraction ) / ( il -1 );\r\n\r\n    return t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n    var delta = 0.0001;\r\n    var t1 = t - delta;\r\n    var t2 = t + delta;\r\n\r\n    // Capping in case of danger\r\n\r\n    if ( t1 < 0 ) t1 = 0;\r\n    if ( t2 > 1 ) t2 = 1;\r\n\r\n    var pt1 = this.getPoint( t1 );\r\n    var pt2 = this.getPoint( t2 );\r\n\r\n    var vec = pt2.clone().sub(pt1);\r\n    return vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n    var t = this.getUtoTmapping( u );\r\n    return this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n    tangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n        return 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n    },\r\n\r\n    // Puay Bing, thanks for helping with this derivative!\r\n\r\n    tangentCubicBezier: function (t, p0, p1, p2, p3 ) {\r\n\r\n        return -3 * p0 * (1 - t) * (1 - t)  +\r\n            3 * p1 * (1 - t) * (1-t) - 6 *t *p1 * (1-t) +\r\n            6 * t *  p2 * (1-t) - 3 * t * t * p2 +\r\n            3 * t * t * p3;\r\n    },\r\n\r\n\r\n    tangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n        // To check if my formulas are correct\r\n\r\n        var h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 âˆ’ 3t^2 + 1\r\n        var h10 = 3 * t * t - 4 * t + 1; // t^3 âˆ’ 2t^2 + t\r\n        var h01 = -6 * t * t + 6 * t; \t// âˆ’ 2t3 + 3t2\r\n        var h11 = 3 * t * t - 2 * t;\t// t3 âˆ’ t2\r\n\r\n        return h00 + h10 + h01 + h11;\r\n\r\n    },\r\n\r\n    // Catmull-Rom\r\n\r\n    interpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n        var v0 = ( p2 - p0 ) * 0.5;\r\n        var v1 = ( p3 - p1 ) * 0.5;\r\n        var t2 = t * t;\r\n        var t3 = t * t2;\r\n        return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n    constructor.prototype = Object.create( THREE.Curve.prototype );\r\n    constructor.prototype.getPoint = getPointFunc;\r\n\r\n    return constructor;\r\n\r\n};\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n    this.curves = [];\r\n    this.bends = [];\r\n\r\n    this.autoClose = false; // Automatically closes the path\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n    this.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n    // TODO\r\n    // If the ending of curve is not connected to the starting\r\n    // or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n    // TODO Test\r\n    // and verify for vector3 (needs to implement equals)\r\n    // Add a line curve if start and end of lines are not connected\r\n    var startPoint = this.curves[0].getPoint(0);\r\n    var endPoint = this.curves[this.curves.length-1].getPoint(1);\r\n\r\n    if (!startPoint.equals(endPoint)) {\r\n        this.curves.push( new THREE.LineCurve(endPoint, startPoint) );\r\n    }\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n    var d = t * this.getLength();\r\n    var curveLengths = this.getCurveLengths();\r\n    var i = 0, diff, curve;\r\n\r\n    // To think about boundaries points.\r\n\r\n    while ( i < curveLengths.length ) {\r\n\r\n        if ( curveLengths[ i ] >= d ) {\r\n\r\n            diff = curveLengths[ i ] - d;\r\n            curve = this.curves[ i ];\r\n\r\n            var u = 1 - diff / curve.getLength();\r\n\r\n            return curve.getPointAt( u );\r\n\r\n            break;\r\n        }\r\n\r\n        i ++;\r\n\r\n    }\r\n\r\n    return null;\r\n\r\n    // loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n    var lens = this.getCurveLengths();\r\n    return lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n    // We use cache values if curves and cache array are same length\r\n\r\n    if ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\r\n\r\n        return this.cacheLengths;\r\n\r\n    };\r\n\r\n    // Get length of subsurve\r\n    // Push sums into cached array\r\n\r\n    var lengths = [], sums = 0;\r\n    var i, il = this.curves.length;\r\n\r\n    for ( i = 0; i < il; i ++ ) {\r\n\r\n        sums += this.curves[ i ].getLength();\r\n        lengths.push( sums );\r\n\r\n    }\r\n\r\n    this.cacheLengths = lengths;\r\n\r\n    return lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates, as well as centroid\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n    var points = this.getPoints();\r\n\r\n    var maxX, maxY, maxZ;\r\n    var minX, minY, minZ;\r\n\r\n    maxX = maxY = Number.NEGATIVE_INFINITY;\r\n    minX = minY = Number.POSITIVE_INFINITY;\r\n\r\n    var p, i, il, sum;\r\n\r\n    var v3 = points[0] instanceof THREE.Vector3;\r\n\r\n    sum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n    for ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n        p = points[ i ];\r\n\r\n        if ( p.x > maxX ) maxX = p.x;\r\n        else if ( p.x < minX ) minX = p.x;\r\n\r\n        if ( p.y > maxY ) maxY = p.y;\r\n        else if ( p.y < minY ) minY = p.y;\r\n\r\n        if ( v3 ) {\r\n\r\n            if ( p.z > maxZ ) maxZ = p.z;\r\n            else if ( p.z < minZ ) minZ = p.z;\r\n\r\n        }\r\n\r\n        sum.add( p );\r\n\r\n    }\r\n\r\n    var ret = {\r\n\r\n        minX: minX,\r\n        minY: minY,\r\n        maxX: maxX,\r\n        maxY: maxY,\r\n        centroid: sum.divideScalar( il )\r\n\r\n    };\r\n\r\n    if ( v3 ) {\r\n\r\n        ret.maxZ = maxZ;\r\n        ret.minZ = minZ;\r\n\r\n    }\r\n\r\n    return ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or ParticleSystem objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n    var pts = this.getPoints( divisions, true );\r\n    return this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistance sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n    var pts = this.getSpacedPoints( divisions, true );\r\n    return this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n    var geometry = new THREE.Geometry();\r\n\r\n    for ( var i = 0; i < points.length; i ++ ) {\r\n\r\n        geometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\r\n\r\n    }\r\n\r\n    return geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n    this.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n    var oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n    var i, il;\r\n\r\n    if ( !bends ) {\r\n\r\n        bends = this.bends;\r\n\r\n    }\r\n\r\n    for ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n        oldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n    }\r\n\r\n    return oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n    var oldPts = this.getSpacedPoints( segments );\r\n\r\n    var i, il;\r\n\r\n    if ( !bends ) {\r\n\r\n        bends = this.bends;\r\n\r\n    }\r\n\r\n    for ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n        oldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n    }\r\n\r\n    return oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n    var bounds = this.getBoundingBox();\r\n\r\n    var i, il, p, oldX, oldY, xNorm;\r\n\r\n    for ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n        p = oldPts[ i ];\r\n\r\n        oldX = p.x;\r\n        oldY = p.y;\r\n\r\n        xNorm = oldX / bounds.maxX;\r\n\r\n        // If using actual distance, for length > path, requires line extrusions\r\n        //xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n        xNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n        // check for out of bounds?\r\n\r\n        var pathPt = path.getPoint( xNorm );\r\n        var normal = path.getNormalVector( xNorm ).multiplyScalar( oldY );\r\n\r\n        p.x = pathPt.x + normal.x;\r\n        p.y = pathPt.y + normal.y;\r\n\r\n    }\r\n\r\n    return oldPts;\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Gyroscope = function () {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Gyroscope.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n    this.matrixAutoUpdate && this.updateMatrix();\r\n\r\n    // update matrixWorld\r\n\r\n    if ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n        if ( this.parent ) {\r\n\r\n            this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n            this.matrixWorld.decompose( this.translationWorld, this.quaternionWorld, this.scaleWorld );\r\n            this.matrix.decompose( this.translationObject, this.quaternionObject, this.scaleObject );\r\n\r\n            this.matrixWorld.compose( this.translationWorld, this.quaternionObject, this.scaleWorld );\r\n\r\n\r\n        } else {\r\n\r\n            this.matrixWorld.copy( this.matrix );\r\n\r\n        }\r\n\r\n\r\n        this.matrixWorldNeedsUpdate = false;\r\n\r\n        force = true;\r\n\r\n    }\r\n\r\n    // update children\r\n\r\n    for ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n        this.children[ i ].updateMatrixWorld( force );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype.translationWorld = new THREE.Vector3();\r\nTHREE.Gyroscope.prototype.translationObject = new THREE.Vector3();\r\nTHREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion();\r\nTHREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion();\r\nTHREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3();\r\nTHREE.Gyroscope.prototype.scaleObject = new THREE.Vector3();\r\n\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n    THREE.CurvePath.call(this);\r\n\r\n    this.actions = [];\r\n\r\n    if ( points ) {\r\n\r\n        this.fromPoints( points );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\r\nTHREE.PathActions = {\r\n\r\n    MOVE_TO: 'moveTo',\r\n    LINE_TO: 'lineTo',\r\n    QUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n    BEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n    CSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-rom spline\r\n    ARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n    ELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n    this.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n    for ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n        this.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n    };\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n    var args = Array.prototype.slice.call( arguments );\r\n    this.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n    var args = Array.prototype.slice.call( arguments );\r\n\r\n    var lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n    var x0 = lastargs[ lastargs.length - 2 ];\r\n    var y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n    var curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n    this.curves.push( curve );\r\n\r\n    this.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n    var args = Array.prototype.slice.call( arguments );\r\n\r\n    var lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n    var x0 = lastargs[ lastargs.length - 2 ];\r\n    var y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n    var curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n        new THREE.Vector2( aCPx, aCPy ),\r\n        new THREE.Vector2( aX, aY ) );\r\n    this.curves.push( curve );\r\n\r\n    this.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n                                               aCP2x, aCP2y,\r\n                                               aX, aY ) {\r\n\r\n    var args = Array.prototype.slice.call( arguments );\r\n\r\n    var lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n    var x0 = lastargs[ lastargs.length - 2 ];\r\n    var y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n    var curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n        new THREE.Vector2( aCP1x, aCP1y ),\r\n        new THREE.Vector2( aCP2x, aCP2y ),\r\n        new THREE.Vector2( aX, aY ) );\r\n    this.curves.push( curve );\r\n\r\n    this.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n    var args = Array.prototype.slice.call( arguments );\r\n    var lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n    var x0 = lastargs[ lastargs.length - 2 ];\r\n    var y0 = lastargs[ lastargs.length - 1 ];\r\n//---\r\n    var npts = [ new THREE.Vector2( x0, y0 ) ];\r\n    Array.prototype.push.apply( npts, pts );\r\n\r\n    var curve = new THREE.SplineCurve( npts );\r\n    this.curves.push( curve );\r\n\r\n    this.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n                                      aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    var lastargs = this.actions[ this.actions.length - 1].args;\r\n    var x0 = lastargs[ lastargs.length - 2 ];\r\n    var y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n    this.absarc(aX + x0, aY + y0, aRadius,\r\n        aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n                                         aStartAngle, aEndAngle, aClockwise ) {\r\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n};\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n                                          aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    var lastargs = this.actions[ this.actions.length - 1].args;\r\n    var x0 = lastargs[ lastargs.length - 2 ];\r\n    var y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius,\r\n        aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n                                             aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    var args = Array.prototype.slice.call( arguments );\r\n    var curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n        aStartAngle, aEndAngle, aClockwise );\r\n    this.curves.push( curve );\r\n\r\n    var lastPoint = curve.getPoint(1);\r\n    args.push(lastPoint.x);\r\n    args.push(lastPoint.y);\r\n\r\n    this.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n    if ( ! divisions ) divisions = 40;\r\n\r\n    var points = [];\r\n\r\n    for ( var i = 0; i < divisions; i ++ ) {\r\n\r\n        points.push( this.getPoint( i / divisions ) );\r\n\r\n        //if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n    }\r\n\r\n    // if ( closedPath ) {\r\n    //\r\n    // \tpoints.push( points[ 0 ] );\r\n    //\r\n    // }\r\n\r\n    return points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n    if (this.useSpacedPoints) {\r\n        console.log('tata');\r\n        return this.getSpacedPoints( divisions, closedPath );\r\n    }\r\n\r\n    divisions = divisions || 12;\r\n\r\n    var points = [];\r\n\r\n    var i, il, item, action, args;\r\n    var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n        laste, j,\r\n        t, tx, ty;\r\n\r\n    for ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n        item = this.actions[ i ];\r\n\r\n        action = item.action;\r\n        args = item.args;\r\n\r\n        switch( action ) {\r\n\r\n            case THREE.PathActions.MOVE_TO:\r\n\r\n                points.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n                break;\r\n\r\n            case THREE.PathActions.LINE_TO:\r\n\r\n                points.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n                break;\r\n\r\n            case THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n                cpx  = args[ 2 ];\r\n                cpy  = args[ 3 ];\r\n\r\n                cpx1 = args[ 0 ];\r\n                cpy1 = args[ 1 ];\r\n\r\n                if ( points.length > 0 ) {\r\n\r\n                    laste = points[ points.length - 1 ];\r\n\r\n                    cpx0 = laste.x;\r\n                    cpy0 = laste.y;\r\n\r\n                } else {\r\n\r\n                    laste = this.actions[ i - 1 ].args;\r\n\r\n                    cpx0 = laste[ laste.length - 2 ];\r\n                    cpy0 = laste[ laste.length - 1 ];\r\n\r\n                }\r\n\r\n                for ( j = 1; j <= divisions; j ++ ) {\r\n\r\n                    t = j / divisions;\r\n\r\n                    tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n                    ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n                    points.push( new THREE.Vector2( tx, ty ) );\r\n\r\n                }\r\n\r\n                break;\r\n\r\n            case THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n                cpx  = args[ 4 ];\r\n                cpy  = args[ 5 ];\r\n\r\n                cpx1 = args[ 0 ];\r\n                cpy1 = args[ 1 ];\r\n\r\n                cpx2 = args[ 2 ];\r\n                cpy2 = args[ 3 ];\r\n\r\n                if ( points.length > 0 ) {\r\n\r\n                    laste = points[ points.length - 1 ];\r\n\r\n                    cpx0 = laste.x;\r\n                    cpy0 = laste.y;\r\n\r\n                } else {\r\n\r\n                    laste = this.actions[ i - 1 ].args;\r\n\r\n                    cpx0 = laste[ laste.length - 2 ];\r\n                    cpy0 = laste[ laste.length - 1 ];\r\n\r\n                }\r\n\r\n\r\n                for ( j = 1; j <= divisions; j ++ ) {\r\n\r\n                    t = j / divisions;\r\n\r\n                    tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n                    ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n                    points.push( new THREE.Vector2( tx, ty ) );\r\n\r\n                }\r\n\r\n                break;\r\n\r\n            case THREE.PathActions.CSPLINE_THRU:\r\n\r\n                laste = this.actions[ i - 1 ].args;\r\n\r\n                var last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n                var spts = [ last ];\r\n\r\n                var n = divisions * args[ 0 ].length;\r\n\r\n                spts = spts.concat( args[ 0 ] );\r\n\r\n                var spline = new THREE.SplineCurve( spts );\r\n\r\n                for ( j = 1; j <= n; j ++ ) {\r\n\r\n                    points.push( spline.getPointAt( j / n ) ) ;\r\n\r\n                }\r\n\r\n                break;\r\n\r\n            case THREE.PathActions.ARC:\r\n\r\n                var aX = args[ 0 ], aY = args[ 1 ],\r\n                    aRadius = args[ 2 ],\r\n                    aStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n                    aClockwise = !!args[ 5 ];\r\n\r\n                var deltaAngle = aEndAngle - aStartAngle;\r\n                var angle;\r\n                var tdivisions = divisions * 2;\r\n\r\n                for ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n                    t = j / tdivisions;\r\n\r\n                    if ( ! aClockwise ) {\r\n\r\n                        t = 1 - t;\r\n\r\n                    }\r\n\r\n                    angle = aStartAngle + t * deltaAngle;\r\n\r\n                    tx = aX + aRadius * Math.cos( angle );\r\n                    ty = aY + aRadius * Math.sin( angle );\r\n\r\n                    //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n                    points.push( new THREE.Vector2( tx, ty ) );\r\n\r\n                }\r\n\r\n                //console.log(points);\r\n\r\n                break;\r\n\r\n            case THREE.PathActions.ELLIPSE:\r\n\r\n                var aX = args[ 0 ], aY = args[ 1 ],\r\n                    xRadius = args[ 2 ],\r\n                    yRadius = args[ 3 ],\r\n                    aStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n                    aClockwise = !!args[ 6 ];\r\n\r\n\r\n                var deltaAngle = aEndAngle - aStartAngle;\r\n                var angle;\r\n                var tdivisions = divisions * 2;\r\n\r\n                for ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n                    t = j / tdivisions;\r\n\r\n                    if ( ! aClockwise ) {\r\n\r\n                        t = 1 - t;\r\n\r\n                    }\r\n\r\n                    angle = aStartAngle + t * deltaAngle;\r\n\r\n                    tx = aX + xRadius * Math.cos( angle );\r\n                    ty = aY + yRadius * Math.sin( angle );\r\n\r\n                    //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n                    points.push( new THREE.Vector2( tx, ty ) );\r\n\r\n                }\r\n\r\n                //console.log(points);\r\n\r\n                break;\r\n\r\n        } // end switch\r\n\r\n    }\r\n\r\n\r\n\r\n    // Normalize to remove the closing point by default.\r\n    var lastPoint = points[ points.length - 1];\r\n    var EPSILON = 0.0000000001;\r\n    if ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\r\n        Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\r\n        points.splice( points.length - 1, 1);\r\n    if ( closedPath ) {\r\n\r\n        points.push( points[ 0 ] );\r\n\r\n    }\r\n\r\n    return points;\r\n\r\n};\r\n\r\n// Breaks path into shapes\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW ) {\r\n\r\n    var i, il, item, action, args;\r\n\r\n    var subPaths = [], lastPath = new THREE.Path();\r\n\r\n    for ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n        item = this.actions[ i ];\r\n\r\n        args = item.args;\r\n        action = item.action;\r\n\r\n        if ( action == THREE.PathActions.MOVE_TO ) {\r\n\r\n            if ( lastPath.actions.length != 0 ) {\r\n\r\n                subPaths.push( lastPath );\r\n                lastPath = new THREE.Path();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        lastPath[ action ].apply( lastPath, args );\r\n\r\n    }\r\n\r\n    if ( lastPath.actions.length != 0 ) {\r\n\r\n        subPaths.push( lastPath );\r\n\r\n    }\r\n\r\n    // console.log(subPaths);\r\n\r\n    if ( subPaths.length == 0 ) return [];\r\n\r\n    var solid, tmpPath, tmpShape, shapes = [];\r\n\r\n    if ( subPaths.length == 1) {\r\n\r\n        tmpPath = subPaths[0];\r\n        tmpShape = new THREE.Shape();\r\n        tmpShape.actions = tmpPath.actions;\r\n        tmpShape.curves = tmpPath.curves;\r\n        shapes.push( tmpShape );\r\n        return shapes;\r\n\r\n    }\r\n\r\n    var holesFirst = !THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n    holesFirst = isCCW ? !holesFirst : holesFirst;\r\n\r\n    // console.log(\"Holes first\", holesFirst);\r\n\r\n    if ( holesFirst ) {\r\n\r\n        tmpShape = new THREE.Shape();\r\n\r\n        for ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n            tmpPath = subPaths[ i ];\r\n            solid = THREE.Shape.Utils.isClockWise( tmpPath.getPoints() );\r\n            solid = isCCW ? !solid : solid;\r\n\r\n            if ( solid ) {\r\n\r\n                tmpShape.actions = tmpPath.actions;\r\n                tmpShape.curves = tmpPath.curves;\r\n\r\n                shapes.push( tmpShape );\r\n                tmpShape = new THREE.Shape();\r\n\r\n                //console.log('cw', i);\r\n\r\n            } else {\r\n\r\n                tmpShape.holes.push( tmpPath );\r\n\r\n                //console.log('ccw', i);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        // Shapes first\r\n        tmpShape = undefined;\r\n\r\n        for ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n            tmpPath = subPaths[ i ];\r\n            solid = THREE.Shape.Utils.isClockWise( tmpPath.getPoints() );\r\n            solid = isCCW ? !solid : solid;\r\n\r\n            if ( solid ) {\r\n\r\n                if ( tmpShape ) shapes.push( tmpShape );\r\n\r\n                tmpShape = new THREE.Shape();\r\n                tmpShape.actions = tmpPath.actions;\r\n                tmpShape.curves = tmpPath.curves;\r\n\r\n            } else {\r\n\r\n                tmpShape.holes.push( tmpPath );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        shapes.push( tmpShape );\r\n\r\n    }\r\n\r\n    //console.log(\"shape\", shapes);\r\n\r\n    return shapes;\r\n\r\n};\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n    THREE.Path.apply( this, arguments );\r\n    this.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n    var extruded = new THREE.ExtrudeGeometry( this, options );\r\n    return extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n    var geometry = new THREE.ShapeGeometry( this, options );\r\n    return geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n    var i, il = this.holes.length, holesPts = [];\r\n\r\n    for ( i = 0; i < il; i ++ ) {\r\n\r\n        holesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n    }\r\n\r\n    return holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n    var i, il = this.holes.length, holesPts = [];\r\n\r\n    for ( i = 0; i < il; i ++ ) {\r\n\r\n        holesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n    }\r\n\r\n    return holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n    return {\r\n\r\n        shape: this.getTransformedPoints( divisions ),\r\n        holes: this.getPointsHoles( divisions )\r\n\r\n    };\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n    if (this.useSpacedPoints) {\r\n        return this.extractAllSpacedPoints(divisions);\r\n    }\r\n\r\n    return this.extractAllPoints(divisions);\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n    return {\r\n\r\n        shape: this.getTransformedSpacedPoints( divisions ),\r\n        holes: this.getSpacedPointsHoles( divisions )\r\n\r\n    };\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n    /*\r\n\t\tcontour - array of vector2 for contour\r\n\t\tholes   - array of array of vector2\r\n\t*/\r\n\r\n    removeHoles: function ( contour, holes ) {\r\n\r\n        var shape = contour.concat(); // work on this shape\r\n        var allpoints = shape.concat();\r\n\r\n        /* For each isolated shape, find the closest points and break to the hole to allow triangulation */\r\n\r\n\r\n        var prevShapeVert, nextShapeVert,\r\n            prevHoleVert, nextHoleVert,\r\n            holeIndex, shapeIndex,\r\n            shapeId, shapeGroup,\r\n            h, h2,\r\n            hole, shortest, d,\r\n            p, pts1, pts2,\r\n            tmpShape1, tmpShape2,\r\n            tmpHole1, tmpHole2,\r\n            verts = [];\r\n\r\n        for ( h = 0; h < holes.length; h ++ ) {\r\n\r\n            hole = holes[ h ];\r\n\r\n            /*\r\n\t\t\tshapeholes[ h ].concat(); // preserves original\r\n\t\t\tholes.push( hole );\r\n\t\t\t*/\r\n\r\n            Array.prototype.push.apply( allpoints, hole );\r\n\r\n            shortest = Number.POSITIVE_INFINITY;\r\n\r\n\r\n            // Find the shortest pair of pts between shape and hole\r\n\r\n            // Note: Actually, I'm not sure now if we could optimize this to be faster than O(m*n)\r\n            // Using distanceToSquared() intead of distanceTo() should speed a little\r\n            // since running square roots operations are reduced.\r\n\r\n            for ( h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n                pts1 = hole[ h2 ];\r\n                var dist = [];\r\n\r\n                for ( p = 0; p < shape.length; p++ ) {\r\n\r\n                    pts2 = shape[ p ];\r\n                    d = pts1.distanceToSquared( pts2 );\r\n                    dist.push( d );\r\n\r\n                    if ( d < shortest ) {\r\n\r\n                        shortest = d;\r\n                        holeIndex = h2;\r\n                        shapeIndex = p;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            //console.log(\"shortest\", shortest, dist);\r\n\r\n            prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;\r\n            prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;\r\n\r\n            var areaapts = [\r\n\r\n                hole[ holeIndex ],\r\n                shape[ shapeIndex ],\r\n                shape[ prevShapeVert ]\r\n\r\n            ];\r\n\r\n            var areaa = THREE.FontUtils.Triangulate.area( areaapts );\r\n\r\n            var areabpts = [\r\n\r\n                hole[ holeIndex ],\r\n                hole[ prevHoleVert ],\r\n                shape[ shapeIndex ]\r\n\r\n            ];\r\n\r\n            var areab = THREE.FontUtils.Triangulate.area( areabpts );\r\n\r\n            var shapeOffset = 1;\r\n            var holeOffset = -1;\r\n\r\n            var oldShapeIndex = shapeIndex, oldHoleIndex = holeIndex;\r\n            shapeIndex += shapeOffset;\r\n            holeIndex += holeOffset;\r\n\r\n            if ( shapeIndex < 0 ) { shapeIndex += shape.length;  }\r\n            shapeIndex %= shape.length;\r\n\r\n            if ( holeIndex < 0 ) { holeIndex += hole.length;  }\r\n            holeIndex %= hole.length;\r\n\r\n            prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;\r\n            prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;\r\n\r\n            areaapts = [\r\n\r\n                hole[ holeIndex ],\r\n                shape[ shapeIndex ],\r\n                shape[ prevShapeVert ]\r\n\r\n            ];\r\n\r\n            var areaa2 = THREE.FontUtils.Triangulate.area( areaapts );\r\n\r\n            areabpts = [\r\n\r\n                hole[ holeIndex ],\r\n                hole[ prevHoleVert ],\r\n                shape[ shapeIndex ]\r\n\r\n            ];\r\n\r\n            var areab2 = THREE.FontUtils.Triangulate.area( areabpts );\r\n            //console.log(areaa,areab ,areaa2,areab2, ( areaa + areab ),  ( areaa2 + areab2 ));\r\n\r\n            if ( ( areaa + areab ) > ( areaa2 + areab2 ) ) {\r\n\r\n                // In case areas are not correct.\r\n                //console.log(\"USE THIS\");\r\n\r\n                shapeIndex = oldShapeIndex;\r\n                holeIndex = oldHoleIndex ;\r\n\r\n                if ( shapeIndex < 0 ) { shapeIndex += shape.length;  }\r\n                shapeIndex %= shape.length;\r\n\r\n                if ( holeIndex < 0 ) { holeIndex += hole.length;  }\r\n                holeIndex %= hole.length;\r\n\r\n                prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;\r\n                prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;\r\n\r\n            } else {\r\n\r\n                //console.log(\"USE THAT \")\r\n\r\n            }\r\n\r\n            tmpShape1 = shape.slice( 0, shapeIndex );\r\n            tmpShape2 = shape.slice( shapeIndex );\r\n            tmpHole1 = hole.slice( holeIndex );\r\n            tmpHole2 = hole.slice( 0, holeIndex );\r\n\r\n            // Should check orders here again?\r\n\r\n            var trianglea = [\r\n\r\n                hole[ holeIndex ],\r\n                shape[ shapeIndex ],\r\n                shape[ prevShapeVert ]\r\n\r\n            ];\r\n\r\n            var triangleb = [\r\n\r\n                hole[ holeIndex ] ,\r\n                hole[ prevHoleVert ],\r\n                shape[ shapeIndex ]\r\n\r\n            ];\r\n\r\n            verts.push( trianglea );\r\n            verts.push( triangleb );\r\n\r\n            shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n        }\r\n\r\n        return {\r\n\r\n            shape:shape, \t\t/* shape with no holes */\r\n            isolatedPts: verts, /* isolated faces */\r\n            allpoints: allpoints\r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n    triangulateShape: function ( contour, holes ) {\r\n\r\n        var shapeWithoutHoles = THREE.Shape.Utils.removeHoles( contour, holes );\r\n\r\n        var shape = shapeWithoutHoles.shape,\r\n            allpoints = shapeWithoutHoles.allpoints,\r\n            isolatedPts = shapeWithoutHoles.isolatedPts;\r\n\r\n        var triangles = THREE.FontUtils.Triangulate( shape, false ); // True returns indices for points of spooled shape\r\n\r\n        // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n        //console.log( \"triangles\",triangles, triangles.length );\r\n        //console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n        var i, il, f, face,\r\n            key, index,\r\n            allPointsMap = {},\r\n            isolatedPointsMap = {};\r\n\r\n        // prepare all points map\r\n\r\n        for ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n            key = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n            if ( allPointsMap[ key ] !== undefined ) {\r\n\r\n                console.log( \"Duplicate point\", key );\r\n\r\n            }\r\n\r\n            allPointsMap[ key ] = i;\r\n\r\n        }\r\n\r\n        // check all face vertices against all points map\r\n\r\n        for ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n            face = triangles[ i ];\r\n\r\n            for ( f = 0; f < 3; f ++ ) {\r\n\r\n                key = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n                index = allPointsMap[ key ];\r\n\r\n                if ( index !== undefined ) {\r\n\r\n                    face[ f ] = index;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // check isolated points vertices against all points map\r\n\r\n        for ( i = 0, il = isolatedPts.length; i < il; i ++ ) {\r\n\r\n            face = isolatedPts[ i ];\r\n\r\n            for ( f = 0; f < 3; f ++ ) {\r\n\r\n                key = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n                index = allPointsMap[ key ];\r\n\r\n                if ( index !== undefined ) {\r\n\r\n                    face[ f ] = index;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return triangles.concat( isolatedPts );\r\n\r\n    }, // end triangulate shapes\r\n\r\n    /*\r\n\ttriangulate2 : function( pts, holes ) {\r\n\r\n\t\t// For use with Poly2Tri.js\r\n\r\n\t\tvar allpts = pts.concat();\r\n\t\tvar shape = [];\r\n\t\tfor (var p in pts) {\r\n\t\t\tshape.push(new js.poly2tri.Point(pts[p].x, pts[p].y));\r\n\t\t}\r\n\r\n\t\tvar swctx = new js.poly2tri.SweepContext(shape);\r\n\r\n\t\tfor (var h in holes) {\r\n\t\t\tvar aHole = holes[h];\r\n\t\t\tvar newHole = []\r\n\t\t\tfor (i in aHole) {\r\n\t\t\t\tnewHole.push(new js.poly2tri.Point(aHole[i].x, aHole[i].y));\r\n\t\t\t\tallpts.push(aHole[i]);\r\n\t\t\t}\r\n\t\t\tswctx.AddHole(newHole);\r\n\t\t}\r\n\r\n\t\tvar find;\r\n\t\tvar findIndexForPt = function (pt) {\r\n\t\t\tfind = new THREE.Vector2(pt.x, pt.y);\r\n\t\t\tvar p;\r\n\t\t\tfor (p=0, pl = allpts.length; p<pl; p++) {\r\n\t\t\t\tif (allpts[p].equals(find)) return p;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\r\n\t\t// triangulate\r\n\t\tjs.poly2tri.sweep.Triangulate(swctx);\r\n\r\n\t\tvar triangles =  swctx.GetTriangles();\r\n\t\tvar tr ;\r\n\t\tvar facesPts = [];\r\n\t\tfor (var t in triangles) {\r\n\t\t\ttr =  triangles[t];\r\n\t\t\tfacesPts.push([\r\n\t\t\t\tfindIndexForPt(tr.GetPoint(0)),\r\n\t\t\t\tfindIndexForPt(tr.GetPoint(1)),\r\n\t\t\t\tfindIndexForPt(tr.GetPoint(2))\r\n\t\t\t\t\t]);\r\n\t\t}\r\n\r\n\r\n\t//\tconsole.log(facesPts);\r\n\t//\tconsole.log(\"triangles\", triangles.length, triangles);\r\n\r\n\t\t// Returns array of faces with 3 element each\r\n\treturn facesPts;\r\n\t},\r\n*/\r\n\r\n    isClockWise: function ( pts ) {\r\n\r\n        return THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n    },\r\n\r\n    // Bezier Curves formulas obtained from\r\n    // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n    // Quad Bezier Functions\r\n\r\n    b2p0: function ( t, p ) {\r\n\r\n        var k = 1 - t;\r\n        return k * k * p;\r\n\r\n    },\r\n\r\n    b2p1: function ( t, p ) {\r\n\r\n        return 2 * ( 1 - t ) * t * p;\r\n\r\n    },\r\n\r\n    b2p2: function ( t, p ) {\r\n\r\n        return t * t * p;\r\n\r\n    },\r\n\r\n    b2: function ( t, p0, p1, p2 ) {\r\n\r\n        return this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n    },\r\n\r\n    // Cubic Bezier Functions\r\n\r\n    b3p0: function ( t, p ) {\r\n\r\n        var k = 1 - t;\r\n        return k * k * k * p;\r\n\r\n    },\r\n\r\n    b3p1: function ( t, p ) {\r\n\r\n        var k = 1 - t;\r\n        return 3 * k * k * t * p;\r\n\r\n    },\r\n\r\n    b3p2: function ( t, p ) {\r\n\r\n        var k = 1 - t;\r\n        return 3 * k * t * t * p;\r\n\r\n    },\r\n\r\n    b3p3: function ( t, p ) {\r\n\r\n        return t * t * t * p;\r\n\r\n    },\r\n\r\n    b3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n        return this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n    this.v1 = v1;\r\n    this.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n    var point = this.v2.clone().sub(this.v1);\r\n    point.multiplyScalar( t ).add( this.v1 );\r\n\r\n    return point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n    return this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n    var tangent = this.v2.clone().sub(this.v1);\r\n\r\n    return tangent.normalize();\r\n\r\n};\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n    this.v0 = v0;\r\n    this.v1 = v1;\r\n    this.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n    var tx, ty;\r\n\r\n    tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n    ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n    return new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n    var tx, ty;\r\n\r\n    tx = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n    ty = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n    // returns unit vector\r\n\r\n    var tangent = new THREE.Vector2( tx, ty );\r\n    tangent.normalize();\r\n\r\n    return tangent;\r\n\r\n};\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n    this.v0 = v0;\r\n    this.v1 = v1;\r\n    this.v2 = v2;\r\n    this.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n    var tx, ty;\r\n\r\n    tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n    ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n    return new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n    var tx, ty;\r\n\r\n    tx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n    ty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n    var tangent = new THREE.Vector2( tx, ty );\r\n    tangent.normalize();\r\n\r\n    return tangent;\r\n\r\n};\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n    this.points = (points == undefined) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n    var v = new THREE.Vector2();\r\n    var c = [];\r\n    var points = this.points, point, intPoint, weight;\r\n    point = ( points.length - 1 ) * t;\r\n\r\n    intPoint = Math.floor( point );\r\n    weight = point - intPoint;\r\n\r\n    c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\r\n    c[ 1 ] = intPoint;\r\n    c[ 2 ] = intPoint  > points.length - 2 ? points.length -1 : intPoint + 1;\r\n    c[ 3 ] = intPoint  > points.length - 3 ? points.length -1 : intPoint + 2;\r\n\r\n    v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );\r\n    v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );\r\n\r\n    return v;\r\n\r\n};\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    this.aX = aX;\r\n    this.aY = aY;\r\n\r\n    this.xRadius = xRadius;\r\n    this.yRadius = yRadius;\r\n\r\n    this.aStartAngle = aStartAngle;\r\n    this.aEndAngle = aEndAngle;\r\n\r\n    this.aClockwise = aClockwise;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n    var angle;\r\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n    if ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n    if ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n    if ( this.aClockwise === true ) {\r\n\r\n        angle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n    } else {\r\n\r\n        angle = this.aStartAngle + t * deltaAngle;\r\n\r\n    }\r\n\r\n    var tx = this.aX + this.xRadius * Math.cos( angle );\r\n    var ty = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n    return new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    THREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n    function ( v1, v2 ) {\r\n\r\n        this.v1 = v1;\r\n        this.v2 = v2;\r\n\r\n    },\r\n\r\n    function ( t ) {\r\n\r\n        var r = new THREE.Vector3();\r\n\r\n\r\n        r.subVectors( this.v2, this.v1 ); // diff\r\n        r.multiplyScalar( t );\r\n        r.add( this.v1 );\r\n\r\n        return r;\r\n\r\n    }\r\n\r\n);\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n    function ( v0, v1, v2 ) {\r\n\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        this.v2 = v2;\r\n\r\n    },\r\n\r\n    function ( t ) {\r\n\r\n        var tx, ty, tz;\r\n\r\n        tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n        ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n        tz = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n        return new THREE.Vector3( tx, ty, tz );\r\n\r\n    }\r\n\r\n);\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n    function ( v0, v1, v2, v3 ) {\r\n\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        this.v2 = v2;\r\n        this.v3 = v3;\r\n\r\n    },\r\n\r\n    function ( t ) {\r\n\r\n        var tx, ty, tz;\r\n\r\n        tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n        ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n        tz = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n        return new THREE.Vector3( tx, ty, tz );\r\n\r\n    }\r\n\r\n);\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n    function ( points /* array of Vector3 */) {\r\n\r\n        this.points = (points == undefined) ? [] : points;\r\n\r\n    },\r\n\r\n    function ( t ) {\r\n\r\n        var v = new THREE.Vector3();\r\n        var c = [];\r\n        var points = this.points, point, intPoint, weight;\r\n        point = ( points.length - 1 ) * t;\r\n\r\n        intPoint = Math.floor( point );\r\n        weight = point - intPoint;\r\n\r\n        c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\r\n        c[ 1 ] = intPoint;\r\n        c[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;\r\n        c[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;\r\n\r\n        var pt0 = points[ c[0] ],\r\n            pt1 = points[ c[1] ],\r\n            pt2 = points[ c[2] ],\r\n            pt3 = points[ c[3] ];\r\n\r\n        v.x = THREE.Curve.Utils.interpolate(pt0.x, pt1.x, pt2.x, pt3.x, weight);\r\n        v.y = THREE.Curve.Utils.interpolate(pt0.y, pt1.y, pt2.y, pt3.y, weight);\r\n        v.z = THREE.Curve.Utils.interpolate(pt0.z, pt1.z, pt2.z, pt3.z, weight);\r\n\r\n        return v;\r\n\r\n    }\r\n\r\n);\r\n\r\n\r\n// THREE.SplineCurve3.prototype.getTangent = function(t) {\r\n// \t\tvar v = new THREE.Vector3();\r\n// \t\tvar c = [];\r\n// \t\tvar points = this.points, point, intPoint, weight;\r\n// \t\tpoint = ( points.length - 1 ) * t;\r\n\r\n// \t\tintPoint = Math.floor( point );\r\n// \t\tweight = point - intPoint;\r\n\r\n// \t\tc[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\r\n// \t\tc[ 1 ] = intPoint;\r\n// \t\tc[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;\r\n// \t\tc[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;\r\n\r\n// \t\tvar pt0 = points[ c[0] ],\r\n// \t\t\tpt1 = points[ c[1] ],\r\n// \t\t\tpt2 = points[ c[2] ],\r\n// \t\t\tpt3 = points[ c[3] ];\r\n\r\n// \t// t = weight;\r\n// \tv.x = THREE.Curve.Utils.tangentSpline( t, pt0.x, pt1.x, pt2.x, pt3.x );\r\n// \tv.y = THREE.Curve.Utils.tangentSpline( t, pt0.y, pt1.y, pt2.y, pt3.y );\r\n// \tv.z = THREE.Curve.Utils.tangentSpline( t, pt0.z, pt1.z, pt2.z, pt3.z );\r\n\r\n// \treturn v;\r\n\r\n// }\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n    function ( points /* array of Vector3 */) {\r\n\r\n        this.points = (points == undefined) ? [] : points;\r\n\r\n    },\r\n\r\n    function ( t ) {\r\n\r\n        var v = new THREE.Vector3();\r\n        var c = [];\r\n        var points = this.points, point, intPoint, weight;\r\n        point = ( points.length - 0 ) * t;\r\n        // This needs to be from 0-length +1\r\n\r\n        intPoint = Math.floor( point );\r\n        weight = point - intPoint;\r\n\r\n        intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n        c[ 0 ] = ( intPoint - 1 ) % points.length;\r\n        c[ 1 ] = ( intPoint ) % points.length;\r\n        c[ 2 ] = ( intPoint + 1 ) % points.length;\r\n        c[ 3 ] = ( intPoint + 2 ) % points.length;\r\n\r\n        v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );\r\n        v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );\r\n        v.z = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].z, points[ c[ 1 ] ].z, points[ c[ 2 ] ].z, points[ c[ 3 ] ].z, weight );\r\n\r\n        return v;\r\n\r\n    }\r\n\r\n);\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = (function() {\r\n\r\n    var playing = [];\r\n    var library = {};\r\n    var that    = {};\r\n\r\n\r\n    //--- update ---\r\n\r\n    that.update = function( deltaTimeMS ) {\r\n\r\n        for( var i = 0; i < playing.length; i ++ )\r\n            playing[ i ].update( deltaTimeMS );\r\n\r\n    };\r\n\r\n\r\n    //--- add ---\r\n\r\n    that.addToUpdate = function( animation ) {\r\n\r\n        if ( playing.indexOf( animation ) === -1 )\r\n            playing.push( animation );\r\n\r\n    };\r\n\r\n\r\n    //--- remove ---\r\n\r\n    that.removeFromUpdate = function( animation ) {\r\n\r\n        var index = playing.indexOf( animation );\r\n\r\n        if( index !== -1 )\r\n            playing.splice( index, 1 );\r\n\r\n    };\r\n\r\n\r\n    //--- add ---\r\n\r\n    that.add = function( data ) {\r\n\r\n        if ( library[ data.name ] !== undefined )\r\n            console.log( \"THREE.AnimationHandler.add: Warning! \" + data.name + \" already exists in library. Overwriting.\" );\r\n\r\n        library[ data.name ] = data;\r\n        initData( data );\r\n\r\n    };\r\n\r\n\r\n    //--- get ---\r\n\r\n    that.get = function( name ) {\r\n\r\n        if ( typeof name === \"string\" ) {\r\n\r\n            if ( library[ name ] ) {\r\n\r\n                return library[ name ];\r\n\r\n            } else {\r\n\r\n                console.log( \"THREE.AnimationHandler.get: Couldn't find animation \" + name );\r\n                return null;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            // todo: add simple tween library\r\n\r\n        }\r\n\r\n    };\r\n\r\n    //--- parse ---\r\n\r\n    that.parse = function( root ) {\r\n\r\n        // setup hierarchy\r\n\r\n        var hierarchy = [];\r\n\r\n        if ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n            for( var b = 0; b < root.bones.length; b++ ) {\r\n\r\n                hierarchy.push( root.bones[ b ] );\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            parseRecurseHierarchy( root, hierarchy );\r\n\r\n        }\r\n\r\n        return hierarchy;\r\n\r\n    };\r\n\r\n    var parseRecurseHierarchy = function( root, hierarchy ) {\r\n\r\n        hierarchy.push( root );\r\n\r\n        for( var c = 0; c < root.children.length; c++ )\r\n            parseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n    }\r\n\r\n\r\n    //--- init data ---\r\n\r\n    var initData = function( data ) {\r\n\r\n        if( data.initialized === true )\r\n            return;\r\n\r\n\r\n        // loop through all keys\r\n\r\n        for( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n            for( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n                // remove minus times\r\n\r\n                if( data.hierarchy[ h ].keys[ k ].time < 0 )\r\n                    data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\r\n                // create quaternions\r\n\r\n                if( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n                    !( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n                    var quat = data.hierarchy[ h ].keys[ k ].rot;\r\n                    data.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion( quat[0], quat[1], quat[2], quat[3] );\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // prepare morph target keys\r\n\r\n            if( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n                // get all used\r\n\r\n                var usedMorphTargets = {};\r\n\r\n                for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n                    for ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n                        var morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n                        usedMorphTargets[ morphTargetName ] = -1;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                data.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n                // set all used on all frames\r\n\r\n                for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n                    var influences = {};\r\n\r\n                    for ( var morphTargetName in usedMorphTargets ) {\r\n\r\n                        for ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n                            if ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n                                influences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n                                break;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n                            influences[ morphTargetName ] = 0;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    data.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // remove all keys that are on the same time\r\n\r\n            for ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n                if ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n                    data.hierarchy[ h ].keys.splice( k, 1 );\r\n                    k --;\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // set index\r\n\r\n            for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n                data.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        // JIT\r\n\r\n        var lengthInFrames = parseInt( data.length * data.fps, 10 );\r\n\r\n        data.JIT = {};\r\n        data.JIT.hierarchy = [];\r\n\r\n        for( var h = 0; h < data.hierarchy.length; h ++ )\r\n            data.JIT.hierarchy.push( new Array( lengthInFrames ) );\r\n\r\n\r\n        // done\r\n\r\n        data.initialized = true;\r\n\r\n    };\r\n\r\n\r\n    // interpolation types\r\n\r\n    that.LINEAR = 0;\r\n    that.CATMULLROM = 1;\r\n    that.CATMULLROM_FORWARD = 2;\r\n\r\n    return that;\r\n\r\n}());\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, name, interpolationType ) {\r\n\r\n    this.root = root;\r\n    this.data = THREE.AnimationHandler.get( name );\r\n    this.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n    this.currentTime = 0;\r\n    this.timeScale = 1;\r\n\r\n    this.isPlaying = false;\r\n    this.isPaused = true;\r\n    this.loop = true;\r\n\r\n    this.interpolationType = interpolationType !== undefined ? interpolationType : THREE.AnimationHandler.LINEAR;\r\n\r\n    this.points = [];\r\n    this.target = new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.play = function ( loop, startTimeMS ) {\r\n\r\n    if ( this.isPlaying === false ) {\r\n\r\n        this.isPlaying = true;\r\n        this.loop = loop !== undefined ? loop : true;\r\n        this.currentTime = startTimeMS !== undefined ? startTimeMS : 0;\r\n\r\n        // reset key cache\r\n\r\n        var h, hl = this.hierarchy.length,\r\n            object;\r\n\r\n        for ( h = 0; h < hl; h ++ ) {\r\n\r\n            object = this.hierarchy[ h ];\r\n\r\n            object.matrixAutoUpdate = true;\r\n\r\n            if ( object.animationCache === undefined ) {\r\n\r\n                object.animationCache = {};\r\n                object.animationCache.prevKey = { pos: 0, rot: 0, scl: 0 };\r\n                object.animationCache.nextKey = { pos: 0, rot: 0, scl: 0 };\r\n                object.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;\r\n\r\n            }\r\n\r\n            var prevKey = object.animationCache.prevKey;\r\n            var nextKey = object.animationCache.nextKey;\r\n\r\n            prevKey.pos = this.data.hierarchy[ h ].keys[ 0 ];\r\n            prevKey.rot = this.data.hierarchy[ h ].keys[ 0 ];\r\n            prevKey.scl = this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n            nextKey.pos = this.getNextKeyWith( \"pos\", h, 1 );\r\n            nextKey.rot = this.getNextKeyWith( \"rot\", h, 1 );\r\n            nextKey.scl = this.getNextKeyWith( \"scl\", h, 1 );\r\n\r\n        }\r\n\r\n        this.update( 0 );\r\n\r\n    }\r\n\r\n    this.isPaused = false;\r\n\r\n    THREE.AnimationHandler.addToUpdate( this );\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.pause = function() {\r\n\r\n    if ( this.isPaused === true ) {\r\n\r\n        THREE.AnimationHandler.addToUpdate( this );\r\n\r\n    } else {\r\n\r\n        THREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n    }\r\n\r\n    this.isPaused = !this.isPaused;\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.stop = function() {\r\n\r\n    this.isPlaying = false;\r\n    this.isPaused  = false;\r\n    THREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.update = function ( deltaTimeMS ) {\r\n\r\n    // early out\r\n\r\n    if ( this.isPlaying === false ) return;\r\n\r\n\r\n    // vars\r\n\r\n    var types = [ \"pos\", \"rot\", \"scl\" ];\r\n    var type;\r\n    var scale;\r\n    var vector;\r\n    var prevXYZ, nextXYZ;\r\n    var prevKey, nextKey;\r\n    var object;\r\n    var animationCache;\r\n    var frame;\r\n    var JIThierarchy = this.data.JIT.hierarchy;\r\n    var currentTime, unloopedCurrentTime;\r\n    var currentPoint, forwardPoint, angle;\r\n\r\n\r\n    this.currentTime += deltaTimeMS * this.timeScale;\r\n\r\n    unloopedCurrentTime = this.currentTime;\r\n    currentTime = this.currentTime = this.currentTime % this.data.length;\r\n    frame = parseInt( Math.min( currentTime * this.data.fps, this.data.length * this.data.fps ), 10 );\r\n\r\n\r\n    for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n        object = this.hierarchy[ h ];\r\n        animationCache = object.animationCache;\r\n\r\n        // loop through pos/rot/scl\r\n\r\n        for ( var t = 0; t < 3; t ++ ) {\r\n\r\n            // get keys\r\n\r\n            type    = types[ t ];\r\n            prevKey = animationCache.prevKey[ type ];\r\n            nextKey = animationCache.nextKey[ type ];\r\n\r\n            // switch keys?\r\n\r\n            if ( nextKey.time <= unloopedCurrentTime ) {\r\n\r\n                // did we loop?\r\n\r\n                if ( currentTime < unloopedCurrentTime ) {\r\n\r\n                    if ( this.loop ) {\r\n\r\n                        prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n                        nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n                        while( nextKey.time < currentTime ) {\r\n\r\n                            prevKey = nextKey;\r\n                            nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        this.stop();\r\n                        return;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    do {\r\n\r\n                        prevKey = nextKey;\r\n                        nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n                    } while( nextKey.time < currentTime )\r\n\r\n                }\r\n\r\n                animationCache.prevKey[ type ] = prevKey;\r\n                animationCache.nextKey[ type ] = nextKey;\r\n\r\n            }\r\n\r\n\r\n            object.matrixAutoUpdate = true;\r\n            object.matrixWorldNeedsUpdate = true;\r\n\r\n            scale = ( currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n            prevXYZ = prevKey[ type ];\r\n            nextXYZ = nextKey[ type ];\r\n\r\n\r\n            // check scale error\r\n\r\n            if ( scale < 0 || scale > 1 ) {\r\n\r\n                console.log( \"THREE.Animation.update: Warning! Scale out of bounds:\" + scale + \" on bone \" + h );\r\n                scale = scale < 0 ? 0 : 1;\r\n\r\n            }\r\n\r\n            // interpolate\r\n\r\n            if ( type === \"pos\" ) {\r\n\r\n                vector = object.position;\r\n\r\n                if ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n                    vector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n                    vector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n                    vector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n                } else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n                    this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n                    this.points[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n                    this.points[ 1 ] = prevXYZ;\r\n                    this.points[ 2 ] = nextXYZ;\r\n                    this.points[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n                    scale = scale * 0.33 + 0.33;\r\n\r\n                    currentPoint = this.interpolateCatmullRom( this.points, scale );\r\n\r\n                    vector.x = currentPoint[ 0 ];\r\n                    vector.y = currentPoint[ 1 ];\r\n                    vector.z = currentPoint[ 2 ];\r\n\r\n                    if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n                        forwardPoint = this.interpolateCatmullRom( this.points, scale * 1.01 );\r\n\r\n                        this.target.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n                        this.target.sub( vector );\r\n                        this.target.y = 0;\r\n                        this.target.normalize();\r\n\r\n                        angle = Math.atan2( this.target.x, this.target.z );\r\n                        object.rotation.set( 0, angle, 0 );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else if ( type === \"rot\" ) {\r\n\r\n                THREE.Quaternion.slerp( prevXYZ, nextXYZ, object.quaternion, scale );\r\n\r\n            } else if ( type === \"scl\" ) {\r\n\r\n                vector = object.scale;\r\n\r\n                vector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n                vector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n                vector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n// Catmull-Rom spline\r\n\r\nTHREE.Animation.prototype.interpolateCatmullRom = function ( points, scale ) {\r\n\r\n    var c = [], v3 = [],\r\n        point, intPoint, weight, w2, w3,\r\n        pa, pb, pc, pd;\r\n\r\n    point = ( points.length - 1 ) * scale;\r\n    intPoint = Math.floor( point );\r\n    weight = point - intPoint;\r\n\r\n    c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n    c[ 1 ] = intPoint;\r\n    c[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n    c[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n    pa = points[ c[ 0 ] ];\r\n    pb = points[ c[ 1 ] ];\r\n    pc = points[ c[ 2 ] ];\r\n    pd = points[ c[ 3 ] ];\r\n\r\n    w2 = weight * weight;\r\n    w3 = weight * w2;\r\n\r\n    v3[ 0 ] = this.interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n    v3[ 1 ] = this.interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n    v3[ 2 ] = this.interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n    return v3;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n    var v0 = ( p2 - p0 ) * 0.5,\r\n        v1 = ( p3 - p1 ) * 0.5;\r\n\r\n    return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n};\r\n\r\n\r\n\r\n// Get next key with\r\n\r\nTHREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {\r\n\r\n    var keys = this.data.hierarchy[ h ].keys;\r\n\r\n    if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n        this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n        key = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n    } else {\r\n\r\n        key = key % keys.length;\r\n\r\n    }\r\n\r\n    for ( ; key < keys.length; key++ ) {\r\n\r\n        if ( keys[ key ][ type ] !== undefined ) {\r\n\r\n            return keys[ key ];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n};\r\n\r\n// Get previous key with\r\n\r\nTHREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {\r\n\r\n    var keys = this.data.hierarchy[ h ].keys;\r\n\r\n    if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n        this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n        key = key > 0 ? key : 0;\r\n\r\n    } else {\r\n\r\n        key = key >= 0 ? key : key + keys.length;\r\n\r\n    }\r\n\r\n\r\n    for ( ; key >= 0; key -- ) {\r\n\r\n        if ( keys[ key ][ type ] !== undefined ) {\r\n\r\n            return keys[ key ];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function( root, data, JITCompile ) {\r\n\r\n    this.root = root;\r\n    this.data = THREE.AnimationHandler.get( data );\r\n    this.hierarchy = THREE.AnimationHandler.parse( root );\r\n    this.currentTime = 0;\r\n    this.timeScale = 0.001;\r\n    this.isPlaying = false;\r\n    this.isPaused = true;\r\n    this.loop = true;\r\n    this.JITCompile = JITCompile !== undefined ? JITCompile : true;\r\n\r\n    // initialize to first keyframes\r\n\r\n    for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {\r\n\r\n        var keys = this.data.hierarchy[h].keys,\r\n            sids = this.data.hierarchy[h].sids,\r\n            obj = this.hierarchy[h];\r\n\r\n        if ( keys.length && sids ) {\r\n\r\n            for ( var s = 0; s < sids.length; s++ ) {\r\n\r\n                var sid = sids[ s ],\r\n                    next = this.getNextKeyWith( sid, h, 0 );\r\n\r\n                if ( next ) {\r\n\r\n                    next.apply( sid );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            obj.matrixAutoUpdate = false;\r\n            this.data.hierarchy[h].node.updateMatrix();\r\n            obj.matrixWorldNeedsUpdate = true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n// Play\r\n\r\nTHREE.KeyFrameAnimation.prototype.play = function( loop, startTimeMS ) {\r\n\r\n    if( !this.isPlaying ) {\r\n\r\n        this.isPlaying = true;\r\n        this.loop = loop !== undefined ? loop : true;\r\n        this.currentTime = startTimeMS !== undefined ? startTimeMS : 0;\r\n        this.startTimeMs = startTimeMS;\r\n        this.startTime = 10000000;\r\n        this.endTime = -this.startTime;\r\n\r\n\r\n        // reset key cache\r\n\r\n        var h, hl = this.hierarchy.length,\r\n            object,\r\n            node;\r\n\r\n        for ( h = 0; h < hl; h++ ) {\r\n\r\n            object = this.hierarchy[ h ];\r\n            node = this.data.hierarchy[ h ];\r\n\r\n            if ( node.animationCache === undefined ) {\r\n\r\n                node.animationCache = {};\r\n                node.animationCache.prevKey = null;\r\n                node.animationCache.nextKey = null;\r\n                node.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;\r\n\r\n            }\r\n\r\n            var keys = this.data.hierarchy[h].keys;\r\n\r\n            if (keys.length) {\r\n\r\n                node.animationCache.prevKey = keys[ 0 ];\r\n                node.animationCache.nextKey = keys[ 1 ];\r\n\r\n                this.startTime = Math.min( keys[0].time, this.startTime );\r\n                this.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.update( 0 );\r\n\r\n    }\r\n\r\n    this.isPaused = false;\r\n\r\n    THREE.AnimationHandler.addToUpdate( this );\r\n\r\n};\r\n\r\n\r\n\r\n// Pause\r\n\r\nTHREE.KeyFrameAnimation.prototype.pause = function() {\r\n\r\n    if( this.isPaused ) {\r\n\r\n        THREE.AnimationHandler.addToUpdate( this );\r\n\r\n    } else {\r\n\r\n        THREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n    }\r\n\r\n    this.isPaused = !this.isPaused;\r\n\r\n};\r\n\r\n\r\n// Stop\r\n\r\nTHREE.KeyFrameAnimation.prototype.stop = function() {\r\n\r\n    this.isPlaying = false;\r\n    this.isPaused  = false;\r\n    THREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n\r\n    // reset JIT matrix and remove cache\r\n\r\n    for ( var h = 0; h < this.data.hierarchy.length; h++ ) {\r\n\r\n        var obj = this.hierarchy[ h ];\r\n        var node = this.data.hierarchy[ h ];\r\n\r\n        if ( node.animationCache !== undefined ) {\r\n\r\n            var original = node.animationCache.originalMatrix;\r\n\r\n            if( obj instanceof THREE.Bone ) {\r\n\r\n                original.copy( obj.skinMatrix );\r\n                obj.skinMatrix = original;\r\n\r\n            } else {\r\n\r\n                original.copy( obj.matrix );\r\n                obj.matrix = original;\r\n\r\n            }\r\n\r\n            delete node.animationCache;\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n// Update\r\n\r\nTHREE.KeyFrameAnimation.prototype.update = function( deltaTimeMS ) {\r\n\r\n    // early out\r\n\r\n    if( !this.isPlaying ) return;\r\n\r\n\r\n    // vars\r\n\r\n    var prevKey, nextKey;\r\n    var object;\r\n    var node;\r\n    var frame;\r\n    var JIThierarchy = this.data.JIT.hierarchy;\r\n    var currentTime, unloopedCurrentTime;\r\n    var looped;\r\n\r\n\r\n    // update\r\n\r\n    this.currentTime += deltaTimeMS * this.timeScale;\r\n\r\n    unloopedCurrentTime = this.currentTime;\r\n    currentTime         = this.currentTime = this.currentTime % this.data.length;\r\n\r\n    // if looped around, the current time should be based on the startTime\r\n    if ( currentTime < this.startTimeMs ) {\r\n\r\n        currentTime = this.currentTime = this.startTimeMs + currentTime;\r\n\r\n    }\r\n\r\n    frame               = parseInt( Math.min( currentTime * this.data.fps, this.data.length * this.data.fps ), 10 );\r\n    looped \t\t\t\t= currentTime < unloopedCurrentTime;\r\n\r\n    if ( looped && !this.loop ) {\r\n\r\n        // Set the animation to the last keyframes and stop\r\n        for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {\r\n\r\n            var keys = this.data.hierarchy[h].keys,\r\n                sids = this.data.hierarchy[h].sids,\r\n                end = keys.length-1,\r\n                obj = this.hierarchy[h];\r\n\r\n            if ( keys.length ) {\r\n\r\n                for ( var s = 0; s < sids.length; s++ ) {\r\n\r\n                    var sid = sids[ s ],\r\n                        prev = this.getPrevKeyWith( sid, h, end );\r\n\r\n                    if ( prev ) {\r\n                        prev.apply( sid );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                this.data.hierarchy[h].node.updateMatrix();\r\n                obj.matrixWorldNeedsUpdate = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.stop();\r\n        return;\r\n\r\n    }\r\n\r\n    // check pre-infinity\r\n    if ( currentTime < this.startTime ) {\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    // update\r\n\r\n    for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {\r\n\r\n        object = this.hierarchy[ h ];\r\n        node = this.data.hierarchy[ h ];\r\n\r\n        var keys = node.keys,\r\n            animationCache = node.animationCache;\r\n\r\n        // use JIT?\r\n\r\n        if ( this.JITCompile && JIThierarchy[ h ][ frame ] !== undefined ) {\r\n\r\n            if( object instanceof THREE.Bone ) {\r\n\r\n                object.skinMatrix = JIThierarchy[ h ][ frame ];\r\n                object.matrixWorldNeedsUpdate = false;\r\n\r\n            } else {\r\n\r\n                object.matrix = JIThierarchy[ h ][ frame ];\r\n                object.matrixWorldNeedsUpdate = true;\r\n\r\n            }\r\n\r\n            // use interpolation\r\n\r\n        } else if ( keys.length ) {\r\n\r\n            // make sure so original matrix and not JIT matrix is set\r\n\r\n            if ( this.JITCompile && animationCache ) {\r\n\r\n                if( object instanceof THREE.Bone ) {\r\n\r\n                    object.skinMatrix = animationCache.originalMatrix;\r\n\r\n                } else {\r\n\r\n                    object.matrix = animationCache.originalMatrix;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            prevKey = animationCache.prevKey;\r\n            nextKey = animationCache.nextKey;\r\n\r\n            if ( prevKey && nextKey ) {\r\n\r\n                // switch keys?\r\n\r\n                if ( nextKey.time <= unloopedCurrentTime ) {\r\n\r\n                    // did we loop?\r\n\r\n                    if ( looped && this.loop ) {\r\n\r\n                        prevKey = keys[ 0 ];\r\n                        nextKey = keys[ 1 ];\r\n\r\n                        while ( nextKey.time < currentTime ) {\r\n\r\n                            prevKey = nextKey;\r\n                            nextKey = keys[ prevKey.index + 1 ];\r\n\r\n                        }\r\n\r\n                    } else if ( !looped ) {\r\n\r\n                        var lastIndex = keys.length - 1;\r\n\r\n                        while ( nextKey.time < currentTime && nextKey.index !== lastIndex ) {\r\n\r\n                            prevKey = nextKey;\r\n                            nextKey = keys[ prevKey.index + 1 ];\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    animationCache.prevKey = prevKey;\r\n                    animationCache.nextKey = nextKey;\r\n\r\n                }\r\n                if(nextKey.time >= currentTime)\r\n                    prevKey.interpolate( nextKey, currentTime );\r\n                else\r\n                    prevKey.interpolate( nextKey, nextKey.time);\r\n\r\n            }\r\n\r\n            this.data.hierarchy[h].node.updateMatrix();\r\n            object.matrixWorldNeedsUpdate = true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // update JIT?\r\n\r\n    if ( this.JITCompile ) {\r\n\r\n        if ( JIThierarchy[ 0 ][ frame ] === undefined ) {\r\n\r\n            this.hierarchy[ 0 ].updateMatrixWorld( true );\r\n\r\n            for ( var h = 0; h < this.hierarchy.length; h++ ) {\r\n\r\n                if( this.hierarchy[ h ] instanceof THREE.Bone ) {\r\n\r\n                    JIThierarchy[ h ][ frame ] = this.hierarchy[ h ].skinMatrix.clone();\r\n\r\n                } else {\r\n\r\n                    JIThierarchy[ h ][ frame ] = this.hierarchy[ h ].matrix.clone();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n// Get next key with\r\n\r\nTHREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {\r\n\r\n    var keys = this.data.hierarchy[ h ].keys;\r\n    key = key % keys.length;\r\n\r\n    for ( ; key < keys.length; key++ ) {\r\n\r\n        if ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n            return keys[ key ];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return keys[ 0 ];\r\n\r\n};\r\n\r\n// Get previous key with\r\n\r\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {\r\n\r\n    var keys = this.data.hierarchy[ h ].keys;\r\n    key = key >= 0 ? key : key + keys.length;\r\n\r\n    for ( ; key >= 0; key-- ) {\r\n\r\n        if ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n            return keys[ key ];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return keys[ keys.length - 1 ];\r\n\r\n};\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    var fov = 90, aspect = 1;\r\n\r\n    var cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n    cameraPX.up.set( 0, -1, 0 );\r\n    cameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n    this.add( cameraPX );\r\n\r\n    var cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n    cameraNX.up.set( 0, -1, 0 );\r\n    cameraNX.lookAt( new THREE.Vector3( -1, 0, 0 ) );\r\n    this.add( cameraNX );\r\n\r\n    var cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n    cameraPY.up.set( 0, 0, 1 );\r\n    cameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n    this.add( cameraPY );\r\n\r\n    var cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n    cameraNY.up.set( 0, 0, -1 );\r\n    cameraNY.lookAt( new THREE.Vector3( 0, -1, 0 ) );\r\n    this.add( cameraNY );\r\n\r\n    var cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n    cameraPZ.up.set( 0, -1, 0 );\r\n    cameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n    this.add( cameraPZ );\r\n\r\n    var cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n    cameraNZ.up.set( 0, -1, 0 );\r\n    cameraNZ.lookAt( new THREE.Vector3( 0, 0, -1 ) );\r\n    this.add( cameraNZ );\r\n\r\n    this.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n    this.updateCubeMap = function ( renderer, scene ) {\r\n\r\n        var renderTarget = this.renderTarget;\r\n        var generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n        renderTarget.generateMipmaps = false;\r\n\r\n        renderTarget.activeCubeFace = 0;\r\n        renderer.render( scene, cameraPX, renderTarget );\r\n\r\n        renderTarget.activeCubeFace = 1;\r\n        renderer.render( scene, cameraNX, renderTarget );\r\n\r\n        renderTarget.activeCubeFace = 2;\r\n        renderer.render( scene, cameraPY, renderTarget );\r\n\r\n        renderTarget.activeCubeFace = 3;\r\n        renderer.render( scene, cameraNY, renderTarget );\r\n\r\n        renderTarget.activeCubeFace = 4;\r\n        renderer.render( scene, cameraPZ, renderTarget );\r\n\r\n        renderTarget.generateMipmaps = generateMipmaps;\r\n\r\n        renderTarget.activeCubeFace = 5;\r\n        renderer.render( scene, cameraNZ, renderTarget );\r\n\r\n    };\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n/*\r\n *\t@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog\r\n *\r\n *\tA general perpose camera, for setting FOV, Lens Focal Length,\r\n *\t\tand switching between perspective and orthographic views easily.\r\n *\t\tUse this only if you do not wish to manage\r\n *\t\tboth a Orthographic and Perspective Camera\r\n *\r\n */\r\n\r\n\r\nTHREE.CombinedCamera = function ( width, height, fov, near, far, orthoNear, orthoFar ) {\r\n\r\n    THREE.Camera.call( this );\r\n\r\n    this.fov = fov;\r\n\r\n    this.left = -width / 2;\r\n    this.right = width / 2\r\n    this.top = height / 2;\r\n    this.bottom = -height / 2;\r\n\r\n    // We could also handle the projectionMatrix internally, but just wanted to test nested camera objects\r\n\r\n    this.cameraO = new THREE.OrthographicCamera( width / - 2, width / 2, height / 2, height / - 2, \torthoNear, orthoFar );\r\n    this.cameraP = new THREE.PerspectiveCamera( fov, width / height, near, far );\r\n\r\n    this.zoom = 1;\r\n\r\n    this.toPerspective();\r\n\r\n    var aspect = width/height;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\r\nTHREE.CombinedCamera.prototype.toPerspective = function () {\r\n\r\n    // Switches to the Perspective Camera\r\n\r\n    this.near = this.cameraP.near;\r\n    this.far = this.cameraP.far;\r\n\r\n    this.cameraP.fov =  this.fov / this.zoom ;\r\n\r\n    this.cameraP.updateProjectionMatrix();\r\n\r\n    this.projectionMatrix = this.cameraP.projectionMatrix;\r\n\r\n    this.inPerspectiveMode = true;\r\n    this.inOrthographicMode = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toOrthographic = function () {\r\n\r\n    // Switches to the Orthographic camera estimating viewport from Perspective\r\n\r\n    var fov = this.fov;\r\n    var aspect = this.cameraP.aspect;\r\n    var near = this.cameraP.near;\r\n    var far = this.cameraP.far;\r\n\r\n    // The size that we set is the mid plane of the viewing frustum\r\n\r\n    var hyperfocus = ( near + far ) / 2;\r\n\r\n    var halfHeight = Math.tan( fov / 2 ) * hyperfocus;\r\n    var planeHeight = 2 * halfHeight;\r\n    var planeWidth = planeHeight * aspect;\r\n    var halfWidth = planeWidth / 2;\r\n\r\n    halfHeight /= this.zoom;\r\n    halfWidth /= this.zoom;\r\n\r\n    this.cameraO.left = -halfWidth;\r\n    this.cameraO.right = halfWidth;\r\n    this.cameraO.top = halfHeight;\r\n    this.cameraO.bottom = -halfHeight;\r\n\r\n    // this.cameraO.left = -farHalfWidth;\r\n    // this.cameraO.right = farHalfWidth;\r\n    // this.cameraO.top = farHalfHeight;\r\n    // this.cameraO.bottom = -farHalfHeight;\r\n\r\n    // this.cameraO.left = this.left / this.zoom;\r\n    // this.cameraO.right = this.right / this.zoom;\r\n    // this.cameraO.top = this.top / this.zoom;\r\n    // this.cameraO.bottom = this.bottom / this.zoom;\r\n\r\n    this.cameraO.updateProjectionMatrix();\r\n\r\n    this.near = this.cameraO.near;\r\n    this.far = this.cameraO.far;\r\n    this.projectionMatrix = this.cameraO.projectionMatrix;\r\n\r\n    this.inPerspectiveMode = false;\r\n    this.inOrthographicMode = true;\r\n\r\n};\r\n\r\n\r\nTHREE.CombinedCamera.prototype.setSize = function( width, height ) {\r\n\r\n    this.cameraP.aspect = width / height;\r\n    this.left = -width / 2;\r\n    this.right = width / 2\r\n    this.top = height / 2;\r\n    this.bottom = -height / 2;\r\n\r\n};\r\n\r\n\r\nTHREE.CombinedCamera.prototype.setFov = function( fov ) {\r\n\r\n    this.fov = fov;\r\n\r\n    if ( this.inPerspectiveMode ) {\r\n\r\n        this.toPerspective();\r\n\r\n    } else {\r\n\r\n        this.toOrthographic();\r\n\r\n    }\r\n\r\n};\r\n\r\n// For mantaining similar API with PerspectiveCamera\r\n\r\nTHREE.CombinedCamera.prototype.updateProjectionMatrix = function() {\r\n\r\n    if ( this.inPerspectiveMode ) {\r\n\r\n        this.toPerspective();\r\n\r\n    } else {\r\n\r\n        this.toPerspective();\r\n        this.toOrthographic();\r\n\r\n    }\r\n\r\n};\r\n\r\n/*\r\n* Uses Focal Length (in mm) to estimate and set FOV\r\n* 35mm (fullframe) camera is used if frame size is not specified;\r\n* Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n*/\r\nTHREE.CombinedCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n    if ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n    var fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\r\n    this.setFov( fov );\r\n\r\n    return fov;\r\n};\r\n\r\n\r\nTHREE.CombinedCamera.prototype.setZoom = function( zoom ) {\r\n\r\n    this.zoom = zoom;\r\n\r\n    if ( this.inPerspectiveMode ) {\r\n\r\n        this.toPerspective();\r\n\r\n    } else {\r\n\r\n        this.toOrthographic();\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toFrontView = function() {\r\n\r\n    this.rotation.x = 0;\r\n    this.rotation.y = 0;\r\n    this.rotation.z = 0;\r\n\r\n    // should we be modifing the matrix instead?\r\n\r\n    this.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toBackView = function() {\r\n\r\n    this.rotation.x = 0;\r\n    this.rotation.y = Math.PI;\r\n    this.rotation.z = 0;\r\n    this.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toLeftView = function() {\r\n\r\n    this.rotation.x = 0;\r\n    this.rotation.y = - Math.PI / 2;\r\n    this.rotation.z = 0;\r\n    this.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toRightView = function() {\r\n\r\n    this.rotation.x = 0;\r\n    this.rotation.y = Math.PI / 2;\r\n    this.rotation.z = 0;\r\n    this.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toTopView = function() {\r\n\r\n    this.rotation.x = - Math.PI / 2;\r\n    this.rotation.y = 0;\r\n    this.rotation.z = 0;\r\n    this.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toBottomView = function() {\r\n\r\n    this.rotation.x = Math.PI / 2;\r\n    this.rotation.y = 0;\r\n    this.rotation.z = 0;\r\n    this.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    this.radius = radius = radius || 50;\r\n    this.segments = segments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n    this.thetaStart = thetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n    this.thetaLength = thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n    var i, uvs = [],\r\n        center = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n    this.vertices.push(center);\r\n    uvs.push( centerUV );\r\n\r\n    for ( i = 0; i <= segments; i ++ ) {\r\n\r\n        var vertex = new THREE.Vector3();\r\n        var segment = thetaStart + i / segments * thetaLength;\r\n\r\n        vertex.x = radius * Math.cos( segment );\r\n        vertex.y = radius * Math.sin( segment );\r\n\r\n        this.vertices.push( vertex );\r\n        uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n    }\r\n\r\n    var n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n    for ( i = 1; i <= segments; i ++ ) {\r\n\r\n        var v1 = i;\r\n        var v2 = i + 1 ;\r\n        var v3 = 0;\r\n\r\n        this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );\r\n        this.faceVertexUvs[ 0 ].push( [ uvs[ i ], uvs[ i + 1 ], centerUV ] );\r\n\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n\r\n    this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    var scope = this;\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.depth = depth;\r\n\r\n    this.widthSegments = widthSegments || 1;\r\n    this.heightSegments = heightSegments || 1;\r\n    this.depthSegments = depthSegments || 1;\r\n\r\n    var width_half = this.width / 2;\r\n    var height_half = this.height / 2;\r\n    var depth_half = this.depth / 2;\r\n\r\n    buildPlane( 'z', 'y', - 1, - 1, this.depth, this.height, width_half, 0 ); // px\r\n    buildPlane( 'z', 'y',   1, - 1, this.depth, this.height, - width_half, 1 ); // nx\r\n    buildPlane( 'x', 'z',   1,   1, this.width, this.depth, height_half, 2 ); // py\r\n    buildPlane( 'x', 'z',   1, - 1, this.width, this.depth, - height_half, 3 ); // ny\r\n    buildPlane( 'x', 'y',   1, - 1, this.width, this.height, depth_half, 4 ); // pz\r\n    buildPlane( 'x', 'y', - 1, - 1, this.width, this.height, - depth_half, 5 ); // nz\r\n\r\n    function buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n        var w, ix, iy,\r\n            gridX = scope.widthSegments,\r\n            gridY = scope.heightSegments,\r\n            width_half = width / 2,\r\n            height_half = height / 2,\r\n            offset = scope.vertices.length;\r\n\r\n        if ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n            w = 'z';\r\n\r\n        } else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n            w = 'y';\r\n            gridY = scope.depthSegments;\r\n\r\n        } else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n            w = 'x';\r\n            gridX = scope.depthSegments;\r\n\r\n        }\r\n\r\n        var gridX1 = gridX + 1,\r\n            gridY1 = gridY + 1,\r\n            segment_width = width / gridX,\r\n            segment_height = height / gridY,\r\n            normal = new THREE.Vector3();\r\n\r\n        normal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n        for ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n            for ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n                var vector = new THREE.Vector3();\r\n                vector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n                vector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n                vector[ w ] = depth;\r\n\r\n                scope.vertices.push( vector );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for ( iy = 0; iy < gridY; iy++ ) {\r\n\r\n            for ( ix = 0; ix < gridX; ix++ ) {\r\n\r\n                var a = ix + gridX1 * iy;\r\n                var b = ix + gridX1 * ( iy + 1 );\r\n                var c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n                var d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n                var uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n                var uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n                var uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n                var uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n                var face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n                face.normal.copy( normal );\r\n                face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n                face.materialIndex = materialIndex;\r\n\r\n                scope.faces.push( face );\r\n                scope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n                face = new THREE.Face3( b + offset, c + offset, d + offset );\r\n                face.normal.copy( normal );\r\n                face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n                face.materialIndex = materialIndex;\r\n\r\n                scope.faces.push( face );\r\n                scope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.CubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    this.radiusTop = radiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n    this.radiusBottom = radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n    this.height = height = height !== undefined ? height : 100;\r\n\r\n    this.radialSegments = radialSegments = radialSegments || 8;\r\n    this.heightSegments = heightSegments = heightSegments || 1;\r\n\r\n    this.openEnded = openEnded = openEnded !== undefined ? openEnded : false;\r\n\r\n    var heightHalf = height / 2;\r\n\r\n    var x, y, vertices = [], uvs = [];\r\n\r\n    for ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n        var verticesRow = [];\r\n        var uvsRow = [];\r\n\r\n        var v = y / heightSegments;\r\n        var radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n        for ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n            var u = x / radialSegments;\r\n\r\n            var vertex = new THREE.Vector3();\r\n            vertex.x = radius * Math.sin( u * Math.PI * 2 );\r\n            vertex.y = - v * height + heightHalf;\r\n            vertex.z = radius * Math.cos( u * Math.PI * 2 );\r\n\r\n            this.vertices.push( vertex );\r\n\r\n            verticesRow.push( this.vertices.length - 1 );\r\n            uvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n        }\r\n\r\n        vertices.push( verticesRow );\r\n        uvs.push( uvsRow );\r\n\r\n    }\r\n\r\n    var tanTheta = ( radiusBottom - radiusTop ) / height;\r\n    var na, nb;\r\n\r\n    for ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n        if ( radiusTop !== 0 ) {\r\n\r\n            na = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n            nb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n        } else {\r\n\r\n            na = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n            nb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n        }\r\n\r\n        na.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n        nb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n        for ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n            var v1 = vertices[ y ][ x ];\r\n            var v2 = vertices[ y + 1 ][ x ];\r\n            var v3 = vertices[ y + 1 ][ x + 1 ];\r\n            var v4 = vertices[ y ][ x + 1 ];\r\n\r\n            var n1 = na.clone();\r\n            var n2 = na.clone();\r\n            var n3 = nb.clone();\r\n            var n4 = nb.clone();\r\n\r\n            var uv1 = uvs[ y ][ x ].clone();\r\n            var uv2 = uvs[ y + 1 ][ x ].clone();\r\n            var uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n            var uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n            this.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n            this.faces.push( new THREE.Face3( v2, v3, v4, [ n2, n3, n4 ] ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uv2, uv3, uv4 ] );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // top cap\r\n\r\n    if ( openEnded === false && radiusTop > 0 ) {\r\n\r\n        this.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n        for ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n            var v1 = vertices[ 0 ][ x ];\r\n            var v2 = vertices[ 0 ][ x + 1 ];\r\n            var v3 = this.vertices.length - 1;\r\n\r\n            var n1 = new THREE.Vector3( 0, 1, 0 );\r\n            var n2 = new THREE.Vector3( 0, 1, 0 );\r\n            var n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n            var uv1 = uvs[ 0 ][ x ].clone();\r\n            var uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n            var uv3 = new THREE.Vector2( uv2.u, 0 );\r\n\r\n            this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // bottom cap\r\n\r\n    if ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n        this.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n        for ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n            var v1 = vertices[ y ][ x + 1 ];\r\n            var v2 = vertices[ y ][ x ];\r\n            var v3 = this.vertices.length - 1;\r\n\r\n            var n1 = new THREE.Vector3( 0, - 1, 0 );\r\n            var n2 = new THREE.Vector3( 0, - 1, 0 );\r\n            var n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n            var uv1 = uvs[ y ][ x + 1 ].clone();\r\n            var uv2 = uvs[ y ][ x ].clone();\r\n            var uv3 = new THREE.Vector2( uv2.u, 1 );\r\n\r\n            this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n\r\n}\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\r\n *  amount: <int>, // Amount\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float>, // how far from text outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  material: <int> // material index for front and back faces\r\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n    if ( typeof( shapes ) === \"undefined\" ) {\r\n        shapes = [];\r\n        return;\r\n    }\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    shapes = shapes instanceof Array ? shapes : [ shapes ];\r\n\r\n    this.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();\r\n\r\n    this.addShapeList( shapes, options );\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n\r\n    // can't really use automatic vertex normals\r\n    // as then front and back sides get smoothed too\r\n    // should do separate smoothing just for sides\r\n\r\n    //this.computeVertexNormals();\r\n\r\n    //console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n    var sl = shapes.length;\r\n\r\n    for ( var s = 0; s < sl; s ++ ) {\r\n        var shape = shapes[ s ];\r\n        this.addShape( shape, options );\r\n    }\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n    var amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n    var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n    var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n    var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n    var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n    var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n    var steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n    var extrudePath = options.extrudePath;\r\n    var extrudePts, extrudeByPath = false;\r\n\r\n    var material = options.material;\r\n    var extrudeMaterial = options.extrudeMaterial;\r\n\r\n    // Use default WorldUVGenerator if no UV generators are specified.\r\n    var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n    var shapebb = this.shapebb;\r\n    //shapebb = shape.getBoundingBox();\r\n\r\n\r\n\r\n    var splineTube, binormal, normal, position2;\r\n    if ( extrudePath ) {\r\n\r\n        extrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n        extrudeByPath = true;\r\n        bevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n        // SETUP TNB variables\r\n\r\n        // Reuse TNB from TubeGeomtry for now.\r\n        // TODO1 - have a .isClosed in spline?\r\n\r\n        splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\r\n\r\n        // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n        binormal = new THREE.Vector3();\r\n        normal = new THREE.Vector3();\r\n        position2 = new THREE.Vector3();\r\n\r\n    }\r\n\r\n    // Safeguards if bevels are not enabled\r\n\r\n    if ( ! bevelEnabled ) {\r\n\r\n        bevelSegments = 0;\r\n        bevelThickness = 0;\r\n        bevelSize = 0;\r\n\r\n    }\r\n\r\n    // Variables initalization\r\n\r\n    var ahole, h, hl; // looping of holes\r\n    var scope = this;\r\n    var bevelPoints = [];\r\n\r\n    var shapesOffset = this.vertices.length;\r\n\r\n    var shapePoints = shape.extractPoints( curveSegments );\r\n\r\n    var vertices = shapePoints.shape;\r\n    var holes = shapePoints.holes;\r\n\r\n    var reverse = !THREE.Shape.Utils.isClockWise( vertices ) ;\r\n\r\n    if ( reverse ) {\r\n\r\n        vertices = vertices.reverse();\r\n\r\n        // Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n        for ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n            ahole = holes[ h ];\r\n\r\n            if ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n                holes[ h ] = ahole.reverse();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n    }\r\n\r\n\r\n    var faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n    /* Vertices */\r\n\r\n    var contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n    for ( h = 0, hl = holes.length;  h < hl; h ++ ) {\r\n\r\n        ahole = holes[ h ];\r\n\r\n        vertices = vertices.concat( ahole );\r\n\r\n    }\r\n\r\n\r\n    function scalePt2 ( pt, vec, size ) {\r\n\r\n        if ( !vec ) console.log( \"die\" );\r\n\r\n        return vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n    }\r\n\r\n    var b, bs, t, z,\r\n        vert, vlen = vertices.length,\r\n        face, flen = faces.length,\r\n        cont, clen = contour.length;\r\n\r\n\r\n    // Find directions for point movement\r\n\r\n    var RAD_TO_DEGREES = 180 / Math.PI;\r\n\r\n\r\n    function getBevelVec( pt_i, pt_j, pt_k ) {\r\n\r\n        // Algorithm 2\r\n\r\n        return getBevelVec2( pt_i, pt_j, pt_k );\r\n\r\n    }\r\n\r\n    function getBevelVec1( pt_i, pt_j, pt_k ) {\r\n\r\n        var anglea = Math.atan2( pt_j.y - pt_i.y, pt_j.x - pt_i.x );\r\n        var angleb = Math.atan2( pt_k.y - pt_i.y, pt_k.x - pt_i.x );\r\n\r\n        if ( anglea > angleb ) {\r\n\r\n            angleb += Math.PI * 2;\r\n\r\n        }\r\n\r\n        var anglec = ( anglea + angleb ) / 2;\r\n\r\n\r\n        //console.log('angle1', anglea * RAD_TO_DEGREES,'angle2', angleb * RAD_TO_DEGREES, 'anglec', anglec *RAD_TO_DEGREES);\r\n\r\n        var x = - Math.cos( anglec );\r\n        var y = - Math.sin( anglec );\r\n\r\n        var vec = new THREE.Vector2( x, y ); //.normalize();\r\n\r\n        return vec;\r\n\r\n    }\r\n\r\n    function getBevelVec2( pt_i, pt_j, pt_k ) {\r\n\r\n        var a = THREE.ExtrudeGeometry.__v1,\r\n            b = THREE.ExtrudeGeometry.__v2,\r\n            v_hat = THREE.ExtrudeGeometry.__v3,\r\n            w_hat = THREE.ExtrudeGeometry.__v4,\r\n            p = THREE.ExtrudeGeometry.__v5,\r\n            q = THREE.ExtrudeGeometry.__v6,\r\n            v, w,\r\n            v_dot_w_hat, q_sub_p_dot_w_hat,\r\n            s, intersection;\r\n\r\n        // good reading for line-line intersection\r\n        // http://sputsoft.com/blog/2010/03/line-line-intersection.html\r\n\r\n        // define a as vector j->i\r\n        // define b as vectot k->i\r\n\r\n        a.set( pt_i.x - pt_j.x, pt_i.y - pt_j.y );\r\n        b.set( pt_i.x - pt_k.x, pt_i.y - pt_k.y );\r\n\r\n        // get unit vectors\r\n\r\n        v = a.normalize();\r\n        w = b.normalize();\r\n\r\n        // normals from pt i\r\n\r\n        v_hat.set( -v.y, v.x );\r\n        w_hat.set( w.y, -w.x );\r\n\r\n        // pts from i\r\n\r\n        p.copy( pt_i ).add( v_hat );\r\n        q.copy( pt_i ).add( w_hat );\r\n\r\n        if ( p.equals( q ) ) {\r\n\r\n            //console.log(\"Warning: lines are straight\");\r\n            return w_hat.clone();\r\n\r\n        }\r\n\r\n        // Points from j, k. helps prevents points cross overover most of the time\r\n\r\n        p.copy( pt_j ).add( v_hat );\r\n        q.copy( pt_k ).add( w_hat );\r\n\r\n        v_dot_w_hat = v.dot( w_hat );\r\n        q_sub_p_dot_w_hat = q.sub( p ).dot( w_hat );\r\n\r\n        // We should not reach these conditions\r\n\r\n        if ( v_dot_w_hat === 0 ) {\r\n\r\n            console.log( \"Either infinite or no solutions!\" );\r\n\r\n            if ( q_sub_p_dot_w_hat === 0 ) {\r\n\r\n                console.log( \"Its finite solutions.\" );\r\n\r\n            } else {\r\n\r\n                console.log( \"Too bad, no solutions.\" );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        s = q_sub_p_dot_w_hat / v_dot_w_hat;\r\n\r\n        if ( s < 0 ) {\r\n\r\n            // in case of emergecy, revert to algorithm 1.\r\n\r\n            return getBevelVec1( pt_i, pt_j, pt_k );\r\n\r\n        }\r\n\r\n        intersection = v.multiplyScalar( s ).add( p );\r\n\r\n        return intersection.sub( pt_i ).clone(); // Don't normalize!, otherwise sharp corners become ugly\r\n\r\n    }\r\n\r\n    var contourMovements = [];\r\n\r\n    for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n        if ( j === il ) j = 0;\r\n        if ( k === il ) k = 0;\r\n\r\n        //  (j)---(i)---(k)\r\n        // console.log('i,j,k', i, j , k)\r\n\r\n        var pt_i = contour[ i ];\r\n        var pt_j = contour[ j ];\r\n        var pt_k = contour[ k ];\r\n\r\n        contourMovements[ i ]= getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n    }\r\n\r\n    var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n    for ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n        ahole = holes[ h ];\r\n\r\n        oneHoleMovements = [];\r\n\r\n        for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n            if ( j === il ) j = 0;\r\n            if ( k === il ) k = 0;\r\n\r\n            //  (j)---(i)---(k)\r\n            oneHoleMovements[ i ]= getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n        }\r\n\r\n        holesMovements.push( oneHoleMovements );\r\n        verticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n    }\r\n\r\n\r\n    // Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n    for ( b = 0; b < bevelSegments; b ++ ) {\r\n        //for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n        t = b / bevelSegments;\r\n        z = bevelThickness * ( 1 - t );\r\n\r\n        //z = bevelThickness * t;\r\n        bs = bevelSize * ( Math.sin ( t * Math.PI/2 ) ) ; // curved\r\n        //bs = bevelSize * t ; // linear\r\n\r\n        // contract shape\r\n\r\n        for ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n            vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n            //vert = scalePt( contour[ i ], contourCentroid, bs, false );\r\n            v( vert.x, vert.y,  - z );\r\n\r\n        }\r\n\r\n        // expand holes\r\n\r\n        for ( h = 0, hl = holes.length; h < hl; h++ ) {\r\n\r\n            ahole = holes[ h ];\r\n            oneHoleMovements = holesMovements[ h ];\r\n\r\n            for ( i = 0, il = ahole.length; i < il; i++ ) {\r\n\r\n                vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n                //vert = scalePt( ahole[ i ], holesCentroids[ h ], bs, true );\r\n\r\n                v( vert.x, vert.y,  -z );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    bs = bevelSize;\r\n\r\n    // Back facing vertices\r\n\r\n    for ( i = 0; i < vlen; i ++ ) {\r\n\r\n        vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n        if ( !extrudeByPath ) {\r\n\r\n            v( vert.x, vert.y, 0 );\r\n\r\n        } else {\r\n\r\n            // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n            normal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\r\n            binormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\r\n\r\n            position2.copy( extrudePts[0] ).add(normal).add(binormal);\r\n\r\n            v( position2.x, position2.y, position2.z );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Add stepped vertices...\r\n    // Including front facing vertices\r\n\r\n    var s;\r\n\r\n    for ( s = 1; s <= steps; s ++ ) {\r\n\r\n        for ( i = 0; i < vlen; i ++ ) {\r\n\r\n            vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n            if ( !extrudeByPath ) {\r\n\r\n                v( vert.x, vert.y, amount / steps * s );\r\n\r\n            } else {\r\n\r\n                // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n                normal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\r\n                binormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\r\n\r\n                position2.copy( extrudePts[s] ).add( normal ).add( binormal );\r\n\r\n                v( position2.x, position2.y, position2.z );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Add bevel segments planes\r\n\r\n    //for ( b = 1; b <= bevelSegments; b ++ ) {\r\n    for ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n        t = b / bevelSegments;\r\n        z = bevelThickness * ( 1 - t );\r\n        //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n        bs = bevelSize * Math.sin ( t * Math.PI/2 ) ;\r\n\r\n        // contract shape\r\n\r\n        for ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n            vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n            v( vert.x, vert.y,  amount + z );\r\n\r\n        }\r\n\r\n        // expand holes\r\n\r\n        for ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n            ahole = holes[ h ];\r\n            oneHoleMovements = holesMovements[ h ];\r\n\r\n            for ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n                vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n                if ( !extrudeByPath ) {\r\n\r\n                    v( vert.x, vert.y,  amount + z );\r\n\r\n                } else {\r\n\r\n                    v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* Faces */\r\n\r\n    // Top and bottom faces\r\n\r\n    buildLidFaces();\r\n\r\n    // Sides faces\r\n\r\n    buildSideFaces();\r\n\r\n\r\n    /////  Internal functions\r\n\r\n    function buildLidFaces() {\r\n\r\n        if ( bevelEnabled ) {\r\n\r\n            var layer = 0 ; // steps + 1\r\n            var offset = vlen * layer;\r\n\r\n            // Bottom faces\r\n\r\n            for ( i = 0; i < flen; i ++ ) {\r\n\r\n                face = faces[ i ];\r\n                f3( face[ 2 ]+ offset, face[ 1 ]+ offset, face[ 0 ] + offset, true );\r\n\r\n            }\r\n\r\n            layer = steps + bevelSegments * 2;\r\n            offset = vlen * layer;\r\n\r\n            // Top faces\r\n\r\n            for ( i = 0; i < flen; i ++ ) {\r\n\r\n                face = faces[ i ];\r\n                f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset, false );\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            // Bottom faces\r\n\r\n            for ( i = 0; i < flen; i++ ) {\r\n\r\n                face = faces[ i ];\r\n                f3( face[ 2 ], face[ 1 ], face[ 0 ], true );\r\n\r\n            }\r\n\r\n            // Top faces\r\n\r\n            for ( i = 0; i < flen; i ++ ) {\r\n\r\n                face = faces[ i ];\r\n                f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps, false );\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // Create faces for the z-sides of the shape\r\n\r\n    function buildSideFaces() {\r\n\r\n        var layeroffset = 0;\r\n        sidewalls( contour, layeroffset );\r\n        layeroffset += contour.length;\r\n\r\n        for ( h = 0, hl = holes.length;  h < hl; h ++ ) {\r\n\r\n            ahole = holes[ h ];\r\n            sidewalls( ahole, layeroffset );\r\n\r\n            //, true\r\n            layeroffset += ahole.length;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function sidewalls( contour, layeroffset ) {\r\n\r\n        var j, k;\r\n        i = contour.length;\r\n\r\n        while ( --i >= 0 ) {\r\n\r\n            j = i;\r\n            k = i - 1;\r\n            if ( k < 0 ) k = contour.length - 1;\r\n\r\n            //console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n            var s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n            for ( s = 0; s < sl; s ++ ) {\r\n\r\n                var slen1 = vlen * s;\r\n                var slen2 = vlen * ( s + 1 );\r\n\r\n                var a = layeroffset + j + slen1,\r\n                    b = layeroffset + k + slen1,\r\n                    c = layeroffset + k + slen2,\r\n                    d = layeroffset + j + slen2;\r\n\r\n                f4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function v( x, y, z ) {\r\n\r\n        scope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n    }\r\n\r\n    function f3( a, b, c, isBottom ) {\r\n\r\n        a += shapesOffset;\r\n        b += shapesOffset;\r\n        c += shapesOffset;\r\n\r\n        // normal, color, material\r\n        scope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\r\n        var uvs = isBottom ? uvgen.generateBottomUV( scope, shape, options, a, b, c ) : uvgen.generateTopUV( scope, shape, options, a, b, c );\r\n\r\n        scope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n    }\r\n\r\n    function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n        a += shapesOffset;\r\n        b += shapesOffset;\r\n        c += shapesOffset;\r\n        d += shapesOffset;\r\n\r\n        scope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\r\n        scope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\r\n\r\n        var uvs = uvgen.generateSideWallUV( scope, shape, wallContour, options, a, b, c, d,\r\n            stepIndex, stepsLength, contourIndex1, contourIndex2 );\r\n\r\n        scope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n        scope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n    generateTopUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {\r\n        var ax = geometry.vertices[ indexA ].x,\r\n            ay = geometry.vertices[ indexA ].y,\r\n\r\n            bx = geometry.vertices[ indexB ].x,\r\n            by = geometry.vertices[ indexB ].y,\r\n\r\n            cx = geometry.vertices[ indexC ].x,\r\n            cy = geometry.vertices[ indexC ].y;\r\n\r\n        return [\r\n            new THREE.Vector2( ax, ay ),\r\n            new THREE.Vector2( bx, by ),\r\n            new THREE.Vector2( cx, cy )\r\n        ];\r\n\r\n    },\r\n\r\n    generateBottomUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {\r\n\r\n        return this.generateTopUV( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC );\r\n\r\n    },\r\n\r\n    generateSideWallUV: function( geometry, extrudedShape, wallContour, extrudeOptions,\r\n                                  indexA, indexB, indexC, indexD, stepIndex, stepsLength,\r\n                                  contourIndex1, contourIndex2 ) {\r\n\r\n        var ax = geometry.vertices[ indexA ].x,\r\n            ay = geometry.vertices[ indexA ].y,\r\n            az = geometry.vertices[ indexA ].z,\r\n\r\n            bx = geometry.vertices[ indexB ].x,\r\n            by = geometry.vertices[ indexB ].y,\r\n            bz = geometry.vertices[ indexB ].z,\r\n\r\n            cx = geometry.vertices[ indexC ].x,\r\n            cy = geometry.vertices[ indexC ].y,\r\n            cz = geometry.vertices[ indexC ].z,\r\n\r\n            dx = geometry.vertices[ indexD ].x,\r\n            dy = geometry.vertices[ indexD ].y,\r\n            dz = geometry.vertices[ indexD ].z;\r\n\r\n        if ( Math.abs( ay - by ) < 0.01 ) {\r\n            return [\r\n                new THREE.Vector2( ax, 1 - az ),\r\n                new THREE.Vector2( bx, 1 - bz ),\r\n                new THREE.Vector2( cx, 1 - cz ),\r\n                new THREE.Vector2( dx, 1 - dz )\r\n            ];\r\n        } else {\r\n            return [\r\n                new THREE.Vector2( ay, 1 - az ),\r\n                new THREE.Vector2( by, 1 - bz ),\r\n                new THREE.Vector2( cy, 1 - cz ),\r\n                new THREE.Vector2( dy, 1 - dz )\r\n            ];\r\n        }\r\n    }\r\n};\r\n\r\nTHREE.ExtrudeGeometry.__v1 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v2 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v3 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v4 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v5 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v6 = new THREE.Vector2();\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    if ( shapes instanceof Array === false ) shapes = [ shapes ];\r\n\r\n    this.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();\r\n\r\n    this.addShapeList( shapes, options );\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n    for ( var i = 0, l = shapes.length; i < l; i++ ) {\r\n\r\n        this.addShape( shapes[ i ], options );\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n    if ( options === undefined ) options = {};\r\n    var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n    var material = options.material;\r\n    var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n    var shapebb = this.shapebb;\r\n\r\n    //\r\n\r\n    var i, l, hole, s;\r\n\r\n    var shapesOffset = this.vertices.length;\r\n    var shapePoints = shape.extractPoints( curveSegments );\r\n\r\n    var vertices = shapePoints.shape;\r\n    var holes = shapePoints.holes;\r\n\r\n    var reverse = !THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n    if ( reverse ) {\r\n\r\n        vertices = vertices.reverse();\r\n\r\n        // Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n        for ( i = 0, l = holes.length; i < l; i++ ) {\r\n\r\n            hole = holes[ i ];\r\n\r\n            if ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n                holes[ i ] = hole.reverse();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        reverse = false;\r\n\r\n    }\r\n\r\n    var faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n    // Vertices\r\n\r\n    var contour = vertices;\r\n\r\n    for ( i = 0, l = holes.length; i < l; i++ ) {\r\n\r\n        hole = holes[ i ];\r\n        vertices = vertices.concat( hole );\r\n\r\n    }\r\n\r\n    //\r\n\r\n    var vert, vlen = vertices.length;\r\n    var face, flen = faces.length;\r\n    var cont, clen = contour.length;\r\n\r\n    for ( i = 0; i < vlen; i++ ) {\r\n\r\n        vert = vertices[ i ];\r\n\r\n        this.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n    }\r\n\r\n    for ( i = 0; i < flen; i++ ) {\r\n\r\n        face = faces[ i ];\r\n\r\n        var a = face[ 0 ] + shapesOffset;\r\n        var b = face[ 1 ] + shapesOffset;\r\n        var c = face[ 2 ] + shapesOffset;\r\n\r\n        this.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n        this.faceVertexUvs[ 0 ].push( uvgen.generateBottomUV( this, shape, options, a, b, c ) );\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points\r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    segments = segments || 12;\r\n    phiStart = phiStart || 0;\r\n    phiLength = phiLength || 2 * Math.PI;\r\n\r\n    var inversePointLength = 1.0 / ( points.length - 1 );\r\n    var inverseSegments = 1.0 / segments;\r\n\r\n    for ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n        var phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n        var c = Math.cos( phi ),\r\n            s = Math.sin( phi );\r\n\r\n        for ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n            var pt = points[ j ];\r\n\r\n            var vertex = new THREE.Vector3();\r\n\r\n            vertex.x = c * pt.x - s * pt.y;\r\n            vertex.y = s * pt.x + c * pt.y;\r\n            vertex.z = pt.z;\r\n\r\n            this.vertices.push( vertex );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    var np = points.length;\r\n\r\n    for ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n        for ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n            var base = j + np * i;\r\n            var a = base;\r\n            var b = base + np;\r\n            var c = base + 1 + np;\r\n            var d = base + 1;\r\n\r\n            var u0 = i * inverseSegments;\r\n            var v0 = j * inversePointLength;\r\n            var u1 = u0 + inverseSegments;\r\n            var v1 = v0 + inversePointLength;\r\n\r\n            this.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n            this.faceVertexUvs[ 0 ].push( [\r\n\r\n                new THREE.Vector2( u0, v0 ),\r\n                new THREE.Vector2( u1, v0 ),\r\n                new THREE.Vector2( u0, v1 )\r\n\r\n            ] );\r\n\r\n            this.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n            this.faceVertexUvs[ 0 ].push( [\r\n\r\n                new THREE.Vector2( u1, v0 ),\r\n                new THREE.Vector2( u1, v1 ),\r\n                new THREE.Vector2( u0, v1 )\r\n\r\n            ] );\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.mergeVertices();\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n    this.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.widthSegments = widthSegments || 1;\r\n    this.heightSegments = heightSegments || 1;\r\n\r\n    var ix, iz;\r\n    var width_half = width / 2;\r\n    var height_half = height / 2;\r\n\r\n    var gridX = this.widthSegments;\r\n    var gridZ = this.heightSegments;\r\n\r\n    var gridX1 = gridX + 1;\r\n    var gridZ1 = gridZ + 1;\r\n\r\n    var segment_width = this.width / gridX;\r\n    var segment_height = this.height / gridZ;\r\n\r\n    var normal = new THREE.Vector3( 0, 0, 1 );\r\n\r\n    for ( iz = 0; iz < gridZ1; iz ++ ) {\r\n\r\n        for ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n            var x = ix * segment_width - width_half;\r\n            var y = iz * segment_height - height_half;\r\n\r\n            this.vertices.push( new THREE.Vector3( x, - y, 0 ) );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for ( iz = 0; iz < gridZ; iz ++ ) {\r\n\r\n        for ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n            var a = ix + gridX1 * iz;\r\n            var b = ix + gridX1 * ( iz + 1 );\r\n            var c = ( ix + 1 ) + gridX1 * ( iz + 1 );\r\n            var d = ( ix + 1 ) + gridX1 * iz;\r\n\r\n            var uva = new THREE.Vector2( ix / gridX, 1 - iz / gridZ );\r\n            var uvb = new THREE.Vector2( ix / gridX, 1 - ( iz + 1 ) / gridZ );\r\n            var uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iz + 1 ) / gridZ );\r\n            var uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iz / gridZ );\r\n\r\n            var face = new THREE.Face3( a, b, d );\r\n            face.normal.copy( normal );\r\n            face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\r\n            this.faces.push( face );\r\n            this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n            face = new THREE.Face3( b, c, d );\r\n            face.normal.copy( normal );\r\n            face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\r\n            this.faces.push( face );\r\n            this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.computeCentroids();\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    innerRadius = innerRadius || 0;\r\n    outerRadius = outerRadius || 50;\r\n\r\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n    thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n    phiSegments = phiSegments !== undefined ? Math.max( 3, phiSegments ) : 8;\r\n\r\n    var i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n    for ( i = 0; i <= phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n        for ( o = 0; o <= thetaSegments; o ++ ) { // number of segments per circle\r\n\r\n            var vertex = new THREE.Vector3();\r\n            var segment = thetaStart + o / thetaSegments * thetaLength;\r\n\r\n            vertex.x = radius * Math.cos( segment );\r\n            vertex.y = radius * Math.sin( segment );\r\n\r\n            this.vertices.push( vertex );\r\n            uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, - ( vertex.y / radius + 1 ) / 2 + 1 ) );\r\n        }\r\n\r\n        radius += radiusStep;\r\n\r\n    }\r\n\r\n    var n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n    for ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n        var thetaSegment = i * thetaSegments;\r\n\r\n        for ( o = 0; o <= thetaSegments; o ++ ) { // number of segments per circle\r\n\r\n            var segment = o + thetaSegment;\r\n\r\n            var v1 = segment + i;\r\n            var v2 = segment + thetaSegments + i;\r\n            var v3 = segment + thetaSegments + 1 + i;\r\n\r\n            this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uvs[ v1 ], uvs[ v2 ], uvs[ v3 ] ]);\r\n\r\n            v1 = segment + i;\r\n            v2 = segment + thetaSegments + 1 + i;\r\n            v3 = segment + 1 + i;\r\n\r\n            this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uvs[ v1 ], uvs[ v2 ], uvs[ v3 ] ]);\r\n\r\n        }\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n\r\n    this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    this.radius = radius = radius || 50;\r\n\r\n    this.widthSegments = widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n    this.heightSegments = heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n    this.phiStart = phiStart = phiStart !== undefined ? phiStart : 0;\r\n    this.phiLength = phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n    this.thetaStart = thetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n    this.thetaLength = thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n    var x, y, vertices = [], uvs = [];\r\n\r\n    for ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n        var verticesRow = [];\r\n        var uvsRow = [];\r\n\r\n        for ( x = 0; x <= widthSegments; x ++ ) {\r\n\r\n            var u = x / widthSegments;\r\n            var v = y / heightSegments;\r\n\r\n            var vertex = new THREE.Vector3();\r\n            vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n            vertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n            vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n            this.vertices.push( vertex );\r\n\r\n            verticesRow.push( this.vertices.length - 1 );\r\n            uvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n        }\r\n\r\n        vertices.push( verticesRow );\r\n        uvs.push( uvsRow );\r\n\r\n    }\r\n\r\n    for ( y = 0; y < this.heightSegments; y ++ ) {\r\n\r\n        for ( x = 0; x < this.widthSegments; x ++ ) {\r\n\r\n            var v1 = vertices[ y ][ x + 1 ];\r\n            var v2 = vertices[ y ][ x ];\r\n            var v3 = vertices[ y + 1 ][ x ];\r\n            var v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n            var n1 = this.vertices[ v1 ].clone().normalize();\r\n            var n2 = this.vertices[ v2 ].clone().normalize();\r\n            var n3 = this.vertices[ v3 ].clone().normalize();\r\n            var n4 = this.vertices[ v4 ].clone().normalize();\r\n\r\n            var uv1 = uvs[ y ][ x + 1 ].clone();\r\n            var uv2 = uvs[ y ][ x ].clone();\r\n            var uv3 = uvs[ y + 1 ][ x ].clone();\r\n            var uv4 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\r\n            if ( Math.abs( this.vertices[ v1 ].y ) === this.radius ) {\r\n\r\n                this.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\r\n                this.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\r\n\r\n            } else if ( Math.abs( this.vertices[ v3 ].y ) === this.radius ) {\r\n\r\n                this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n                this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n            } else {\r\n\r\n                this.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n                this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n                this.faces.push( new THREE.Face3( v2, v3, v4, [ n2, n3, n4 ] ) );\r\n                this.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n\r\n    this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n    parameters = parameters || {};\r\n\r\n    var textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n    // translate parameters to ExtrudeGeometry API\r\n\r\n    parameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n    // defaults\r\n\r\n    if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n    if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n    if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n    THREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    var scope = this;\r\n\r\n    this.radius = radius || 100;\r\n    this.tube = tube || 40;\r\n    this.radialSegments = radialSegments || 8;\r\n    this.tubularSegments = tubularSegments || 6;\r\n    this.arc = arc || Math.PI * 2;\r\n\r\n    var center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n    for ( var j = 0; j <= this.radialSegments; j ++ ) {\r\n\r\n        for ( var i = 0; i <= this.tubularSegments; i ++ ) {\r\n\r\n            var u = i / this.tubularSegments * this.arc;\r\n            var v = j / this.radialSegments * Math.PI * 2;\r\n\r\n            center.x = this.radius * Math.cos( u );\r\n            center.y = this.radius * Math.sin( u );\r\n\r\n            var vertex = new THREE.Vector3();\r\n            vertex.x = ( this.radius + this.tube * Math.cos( v ) ) * Math.cos( u );\r\n            vertex.y = ( this.radius + this.tube * Math.cos( v ) ) * Math.sin( u );\r\n            vertex.z = this.tube * Math.sin( v );\r\n\r\n            this.vertices.push( vertex );\r\n\r\n            uvs.push( new THREE.Vector2( i / this.tubularSegments, j / this.radialSegments ) );\r\n            normals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n        }\r\n    }\r\n\r\n\r\n    for ( var j = 1; j <= this.radialSegments; j ++ ) {\r\n\r\n        for ( var i = 1; i <= this.tubularSegments; i ++ ) {\r\n\r\n            var a = ( this.tubularSegments + 1 ) * j + i - 1;\r\n            var b = ( this.tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n            var c = ( this.tubularSegments + 1 ) * ( j - 1 ) + i;\r\n            var d = ( this.tubularSegments + 1 ) * j + i;\r\n\r\n            var face = new THREE.Face3( a, b, d, [ normals[ a ], normals[ b ], normals[ d ] ] );\r\n            face.normal.add( normals[ a ] );\r\n            face.normal.add( normals[ b ] );\r\n            face.normal.add( normals[ d ] );\r\n            face.normal.normalize();\r\n\r\n            this.faces.push( face );\r\n\r\n            this.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n            face = new THREE.Face3( b, c, d, [ normals[ b ], normals[ c ], normals[ d ] ] );\r\n            face.normal.add( normals[ b ] );\r\n            face.normal.add( normals[ c ] );\r\n            face.normal.add( normals[ d ] );\r\n            face.normal.normalize();\r\n\r\n            this.faces.push( face );\r\n\r\n            this.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n        }\r\n\r\n    }\r\n\r\n    this.computeCentroids();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    var scope = this;\r\n\r\n    this.radius = radius || 100;\r\n    this.tube = tube || 40;\r\n    this.radialSegments = radialSegments || 64;\r\n    this.tubularSegments = tubularSegments || 8;\r\n    this.p = p || 2;\r\n    this.q = q || 3;\r\n    this.heightScale = heightScale || 1;\r\n    this.grid = new Array( this.radialSegments );\r\n\r\n    var tang = new THREE.Vector3();\r\n    var n = new THREE.Vector3();\r\n    var bitan = new THREE.Vector3();\r\n\r\n    for ( var i = 0; i < this.radialSegments; ++ i ) {\r\n\r\n        this.grid[ i ] = new Array( this.tubularSegments );\r\n        var u = i / this.radialSegments * 2 * this.p * Math.PI;\r\n        var p1 = getPos( u, this.q, this.p, this.radius, this.heightScale );\r\n        var p2 = getPos( u + 0.01, this.q, this.p, this.radius, this.heightScale );\r\n        tang.subVectors( p2, p1 );\r\n        n.addVectors( p2, p1 );\r\n\r\n        bitan.crossVectors( tang, n );\r\n        n.crossVectors( bitan, tang );\r\n        bitan.normalize();\r\n        n.normalize();\r\n\r\n        for ( var j = 0; j < this.tubularSegments; ++ j ) {\r\n\r\n            var v = j / this.tubularSegments * 2 * Math.PI;\r\n            var cx = - this.tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n            var cy = this.tube * Math.sin( v );\r\n\r\n            var pos = new THREE.Vector3();\r\n            pos.x = p1.x + cx * n.x + cy * bitan.x;\r\n            pos.y = p1.y + cx * n.y + cy * bitan.y;\r\n            pos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n            this.grid[ i ][ j ] = scope.vertices.push( pos ) - 1;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for ( var i = 0; i < this.radialSegments; ++ i ) {\r\n\r\n        for ( var j = 0; j < this.tubularSegments; ++ j ) {\r\n\r\n            var ip = ( i + 1 ) % this.radialSegments;\r\n            var jp = ( j + 1 ) % this.tubularSegments;\r\n\r\n            var a = this.grid[ i ][ j ];\r\n            var b = this.grid[ ip ][ j ];\r\n            var c = this.grid[ ip ][ jp ];\r\n            var d = this.grid[ i ][ jp ];\r\n\r\n            var uva = new THREE.Vector2( i / this.radialSegments, j / this.tubularSegments );\r\n            var uvb = new THREE.Vector2( ( i + 1 ) / this.radialSegments, j / this.tubularSegments );\r\n            var uvc = new THREE.Vector2( ( i + 1 ) / this.radialSegments, ( j + 1 ) / this.tubularSegments );\r\n            var uvd = new THREE.Vector2( i / this.radialSegments, ( j + 1 ) / this.tubularSegments );\r\n\r\n            this.faces.push( new THREE.Face3( a, b, d ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n            this.faces.push( new THREE.Face3( b, c, d ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n        }\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n    this.computeVertexNormals();\r\n\r\n    function getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n        var cu = Math.cos( u );\r\n        var su = Math.sin( u );\r\n        var quOverP = in_q / in_p * u;\r\n        var cs = Math.cos( quOverP );\r\n\r\n        var tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n        var ty = radius * ( 2 + cs ) * su * 0.5;\r\n        var tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n        return new THREE.Vector3( tx, ty, tz );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function( path, segments, radius, radialSegments, closed ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    this.path = path;\r\n    this.segments = segments || 64;\r\n    this.radius = radius || 1;\r\n    this.radialSegments = radialSegments || 8;\r\n    this.closed = closed || false;\r\n\r\n    this.grid = [];\r\n\r\n    var scope = this,\r\n\r\n        tangent,\r\n        normal,\r\n        binormal,\r\n\r\n        numpoints = this.segments + 1,\r\n\r\n        x, y, z,\r\n        tx, ty, tz,\r\n        u, v,\r\n\r\n        cx, cy,\r\n        pos, pos2 = new THREE.Vector3(),\r\n        i, j,\r\n        ip, jp,\r\n        a, b, c, d,\r\n        uva, uvb, uvc, uvd;\r\n\r\n    var frames = new THREE.TubeGeometry.FrenetFrames( this.path, this.segments, this.closed ),\r\n        tangents = frames.tangents,\r\n        normals = frames.normals,\r\n        binormals = frames.binormals;\r\n\r\n    // proxy internals\r\n    this.tangents = tangents;\r\n    this.normals = normals;\r\n    this.binormals = binormals;\r\n\r\n    function vert( x, y, z ) {\r\n\r\n        return scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n    }\r\n\r\n\r\n    // consruct the grid\r\n\r\n    for ( i = 0; i < numpoints; i++ ) {\r\n\r\n        this.grid[ i ] = [];\r\n\r\n        u = i / ( numpoints - 1 );\r\n\r\n        pos = path.getPointAt( u );\r\n\r\n        tangent = tangents[ i ];\r\n        normal = normals[ i ];\r\n        binormal = binormals[ i ];\r\n\r\n        for ( j = 0; j < this.radialSegments; j++ ) {\r\n\r\n            v = j / this.radialSegments * 2 * Math.PI;\r\n\r\n            cx = -this.radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n            cy = this.radius * Math.sin( v );\r\n\r\n            pos2.copy( pos );\r\n            pos2.x += cx * normal.x + cy * binormal.x;\r\n            pos2.y += cx * normal.y + cy * binormal.y;\r\n            pos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n            this.grid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // construct the mesh\r\n\r\n    for ( i = 0; i < this.segments; i++ ) {\r\n\r\n        for ( j = 0; j < this.radialSegments; j++ ) {\r\n\r\n            ip = ( this.closed ) ? (i + 1) % this.segments : i + 1;\r\n            jp = (j + 1) % this.radialSegments;\r\n\r\n            a = this.grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n            b = this.grid[ ip ][ j ];\r\n            c = this.grid[ ip ][ jp ];\r\n            d = this.grid[ i ][ jp ];\r\n\r\n            uva = new THREE.Vector2( i / this.segments, j / this.radialSegments );\r\n            uvb = new THREE.Vector2( ( i + 1 ) / this.segments, j / this.radialSegments );\r\n            uvc = new THREE.Vector2( ( i + 1 ) / this.segments, ( j + 1 ) / this.radialSegments );\r\n            uvd = new THREE.Vector2( i / this.segments, ( j + 1 ) / this.radialSegments );\r\n\r\n            this.faces.push( new THREE.Face3( a, b, d ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n            this.faces.push( new THREE.Face3( b, c, d ) );\r\n            this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n        }\r\n    }\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n    this.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function(path, segments, closed) {\r\n\r\n    var\ttangent = new THREE.Vector3(),\r\n        normal = new THREE.Vector3(),\r\n        binormal = new THREE.Vector3(),\r\n\r\n        tangents = [],\r\n        normals = [],\r\n        binormals = [],\r\n\r\n        vec = new THREE.Vector3(),\r\n        mat = new THREE.Matrix4(),\r\n\r\n        numpoints = segments + 1,\r\n        theta,\r\n        epsilon = 0.0001,\r\n        smallest,\r\n\r\n        tx, ty, tz,\r\n        i, u, v;\r\n\r\n\r\n    // expose internals\r\n    this.tangents = tangents;\r\n    this.normals = normals;\r\n    this.binormals = binormals;\r\n\r\n    // compute the tangent vectors for each segment on the path\r\n\r\n    for ( i = 0; i < numpoints; i++ ) {\r\n\r\n        u = i / ( numpoints - 1 );\r\n\r\n        tangents[ i ] = path.getTangentAt( u );\r\n        tangents[ i ].normalize();\r\n\r\n    }\r\n\r\n    initialNormal3();\r\n\r\n    function initialNormal1(lastBinormal) {\r\n        // fixed start binormal. Has dangers of 0 vectors\r\n        normals[ 0 ] = new THREE.Vector3();\r\n        binormals[ 0 ] = new THREE.Vector3();\r\n        if (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n        normals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n        binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n    }\r\n\r\n    function initialNormal2() {\r\n\r\n        // This uses the Frenet-Serret formula for deriving binormal\r\n        var t2 = path.getTangentAt( epsilon );\r\n\r\n        normals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n        binormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n        normals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n        binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n    }\r\n\r\n    function initialNormal3() {\r\n        // select an initial normal vector perpenicular to the first tangent vector,\r\n        // and in the direction of the smallest tangent xyz component\r\n\r\n        normals[ 0 ] = new THREE.Vector3();\r\n        binormals[ 0 ] = new THREE.Vector3();\r\n        smallest = Number.MAX_VALUE;\r\n        tx = Math.abs( tangents[ 0 ].x );\r\n        ty = Math.abs( tangents[ 0 ].y );\r\n        tz = Math.abs( tangents[ 0 ].z );\r\n\r\n        if ( tx <= smallest ) {\r\n            smallest = tx;\r\n            normal.set( 1, 0, 0 );\r\n        }\r\n\r\n        if ( ty <= smallest ) {\r\n            smallest = ty;\r\n            normal.set( 0, 1, 0 );\r\n        }\r\n\r\n        if ( tz <= smallest ) {\r\n            normal.set( 0, 0, 1 );\r\n        }\r\n\r\n        vec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n        normals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n        binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n    }\r\n\r\n\r\n    // compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n    for ( i = 1; i < numpoints; i++ ) {\r\n\r\n        normals[ i ] = normals[ i-1 ].clone();\r\n\r\n        binormals[ i ] = binormals[ i-1 ].clone();\r\n\r\n        vec.crossVectors( tangents[ i-1 ], tangents[ i ] );\r\n\r\n        if ( vec.length() > epsilon ) {\r\n\r\n            vec.normalize();\r\n\r\n            theta = Math.acos( THREE.Math.clamp( tangents[ i-1 ].dot( tangents[ i ] ), -1, 1 ) ); // clamp for floating pt errors\r\n\r\n            normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n        }\r\n\r\n        binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n    }\r\n\r\n\r\n    // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n    if ( closed ) {\r\n\r\n        theta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints-1 ] ), -1, 1 ) );\r\n        theta /= ( numpoints - 1 );\r\n\r\n        if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints-1 ] ) ) > 0 ) {\r\n\r\n            theta = -theta;\r\n\r\n        }\r\n\r\n        for ( i = 1; i < numpoints; i++ ) {\r\n\r\n            // twist a little...\r\n            normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n            binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, faces, radius, detail ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    radius = radius || 1;\r\n    detail = detail || 0;\r\n\r\n    var that = this;\r\n\r\n    for ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n        prepare( new THREE.Vector3( vertices[ i ][ 0 ], vertices[ i ][ 1 ], vertices[ i ][ 2 ] ) );\r\n\r\n    }\r\n\r\n    var midpoints = [], p = this.vertices;\r\n\r\n    var f = [];\r\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n        var v1 = p[ faces[ i ][ 0 ] ];\r\n        var v2 = p[ faces[ i ][ 1 ] ];\r\n        var v3 = p[ faces[ i ][ 2 ] ];\r\n\r\n        f[ i ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\r\n    }\r\n\r\n    for ( var i = 0, l = f.length; i < l; i ++ ) {\r\n\r\n        subdivide(f[ i ], detail);\r\n\r\n    }\r\n\r\n\r\n    // Handle case when face straddles the seam\r\n\r\n    for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n        var uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n        var x0 = uvs[ 0 ].x;\r\n        var x1 = uvs[ 1 ].x;\r\n        var x2 = uvs[ 2 ].x;\r\n\r\n        var max = Math.max( x0, Math.max( x1, x2 ) );\r\n        var min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n        if ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\r\n\r\n            if ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n            if ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n            if ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Apply radius\r\n\r\n    for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n        this.vertices[ i ].multiplyScalar( radius );\r\n\r\n    }\r\n\r\n\r\n    // Merge vertices\r\n\r\n    this.mergeVertices();\r\n\r\n    this.computeCentroids();\r\n\r\n    this.computeFaceNormals();\r\n\r\n    this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n    // Project vector onto sphere's surface\r\n\r\n    function prepare( vector ) {\r\n\r\n        var vertex = vector.normalize().clone();\r\n        vertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n        // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n        var u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n        var v = inclination( vector ) / Math.PI + 0.5;\r\n        vertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n        return vertex;\r\n\r\n    }\r\n\r\n\r\n    // Approximate a curved face with recursively sub-divided triangles.\r\n\r\n    function make( v1, v2, v3 ) {\r\n\r\n        var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n        face.centroid.add( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n        that.faces.push( face );\r\n\r\n        var azi = azimuth( face.centroid );\r\n\r\n        that.faceVertexUvs[ 0 ].push( [\r\n            correctUV( v1.uv, v1, azi ),\r\n            correctUV( v2.uv, v2, azi ),\r\n            correctUV( v3.uv, v3, azi )\r\n        ] );\r\n\r\n    }\r\n\r\n\r\n    // Analytically subdivide a face to the required detail level.\r\n\r\n    function subdivide(face, detail ) {\r\n\r\n        var cols = Math.pow(2, detail);\r\n        var cells = Math.pow(4, detail);\r\n        var a = prepare( that.vertices[ face.a ] );\r\n        var b = prepare( that.vertices[ face.b ] );\r\n        var c = prepare( that.vertices[ face.c ] );\r\n        var v = [];\r\n\r\n        // Construct all of the vertices for this subdivision.\r\n\r\n        for ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n            v[ i ] = [];\r\n\r\n            var aj = prepare( a.clone().lerp( c, i / cols ) );\r\n            var bj = prepare( b.clone().lerp( c, i / cols ) );\r\n            var rows = cols - i;\r\n\r\n            for ( var j = 0; j <= rows; j ++) {\r\n\r\n                if ( j == 0 && i == cols ) {\r\n\r\n                    v[ i ][ j ] = aj;\r\n\r\n                } else {\r\n\r\n                    v[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Construct all of the faces.\r\n\r\n        for ( var i = 0; i < cols ; i ++ ) {\r\n\r\n            for ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\r\n\r\n                var k = Math.floor( j / 2 );\r\n\r\n                if ( j % 2 == 0 ) {\r\n\r\n                    make(\r\n                        v[ i ][ k + 1],\r\n                        v[ i + 1 ][ k ],\r\n                        v[ i ][ k ]\r\n                    );\r\n\r\n                } else {\r\n\r\n                    make(\r\n                        v[ i ][ k + 1 ],\r\n                        v[ i + 1][ k + 1],\r\n                        v[ i + 1 ][ k ]\r\n                    );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n    function azimuth( vector ) {\r\n\r\n        return Math.atan2( vector.z, -vector.x );\r\n\r\n    }\r\n\r\n\r\n    // Angle above the XZ plane.\r\n\r\n    function inclination( vector ) {\r\n\r\n        return Math.atan2( -vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n    }\r\n\r\n\r\n    // Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n    function correctUV( uv, vector, azimuth ) {\r\n\r\n        if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n        if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n        return uv.clone();\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n    this.radius = radius;\r\n    this.detail = detail;\r\n\r\n    var t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n    var vertices = [\r\n        [ -1,  t,  0 ], [  1, t, 0 ], [ -1, -t,  0 ], [  1, -t,  0 ],\r\n        [  0, -1,  t ], [  0, 1, t ], [  0, -1, -t ], [  0,  1, -t ],\r\n        [  t,  0, -1 ], [  t, 0, 1 ], [ -t,  0, -1 ], [ -t,  0,  1 ]\r\n    ];\r\n\r\n    var faces = [\r\n        [ 0, 11,  5 ], [ 0,  5,  1 ], [  0,  1,  7 ], [  0,  7, 10 ], [  0, 10, 11 ],\r\n        [ 1,  5,  9 ], [ 5, 11,  4 ], [ 11, 10,  2 ], [ 10,  7,  6 ], [  7,  1,  8 ],\r\n        [ 3,  9,  4 ], [ 3,  4,  2 ], [  3,  2,  6 ], [  3,  6,  8 ], [  3,  8,  9 ],\r\n        [ 4,  9,  5 ], [ 2,  4, 11 ], [  6,  2, 10 ], [  8,  6,  7 ], [  9,  8,  1 ]\r\n    ];\r\n\r\n    THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n    var vertices = [\r\n        [ 1, 0, 0 ], [ -1, 0, 0 ], [ 0, 1, 0 ], [ 0, -1, 0 ], [ 0, 0, 1 ], [ 0, 0, -1 ]\r\n    ];\r\n\r\n    var faces = [\r\n        [ 0, 2, 4 ], [ 0, 4, 3 ], [ 0, 3, 5 ], [ 0, 5, 2 ], [ 1, 2, 5 ], [ 1, 5, 3 ], [ 1, 3, 4 ], [ 1, 4, 2 ]\r\n    ];\r\n\r\n    THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n    var vertices = [\r\n        [ 1,  1,  1 ], [ -1, -1, 1 ], [ -1, 1, -1 ], [ 1, -1, -1 ]\r\n    ];\r\n\r\n    var faces = [\r\n        [ 2, 1, 0 ], [ 0, 3, 2 ], [ 1, 3, 0 ], [ 2, 3, 1 ]\r\n    ];\r\n\r\n    THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n    THREE.Geometry.call( this );\r\n\r\n    var verts = this.vertices;\r\n    var faces = this.faces;\r\n    var uvs = this.faceVertexUvs[ 0 ];\r\n\r\n    var i, il, j, p;\r\n    var u, v;\r\n\r\n    var stackCount = stacks + 1;\r\n    var sliceCount = slices + 1;\r\n\r\n    for ( i = 0; i <= stacks; i ++ ) {\r\n\r\n        v = i / stacks;\r\n\r\n        for ( j = 0; j <= slices; j ++ ) {\r\n\r\n            u = j / slices;\r\n\r\n            p = func( u, v );\r\n            verts.push( p );\r\n\r\n        }\r\n    }\r\n\r\n    var a, b, c, d;\r\n    var uva, uvb, uvc, uvd;\r\n\r\n    for ( i = 0; i < stacks; i ++ ) {\r\n\r\n        for ( j = 0; j < slices; j ++ ) {\r\n\r\n            a = i * sliceCount + j;\r\n            b = i * sliceCount + j + 1;\r\n            c = (i + 1) * sliceCount + j + 1;\r\n            d = (i + 1) * sliceCount + j;\r\n\r\n            uva = new THREE.Vector2( j / slices, i / stacks );\r\n            uvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n            uvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n            uvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n            faces.push( new THREE.Face3( a, b, d ) );\r\n            uvs.push( [ uva, uvb, uvd ] );\r\n\r\n            faces.push( new THREE.Face3( b, c, d ) );\r\n            uvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(this);\r\n\r\n    // magic bullet\r\n    // var diff = this.mergeVertices();\r\n    // console.log('removed ', diff, ' vertices by merging');\r\n\r\n    this.computeCentroids();\r\n    this.computeFaceNormals();\r\n    this.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n    size = size || 1;\r\n\r\n    var geometry = new THREE.Geometry();\r\n\r\n    geometry.vertices.push(\r\n        new THREE.Vector3(), new THREE.Vector3( size, 0, 0 ),\r\n        new THREE.Vector3(), new THREE.Vector3( 0, size, 0 ),\r\n        new THREE.Vector3(), new THREE.Vector3( 0, 0, size )\r\n    );\r\n\r\n    geometry.colors.push(\r\n        new THREE.Color( 0xff0000 ), new THREE.Color( 0xffaa00 ),\r\n        new THREE.Color( 0x00ff00 ), new THREE.Color( 0xaaff00 ),\r\n        new THREE.Color( 0x0000ff ), new THREE.Color( 0x00aaff )\r\n    );\r\n\r\n    var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n    THREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  hex - color in hex value\r\n */\r\n\r\nTHREE.ArrowHelper = function ( dir, origin, length, hex ) {\r\n\r\n    // dir is assumed to be normalized\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    if ( hex === undefined ) hex = 0xffff00;\r\n    if ( length === undefined ) length = 1;\r\n\r\n    this.position = origin;\r\n\r\n    var lineGeometry = new THREE.Geometry();\r\n    lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ) );\r\n    lineGeometry.vertices.push( new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n    this.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: hex } ) );\r\n    this.line.matrixAutoUpdate = false;\r\n    this.add( this.line );\r\n\r\n    var coneGeometry = new THREE.CylinderGeometry( 0, 0.05, 0.25, 5, 1 );\r\n    coneGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, 0.875, 0 ) );\r\n\r\n    this.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: hex } ) );\r\n    this.cone.matrixAutoUpdate = false;\r\n    this.add( this.cone );\r\n\r\n    this.setDirection( dir );\r\n    this.setLength( length );\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = function () {\r\n\r\n    var axis = new THREE.Vector3();\r\n    var radians;\r\n\r\n    return function ( dir ) {\r\n\r\n        // dir is assumed to be normalized\r\n\r\n        if ( dir.y > 0.99999 ) {\r\n\r\n            this.quaternion.set( 0, 0, 0, 1 );\r\n\r\n        } else if ( dir.y < - 0.99999 ) {\r\n\r\n            this.quaternion.set( 1, 0, 0, 0 );\r\n\r\n        } else {\r\n\r\n            axis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n            radians = Math.acos( dir.y );\r\n\r\n            this.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n        }\r\n\r\n    };\r\n\r\n}();\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length ) {\r\n\r\n    this.scale.set( length, length, length );\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( hex ) {\r\n\r\n    this.line.material.color.setHex( hex );\r\n    this.cone.material.color.setHex( hex );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n    //   5____4\r\n    // 1/___0/|\r\n    // | 6__|_7\r\n    // 2/___3/\r\n\r\n    var vertices = [\r\n        new THREE.Vector3(   1,   1,   1 ),\r\n        new THREE.Vector3( - 1,   1,   1 ),\r\n        new THREE.Vector3( - 1, - 1,   1 ),\r\n        new THREE.Vector3(   1, - 1,   1 ),\r\n\r\n        new THREE.Vector3(   1,   1, - 1 ),\r\n        new THREE.Vector3( - 1,   1, - 1 ),\r\n        new THREE.Vector3( - 1, - 1, - 1 ),\r\n        new THREE.Vector3(   1, - 1, - 1 )\r\n    ];\r\n\r\n    this.vertices = vertices;\r\n\r\n    // TODO: Wouldn't be nice if Line had .segments?\r\n\r\n    var geometry = new THREE.Geometry();\r\n    geometry.vertices.push(\r\n        vertices[ 0 ], vertices[ 1 ],\r\n        vertices[ 1 ], vertices[ 2 ],\r\n        vertices[ 2 ], vertices[ 3 ],\r\n        vertices[ 3 ], vertices[ 0 ],\r\n\r\n        vertices[ 4 ], vertices[ 5 ],\r\n        vertices[ 5 ], vertices[ 6 ],\r\n        vertices[ 6 ], vertices[ 7 ],\r\n        vertices[ 7 ], vertices[ 4 ],\r\n\r\n        vertices[ 0 ], vertices[ 4 ],\r\n        vertices[ 1 ], vertices[ 5 ],\r\n        vertices[ 2 ], vertices[ 6 ],\r\n        vertices[ 3 ], vertices[ 7 ]\r\n    );\r\n\r\n    THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\r\n\r\n    if ( object !== undefined ) {\r\n\r\n        this.update( object );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.BoxHelper.prototype.update = function ( object ) {\r\n\r\n    var geometry = object.geometry;\r\n\r\n    if ( geometry.boundingBox === null ) {\r\n\r\n        geometry.computeBoundingBox();\r\n\r\n    }\r\n\r\n    var min = geometry.boundingBox.min;\r\n    var max = geometry.boundingBox.max;\r\n    var vertices = this.vertices;\r\n\r\n    vertices[ 0 ].set( max.x, max.y, max.z );\r\n    vertices[ 1 ].set( min.x, max.y, max.z );\r\n    vertices[ 2 ].set( min.x, min.y, max.z );\r\n    vertices[ 3 ].set( max.x, min.y, max.z );\r\n    vertices[ 4 ].set( max.x, max.y, min.z );\r\n    vertices[ 5 ].set( min.x, max.y, min.z );\r\n    vertices[ 6 ].set( min.x, min.y, min.z );\r\n    vertices[ 7 ].set( max.x, min.y, min.z );\r\n\r\n    this.geometry.computeBoundingSphere();\r\n    this.geometry.verticesNeedUpdate = true;\r\n\r\n    this.matrixAutoUpdate = false;\r\n    this.matrixWorld = object.matrixWorld;\r\n\r\n};\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n    var color = hex || 0x888888;\r\n\r\n    this.object = object;\r\n\r\n    this.box = new THREE.Box3();\r\n\r\n    THREE.Mesh.call( this, new THREE.CubeGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n    this.box.setFromObject( this.object );\r\n\r\n    this.box.size( this.scale );\r\n\r\n    this.box.center( this.position );\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n    var geometry = new THREE.Geometry();\r\n    var material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n    var pointMap = {};\r\n\r\n    // colors\r\n\r\n    var hexFrustum = 0xffaa00;\r\n    var hexCone = 0xff0000;\r\n    var hexUp = 0x00aaff;\r\n    var hexTarget = 0xffffff;\r\n    var hexCross = 0x333333;\r\n\r\n    // near\r\n\r\n    addLine( \"n1\", \"n2\", hexFrustum );\r\n    addLine( \"n2\", \"n4\", hexFrustum );\r\n    addLine( \"n4\", \"n3\", hexFrustum );\r\n    addLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n    // far\r\n\r\n    addLine( \"f1\", \"f2\", hexFrustum );\r\n    addLine( \"f2\", \"f4\", hexFrustum );\r\n    addLine( \"f4\", \"f3\", hexFrustum );\r\n    addLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n    // sides\r\n\r\n    addLine( \"n1\", \"f1\", hexFrustum );\r\n    addLine( \"n2\", \"f2\", hexFrustum );\r\n    addLine( \"n3\", \"f3\", hexFrustum );\r\n    addLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n    // cone\r\n\r\n    addLine( \"p\", \"n1\", hexCone );\r\n    addLine( \"p\", \"n2\", hexCone );\r\n    addLine( \"p\", \"n3\", hexCone );\r\n    addLine( \"p\", \"n4\", hexCone );\r\n\r\n    // up\r\n\r\n    addLine( \"u1\", \"u2\", hexUp );\r\n    addLine( \"u2\", \"u3\", hexUp );\r\n    addLine( \"u3\", \"u1\", hexUp );\r\n\r\n    // target\r\n\r\n    addLine( \"c\", \"t\", hexTarget );\r\n    addLine( \"p\", \"c\", hexCross );\r\n\r\n    // cross\r\n\r\n    addLine( \"cn1\", \"cn2\", hexCross );\r\n    addLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n    addLine( \"cf1\", \"cf2\", hexCross );\r\n    addLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n    function addLine( a, b, hex ) {\r\n\r\n        addPoint( a, hex );\r\n        addPoint( b, hex );\r\n\r\n    }\r\n\r\n    function addPoint( id, hex ) {\r\n\r\n        geometry.vertices.push( new THREE.Vector3() );\r\n        geometry.colors.push( new THREE.Color( hex ) );\r\n\r\n        if ( pointMap[ id ] === undefined ) {\r\n\r\n            pointMap[ id ] = [];\r\n\r\n        }\r\n\r\n        pointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n    }\r\n\r\n    THREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n    this.camera = camera;\r\n    this.matrixWorld = camera.matrixWorld;\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.pointMap = pointMap;\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n    var vector = new THREE.Vector3();\r\n    var camera = new THREE.Camera();\r\n    var projector = new THREE.Projector();\r\n\r\n    return function () {\r\n\r\n        var scope = this;\r\n\r\n        var w = 1, h = 1;\r\n\r\n        // we need just camera projection matrix\r\n        // world matrix must be identity\r\n\r\n        camera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n        // center / target\r\n\r\n        setPoint( \"c\", 0, 0, -1 );\r\n        setPoint( \"t\", 0, 0,  1 );\r\n\r\n        // near\r\n\r\n        setPoint( \"n1\", -w, -h, -1 );\r\n        setPoint( \"n2\",  w, -h, -1 );\r\n        setPoint( \"n3\", -w,  h, -1 );\r\n        setPoint( \"n4\",  w,  h, -1 );\r\n\r\n        // far\r\n\r\n        setPoint( \"f1\", -w, -h, 1 );\r\n        setPoint( \"f2\",  w, -h, 1 );\r\n        setPoint( \"f3\", -w,  h, 1 );\r\n        setPoint( \"f4\",  w,  h, 1 );\r\n\r\n        // up\r\n\r\n        setPoint( \"u1\",  w * 0.7, h * 1.1, -1 );\r\n        setPoint( \"u2\", -w * 0.7, h * 1.1, -1 );\r\n        setPoint( \"u3\",        0, h * 2,   -1 );\r\n\r\n        // cross\r\n\r\n        setPoint( \"cf1\", -w,  0, 1 );\r\n        setPoint( \"cf2\",  w,  0, 1 );\r\n        setPoint( \"cf3\",  0, -h, 1 );\r\n        setPoint( \"cf4\",  0,  h, 1 );\r\n\r\n        setPoint( \"cn1\", -w,  0, -1 );\r\n        setPoint( \"cn2\",  w,  0, -1 );\r\n        setPoint( \"cn3\",  0, -h, -1 );\r\n        setPoint( \"cn4\",  0,  h, -1 );\r\n\r\n        function setPoint( point, x, y, z ) {\r\n\r\n            vector.set( x, y, z );\r\n            projector.unprojectVector( vector, camera );\r\n\r\n            var points = scope.pointMap[ point ];\r\n\r\n            if ( points !== undefined ) {\r\n\r\n                for ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n                    scope.geometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.geometry.verticesNeedUpdate = true;\r\n\r\n    };\r\n\r\n}();\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.light = light;\r\n    this.light.updateMatrixWorld();\r\n\r\n    this.matrixWorld = light.matrixWorld;\r\n    this.matrixAutoUpdate = false;\r\n\r\n    var geometry = new THREE.PlaneGeometry( size, size );\r\n    var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n    material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    this.lightPlane = new THREE.Mesh( geometry, material );\r\n    this.add( this.lightPlane );\r\n\r\n    geometry = new THREE.Geometry();\r\n    geometry.vertices.push( new THREE.Vector3() );\r\n    geometry.vertices.push( new THREE.Vector3() );\r\n    geometry.computeLineDistances();\r\n\r\n    material = new THREE.LineBasicMaterial( { fog: false } );\r\n    material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    this.targetLine = new THREE.Line( geometry, material );\r\n    this.add( this.targetLine );\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n    this.lightPlane.geometry.dispose();\r\n    this.lightPlane.material.dispose();\r\n    this.targetLine.geometry.dispose();\r\n    this.targetLine.material.dispose();\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n    var vector = new THREE.Vector3();\r\n\r\n    return function () {\r\n\r\n        vector.getPositionFromMatrix( this.light.matrixWorld ).negate();\r\n\r\n        this.lightPlane.lookAt( vector );\r\n        this.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n        this.targetLine.geometry.vertices[ 1 ].copy( vector );\r\n        this.targetLine.geometry.verticesNeedUpdate = true;\r\n        this.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n    }\r\n\r\n}();\r\n\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n    this.object = object;\r\n\r\n    this.size = size || 1;\r\n\r\n    var color = hex || 0xffff00;\r\n\r\n    var width = linewidth || 1;\r\n\r\n    var geometry = new THREE.Geometry();\r\n\r\n    var faces = this.object.geometry.faces;\r\n\r\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n        geometry.vertices.push( new THREE.Vector3() );\r\n        geometry.vertices.push( new THREE.Vector3() );\r\n\r\n    }\r\n\r\n    THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.normalMatrix = new THREE.Matrix3();\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n    var v1 = new THREE.Vector3();\r\n\r\n    return function ( object ) {\r\n\r\n        this.object.updateMatrixWorld( true );\r\n\r\n        this.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n        var vertices = this.geometry.vertices;\r\n\r\n        var faces = this.object.geometry.faces;\r\n\r\n        var worldMatrix = this.object.matrixWorld;\r\n\r\n        for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n            var face = faces[ i ];\r\n\r\n            v1.copy( face.normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n            var idx = 2 * i;\r\n\r\n            vertices[ idx ].copy( face.centroid ).applyMatrix4( worldMatrix );\r\n\r\n            vertices[ idx + 1 ].addVectors( vertices[ idx ], v1 );\r\n\r\n        }\r\n\r\n        this.geometry.verticesNeedUpdate = true;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}());\r\n\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n    var geometry = new THREE.Geometry();\r\n    var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n    this.color1 = new THREE.Color( 0x444444 );\r\n    this.color2 = new THREE.Color( 0x888888 );\r\n\r\n    for ( var i = - size; i <= size; i += step ) {\r\n\r\n        geometry.vertices.push(\r\n            new THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n            new THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n        );\r\n\r\n        var color = i === 0 ? this.color1 : this.color2;\r\n\r\n        geometry.colors.push( color, color, color, color );\r\n\r\n    }\r\n\r\n    THREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n    this.color1.set( colorCenterLine );\r\n    this.color2.set( colorGrid );\r\n\r\n    this.geometry.colorsNeedUpdate = true;\r\n\r\n}\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.light = light;\r\n    this.light.updateMatrixWorld();\r\n\r\n    this.matrixWorld = light.matrixWorld;\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n    var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n    geometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n    for ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n        geometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n    }\r\n\r\n    var material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n    this.lightSphere = new THREE.Mesh( geometry, material );\r\n    this.add( this.lightSphere );\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n    this.lightSphere.geometry.dispose();\r\n    this.lightSphere.material.dispose();\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n    var vector = new THREE.Vector3();\r\n\r\n    return function () {\r\n\r\n        this.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n        this.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n        this.lightSphere.lookAt( vector.getPositionFromMatrix( this.light.matrixWorld ).negate() );\r\n        this.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n    }\r\n\r\n}();\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n    this.light = light;\r\n    this.light.updateMatrixWorld();\r\n\r\n    var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n    var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n    material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    THREE.Mesh.call( this, geometry, material );\r\n\r\n    this.matrixWorld = this.light.matrixWorld;\r\n    this.matrixAutoUpdate = false;\r\n\r\n    /*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n    this.geometry.dispose();\r\n    this.material.dispose();\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n    this.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    /*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.light = light;\r\n    this.light.updateMatrixWorld();\r\n\r\n    this.matrixWorld = light.matrixWorld;\r\n    this.matrixAutoUpdate = false;\r\n\r\n    var geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n    geometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, -0.5, 0 ) );\r\n    geometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n    var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n    this.cone = new THREE.Mesh( geometry, material );\r\n    this.add( this.cone );\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n    this.cone.geometry.dispose();\r\n    this.cone.material.dispose();\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n    var vector = new THREE.Vector3();\r\n    var vector2 = new THREE.Vector3();\r\n\r\n    return function () {\r\n\r\n        var coneLength = this.light.distance ? this.light.distance : 10000;\r\n        var coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n        this.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n        vector.getPositionFromMatrix( this.light.matrixWorld );\r\n        vector2.getPositionFromMatrix( this.light.target.matrixWorld );\r\n\r\n        this.cone.lookAt( vector2.sub( vector ) );\r\n\r\n        this.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    };\r\n\r\n}();\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n    this.object = object;\r\n\r\n    this.size = size || 1;\r\n\r\n    var color = hex || 0xff0000;\r\n\r\n    var width = linewidth || 1;\r\n\r\n    var geometry = new THREE.Geometry();\r\n\r\n    var vertices = object.geometry.vertices;\r\n\r\n    var faces = object.geometry.faces;\r\n\r\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n        var face = faces[ i ];\r\n\r\n        for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n            geometry.vertices.push( new THREE.Vector3() );\r\n            geometry.vertices.push( new THREE.Vector3() );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.normalMatrix = new THREE.Matrix3();\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n    var v1 = new THREE.Vector3();\r\n\r\n    return function( object ) {\r\n\r\n        var keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n        this.object.updateMatrixWorld( true );\r\n\r\n        this.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n        var vertices = this.geometry.vertices;\r\n\r\n        var verts = this.object.geometry.vertices;\r\n\r\n        var faces = this.object.geometry.faces;\r\n\r\n        var worldMatrix = this.object.matrixWorld;\r\n\r\n        var idx = 0;\r\n\r\n        for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n            var face = faces[ i ];\r\n\r\n            for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n                var vertexId = face[ keys[ j ] ];\r\n                var vertex = verts[ vertexId ];\r\n\r\n                var normal = face.vertexNormals[ j ];\r\n\r\n                vertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n                v1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n                v1.add( vertices[ idx ] );\r\n                idx = idx + 1;\r\n\r\n                vertices[ idx ].copy( v1 );\r\n                idx = idx + 1;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.geometry.verticesNeedUpdate = true;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}());\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n    this.object = object;\r\n\r\n    this.size = size || 1;\r\n\r\n    var color = hex || 0x0000ff;\r\n\r\n    var width = linewidth || 1;\r\n\r\n    var geometry = new THREE.Geometry();\r\n\r\n    var vertices = object.geometry.vertices;\r\n\r\n    var faces = object.geometry.faces;\r\n\r\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n        var face = faces[ i ];\r\n\r\n        for ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n            geometry.vertices.push( new THREE.Vector3() );\r\n            geometry.vertices.push( new THREE.Vector3() );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.update();\r\n\r\n};\r\n\r\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\r\n\r\n    var v1 = new THREE.Vector3();\r\n\r\n    return function( object ) {\r\n\r\n        var keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n        this.object.updateMatrixWorld( true );\r\n\r\n        var vertices = this.geometry.vertices;\r\n\r\n        var verts = this.object.geometry.vertices;\r\n\r\n        var faces = this.object.geometry.faces;\r\n\r\n        var worldMatrix = this.object.matrixWorld;\r\n\r\n        var idx = 0;\r\n\r\n        for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n            var face = faces[ i ];\r\n\r\n            for ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n                var vertexId = face[ keys[ j ] ];\r\n                var vertex = verts[ vertexId ];\r\n\r\n                var tangent = face.vertexTangents[ j ];\r\n\r\n                vertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n                v1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\r\n\r\n                v1.add( vertices[ idx ] );\r\n                idx = idx + 1;\r\n\r\n                vertices[ idx ].copy( v1 );\r\n                idx = idx + 1;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.geometry.verticesNeedUpdate = true;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}());\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object ) {\r\n\r\n    var edge = [ 0, 0 ], hash = {};\r\n    var sortFunction = function ( a, b ) { return a - b };\r\n\r\n    var keys = [ 'a', 'b', 'c', 'd' ];\r\n    var geometry = new THREE.Geometry();\r\n\r\n    var vertices = object.geometry.vertices;\r\n    var faces = object.geometry.faces;\r\n\r\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n        var face = faces[ i ];\r\n\r\n        for ( var j = 0; j < 3; j ++ ) {\r\n\r\n            edge[ 0 ] = face[ keys[ j ] ];\r\n            edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n            edge.sort( sortFunction );\r\n\r\n            var key = edge.toString();\r\n\r\n            if ( hash[ key ] === undefined ) {\r\n\r\n                geometry.vertices.push( vertices[ edge[ 0 ] ] );\r\n                geometry.vertices.push( vertices[ edge[ 1 ] ] );\r\n\r\n                hash[ key ] = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffffff } ), THREE.LinePieces );\r\n\r\n    this.matrixAutoUpdate = false;\r\n    this.matrixWorld = object.matrixWorld;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.render = function ( renderCallback ) { };\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n    THREE.Object3D.call( this );\r\n\r\n    this.lensFlares = [];\r\n\r\n    this.positionScreen = new THREE.Vector3();\r\n    this.customUpdateCallback = undefined;\r\n\r\n    if( texture !== undefined ) {\r\n\r\n        this.add( texture, size, distance, blending, color );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n    if( size === undefined ) size = -1;\r\n    if( distance === undefined ) distance = 0;\r\n    if( opacity === undefined ) opacity = 1;\r\n    if( color === undefined ) color = new THREE.Color( 0xffffff );\r\n    if( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n    distance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n    this.lensFlares.push( { texture: texture, \t\t\t// THREE.Texture\r\n        size: size, \t\t\t\t// size in pixels (-1 = use texture.width)\r\n        distance: distance, \t\t// distance (0-1) from light source (0=at light source)\r\n        x: 0, y: 0, z: 0,\t\t\t// screen position (-1 => 1) z = 0 is ontop z = 1 is back\r\n        scale: 1, \t\t\t\t\t// scale\r\n        rotation: 1, \t\t\t\t// rotation\r\n        opacity: opacity,\t\t\t// opacity\r\n        color: color,\t\t\t\t// color\r\n        blending: blending } );\t\t// blending\r\n\r\n};\r\n\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n    var f, fl = this.lensFlares.length;\r\n    var flare;\r\n    var vecX = -this.positionScreen.x * 2;\r\n    var vecY = -this.positionScreen.y * 2;\r\n\r\n    for( f = 0; f < fl; f ++ ) {\r\n\r\n        flare = this.lensFlares[ f ];\r\n\r\n        flare.x = this.positionScreen.x + vecX * flare.distance;\r\n        flare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n        flare.wantedRotation = flare.x * Math.PI * 0.25;\r\n        flare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n    THREE.Mesh.call( this, geometry, material );\r\n\r\n    this.animationsMap = {};\r\n    this.animationsList = [];\r\n\r\n    // prepare default animation\r\n    // (all frames played together in 1 second)\r\n\r\n    var numFrames = this.geometry.morphTargets.length;\r\n\r\n    var name = \"__default\";\r\n\r\n    var startFrame = 0;\r\n    var endFrame = numFrames - 1;\r\n\r\n    var fps = numFrames / 1;\r\n\r\n    this.createAnimation( name, startFrame, endFrame, fps );\r\n    this.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n    var animation = {\r\n\r\n        startFrame: start,\r\n        endFrame: end,\r\n\r\n        length: end - start + 1,\r\n\r\n        fps: fps,\r\n        duration: ( end - start ) / fps,\r\n\r\n        lastFrame: 0,\r\n        currentFrame: 0,\r\n\r\n        active: false,\r\n\r\n        time: 0,\r\n        direction: 1,\r\n        weight: 1,\r\n\r\n        directionBackwards: false,\r\n        mirroredLoop: false\r\n\r\n    };\r\n\r\n    this.animationsMap[ name ] = animation;\r\n    this.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n    var pattern = /([a-z]+)(\\d+)/;\r\n\r\n    var firstAnimation, frameRanges = {};\r\n\r\n    var geometry = this.geometry;\r\n\r\n    for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n        var morph = geometry.morphTargets[ i ];\r\n        var chunks = morph.name.match( pattern );\r\n\r\n        if ( chunks && chunks.length > 1 ) {\r\n\r\n            var name = chunks[ 1 ];\r\n            var num = chunks[ 2 ];\r\n\r\n            if ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: -Infinity };\r\n\r\n            var range = frameRanges[ name ];\r\n\r\n            if ( i < range.start ) range.start = i;\r\n            if ( i > range.end ) range.end = i;\r\n\r\n            if ( ! firstAnimation ) firstAnimation = name;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for ( var name in frameRanges ) {\r\n\r\n        var range = frameRanges[ name ];\r\n        this.createAnimation( name, range.start, range.end, fps );\r\n\r\n    }\r\n\r\n    this.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.direction = 1;\r\n        animation.directionBackwards = false;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.direction = -1;\r\n        animation.directionBackwards = true;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.fps = fps;\r\n        animation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.duration = duration;\r\n        animation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.weight = weight;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.time = time;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n    var time = 0;\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        time = animation.time;\r\n\r\n    }\r\n\r\n    return time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n    var duration = -1;\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        duration = animation.duration;\r\n\r\n    }\r\n\r\n    return duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.time = 0;\r\n        animation.active = true;\r\n\r\n    } else {\r\n\r\n        console.warn( \"animation[\" + name + \"] undefined\" );\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n    var animation = this.animationsMap[ name ];\r\n\r\n    if ( animation ) {\r\n\r\n        animation.active = false;\r\n\r\n    }\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n    for ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n        var animation = this.animationsList[ i ];\r\n\r\n        if ( ! animation.active ) continue;\r\n\r\n        var frameTime = animation.duration / animation.length;\r\n\r\n        animation.time += animation.direction * delta;\r\n\r\n        if ( animation.mirroredLoop ) {\r\n\r\n            if ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n                animation.direction *= -1;\r\n\r\n                if ( animation.time > animation.duration ) {\r\n\r\n                    animation.time = animation.duration;\r\n                    animation.directionBackwards = true;\r\n\r\n                }\r\n\r\n                if ( animation.time < 0 ) {\r\n\r\n                    animation.time = 0;\r\n                    animation.directionBackwards = false;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            animation.time = animation.time % animation.duration;\r\n\r\n            if ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n        }\r\n\r\n        var keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n        var weight = animation.weight;\r\n\r\n        if ( keyframe !== animation.currentFrame ) {\r\n\r\n            this.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n            this.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n            this.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n            animation.lastFrame = animation.currentFrame;\r\n            animation.currentFrame = keyframe;\r\n\r\n        }\r\n\r\n        var mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n        if ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n        this.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n        this.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function () {\r\n\r\n    var _gl, _renderer, _precision, _lensFlare = {};\r\n\r\n    this.init = function ( renderer ) {\r\n\r\n        _gl = renderer.context;\r\n        _renderer = renderer;\r\n\r\n        _precision = renderer.getPrecision();\r\n\r\n        _lensFlare.vertices = new Float32Array( 8 + 8 );\r\n        _lensFlare.faces = new Uint16Array( 6 );\r\n\r\n        var i = 0;\r\n        _lensFlare.vertices[ i++ ] = -1; _lensFlare.vertices[ i++ ] = -1;\t// vertex\r\n        _lensFlare.vertices[ i++ ] = 0;  _lensFlare.vertices[ i++ ] = 0;\t// uv... etc.\r\n\r\n        _lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = -1;\r\n        _lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 0;\r\n\r\n        _lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 1;\r\n        _lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 1;\r\n\r\n        _lensFlare.vertices[ i++ ] = -1; _lensFlare.vertices[ i++ ] = 1;\r\n        _lensFlare.vertices[ i++ ] = 0;  _lensFlare.vertices[ i++ ] = 1;\r\n\r\n        i = 0;\r\n        _lensFlare.faces[ i++ ] = 0; _lensFlare.faces[ i++ ] = 1; _lensFlare.faces[ i++ ] = 2;\r\n        _lensFlare.faces[ i++ ] = 0; _lensFlare.faces[ i++ ] = 2; _lensFlare.faces[ i++ ] = 3;\r\n\r\n        // buffers\r\n\r\n        _lensFlare.vertexBuffer     = _gl.createBuffer();\r\n        _lensFlare.elementBuffer    = _gl.createBuffer();\r\n\r\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );\r\n        _gl.bufferData( _gl.ARRAY_BUFFER, _lensFlare.vertices, _gl.STATIC_DRAW );\r\n\r\n        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );\r\n        _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.faces, _gl.STATIC_DRAW );\r\n\r\n        // textures\r\n\r\n        _lensFlare.tempTexture      = _gl.createTexture();\r\n        _lensFlare.occlusionTexture = _gl.createTexture();\r\n\r\n        _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\r\n        _gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, 16, 16, 0, _gl.RGB, _gl.UNSIGNED_BYTE, null );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );\r\n\r\n        _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );\r\n        _gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, 16, 16, 0, _gl.RGBA, _gl.UNSIGNED_BYTE, null );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );\r\n        _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );\r\n\r\n        if ( _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) <= 0 ) {\r\n\r\n            _lensFlare.hasVertexTexture = false;\r\n            _lensFlare.program = createProgram( THREE.ShaderFlares[ \"lensFlare\" ], _precision );\r\n\r\n        } else {\r\n\r\n            _lensFlare.hasVertexTexture = true;\r\n            _lensFlare.program = createProgram( THREE.ShaderFlares[ \"lensFlareVertexTexture\" ], _precision );\r\n\r\n        }\r\n\r\n        _lensFlare.attributes = {};\r\n        _lensFlare.uniforms = {};\r\n\r\n        _lensFlare.attributes.vertex       = _gl.getAttribLocation ( _lensFlare.program, \"position\" );\r\n        _lensFlare.attributes.uv           = _gl.getAttribLocation ( _lensFlare.program, \"uv\" );\r\n\r\n        _lensFlare.uniforms.renderType     = _gl.getUniformLocation( _lensFlare.program, \"renderType\" );\r\n        _lensFlare.uniforms.map            = _gl.getUniformLocation( _lensFlare.program, \"map\" );\r\n        _lensFlare.uniforms.occlusionMap   = _gl.getUniformLocation( _lensFlare.program, \"occlusionMap\" );\r\n        _lensFlare.uniforms.opacity        = _gl.getUniformLocation( _lensFlare.program, \"opacity\" );\r\n        _lensFlare.uniforms.color          = _gl.getUniformLocation( _lensFlare.program, \"color\" );\r\n        _lensFlare.uniforms.scale          = _gl.getUniformLocation( _lensFlare.program, \"scale\" );\r\n        _lensFlare.uniforms.rotation       = _gl.getUniformLocation( _lensFlare.program, \"rotation\" );\r\n        _lensFlare.uniforms.screenPosition = _gl.getUniformLocation( _lensFlare.program, \"screenPosition\" );\r\n\r\n    };\r\n\r\n\r\n    /*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t *         Then _lensFlare.update_lensFlares() is called to re-position and\r\n\t *         update transparency of flares. Then they are rendered.\r\n\t *\r\n\t */\r\n\r\n    this.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n        var flares = scene.__webglFlares,\r\n            nFlares = flares.length;\r\n\r\n        if ( ! nFlares ) return;\r\n\r\n        var tempPosition = new THREE.Vector3();\r\n\r\n        var invAspect = viewportHeight / viewportWidth,\r\n            halfViewportWidth = viewportWidth * 0.5,\r\n            halfViewportHeight = viewportHeight * 0.5;\r\n\r\n        var size = 16 / viewportHeight,\r\n            scale = new THREE.Vector2( size * invAspect, size );\r\n\r\n        var screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n            screenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n        var uniforms = _lensFlare.uniforms,\r\n            attributes = _lensFlare.attributes;\r\n\r\n        // set _lensFlare program and reset blending\r\n\r\n        _gl.useProgram( _lensFlare.program );\r\n\r\n        _gl.enableVertexAttribArray( _lensFlare.attributes.vertex );\r\n        _gl.enableVertexAttribArray( _lensFlare.attributes.uv );\r\n\r\n        // loop through all lens flares to update their occlusion and positions\r\n        // setup gl and common used attribs/unforms\r\n\r\n        _gl.uniform1i( uniforms.occlusionMap, 0 );\r\n        _gl.uniform1i( uniforms.map, 1 );\r\n\r\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );\r\n        _gl.vertexAttribPointer( attributes.vertex, 2, _gl.FLOAT, false, 2 * 8, 0 );\r\n        _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );\r\n\r\n        _gl.disable( _gl.CULL_FACE );\r\n        _gl.depthMask( false );\r\n\r\n        var i, j, jl, flare, sprite;\r\n\r\n        for ( i = 0; i < nFlares; i ++ ) {\r\n\r\n            size = 16 / viewportHeight;\r\n            scale.set( size * invAspect, size );\r\n\r\n            // calc object screen position\r\n\r\n            flare = flares[ i ];\r\n\r\n            tempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\r\n\r\n            tempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n            tempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n            // setup arrays for gl programs\r\n\r\n            screenPosition.copy( tempPosition )\r\n\r\n            screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n            screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n            // screen cull\r\n\r\n            if ( _lensFlare.hasVertexTexture || (\r\n                screenPositionPixels.x > 0 &&\r\n                screenPositionPixels.x < viewportWidth &&\r\n                screenPositionPixels.y > 0 &&\r\n                screenPositionPixels.y < viewportHeight ) ) {\r\n\r\n                // save current RGB to temp texture\r\n\r\n                _gl.activeTexture( _gl.TEXTURE1 );\r\n                _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\r\n                _gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n                // render pink quad\r\n\r\n                _gl.uniform1i( uniforms.renderType, 0 );\r\n                _gl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n                _gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n                _gl.disable( _gl.BLEND );\r\n                _gl.enable( _gl.DEPTH_TEST );\r\n\r\n                _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n                // copy result to occlusionMap\r\n\r\n                _gl.activeTexture( _gl.TEXTURE0 );\r\n                _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );\r\n                _gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n                // restore graphics\r\n\r\n                _gl.uniform1i( uniforms.renderType, 1 );\r\n                _gl.disable( _gl.DEPTH_TEST );\r\n\r\n                _gl.activeTexture( _gl.TEXTURE1 );\r\n                _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\r\n                _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n                // update object positions\r\n\r\n                flare.positionScreen.copy( screenPosition )\r\n\r\n                if ( flare.customUpdateCallback ) {\r\n\r\n                    flare.customUpdateCallback( flare );\r\n\r\n                } else {\r\n\r\n                    flare.updateLensFlares();\r\n\r\n                }\r\n\r\n                // render flares\r\n\r\n                _gl.uniform1i( uniforms.renderType, 2 );\r\n                _gl.enable( _gl.BLEND );\r\n\r\n                for ( j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n                    sprite = flare.lensFlares[ j ];\r\n\r\n                    if ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n                        screenPosition.x = sprite.x;\r\n                        screenPosition.y = sprite.y;\r\n                        screenPosition.z = sprite.z;\r\n\r\n                        size = sprite.size * sprite.scale / viewportHeight;\r\n\r\n                        scale.x = size * invAspect;\r\n                        scale.y = size;\r\n\r\n                        _gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n                        _gl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n                        _gl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n                        _gl.uniform1f( uniforms.opacity, sprite.opacity );\r\n                        _gl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n                        _renderer.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n                        _renderer.setTexture( sprite.texture, 1 );\r\n\r\n                        _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // restore gl\r\n\r\n        _gl.enable( _gl.CULL_FACE );\r\n        _gl.enable( _gl.DEPTH_TEST );\r\n        _gl.depthMask( true );\r\n\r\n    };\r\n\r\n    function createProgram ( shader, precision ) {\r\n\r\n        var program = _gl.createProgram();\r\n\r\n        var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\r\n        var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\r\n\r\n        var prefix = \"precision \" + precision + \" float;\\n\";\r\n\r\n        _gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n        _gl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n        _gl.compileShader( fragmentShader );\r\n        _gl.compileShader( vertexShader );\r\n\r\n        _gl.attachShader( program, fragmentShader );\r\n        _gl.attachShader( program, vertexShader );\r\n\r\n        _gl.linkProgram( program );\r\n\r\n        return program;\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShadowMapPlugin = function () {\r\n\r\n    var _gl,\r\n        _renderer,\r\n        _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n        _frustum = new THREE.Frustum(),\r\n        _projScreenMatrix = new THREE.Matrix4(),\r\n\r\n        _min = new THREE.Vector3(),\r\n        _max = new THREE.Vector3(),\r\n\r\n        _matrixPosition = new THREE.Vector3();\r\n\r\n    this.init = function ( renderer ) {\r\n\r\n        _gl = renderer.context;\r\n        _renderer = renderer;\r\n\r\n        var depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n        var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n        _depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\r\n        _depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );\r\n        _depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );\r\n        _depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );\r\n\r\n        _depthMaterial._shadowPass = true;\r\n        _depthMaterialMorph._shadowPass = true;\r\n        _depthMaterialSkin._shadowPass = true;\r\n        _depthMaterialMorphSkin._shadowPass = true;\r\n\r\n    };\r\n\r\n    this.render = function ( scene, camera ) {\r\n\r\n        if ( ! ( _renderer.shadowMapEnabled && _renderer.shadowMapAutoUpdate ) ) return;\r\n\r\n        this.update( scene, camera );\r\n\r\n    };\r\n\r\n    this.update = function ( scene, camera ) {\r\n\r\n        var i, il, j, jl, n,\r\n\r\n            shadowMap, shadowMatrix, shadowCamera,\r\n            program, buffer, material,\r\n            webglObject, object, light,\r\n            renderList,\r\n\r\n            lights = [],\r\n            k = 0,\r\n\r\n            fog = null;\r\n\r\n        // set GL state for depth map\r\n\r\n        _gl.clearColor( 1, 1, 1, 1 );\r\n        _gl.disable( _gl.BLEND );\r\n\r\n        _gl.enable( _gl.CULL_FACE );\r\n        _gl.frontFace( _gl.CCW );\r\n\r\n        if ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n            _gl.cullFace( _gl.FRONT );\r\n\r\n        } else {\r\n\r\n            _gl.cullFace( _gl.BACK );\r\n\r\n        }\r\n\r\n        _renderer.setDepthTest( true );\r\n\r\n        // preprocess lights\r\n        // \t- skip lights that are not casting shadows\r\n        //\t- create virtual lights for cascaded shadow maps\r\n\r\n        for ( i = 0, il = scene.__lights.length; i < il; i ++ ) {\r\n\r\n            light = scene.__lights[ i ];\r\n\r\n            if ( ! light.castShadow ) continue;\r\n\r\n            if ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\r\n\r\n                for ( n = 0; n < light.shadowCascadeCount; n ++ ) {\r\n\r\n                    var virtualLight;\r\n\r\n                    if ( ! light.shadowCascadeArray[ n ] ) {\r\n\r\n                        virtualLight = createVirtualLight( light, n );\r\n                        virtualLight.originalCamera = camera;\r\n\r\n                        var gyro = new THREE.Gyroscope();\r\n                        gyro.position = light.shadowCascadeOffset;\r\n\r\n                        gyro.add( virtualLight );\r\n                        gyro.add( virtualLight.target );\r\n\r\n                        camera.add( gyro );\r\n\r\n                        light.shadowCascadeArray[ n ] = virtualLight;\r\n\r\n                        console.log( \"Created virtualLight\", virtualLight );\r\n\r\n                    } else {\r\n\r\n                        virtualLight = light.shadowCascadeArray[ n ];\r\n\r\n                    }\r\n\r\n                    updateVirtualLight( light, n );\r\n\r\n                    lights[ k ] = virtualLight;\r\n                    k ++;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                lights[ k ] = light;\r\n                k ++;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // render depth map\r\n\r\n        for ( i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n            light = lights[ i ];\r\n\r\n            if ( ! light.shadowMap ) {\r\n\r\n                var shadowFilter = THREE.LinearFilter;\r\n\r\n                if ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n                    shadowFilter = THREE.NearestFilter;\r\n\r\n                }\r\n\r\n                var pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n                light.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n                light.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n                light.shadowMatrix = new THREE.Matrix4();\r\n\r\n            }\r\n\r\n            if ( ! light.shadowCamera ) {\r\n\r\n                if ( light instanceof THREE.SpotLight ) {\r\n\r\n                    light.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n                } else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n                    light.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n                } else {\r\n\r\n                    console.error( \"Unsupported light type for shadow\" );\r\n                    continue;\r\n\r\n                }\r\n\r\n                scene.add( light.shadowCamera );\r\n\r\n                if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n            }\r\n\r\n            if ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n                light.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n                light.shadowCamera.add( light.cameraHelper );\r\n\r\n            }\r\n\r\n            if ( light.isVirtual && virtualLight.originalCamera == camera ) {\r\n\r\n                updateShadowCamera( camera, light );\r\n\r\n            }\r\n\r\n            shadowMap = light.shadowMap;\r\n            shadowMatrix = light.shadowMatrix;\r\n            shadowCamera = light.shadowCamera;\r\n\r\n            shadowCamera.position.getPositionFromMatrix( light.matrixWorld );\r\n            _matrixPosition.getPositionFromMatrix( light.target.matrixWorld );\r\n            shadowCamera.lookAt( _matrixPosition );\r\n            shadowCamera.updateMatrixWorld();\r\n\r\n            shadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n            if ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n            if ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n            // compute shadow matrix\r\n\r\n            shadowMatrix.set( 0.5, 0.0, 0.0, 0.5,\r\n                0.0, 0.5, 0.0, 0.5,\r\n                0.0, 0.0, 0.5, 0.5,\r\n                0.0, 0.0, 0.0, 1.0 );\r\n\r\n            shadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n            shadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n            // update camera matrices and frustum\r\n\r\n            _projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n            _frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n            // render shadow map\r\n\r\n            _renderer.setRenderTarget( shadowMap );\r\n            _renderer.clear();\r\n\r\n            // set object matrices & frustum culling\r\n\r\n            renderList = scene.__webglObjects;\r\n\r\n            for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n                webglObject = renderList[ j ];\r\n                object = webglObject.object;\r\n\r\n                webglObject.render = false;\r\n\r\n                if ( object.visible && object.castShadow ) {\r\n\r\n                    if ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {\r\n\r\n                        object._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n                        webglObject.render = true;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // render regular objects\r\n\r\n            var objectMaterial, useMorphing, useSkinning;\r\n\r\n            for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n                webglObject = renderList[ j ];\r\n\r\n                if ( webglObject.render ) {\r\n\r\n                    object = webglObject.object;\r\n                    buffer = webglObject.buffer;\r\n\r\n                    // culling is overriden globally for all objects\r\n                    // while rendering depth map\r\n\r\n                    // need to deal with MeshFaceMaterial somehow\r\n                    // in that case just use the first of material.materials for now\r\n                    // (proper solution would require to break objects by materials\r\n                    //  similarly to regular rendering and then set corresponding\r\n                    //  depth materials per each chunk instead of just once per object)\r\n\r\n                    objectMaterial = getObjectMaterial( object );\r\n\r\n                    useMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n                    useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n                    if ( object.customDepthMaterial ) {\r\n\r\n                        material = object.customDepthMaterial;\r\n\r\n                    } else if ( useSkinning ) {\r\n\r\n                        material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n                    } else if ( useMorphing ) {\r\n\r\n                        material = _depthMaterialMorph;\r\n\r\n                    } else {\r\n\r\n                        material = _depthMaterial;\r\n\r\n                    }\r\n\r\n                    if ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n                        _renderer.renderBufferDirect( shadowCamera, scene.__lights, fog, material, buffer, object );\r\n\r\n                    } else {\r\n\r\n                        _renderer.renderBuffer( shadowCamera, scene.__lights, fog, material, buffer, object );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // set matrices and render immediate objects\r\n\r\n            renderList = scene.__webglObjectsImmediate;\r\n\r\n            for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n                webglObject = renderList[ j ];\r\n                object = webglObject.object;\r\n\r\n                if ( object.visible && object.castShadow ) {\r\n\r\n                    object._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n                    _renderer.renderImmediateObject( shadowCamera, scene.__lights, fog, _depthMaterial, object );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // restore GL state\r\n\r\n        var clearColor = _renderer.getClearColor(),\r\n            clearAlpha = _renderer.getClearAlpha();\r\n\r\n        _gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n        _gl.enable( _gl.BLEND );\r\n\r\n        if ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n            _gl.cullFace( _gl.BACK );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function createVirtualLight( light, cascade ) {\r\n\r\n        var virtualLight = new THREE.DirectionalLight();\r\n\r\n        virtualLight.isVirtual = true;\r\n\r\n        virtualLight.onlyShadow = true;\r\n        virtualLight.castShadow = true;\r\n\r\n        virtualLight.shadowCameraNear = light.shadowCameraNear;\r\n        virtualLight.shadowCameraFar = light.shadowCameraFar;\r\n\r\n        virtualLight.shadowCameraLeft = light.shadowCameraLeft;\r\n        virtualLight.shadowCameraRight = light.shadowCameraRight;\r\n        virtualLight.shadowCameraBottom = light.shadowCameraBottom;\r\n        virtualLight.shadowCameraTop = light.shadowCameraTop;\r\n\r\n        virtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\r\n        virtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n        virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n        virtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\r\n        virtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\r\n\r\n        virtualLight.pointsWorld = [];\r\n        virtualLight.pointsFrustum = [];\r\n\r\n        var pointsWorld = virtualLight.pointsWorld,\r\n            pointsFrustum = virtualLight.pointsFrustum;\r\n\r\n        for ( var i = 0; i < 8; i ++ ) {\r\n\r\n            pointsWorld[ i ] = new THREE.Vector3();\r\n            pointsFrustum[ i ] = new THREE.Vector3();\r\n\r\n        }\r\n\r\n        var nearZ = light.shadowCascadeNearZ[ cascade ];\r\n        var farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n        pointsFrustum[ 0 ].set( -1, -1, nearZ );\r\n        pointsFrustum[ 1 ].set(  1, -1, nearZ );\r\n        pointsFrustum[ 2 ].set( -1,  1, nearZ );\r\n        pointsFrustum[ 3 ].set(  1,  1, nearZ );\r\n\r\n        pointsFrustum[ 4 ].set( -1, -1, farZ );\r\n        pointsFrustum[ 5 ].set(  1, -1, farZ );\r\n        pointsFrustum[ 6 ].set( -1,  1, farZ );\r\n        pointsFrustum[ 7 ].set(  1,  1, farZ );\r\n\r\n        return virtualLight;\r\n\r\n    }\r\n\r\n    // Synchronize virtual light with the original light\r\n\r\n    function updateVirtualLight( light, cascade ) {\r\n\r\n        var virtualLight = light.shadowCascadeArray[ cascade ];\r\n\r\n        virtualLight.position.copy( light.position );\r\n        virtualLight.target.position.copy( light.target.position );\r\n        virtualLight.lookAt( virtualLight.target );\r\n\r\n        virtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n        virtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n        virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\r\n        var nearZ = light.shadowCascadeNearZ[ cascade ];\r\n        var farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n        var pointsFrustum = virtualLight.pointsFrustum;\r\n\r\n        pointsFrustum[ 0 ].z = nearZ;\r\n        pointsFrustum[ 1 ].z = nearZ;\r\n        pointsFrustum[ 2 ].z = nearZ;\r\n        pointsFrustum[ 3 ].z = nearZ;\r\n\r\n        pointsFrustum[ 4 ].z = farZ;\r\n        pointsFrustum[ 5 ].z = farZ;\r\n        pointsFrustum[ 6 ].z = farZ;\r\n        pointsFrustum[ 7 ].z = farZ;\r\n\r\n    }\r\n\r\n    // Fit shadow camera's ortho frustum to camera frustum\r\n\r\n    function updateShadowCamera( camera, light ) {\r\n\r\n        var shadowCamera = light.shadowCamera,\r\n            pointsFrustum = light.pointsFrustum,\r\n            pointsWorld = light.pointsWorld;\r\n\r\n        _min.set( Infinity, Infinity, Infinity );\r\n        _max.set( -Infinity, -Infinity, -Infinity );\r\n\r\n        for ( var i = 0; i < 8; i ++ ) {\r\n\r\n            var p = pointsWorld[ i ];\r\n\r\n            p.copy( pointsFrustum[ i ] );\r\n            THREE.ShadowMapPlugin.__projector.unprojectVector( p, camera );\r\n\r\n            p.applyMatrix4( shadowCamera.matrixWorldInverse );\r\n\r\n            if ( p.x < _min.x ) _min.x = p.x;\r\n            if ( p.x > _max.x ) _max.x = p.x;\r\n\r\n            if ( p.y < _min.y ) _min.y = p.y;\r\n            if ( p.y > _max.y ) _max.y = p.y;\r\n\r\n            if ( p.z < _min.z ) _min.z = p.z;\r\n            if ( p.z > _max.z ) _max.z = p.z;\r\n\r\n        }\r\n\r\n        shadowCamera.left = _min.x;\r\n        shadowCamera.right = _max.x;\r\n        shadowCamera.top = _max.y;\r\n        shadowCamera.bottom = _min.y;\r\n\r\n        // can't really fit near/far\r\n        //shadowCamera.near = _min.z;\r\n        //shadowCamera.far = _max.z;\r\n\r\n        shadowCamera.updateProjectionMatrix();\r\n\r\n    }\r\n\r\n    // For the moment just ignore objects that have multiple materials with different animation methods\r\n    // Only the first material will be taken into account for deciding which depth material to use for shadow maps\r\n\r\n    function getObjectMaterial( object ) {\r\n\r\n        return object.material instanceof THREE.MeshFaceMaterial\r\n            ? object.material.materials[ 0 ]\r\n            : object.material;\r\n\r\n    };\r\n\r\n};\r\n\r\nTHREE.ShadowMapPlugin.__projector = new THREE.Projector();\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function () {\r\n\r\n    var _gl, _renderer, _precision, _sprite = {};\r\n\r\n    this.init = function ( renderer ) {\r\n\r\n        _gl = renderer.context;\r\n        _renderer = renderer;\r\n\r\n        _precision = renderer.getPrecision();\r\n\r\n        _sprite.vertices = new Float32Array( 8 + 8 );\r\n        _sprite.faces    = new Uint16Array( 6 );\r\n\r\n        var i = 0;\r\n\r\n        _sprite.vertices[ i++ ] = -1; _sprite.vertices[ i++ ] = -1;\t// vertex 0\r\n        _sprite.vertices[ i++ ] = 0;  _sprite.vertices[ i++ ] = 0;\t// uv 0\r\n\r\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = -1;\t// vertex 1\r\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 0;\t// uv 1\r\n\r\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 1;\t// vertex 2\r\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 1;\t// uv 2\r\n\r\n        _sprite.vertices[ i++ ] = -1; _sprite.vertices[ i++ ] = 1;\t// vertex 3\r\n        _sprite.vertices[ i++ ] = 0;  _sprite.vertices[ i++ ] = 1;\t// uv 3\r\n\r\n        i = 0;\r\n\r\n        _sprite.faces[ i++ ] = 0; _sprite.faces[ i++ ] = 1; _sprite.faces[ i++ ] = 2;\r\n        _sprite.faces[ i++ ] = 0; _sprite.faces[ i++ ] = 2; _sprite.faces[ i++ ] = 3;\r\n\r\n        _sprite.vertexBuffer  = _gl.createBuffer();\r\n        _sprite.elementBuffer = _gl.createBuffer();\r\n\r\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, _sprite.vertexBuffer );\r\n        _gl.bufferData( _gl.ARRAY_BUFFER, _sprite.vertices, _gl.STATIC_DRAW );\r\n\r\n        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _sprite.elementBuffer );\r\n        _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _sprite.faces, _gl.STATIC_DRAW );\r\n\r\n        _sprite.program = createProgram( THREE.ShaderSprite[ \"sprite\" ], _precision );\r\n\r\n        _sprite.attributes = {};\r\n        _sprite.uniforms = {};\r\n\r\n        _sprite.attributes.position           = _gl.getAttribLocation ( _sprite.program, \"position\" );\r\n        _sprite.attributes.uv                 = _gl.getAttribLocation ( _sprite.program, \"uv\" );\r\n\r\n        _sprite.uniforms.uvOffset             = _gl.getUniformLocation( _sprite.program, \"uvOffset\" );\r\n        _sprite.uniforms.uvScale              = _gl.getUniformLocation( _sprite.program, \"uvScale\" );\r\n\r\n        _sprite.uniforms.rotation             = _gl.getUniformLocation( _sprite.program, \"rotation\" );\r\n        _sprite.uniforms.scale                = _gl.getUniformLocation( _sprite.program, \"scale\" );\r\n        _sprite.uniforms.alignment            = _gl.getUniformLocation( _sprite.program, \"alignment\" );\r\n\r\n        _sprite.uniforms.color                = _gl.getUniformLocation( _sprite.program, \"color\" );\r\n        _sprite.uniforms.map                  = _gl.getUniformLocation( _sprite.program, \"map\" );\r\n        _sprite.uniforms.opacity              = _gl.getUniformLocation( _sprite.program, \"opacity\" );\r\n\r\n        _sprite.uniforms.useScreenCoordinates = _gl.getUniformLocation( _sprite.program, \"useScreenCoordinates\" );\r\n        _sprite.uniforms.sizeAttenuation   \t  = _gl.getUniformLocation( _sprite.program, \"sizeAttenuation\" );\r\n        _sprite.uniforms.screenPosition    \t  = _gl.getUniformLocation( _sprite.program, \"screenPosition\" );\r\n        _sprite.uniforms.modelViewMatrix      = _gl.getUniformLocation( _sprite.program, \"modelViewMatrix\" );\r\n        _sprite.uniforms.projectionMatrix     = _gl.getUniformLocation( _sprite.program, \"projectionMatrix\" );\r\n\r\n        _sprite.uniforms.fogType \t\t  \t  = _gl.getUniformLocation( _sprite.program, \"fogType\" );\r\n        _sprite.uniforms.fogDensity \t\t  = _gl.getUniformLocation( _sprite.program, \"fogDensity\" );\r\n        _sprite.uniforms.fogNear \t\t  \t  = _gl.getUniformLocation( _sprite.program, \"fogNear\" );\r\n        _sprite.uniforms.fogFar \t\t  \t  = _gl.getUniformLocation( _sprite.program, \"fogFar\" );\r\n        _sprite.uniforms.fogColor \t\t  \t  = _gl.getUniformLocation( _sprite.program, \"fogColor\" );\r\n\r\n        _sprite.uniforms.alphaTest \t\t  \t  = _gl.getUniformLocation( _sprite.program, \"alphaTest\" );\r\n\r\n    };\r\n\r\n    this.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n        var sprites = scene.__webglSprites,\r\n            nSprites = sprites.length;\r\n\r\n        if ( ! nSprites ) return;\r\n\r\n        var attributes = _sprite.attributes,\r\n            uniforms = _sprite.uniforms;\r\n\r\n        var invAspect = viewportHeight / viewportWidth;\r\n\r\n        var halfViewportWidth = viewportWidth * 0.5,\r\n            halfViewportHeight = viewportHeight * 0.5;\r\n\r\n        // setup gl\r\n\r\n        _gl.useProgram( _sprite.program );\r\n\r\n        _gl.enableVertexAttribArray( attributes.position );\r\n        _gl.enableVertexAttribArray( attributes.uv );\r\n\r\n        _gl.disable( _gl.CULL_FACE );\r\n        _gl.enable( _gl.BLEND );\r\n\r\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, _sprite.vertexBuffer );\r\n        _gl.vertexAttribPointer( attributes.position, 2, _gl.FLOAT, false, 2 * 8, 0 );\r\n        _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _sprite.elementBuffer );\r\n\r\n        _gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n        _gl.activeTexture( _gl.TEXTURE0 );\r\n        _gl.uniform1i( uniforms.map, 0 );\r\n\r\n        var oldFogType = 0;\r\n        var sceneFogType = 0;\r\n        var fog = scene.fog;\r\n\r\n        if ( fog ) {\r\n\r\n            _gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n            if ( fog instanceof THREE.Fog ) {\r\n\r\n                _gl.uniform1f( uniforms.fogNear, fog.near );\r\n                _gl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n                _gl.uniform1i( uniforms.fogType, 1 );\r\n                oldFogType = 1;\r\n                sceneFogType = 1;\r\n\r\n            } else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n                _gl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n                _gl.uniform1i( uniforms.fogType, 2 );\r\n                oldFogType = 2;\r\n                sceneFogType = 2;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            _gl.uniform1i( uniforms.fogType, 0 );\r\n            oldFogType = 0;\r\n            sceneFogType = 0;\r\n\r\n        }\r\n\r\n\r\n        // update positions and sort\r\n\r\n        var i, sprite, material, screenPosition, size, fogType, scale = [];\r\n\r\n        for( i = 0; i < nSprites; i ++ ) {\r\n\r\n            sprite = sprites[ i ];\r\n            material = sprite.material;\r\n\r\n            if ( ! sprite.visible || material.opacity === 0 ) continue;\r\n\r\n            if ( ! material.useScreenCoordinates ) {\r\n\r\n                sprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n                sprite.z = - sprite._modelViewMatrix.elements[ 14 ];\r\n\r\n            } else {\r\n\r\n                sprite.z = - sprite.position.z;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        sprites.sort( painterSortStable );\r\n\r\n        // render all sprites\r\n\r\n        for( i = 0; i < nSprites; i ++ ) {\r\n\r\n            sprite = sprites[ i ];\r\n            material = sprite.material;\r\n\r\n            if ( ! sprite.visible || material.opacity === 0 ) continue;\r\n\r\n            if ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n                _gl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\r\n                if ( material.useScreenCoordinates === true ) {\r\n\r\n                    _gl.uniform1i( uniforms.useScreenCoordinates, 1 );\r\n                    _gl.uniform3f(\r\n                        uniforms.screenPosition,\r\n                        ( ( sprite.position.x * _renderer.devicePixelRatio ) - halfViewportWidth  ) / halfViewportWidth,\r\n                        ( halfViewportHeight - ( sprite.position.y * _renderer.devicePixelRatio ) ) / halfViewportHeight,\r\n                        Math.max( 0, Math.min( 1, sprite.position.z ) )\r\n                    );\r\n\r\n                    scale[ 0 ] = _renderer.devicePixelRatio;\r\n                    scale[ 1 ] = _renderer.devicePixelRatio;\r\n\r\n                } else {\r\n\r\n                    _gl.uniform1i( uniforms.useScreenCoordinates, 0 );\r\n                    _gl.uniform1i( uniforms.sizeAttenuation, material.sizeAttenuation ? 1 : 0 );\r\n                    _gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\r\n\r\n                    scale[ 0 ] = 1;\r\n                    scale[ 1 ] = 1;\r\n\r\n                }\r\n\r\n                if ( scene.fog && material.fog ) {\r\n\r\n                    fogType = sceneFogType;\r\n\r\n                } else {\r\n\r\n                    fogType = 0;\r\n\r\n                }\r\n\r\n                if ( oldFogType !== fogType ) {\r\n\r\n                    _gl.uniform1i( uniforms.fogType, fogType );\r\n                    oldFogType = fogType;\r\n\r\n                }\r\n\r\n                size = 1 / ( material.scaleByViewport ? viewportHeight : 1 );\r\n\r\n                scale[ 0 ] *= size * invAspect * sprite.scale.x\r\n                scale[ 1 ] *= size * sprite.scale.y;\r\n\r\n                _gl.uniform2f( uniforms.uvScale, material.uvScale.x, material.uvScale.y );\r\n                _gl.uniform2f( uniforms.uvOffset, material.uvOffset.x, material.uvOffset.y );\r\n                _gl.uniform2f( uniforms.alignment, material.alignment.x, material.alignment.y );\r\n\r\n                _gl.uniform1f( uniforms.opacity, material.opacity );\r\n                _gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n                _gl.uniform1f( uniforms.rotation, sprite.rotation );\r\n                _gl.uniform2fv( uniforms.scale, scale );\r\n\r\n                _renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n                _renderer.setDepthTest( material.depthTest );\r\n                _renderer.setDepthWrite( material.depthWrite );\r\n                _renderer.setTexture( material.map, 0 );\r\n\r\n                _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // restore gl\r\n\r\n        _gl.enable( _gl.CULL_FACE );\r\n\r\n    };\r\n\r\n    function createProgram ( shader, precision ) {\r\n\r\n        var program = _gl.createProgram();\r\n\r\n        var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\r\n        var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\r\n\r\n        var prefix = \"precision \" + precision + \" float;\\n\";\r\n\r\n        _gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n        _gl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n        _gl.compileShader( fragmentShader );\r\n        _gl.compileShader( vertexShader );\r\n\r\n        _gl.attachShader( program, fragmentShader );\r\n        _gl.attachShader( program, vertexShader );\r\n\r\n        _gl.linkProgram( program );\r\n\r\n        return program;\r\n\r\n    };\r\n\r\n    function painterSortStable ( a, b ) {\r\n\r\n        if ( a.z !== b.z ) {\r\n\r\n            return b.z - a.z;\r\n\r\n        } else {\r\n\r\n            return b.id - a.id;\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DepthPassPlugin = function () {\r\n\r\n    this.enabled = false;\r\n    this.renderTarget = null;\r\n\r\n    var _gl,\r\n        _renderer,\r\n        _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n        _frustum = new THREE.Frustum(),\r\n        _projScreenMatrix = new THREE.Matrix4();\r\n\r\n    this.init = function ( renderer ) {\r\n\r\n        _gl = renderer.context;\r\n        _renderer = renderer;\r\n\r\n        var depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n        var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n        _depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\r\n        _depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );\r\n        _depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );\r\n        _depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );\r\n\r\n        _depthMaterial._shadowPass = true;\r\n        _depthMaterialMorph._shadowPass = true;\r\n        _depthMaterialSkin._shadowPass = true;\r\n        _depthMaterialMorphSkin._shadowPass = true;\r\n\r\n    };\r\n\r\n    this.render = function ( scene, camera ) {\r\n\r\n        if ( ! this.enabled ) return;\r\n\r\n        this.update( scene, camera );\r\n\r\n    };\r\n\r\n    this.update = function ( scene, camera ) {\r\n\r\n        var i, il, j, jl, n,\r\n\r\n            program, buffer, material,\r\n            webglObject, object, light,\r\n            renderList,\r\n\r\n            fog = null;\r\n\r\n        // set GL state for depth map\r\n\r\n        _gl.clearColor( 1, 1, 1, 1 );\r\n        _gl.disable( _gl.BLEND );\r\n\r\n        _renderer.setDepthTest( true );\r\n\r\n        // update scene\r\n\r\n        if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n        // update camera matrices and frustum\r\n\r\n        camera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n        _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n        _frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n        // render depth map\r\n\r\n        _renderer.setRenderTarget( this.renderTarget );\r\n        _renderer.clear();\r\n\r\n        // set object matrices & frustum culling\r\n\r\n        renderList = scene.__webglObjects;\r\n\r\n        for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n            webglObject = renderList[ j ];\r\n            object = webglObject.object;\r\n\r\n            webglObject.render = false;\r\n\r\n            if ( object.visible ) {\r\n\r\n                if ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {\r\n\r\n                    object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\r\n                    webglObject.render = true;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // render regular objects\r\n\r\n        var objectMaterial, useMorphing, useSkinning;\r\n\r\n        for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n            webglObject = renderList[ j ];\r\n\r\n            if ( webglObject.render ) {\r\n\r\n                object = webglObject.object;\r\n                buffer = webglObject.buffer;\r\n\r\n                // todo: create proper depth material for particles\r\n\r\n                if ( object instanceof THREE.ParticleSystem && !object.customDepthMaterial ) continue;\r\n\r\n                objectMaterial = getObjectMaterial( object );\r\n\r\n                if ( objectMaterial ) _renderer.setMaterialFaces( object.material );\r\n\r\n                useMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n                useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n                if ( object.customDepthMaterial ) {\r\n\r\n                    material = object.customDepthMaterial;\r\n\r\n                } else if ( useSkinning ) {\r\n\r\n                    material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n                } else if ( useMorphing ) {\r\n\r\n                    material = _depthMaterialMorph;\r\n\r\n                } else {\r\n\r\n                    material = _depthMaterial;\r\n\r\n                }\r\n\r\n                if ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n                    _renderer.renderBufferDirect( camera, scene.__lights, fog, material, buffer, object );\r\n\r\n                } else {\r\n\r\n                    _renderer.renderBuffer( camera, scene.__lights, fog, material, buffer, object );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // set matrices and render immediate objects\r\n\r\n        renderList = scene.__webglObjectsImmediate;\r\n\r\n        for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n            webglObject = renderList[ j ];\r\n            object = webglObject.object;\r\n\r\n            if ( object.visible ) {\r\n\r\n                object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\r\n                _renderer.renderImmediateObject( camera, scene.__lights, fog, _depthMaterial, object );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // restore GL state\r\n\r\n        var clearColor = _renderer.getClearColor(),\r\n            clearAlpha = _renderer.getClearAlpha();\r\n\r\n        _gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n        _gl.enable( _gl.BLEND );\r\n\r\n    };\r\n\r\n    // For the moment just ignore objects that have multiple materials with different animation methods\r\n    // Only the first material will be taken into account for deciding which depth material to use\r\n\r\n    function getObjectMaterial( object ) {\r\n\r\n        return object.material instanceof THREE.MeshFaceMaterial\r\n            ? object.material.materials[ 0 ]\r\n            : object.material;\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.ShaderFlares = {\r\n\r\n    'lensFlareVertexTexture': {\r\n\r\n        vertexShader: [\r\n\r\n            \"uniform lowp int renderType;\",\r\n\r\n            \"uniform vec3 screenPosition;\",\r\n            \"uniform vec2 scale;\",\r\n            \"uniform float rotation;\",\r\n\r\n            \"uniform sampler2D occlusionMap;\",\r\n\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 uv;\",\r\n\r\n            \"varying vec2 vUV;\",\r\n            \"varying float vVisibility;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"vUV = uv;\",\r\n\r\n            \"vec2 pos = position;\",\r\n\r\n            \"if( renderType == 2 ) {\",\r\n\r\n            \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n            \"vVisibility =        visibility.r / 9.0;\",\r\n            \"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n            \"vVisibility *=       visibility.b / 9.0;\",\r\n            \"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n            \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n            \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n            \"}\",\r\n\r\n            \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n            \"}\"\r\n\r\n        ].join( \"\\n\" ),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform lowp int renderType;\",\r\n\r\n            \"uniform sampler2D map;\",\r\n            \"uniform float opacity;\",\r\n            \"uniform vec3 color;\",\r\n\r\n            \"varying vec2 vUV;\",\r\n            \"varying float vVisibility;\",\r\n\r\n            \"void main() {\",\r\n\r\n            // pink square\r\n\r\n            \"if( renderType == 0 ) {\",\r\n\r\n            \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n            // restore\r\n\r\n            \"} else if( renderType == 1 ) {\",\r\n\r\n            \"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n            // flare\r\n\r\n            \"} else {\",\r\n\r\n            \"vec4 texture = texture2D( map, vUV );\",\r\n            \"texture.a *= opacity * vVisibility;\",\r\n            \"gl_FragColor = texture;\",\r\n            \"gl_FragColor.rgb *= color;\",\r\n\r\n            \"}\",\r\n\r\n            \"}\"\r\n        ].join( \"\\n\" )\r\n\r\n    },\r\n\r\n\r\n    'lensFlare': {\r\n\r\n        vertexShader: [\r\n\r\n            \"uniform lowp int renderType;\",\r\n\r\n            \"uniform vec3 screenPosition;\",\r\n            \"uniform vec2 scale;\",\r\n            \"uniform float rotation;\",\r\n\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 uv;\",\r\n\r\n            \"varying vec2 vUV;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"vUV = uv;\",\r\n\r\n            \"vec2 pos = position;\",\r\n\r\n            \"if( renderType == 2 ) {\",\r\n\r\n            \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n            \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n            \"}\",\r\n\r\n            \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n            \"}\"\r\n\r\n        ].join( \"\\n\" ),\r\n\r\n        fragmentShader: [\r\n\r\n            \"precision mediump float;\",\r\n\r\n            \"uniform lowp int renderType;\",\r\n\r\n            \"uniform sampler2D map;\",\r\n            \"uniform sampler2D occlusionMap;\",\r\n            \"uniform float opacity;\",\r\n            \"uniform vec3 color;\",\r\n\r\n            \"varying vec2 vUV;\",\r\n\r\n            \"void main() {\",\r\n\r\n            // pink square\r\n\r\n            \"if( renderType == 0 ) {\",\r\n\r\n            \"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n            // restore\r\n\r\n            \"} else if( renderType == 1 ) {\",\r\n\r\n            \"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n            // flare\r\n\r\n            \"} else {\",\r\n\r\n            \"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n            \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n            \"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n            \"vec4 texture = texture2D( map, vUV );\",\r\n            \"texture.a *= opacity * visibility;\",\r\n            \"gl_FragColor = texture;\",\r\n            \"gl_FragColor.rgb *= color;\",\r\n\r\n            \"}\",\r\n\r\n            \"}\"\r\n\r\n        ].join( \"\\n\" )\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n */\r\n\r\nTHREE.ShaderSprite = {\r\n\r\n    'sprite': {\r\n\r\n        vertexShader: [\r\n\r\n            \"uniform int useScreenCoordinates;\",\r\n            \"uniform int sizeAttenuation;\",\r\n            \"uniform vec3 screenPosition;\",\r\n            \"uniform mat4 modelViewMatrix;\",\r\n            \"uniform mat4 projectionMatrix;\",\r\n            \"uniform float rotation;\",\r\n            \"uniform vec2 scale;\",\r\n            \"uniform vec2 alignment;\",\r\n            \"uniform vec2 uvOffset;\",\r\n            \"uniform vec2 uvScale;\",\r\n\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 uv;\",\r\n\r\n            \"varying vec2 vUV;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"vUV = uvOffset + uv * uvScale;\",\r\n\r\n            \"vec2 alignedPosition = position + alignment;\",\r\n\r\n            \"vec2 rotatedPosition;\",\r\n            \"rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\",\r\n            \"rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\",\r\n\r\n            \"vec4 finalPosition;\",\r\n\r\n            \"if( useScreenCoordinates != 0 ) {\",\r\n\r\n            \"finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\",\r\n\r\n            \"} else {\",\r\n\r\n            \"finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\",\r\n            \"finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\",\r\n\r\n            \"}\",\r\n\r\n            \"gl_Position = finalPosition;\",\r\n\r\n            \"}\"\r\n\r\n        ].join( \"\\n\" ),\r\n\r\n        fragmentShader: [\r\n\r\n            \"uniform vec3 color;\",\r\n            \"uniform sampler2D map;\",\r\n            \"uniform float opacity;\",\r\n\r\n            \"uniform int fogType;\",\r\n            \"uniform vec3 fogColor;\",\r\n            \"uniform float fogDensity;\",\r\n            \"uniform float fogNear;\",\r\n            \"uniform float fogFar;\",\r\n            \"uniform float alphaTest;\",\r\n\r\n            \"varying vec2 vUV;\",\r\n\r\n            \"void main() {\",\r\n\r\n            \"vec4 texture = texture2D( map, vUV );\",\r\n\r\n            \"if ( texture.a < alphaTest ) discard;\",\r\n\r\n            \"gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\",\r\n\r\n            \"if ( fogType > 0 ) {\",\r\n\r\n            \"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n            \"float fogFactor = 0.0;\",\r\n\r\n            \"if ( fogType == 1 ) {\",\r\n\r\n            \"fogFactor = smoothstep( fogNear, fogFar, depth );\",\r\n\r\n            \"} else {\",\r\n\r\n            \"const float LOG2 = 1.442695;\",\r\n            \"float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\",\r\n            \"fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\",\r\n\r\n            \"}\",\r\n\r\n            \"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\r\n\r\n            \"}\",\r\n\r\n            \"}\"\r\n\r\n        ].join( \"\\n\" )\r\n\r\n    }\r\n\r\n};\r\n","/*!\r\n * VERSION: 2.0.2\r\n * DATE: 2018-08-27\r\n * UPDATES AND DOCS AT: http://greensock.com\r\n *\r\n * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\r\n *\r\n * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.\r\n * This work is subject to the terms at http://greensock.com/standard-license or for\r\n * Club GreenSock members, the software agreement that was issued with your membership.\r\n *\r\n * @author: Jack Doyle, jack@greensock.com\r\n **/\r\nvar _gsScope=\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){\"use strict\";_gsScope._gsDefine(\"TweenMax\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},e=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e(c,b[c]):e[c%e.length];delete a.cycle},f=function(a,b,d){c.call(this,a,b,d),this._cycle=0,this._yoyo=this.vars.yoyo===!0||!!this.vars.yoyoEase,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._repeat&&this._uncache(!0),this.render=f.prototype.render},g=1e-10,h=c._internals,i=h.isSelector,j=h.isArray,k=f.prototype=c.to({},.1,{}),l=[];f.version=\"2.0.2\",k.constructor=f,k.kill()._gc=!1,f.killTweensOf=f.killDelayedCallsTo=c.killTweensOf,f.getTweensOf=c.getTweensOf,f.lagSmoothing=c.lagSmoothing,f.ticker=c.ticker,f.render=c.render,k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0||!!this.vars.yoyoEase,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._yoyoEase=null,this._uncache(!0),c.prototype.invalidate.call(this)},k.updateTo=function(a,b){var d,e=this.ratio,f=this.vars.immediateRender||a.immediateRender;b&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(d in a)this.vars[d]=a[d];if(this._initted||f)if(b)this._initted=!1,f&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&c._onPluginEvent(\"_onDisable\",this),this._time/this._duration>.998){var g=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(g,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||f)for(var h,i=1/(1-e),j=this._firstPT;j;)h=j.s+j.c,j.c*=i,j.s=h-j.c,j=j._next;return this},k.render=function(a,b,d){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var e,f,i,j,k,l,m,n,o,p=this._dirty?this.totalDuration():this._totalDuration,q=this._time,r=this._totalTime,s=this._cycle,t=this._duration,u=this._rawPrevTime;if(a>=p-1e-7&&a>=0?(this._totalTime=p,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=t,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(e=!0,f=\"onComplete\",d=d||this._timeline.autoRemoveChildren),0===t&&(this._initted||!this.vars.lazy||d)&&(this._startTime===this._timeline._duration&&(a=0),(0>u||0>=a&&a>=-1e-7||u===g&&\"isPause\"!==this.data)&&u!==a&&(d=!0,u>g&&(f=\"onReverseComplete\")),this._rawPrevTime=n=!b||a||u===a?a:g)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==r||0===t&&u>0)&&(f=\"onReverseComplete\",e=this._reversed),0>a&&(this._active=!1,0===t&&(this._initted||!this.vars.lazy||d)&&(u>=0&&(d=!0),this._rawPrevTime=n=!b||a||u===a?a:g)),this._initted||(d=!0)):(this._totalTime=this._time=a,0!==this._repeat&&(j=t+this._repeatDelay,this._cycle=this._totalTime/j>>0,0!==this._cycle&&this._cycle===this._totalTime/j&&a>=r&&this._cycle--,this._time=this._totalTime-this._cycle*j,this._yoyo&&0!==(1&this._cycle)&&(this._time=t-this._time,o=this._yoyoEase||this.vars.yoyoEase,o&&(this._yoyoEase||(o!==!0||this._initted?this._yoyoEase=o=o===!0?this._ease:o instanceof Ease?o:Ease.map[o]:(o=this.vars.ease,this._yoyoEase=o=o?o instanceof Ease?o:\"function\"==typeof o?new Ease(o,this.vars.easeParams):Ease.map[o]||c.defaultEase:c.defaultEase)),this.ratio=o?1-o.getRatio((t-this._time)/t):0)),this._time>t?this._time=t:this._time<0&&(this._time=0)),this._easeType&&!o?(k=this._time/t,l=this._easeType,m=this._easePower,(1===l||3===l&&k>=.5)&&(k=1-k),3===l&&(k*=2),1===m?k*=k:2===m?k*=k*k:3===m?k*=k*k*k:4===m&&(k*=k*k*k*k),1===l?this.ratio=1-k:2===l?this.ratio=k:this._time/t<.5?this.ratio=k/2:this.ratio=1-k/2):o||(this.ratio=this._ease.getRatio(this._time/t))),q===this._time&&!d&&s===this._cycle)return void(r!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!d&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=q,this._totalTime=r,this._rawPrevTime=u,this._cycle=s,h.lazyTweens.push(this),void(this._lazy=[a,b]);!this._time||e||o?e&&this._ease._calcEnd&&!o&&(this.ratio=this._ease.getRatio(0===this._time?0:1)):this.ratio=this._ease.getRatio(this._time/t)}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==q&&a>=0&&(this._active=!0),0===r&&(2===this._initted&&a>0&&this._init(),this._startAt&&(a>=0?this._startAt.render(a,!0,d):f||(f=\"_dummyGS\")),this.vars.onStart&&(0!==this._totalTime||0===t)&&(b||this._callback(\"onStart\"))),i=this._firstPT;i;)i.f?i.t[i.p](i.c*this.ratio+i.s):i.t[i.p]=i.c*this.ratio+i.s,i=i._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,!0,d),b||(this._totalTime!==r||f)&&this._callback(\"onUpdate\")),this._cycle!==s&&(b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\")),f&&(!this._gc||d)&&(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,!0,d),e&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[f]&&this._callback(f),0===t&&this._rawPrevTime===g&&n!==g&&(this._rawPrevTime=0))},f.to=function(a,b,c){return new f(a,b,c)},f.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new f(a,b,c)},f.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new f(a,b,d)},f.staggerTo=f.allTo=function(a,b,g,h,k,m,n){h=h||0;var o,p,q,r,s=0,t=[],u=function(){g.onComplete&&g.onComplete.apply(g.onCompleteScope||this,arguments),k.apply(n||g.callbackScope||this,m||l)},v=g.cycle,w=g.startAt&&g.startAt.cycle;for(j(a)||(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a))),a=a||[],0>h&&(a=d(a),a.reverse(),h*=-1),o=a.length-1,q=0;o>=q;q++){p={};for(r in g)p[r]=g[r];if(v&&(e(p,a,q),null!=p.duration&&(b=p.duration,delete p.duration)),w){w=p.startAt={};for(r in g.startAt)w[r]=g.startAt[r];e(p.startAt,a,q)}p.delay=s+(p.delay||0),q===o&&k&&(p.onComplete=u),t[q]=new f(a[q],b,p),s+=h}return t},f.staggerFrom=f.allFrom=function(a,b,c,d,e,g,h){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,f.staggerTo(a,b,c,d,e,g,h)},f.staggerFromTo=f.allFromTo=function(a,b,c,d,e,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,f.staggerTo(a,b,d,e,g,h,i)},f.delayedCall=function(a,b,c,d,e){return new f(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,useFrames:e,overwrite:0})},f.set=function(a,b){return new f(a,0,b)},f.isTweening=function(a){return c.getTweensOf(a,!0).length>0};var m=function(a,b){for(var d=[],e=0,f=a._first;f;)f instanceof c?d[e++]=f:(b&&(d[e++]=f),d=d.concat(m(f,b)),e=d.length),f=f._next;return d},n=f.getAllTweens=function(b){return m(a._rootTimeline,b).concat(m(a._rootFramesTimeline,b))};f.killAll=function(a,c,d,e){null==c&&(c=!0),null==d&&(d=!0);var f,g,h,i=n(0!=e),j=i.length,k=c&&d&&e;for(h=0;j>h;h++)g=i[h],(k||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&(a?g.totalTime(g._reversed?0:g.totalDuration()):g._enabled(!1,!1))},f.killChildTweensOf=function(a,b){if(null!=a){var e,g,k,l,m,n=h.tweenLookup;if(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a)),j(a))for(l=a.length;--l>-1;)f.killChildTweensOf(a[l],b);else{e=[];for(k in n)for(g=n[k].target.parentNode;g;)g===a&&(e=e.concat(n[k].tweens)),g=g.parentNode;for(m=e.length,l=0;m>l;l++)b&&e[l].totalTime(e[l].totalDuration()),e[l]._enabled(!1,!1)}}};var o=function(a,c,d,e){c=c!==!1,d=d!==!1,e=e!==!1;for(var f,g,h=n(e),i=c&&d&&e,j=h.length;--j>-1;)g=h[j],(i||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&g.paused(a)};return f.pauseAll=function(a,b,c){o(!0,a,b,c)},f.resumeAll=function(a,b,c){o(!1,a,b,c)},f.globalTimeScale=function(b){var d=a._rootTimeline,e=c.ticker.time;return arguments.length?(b=b||g,d._startTime=e-(e-d._startTime)*d._timeScale/b,d=a._rootFramesTimeline,e=c.ticker.frame,d._startTime=e-(e-d._startTime)*d._timeScale/b,d._timeScale=a._rootTimeline._timeScale=b,b):d._timeScale},k.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()},k.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.duration=function(b){return arguments.length?a.prototype.duration.call(this,b):this._duration},k.totalDuration=function(a){return arguments.length?-1===this._repeat?this:this.duration((a-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},f},!0),_gsScope._gsDefine(\"TimelineLite\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){b.call(this,a),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var c,d,e=this.vars;for(d in e)c=e[d],i(c)&&-1!==c.join(\"\").indexOf(\"{self}\")&&(e[d]=this._swapSelfInParams(c));i(e.tweens)&&this.add(e.tweens,0,e.align,e.stagger)},e=1e-10,f=c._internals,g=d._internals={},h=f.isSelector,i=f.isArray,j=f.lazyTweens,k=f.lazyRender,l=_gsScope._gsDefine.globals,m=function(a){var b,c={};for(b in a)c[b]=a[b];return c},n=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e(c,b[c]):e[c%e.length];delete a.cycle},o=g.pauseCallback=function(){},p=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},q=d.prototype=new b;return d.version=\"2.0.2\",q.constructor=d,q.kill()._gc=q._forcingPlayhead=q._hasPause=!1,q.to=function(a,b,d,e){var f=d.repeat&&l.TweenMax||c;return b?this.add(new f(a,b,d),e):this.set(a,d,e)},q.from=function(a,b,d,e){return this.add((d.repeat&&l.TweenMax||c).from(a,b,d),e)},q.fromTo=function(a,b,d,e,f){var g=e.repeat&&l.TweenMax||c;return b?this.add(g.fromTo(a,b,d,e),f):this.set(a,e,f)},q.staggerTo=function(a,b,e,f,g,i,j,k){var l,o,q=new d({onComplete:i,onCompleteParams:j,callbackScope:k,smoothChildTiming:this.smoothChildTiming}),r=e.cycle;for(\"string\"==typeof a&&(a=c.selector(a)||a),a=a||[],h(a)&&(a=p(a)),f=f||0,0>f&&(a=p(a),a.reverse(),f*=-1),o=0;o<a.length;o++)l=m(e),l.startAt&&(l.startAt=m(l.startAt),l.startAt.cycle&&n(l.startAt,a,o)),r&&(n(l,a,o),null!=l.duration&&(b=l.duration,delete l.duration)),q.to(a[o],b,l,o*f);return this.add(q,g)},q.staggerFrom=function(a,b,c,d,e,f,g,h){return c.immediateRender=0!=c.immediateRender,c.runBackwards=!0,this.staggerTo(a,b,c,d,e,f,g,h)},q.staggerFromTo=function(a,b,c,d,e,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,this.staggerTo(a,b,d,e,f,g,h,i)},q.call=function(a,b,d,e){return this.add(c.delayedCall(0,a,b,d),e)},q.set=function(a,b,d){return d=this._parseTimeOrLabel(d,0,!0),null==b.immediateRender&&(b.immediateRender=d===this._time&&!this._paused),this.add(new c(a,0,b),d)},d.exportRoot=function(a,b){a=a||{},null==a.smoothChildTiming&&(a.smoothChildTiming=!0);var e,f,g,h,i=new d(a),j=i._timeline;for(null==b&&(b=!0),j._remove(i,!0),i._startTime=0,i._rawPrevTime=i._time=i._totalTime=j._time,g=j._first;g;)h=g._next,b&&g instanceof c&&g.target===g.vars.onComplete||(f=g._startTime-g._delay,0>f&&(e=1),i.add(g,f)),g=h;return j.add(i,0),e&&i.totalDuration(),i},q.add=function(e,f,g,h){var j,k,l,m,n,o;if(\"number\"!=typeof f&&(f=this._parseTimeOrLabel(f,0,!0,e)),!(e instanceof a)){if(e instanceof Array||e&&e.push&&i(e)){for(g=g||\"normal\",h=h||0,j=f,k=e.length,l=0;k>l;l++)i(m=e[l])&&(m=new d({tweens:m})),this.add(m,j),\"string\"!=typeof m&&\"function\"!=typeof m&&(\"sequence\"===g?j=m._startTime+m.totalDuration()/m._timeScale:\"start\"===g&&(m._startTime-=m.delay())),j+=h;return this._uncache(!0)}if(\"string\"==typeof e)return this.addLabel(e,f);if(\"function\"!=typeof e)throw\"Cannot add \"+e+\" into the timeline; it is not a tween, timeline, function, or string.\";e=c.delayedCall(0,e)}if(b.prototype.add.call(this,e,f),e._time&&(j=Math.max(0,Math.min(e.totalDuration(),(this.rawTime()-e._startTime)*e._timeScale)),Math.abs(j-e._totalTime)>1e-5&&e.render(j,!1,!1)),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(n=this,o=n.rawTime()>e._startTime;n._timeline;)o&&n._timeline.smoothChildTiming?n.totalTime(n._totalTime,!0):n._gc&&n._enabled(!0,!1),n=n._timeline;return this},q.remove=function(b){if(b instanceof a){this._remove(b,!1);var c=b._timeline=b.vars.useFrames?a._rootFramesTimeline:a._rootTimeline;return b._startTime=(b._paused?b._pauseTime:c._time)-(b._reversed?b.totalDuration()-b._totalTime:b._totalTime)/b._timeScale,this}if(b instanceof Array||b&&b.push&&i(b)){for(var d=b.length;--d>-1;)this.remove(b[d]);return this}return\"string\"==typeof b?this.removeLabel(b):this.kill(null,b)},q._remove=function(a,c){b.prototype._remove.call(this,a,c);var d=this._last;return d?this._time>this.duration()&&(this._time=this._duration,this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},q.append=function(a,b){return this.add(a,this._parseTimeOrLabel(null,b,!0,a))},q.insert=q.insertMultiple=function(a,b,c,d){return this.add(a,b||0,c,d)},q.appendMultiple=function(a,b,c,d){return this.add(a,this._parseTimeOrLabel(null,b,!0,a),c,d)},q.addLabel=function(a,b){return this._labels[a]=this._parseTimeOrLabel(b),this},q.addPause=function(a,b,d,e){var f=c.delayedCall(0,o,d,e||this);return f.vars.onComplete=f.vars.onReverseComplete=b,f.data=\"isPause\",this._hasPause=!0,this.add(f,a)},q.removeLabel=function(a){return delete this._labels[a],this},q.getLabelTime=function(a){return null!=this._labels[a]?this._labels[a]:-1},q._parseTimeOrLabel=function(b,c,d,e){var f,g;if(e instanceof a&&e.timeline===this)this.remove(e);else if(e&&(e instanceof Array||e.push&&i(e)))for(g=e.length;--g>-1;)e[g]instanceof a&&e[g].timeline===this&&this.remove(e[g]);if(f=\"number\"!=typeof b||c?this.duration()>99999999999?this.recent().endTime(!1):this._duration:0,\"string\"==typeof c)return this._parseTimeOrLabel(c,d&&\"number\"==typeof b&&null==this._labels[c]?b-f:0,d);if(c=c||0,\"string\"!=typeof b||!isNaN(b)&&null==this._labels[b])null==b&&(b=f);else{if(g=b.indexOf(\"=\"),-1===g)return null==this._labels[b]?d?this._labels[b]=f+c:c:this._labels[b]+c;c=parseInt(b.charAt(g-1)+\"1\",10)*Number(b.substr(g+1)),b=g>1?this._parseTimeOrLabel(b.substr(0,g-1),0,d):f}return Number(b)+c},q.seek=function(a,b){return this.totalTime(\"number\"==typeof a?a:this._parseTimeOrLabel(a),b!==!1)},q.stop=function(){return this.paused(!0)},q.gotoAndPlay=function(a,b){return this.play(a,b)},q.gotoAndStop=function(a,b){return this.pause(a,b)},q.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,g,h,i,l,m,n=this._time,o=this._dirty?this.totalDuration():this._totalDuration,p=this._startTime,q=this._timeScale,r=this._paused;if(n!==this._time&&(a+=this._time-n),a>=o-1e-7&&a>=0)this._totalTime=this._time=o,this._reversed||this._hasPausedChild()||(f=!0,h=\"onComplete\",i=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===e)&&this._rawPrevTime!==a&&this._first&&(i=!0,this._rawPrevTime>e&&(h=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,a=o+1e-4;else if(1e-7>a)if(this._totalTime=this._time=0,(0!==n||0===this._duration&&this._rawPrevTime!==e&&(this._rawPrevTime>0||0>a&&this._rawPrevTime>=0))&&(h=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(i=f=!0,h=\"onReverseComplete\"):this._rawPrevTime>=0&&this._first&&(i=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(i=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!b){if(a>=n)for(d=this._first;d&&d._startTime<=a&&!l;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(l=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!l;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(l=d),d=d._prev;l&&(this._time=a=l._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=a}if(this._time!==n&&this._first||c||i||l){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==n&&a>0&&(this._active=!0),0===n&&this.vars.onStart&&(0===this._time&&this._duration||b||this._callback(\"onStart\")),m=this._time,m>=n)for(d=this._first;d&&(g=d._next,m===this._time&&(!this._paused||r));)(d._active||d._startTime<=m&&!d._paused&&!d._gc)&&(l===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;else for(d=this._last;d&&(g=d._prev,m===this._time&&(!this._paused||r));){if(d._active||d._startTime<=n&&!d._paused&&!d._gc){if(l===d){for(l=d._prev;l&&l.endTime()>this._time;)l.render(l._reversed?l.totalDuration()-(a-l._startTime)*l._timeScale:(a-l._startTime)*l._timeScale,b,c),l=l._prev;l=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=g}this._onUpdate&&(b||(j.length&&k(),this._callback(\"onUpdate\"))),h&&(this._gc||(p===this._startTime||q!==this._timeScale)&&(0===this._time||o>=this.totalDuration())&&(f&&(j.length&&k(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[h]&&this._callback(h)))}},q._hasPausedChild=function(){for(var a=this._first;a;){if(a._paused||a instanceof d&&a._hasPausedChild())return!0;a=a._next}return!1},q.getChildren=function(a,b,d,e){e=e||-9999999999;for(var f=[],g=this._first,h=0;g;)g._startTime<e||(g instanceof c?b!==!1&&(f[h++]=g):(d!==!1&&(f[h++]=g),a!==!1&&(f=f.concat(g.getChildren(!0,b,d)),h=f.length))),g=g._next;return f},q.getTweensOf=function(a,b){var d,e,f=this._gc,g=[],h=0;for(f&&this._enabled(!0,!0),d=c.getTweensOf(a),e=d.length;--e>-1;)(d[e].timeline===this||b&&this._contains(d[e]))&&(g[h++]=d[e]);return f&&this._enabled(!1,!0),g},q.recent=function(){return this._recent},q._contains=function(a){for(var b=a.timeline;b;){if(b===this)return!0;b=b.timeline}return!1},q.shiftChildren=function(a,b,c){c=c||0;for(var d,e=this._first,f=this._labels;e;)e._startTime>=c&&(e._startTime+=a),e=e._next;if(b)for(d in f)f[d]>=c&&(f[d]+=a);return this._uncache(!0)},q._kill=function(a,b){if(!a&&!b)return this._enabled(!1,!1);for(var c=b?this.getTweensOf(b):this.getChildren(!0,!0,!1),d=c.length,e=!1;--d>-1;)c[d]._kill(a,b)&&(e=!0);return e},q.clear=function(a){var b=this.getChildren(!1,!0,!0),c=b.length;for(this._time=this._totalTime=0;--c>-1;)b[c]._enabled(!1,!1);return a!==!1&&(this._labels={}),this._uncache(!0)},q.invalidate=function(){for(var b=this._first;b;)b.invalidate(),b=b._next;return a.prototype.invalidate.call(this)},q._enabled=function(a,c){if(a===this._gc)for(var d=this._first;d;)d._enabled(a,!0),d=d._next;return b.prototype._enabled.call(this,a,c)},q.totalTime=function(b,c,d){this._forcingPlayhead=!0;var e=a.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},q.duration=function(a){return arguments.length?(0!==this.duration()&&0!==a&&this.timeScale(this._duration/a),this):(this._dirty&&this.totalDuration(),this._duration)},q.totalDuration=function(a){if(!arguments.length){if(this._dirty){for(var b,c,d=0,e=this._last,f=999999999999;e;)b=e._prev,e._dirty&&e.totalDuration(),e._startTime>f&&this._sortChildren&&!e._paused&&!this._calculatingDuration?(this._calculatingDuration=1,this.add(e,e._startTime-e._delay),this._calculatingDuration=0):f=e._startTime,e._startTime<0&&!e._paused&&(d-=e._startTime,this._timeline.smoothChildTiming&&(this._startTime+=e._startTime/this._timeScale,this._time-=e._startTime,this._totalTime-=e._startTime,this._rawPrevTime-=e._startTime),this.shiftChildren(-e._startTime,!1,-9999999999),f=0),c=e._startTime+e._totalDuration/e._timeScale,c>d&&(d=c),e=b;this._duration=this._totalDuration=d,this._dirty=!1}return this._totalDuration}return a&&this.totalDuration()?this.timeScale(this._totalDuration/a):this},q.paused=function(b){if(!b)for(var c=this._first,d=this._time;c;)c._startTime===d&&\"isPause\"===c.data&&(c._rawPrevTime=0),c=c._next;return a.prototype.paused.apply(this,arguments)},q.usesFrames=function(){for(var b=this._timeline;b._timeline;)b=b._timeline;return b===a._rootFramesTimeline},q.rawTime=function(a){return a&&(this._paused||this._repeat&&this.time()>0&&this.totalProgress()<1)?this._totalTime%(this._duration+this._repeatDelay):this._paused?this._totalTime:(this._timeline.rawTime(a)-this._startTime)*this._timeScale},d},!0),_gsScope._gsDefine(\"TimelineMax\",[\"TimelineLite\",\"TweenLite\",\"easing.Ease\"],function(a,b,c){var d=function(b){a.call(this,b),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},e=1e-10,f=b._internals,g=f.lazyTweens,h=f.lazyRender,i=_gsScope._gsDefine.globals,j=new c(null,null,1,0),k=d.prototype=new a;return k.constructor=d,k.kill()._gc=!1,d.version=\"2.0.2\",k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),a.prototype.invalidate.call(this)},k.addCallback=function(a,c,d,e){return this.add(b.delayedCall(0,a,d,e),c)},k.removeCallback=function(a,b){if(a)if(null==b)this._kill(null,a);else for(var c=this.getTweensOf(a,!1),d=c.length,e=this._parseTimeOrLabel(b);--d>-1;)c[d]._startTime===e&&c[d]._enabled(!1,!1);return this},k.removePause=function(b){return this.removeCallback(a._internals.pauseCallback,b)},k.tweenTo=function(a,c){c=c||{};var d,e,f,g={ease:j,useFrames:this.usesFrames(),immediateRender:!1,lazy:!1},h=c.repeat&&i.TweenMax||b;for(e in c)g[e]=c[e];return g.time=this._parseTimeOrLabel(a),d=Math.abs(Number(g.time)-this._time)/this._timeScale||.001,f=new h(this,d,g),g.onStart=function(){f.target.paused(!0),f.vars.time===f.target.time()||d!==f.duration()||f.isFromTo||f.duration(Math.abs(f.vars.time-f.target.time())/f.target._timeScale).render(f.time(),!0,!0),c.onStart&&c.onStart.apply(c.onStartScope||c.callbackScope||f,c.onStartParams||[])},f},k.tweenFromTo=function(a,b,c){c=c||{},a=this._parseTimeOrLabel(a),c.startAt={onComplete:this.seek,onCompleteParams:[a],callbackScope:this},c.immediateRender=c.immediateRender!==!1;var d=this.tweenTo(b,c);return d.isFromTo=1,d.duration(Math.abs(d.vars.time-a)/this._timeScale||.001)},k.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,i,j,k,l,m,n,o=this._time,p=this._dirty?this.totalDuration():this._totalDuration,q=this._duration,r=this._totalTime,s=this._startTime,t=this._timeScale,u=this._rawPrevTime,v=this._paused,w=this._cycle;if(o!==this._time&&(a+=this._time-o),a>=p-1e-7&&a>=0)this._locked||(this._totalTime=p,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(f=!0,j=\"onComplete\",k=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||0>u||u===e)&&u!==a&&this._first&&(k=!0,u>e&&(j=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,this._yoyo&&0!==(1&this._cycle)?this._time=a=0:(this._time=q,a=q+1e-4);else if(1e-7>a)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==o||0===q&&u!==e&&(u>0||0>a&&u>=0)&&!this._locked)&&(j=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(k=f=!0,j=\"onReverseComplete\"):u>=0&&this._first&&(k=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=q||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(k=!0)}else if(0===q&&0>u&&(k=!0),this._time=this._rawPrevTime=a,this._locked||(this._totalTime=a,0!==this._repeat&&(l=q+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&a>=r&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=q-this._time),this._time>q?(this._time=q,a=q+1e-4):this._time<0?this._time=a=0:a=this._time)),this._hasPause&&!this._forcingPlayhead&&!b){if(a=this._time,a>=o||this._repeat&&w!==this._cycle)for(d=this._first;d&&d._startTime<=a&&!m;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(m=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!m;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(m=d),d=d._prev;m&&m._startTime<q&&(this._time=a=m._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var x=this._yoyo&&0!==(1&w),y=x===(this._yoyo&&0!==(1&this._cycle)),z=this._totalTime,A=this._cycle,B=this._rawPrevTime,C=this._time;if(this._totalTime=w*q,this._cycle<w?x=!x:this._totalTime+=q,this._time=o,this._rawPrevTime=0===q?u-1e-4:u,this._cycle=w,this._locked=!0,o=x?0:q,this.render(o,b,0===q),b||this._gc||this.vars.onRepeat&&(this._cycle=A,this._locked=!1,this._callback(\"onRepeat\")),o!==this._time)return;if(y&&(this._cycle=w,this._locked=!0,o=x?q+1e-4:-1e-4,this.render(o,!0,!1)),this._locked=!1,this._paused&&!v)return;this._time=C,this._totalTime=z,this._cycle=A,this._rawPrevTime=B}if(!(this._time!==o&&this._first||c||k||m))return void(r!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==r&&a>0&&(this._active=!0),0===r&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||b||this._callback(\"onStart\")),n=this._time,n>=o)for(d=this._first;d&&(i=d._next,n===this._time&&(!this._paused||v));)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(m===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=i;else for(d=this._last;d&&(i=d._prev,n===this._time&&(!this._paused||v));){if(d._active||d._startTime<=o&&!d._paused&&!d._gc){if(m===d){for(m=d._prev;m&&m.endTime()>this._time;)m.render(m._reversed?m.totalDuration()-(a-m._startTime)*m._timeScale:(a-m._startTime)*m._timeScale,b,c),m=m._prev;m=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=i}this._onUpdate&&(b||(g.length&&h(),this._callback(\"onUpdate\"))),j&&(this._locked||this._gc||(s===this._startTime||t!==this._timeScale)&&(0===this._time||p>=this.totalDuration())&&(f&&(g.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[j]&&this._callback(j)))},k.getActive=function(a,b,c){null==a&&(a=!0),null==b&&(b=!0),null==c&&(c=!1);var d,e,f=[],g=this.getChildren(a,b,c),h=0,i=g.length;for(d=0;i>d;d++)e=g[d],e.isActive()&&(f[h++]=e);return f},k.getLabelAfter=function(a){a||0!==a&&(a=this._time);var b,c=this.getLabelsArray(),d=c.length;for(b=0;d>b;b++)if(c[b].time>a)return c[b].name;return null},k.getLabelBefore=function(a){null==a&&(a=this._time);for(var b=this.getLabelsArray(),c=b.length;--c>-1;)if(b[c].time<a)return b[c].name;return null},k.getLabelsArray=function(){var a,b=[],c=0;for(a in this._labels)b[c++]={time:this._labels[a],name:a};return b.sort(function(a,b){return a.time-b.time}),b},k.invalidate=function(){return this._locked=!1,a.prototype.invalidate.call(this)},k.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()||0},k.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()||0},k.totalDuration=function(b){return arguments.length?-1!==this._repeat&&b?this.timeScale(this.totalDuration()/b):this:(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},k.currentLabel=function(a){return arguments.length?this.seek(a,!0):this.getLabelBefore(this._time+1e-8)},d},!0),function(){var a=180/Math.PI,b=[],c=[],d=[],e={},f=_gsScope._gsDefine.globals,g=function(a,b,c,d){c===d&&(c=d-(d-b)/1e6),a===b&&(b=a+(c-a)/1e6),this.a=a,this.b=b,this.c=c,this.d=d,this.da=d-a,this.ca=c-a,this.ba=b-a},h=\",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",i=function(a,b,c,d){var e={a:a},f={},g={},h={c:d},i=(a+b)/2,j=(b+c)/2,k=(c+d)/2,l=(i+j)/2,m=(j+k)/2,n=(m-l)/8;return e.b=i+(a-i)/4,f.b=l+n,e.c=f.a=(e.b+f.b)/2,f.c=g.a=(l+m)/2,g.b=m-n,h.b=k+(d-k)/4,g.c=h.a=(g.b+h.b)/2,[e,f,g,h]},j=function(a,e,f,g,h){var j,k,l,m,n,o,p,q,r,s,t,u,v,w=a.length-1,x=0,y=a[0].a;for(j=0;w>j;j++)n=a[x],k=n.a,l=n.d,m=a[x+1].d,h?(t=b[j],u=c[j],v=(u+t)*e*.25/(g?.5:d[j]||.5),o=l-(l-k)*(g?.5*e:0!==t?v/t:0),p=l+(m-l)*(g?.5*e:0!==u?v/u:0),q=l-(o+((p-o)*(3*t/(t+u)+.5)/4||0))):(o=l-(l-k)*e*.5,p=l+(m-l)*e*.5,q=l-(o+p)/2),o+=q,p+=q,n.c=r=o,0!==j?n.b=y:n.b=y=n.a+.6*(n.c-n.a),n.da=l-k,n.ca=r-k,n.ba=y-k,f?(s=i(k,y,r,l),a.splice(x,1,s[0],s[1],s[2],s[3]),x+=4):x++,y=p;n=a[x],n.b=y,n.c=y+.4*(n.d-y),n.da=n.d-n.a,n.ca=n.c-n.a,n.ba=y-n.a,f&&(s=i(n.a,y,n.c,n.d),a.splice(x,1,s[0],s[1],s[2],s[3]))},k=function(a,d,e,f){var h,i,j,k,l,m,n=[];if(f)for(a=[f].concat(a),i=a.length;--i>-1;)\"string\"==typeof(m=a[i][d])&&\"=\"===m.charAt(1)&&(a[i][d]=f[d]+Number(m.charAt(0)+m.substr(2)));if(h=a.length-2,0>h)return n[0]=new g(a[0][d],0,0,a[0][d]),n;for(i=0;h>i;i++)j=a[i][d],k=a[i+1][d],n[i]=new g(j,0,0,k),e&&(l=a[i+2][d],b[i]=(b[i]||0)+(k-j)*(k-j),c[i]=(c[i]||0)+(l-k)*(l-k));return n[i]=new g(a[i][d],0,0,a[i+1][d]),n},l=function(a,f,g,i,l,m){var n,o,p,q,r,s,t,u,v={},w=[],x=m||a[0];l=\"string\"==typeof l?\",\"+l+\",\":h,null==f&&(f=1);for(o in a[0])w.push(o);if(a.length>1){for(u=a[a.length-1],t=!0,n=w.length;--n>-1;)if(o=w[n],Math.abs(x[o]-u[o])>.05){t=!1;break}t&&(a=a.concat(),m&&a.unshift(m),a.push(a[1]),m=a[a.length-3])}for(b.length=c.length=d.length=0,n=w.length;--n>-1;)o=w[n],e[o]=-1!==l.indexOf(\",\"+o+\",\"),v[o]=k(a,o,e[o],m);for(n=b.length;--n>-1;)b[n]=Math.sqrt(b[n]),\r\n    c[n]=Math.sqrt(c[n]);if(!i){for(n=w.length;--n>-1;)if(e[o])for(p=v[w[n]],s=p.length-1,q=0;s>q;q++)r=p[q+1].da/c[q]+p[q].da/b[q]||0,d[q]=(d[q]||0)+r*r;for(n=d.length;--n>-1;)d[n]=Math.sqrt(d[n])}for(n=w.length,q=g?4:1;--n>-1;)o=w[n],p=v[o],j(p,f,g,i,e[o]),t&&(p.splice(0,q),p.splice(p.length-q,q));return v},m=function(a,b,c){b=b||\"soft\";var d,e,f,h,i,j,k,l,m,n,o,p={},q=\"cubic\"===b?3:2,r=\"soft\"===b,s=[];if(r&&c&&(a=[c].concat(a)),null==a||a.length<q+1)throw\"invalid Bezier data\";for(m in a[0])s.push(m);for(j=s.length;--j>-1;){for(m=s[j],p[m]=i=[],n=0,l=a.length,k=0;l>k;k++)d=null==c?a[k][m]:\"string\"==typeof(o=a[k][m])&&\"=\"===o.charAt(1)?c[m]+Number(o.charAt(0)+o.substr(2)):Number(o),r&&k>1&&l-1>k&&(i[n++]=(d+i[n-2])/2),i[n++]=d;for(l=n-q+1,n=0,k=0;l>k;k+=q)d=i[k],e=i[k+1],f=i[k+2],h=2===q?0:i[k+3],i[n++]=o=3===q?new g(d,e,f,h):new g(d,(2*e+d)/3,(2*e+f)/3,f);i.length=n}return p},n=function(a,b,c){for(var d,e,f,g,h,i,j,k,l,m,n,o=1/c,p=a.length;--p>-1;)for(m=a[p],f=m.a,g=m.d-f,h=m.c-f,i=m.b-f,d=e=0,k=1;c>=k;k++)j=o*k,l=1-j,d=e-(e=(j*j*g+3*l*(j*h+l*i))*j),n=p*c+k-1,b[n]=(b[n]||0)+d*d},o=function(a,b){b=b>>0||6;var c,d,e,f,g=[],h=[],i=0,j=0,k=b-1,l=[],m=[];for(c in a)n(a[c],g,b);for(e=g.length,d=0;e>d;d++)i+=Math.sqrt(g[d]),f=d%b,m[f]=i,f===k&&(j+=i,f=d/b>>0,l[f]=m,h[f]=j,i=0,m=[]);return{length:j,lengths:h,segments:l}},p=_gsScope._gsDefine.plugin({propName:\"bezier\",priority:-1,version:\"1.3.8\",API:2,global:!0,init:function(a,b,c){this._target=a,b instanceof Array&&(b={values:b}),this._func={},this._mod={},this._props=[],this._timeRes=null==b.timeResolution?6:parseInt(b.timeResolution,10);var d,e,f,g,h,i=b.values||[],j={},k=i[0],n=b.autoRotate||c.vars.orientToBezier;this._autoRotate=n?n instanceof Array?n:[[\"x\",\"y\",\"rotation\",n===!0?0:Number(n)||0]]:null;for(d in k)this._props.push(d);for(f=this._props.length;--f>-1;)d=this._props[f],this._overwriteProps.push(d),e=this._func[d]=\"function\"==typeof a[d],j[d]=e?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]():parseFloat(a[d]),h||j[d]!==i[0][d]&&(h=j);if(this._beziers=\"cubic\"!==b.type&&\"quadratic\"!==b.type&&\"soft\"!==b.type?l(i,isNaN(b.curviness)?1:b.curviness,!1,\"thruBasic\"===b.type,b.correlate,h):m(i,b.type,j),this._segCount=this._beziers[d].length,this._timeRes){var p=o(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(n=this._autoRotate)for(this._initialRotations=[],n[0]instanceof Array||(this._autoRotate=n=[n]),f=n.length;--f>-1;){for(g=0;3>g;g++)d=n[f][g],this._func[d]=\"function\"==typeof a[d]?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]:!1;d=n[f][2],this._initialRotations[f]=(this._func[d]?this._func[d].call(this._target):this._target[d])||0,this._overwriteProps.push(d)}return this._startRatio=c.vars.runBackwards?1:0,!0},set:function(b){var c,d,e,f,g,h,i,j,k,l,m=this._segCount,n=this._func,o=this._target,p=b!==this._startRatio;if(this._timeRes){if(k=this._lengths,l=this._curSeg,b*=this._length,e=this._li,b>this._l2&&m-1>e){for(j=m-1;j>e&&(this._l2=k[++e])<=b;);this._l1=k[e-1],this._li=e,this._curSeg=l=this._segments[e],this._s2=l[this._s1=this._si=0]}else if(b<this._l1&&e>0){for(;e>0&&(this._l1=k[--e])>=b;);0===e&&b<this._l1?this._l1=0:e++,this._l2=k[e],this._li=e,this._curSeg=l=this._segments[e],this._s1=l[(this._si=l.length-1)-1]||0,this._s2=l[this._si]}if(c=e,b-=this._l1,e=this._si,b>this._s2&&e<l.length-1){for(j=l.length-1;j>e&&(this._s2=l[++e])<=b;);this._s1=l[e-1],this._si=e}else if(b<this._s1&&e>0){for(;e>0&&(this._s1=l[--e])>=b;);0===e&&b<this._s1?this._s1=0:e++,this._s2=l[e],this._si=e}h=(e+(b-this._s1)/(this._s2-this._s1))*this._prec||0}else c=0>b?0:b>=1?m-1:m*b>>0,h=(b-c*(1/m))*m;for(d=1-h,e=this._props.length;--e>-1;)f=this._props[e],g=this._beziers[f][c],i=(h*h*g.da+3*d*(h*g.ca+d*g.ba))*h+g.a,this._mod[f]&&(i=this._mod[f](i,o)),n[f]?o[f](i):o[f]=i;if(this._autoRotate){var q,r,s,t,u,v,w,x=this._autoRotate;for(e=x.length;--e>-1;)f=x[e][2],v=x[e][3]||0,w=x[e][4]===!0?1:a,g=this._beziers[x[e][0]],q=this._beziers[x[e][1]],g&&q&&(g=g[c],q=q[c],r=g.a+(g.b-g.a)*h,t=g.b+(g.c-g.b)*h,r+=(t-r)*h,t+=(g.c+(g.d-g.c)*h-t)*h,s=q.a+(q.b-q.a)*h,u=q.b+(q.c-q.b)*h,s+=(u-s)*h,u+=(q.c+(q.d-q.c)*h-u)*h,i=p?Math.atan2(u-s,t-r)*w+v:this._initialRotations[e],this._mod[f]&&(i=this._mod[f](i,o)),n[f]?o[f](i):o[f]=i)}}}),q=p.prototype;p.bezierThrough=l,p.cubicToQuadratic=i,p._autoCSS=!0,p.quadraticToCubic=function(a,b,c){return new g(a,(2*b+a)/3,(2*b+c)/3,c)},p._cssRegister=function(){var a=f.CSSPlugin;if(a){var b=a._internals,c=b._parseToProxy,d=b._setPluginRatio,e=b.CSSPropTween;b._registerComplexSpecialProp(\"bezier\",{parser:function(a,b,f,g,h,i){b instanceof Array&&(b={values:b}),i=new p;var j,k,l,m=b.values,n=m.length-1,o=[],q={};if(0>n)return h;for(j=0;n>=j;j++)l=c(a,m[j],g,h,i,n!==j),o[j]=l.end;for(k in b)q[k]=b[k];return q.values=o,h=new e(a,\"bezier\",0,0,l.pt,2),h.data=l,h.plugin=i,h.setRatio=d,0===q.autoRotate&&(q.autoRotate=!0),!q.autoRotate||q.autoRotate instanceof Array||(j=q.autoRotate===!0?0:Number(q.autoRotate),q.autoRotate=null!=l.end.left?[[\"left\",\"top\",\"rotation\",j,!1]]:null!=l.end.x?[[\"x\",\"y\",\"rotation\",j,!1]]:!1),q.autoRotate&&(g._transform||g._enableTransforms(!1),l.autoRotate=g._target._gsTransform,l.proxy.rotation=l.autoRotate.rotation||0,g._overwriteProps.push(\"rotation\")),i._onInitTween(l.proxy,q,g._tween),h}})}},q._mod=function(a){for(var b,c=this._overwriteProps,d=c.length;--d>-1;)b=a[c[d]],b&&\"function\"==typeof b&&(this._mod[c[d]]=b)},q._kill=function(a){var b,c,d=this._props;for(b in this._beziers)if(b in a)for(delete this._beziers[b],delete this._func[b],c=d.length;--c>-1;)d[c]===b&&d.splice(c,1);if(d=this._autoRotate)for(c=d.length;--c>-1;)a[d[c][2]]&&d.splice(c,1);return this._super._kill.call(this,a)}}(),_gsScope._gsDefine(\"plugins.CSSPlugin\",[\"plugins.TweenPlugin\",\"TweenLite\"],function(a,b){var c,d,e,f,g=function(){a.call(this,\"css\"),this._overwriteProps.length=0,this.setRatio=g.prototype.setRatio},h=_gsScope._gsDefine.globals,i={},j=g.prototype=new a(\"css\");j.constructor=g,g.version=\"2.0.2\",g.API=2,g.defaultTransformPerspective=0,g.defaultSkewType=\"compensated\",g.defaultSmoothOrigin=!0,j=\"px\",g.suffixMap={top:j,right:j,bottom:j,left:j,width:j,height:j,fontSize:j,padding:j,margin:j,perspective:j,lineHeight:\"\"};var k,l,m,n,o,p,q,r,s=/(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g,t=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,u=/(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi,v=/(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g,w=/(?:\\d|\\-|\\+|=|#|\\.)*/g,x=/opacity *= *([^)]*)/i,y=/opacity:([^;]*)/i,z=/alpha\\(opacity *=.+?\\)/i,A=/^(rgb|hsl)/,B=/([A-Z])/g,C=/-([a-z])/gi,D=/(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi,E=function(a,b){return b.toUpperCase()},F=/(?:Left|Right|Width)/i,G=/(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,H=/progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,I=/,(?=[^\\)]*(?:\\(|$))/gi,J=/[\\s,\\(]/i,K=Math.PI/180,L=180/Math.PI,M={},N={style:{}},O=_gsScope.document||{createElement:function(){return N}},P=function(a,b){return O.createElementNS?O.createElementNS(b||\"http://www.w3.org/1999/xhtml\",a):O.createElement(a)},Q=P(\"div\"),R=P(\"img\"),S=g._internals={_specialProps:i},T=(_gsScope.navigator||{}).userAgent||\"\",U=function(){var a=T.indexOf(\"Android\"),b=P(\"a\");return m=-1!==T.indexOf(\"Safari\")&&-1===T.indexOf(\"Chrome\")&&(-1===a||parseFloat(T.substr(a+8,2))>3),o=m&&parseFloat(T.substr(T.indexOf(\"Version/\")+8,2))<6,n=-1!==T.indexOf(\"Firefox\"),(/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(T)||/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(T))&&(p=parseFloat(RegExp.$1)),b?(b.style.cssText=\"top:1px;opacity:.55;\",/^0.55/.test(b.style.opacity)):!1}(),V=function(a){return x.test(\"string\"==typeof a?a:(a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?parseFloat(RegExp.$1)/100:1},W=function(a){_gsScope.console&&console.log(a)},X=\"\",Y=\"\",Z=function(a,b){b=b||Q;var c,d,e=b.style;if(void 0!==e[a])return a;for(a=a.charAt(0).toUpperCase()+a.substr(1),c=[\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"],d=5;--d>-1&&void 0===e[c[d]+a];);return d>=0?(Y=3===d?\"ms\":c[d],X=\"-\"+Y.toLowerCase()+\"-\",Y+a):null},$=(\"undefined\"!=typeof window?window:O.defaultView||{getComputedStyle:function(){}}).getComputedStyle,_=g.getStyle=function(a,b,c,d,e){var f;return U||\"opacity\"!==b?(!d&&a.style[b]?f=a.style[b]:(c=c||$(a))?f=c[b]||c.getPropertyValue(b)||c.getPropertyValue(b.replace(B,\"-$1\").toLowerCase()):a.currentStyle&&(f=a.currentStyle[b]),null==e||f&&\"none\"!==f&&\"auto\"!==f&&\"auto auto\"!==f?f:e):V(a)},aa=S.convertToPixels=function(a,c,d,e,f){if(\"px\"===e||!e&&\"lineHeight\"!==c)return d;if(\"auto\"===e||!d)return 0;var h,i,j,k=F.test(c),l=a,m=Q.style,n=0>d,o=1===d;if(n&&(d=-d),o&&(d*=100),\"lineHeight\"!==c||e)if(\"%\"===e&&-1!==c.indexOf(\"border\"))h=d/100*(k?a.clientWidth:a.clientHeight);else{if(m.cssText=\"border:0 solid red;position:\"+_(a,\"position\")+\";line-height:0;\",\"%\"!==e&&l.appendChild&&\"v\"!==e.charAt(0)&&\"rem\"!==e)m[k?\"borderLeftWidth\":\"borderTopWidth\"]=d+e;else{if(l=a.parentNode||O.body,-1!==_(l,\"display\").indexOf(\"flex\")&&(m.position=\"absolute\"),i=l._gsCache,j=b.ticker.frame,i&&k&&i.time===j)return i.width*d/100;m[k?\"width\":\"height\"]=d+e}l.appendChild(Q),h=parseFloat(Q[k?\"offsetWidth\":\"offsetHeight\"]),l.removeChild(Q),k&&\"%\"===e&&g.cacheWidths!==!1&&(i=l._gsCache=l._gsCache||{},i.time=j,i.width=h/d*100),0!==h||f||(h=aa(a,c,d,e,!0))}else i=$(a).lineHeight,a.style.lineHeight=d,h=parseFloat($(a).lineHeight),a.style.lineHeight=i;return o&&(h/=100),n?-h:h},ba=S.calculateOffset=function(a,b,c){if(\"absolute\"!==_(a,\"position\",c))return 0;var d=\"left\"===b?\"Left\":\"Top\",e=_(a,\"margin\"+d,c);return a[\"offset\"+d]-(aa(a,b,parseFloat(e),e.replace(w,\"\"))||0)},ca=function(a,b){var c,d,e,f={};if(b=b||$(a,null))if(c=b.length)for(;--c>-1;)e=b[c],(-1===e.indexOf(\"-transform\")||Da===e)&&(f[e.replace(C,E)]=b.getPropertyValue(e));else for(c in b)(-1===c.indexOf(\"Transform\")||Ca===c)&&(f[c]=b[c]);else if(b=a.currentStyle||a.style)for(c in b)\"string\"==typeof c&&void 0===f[c]&&(f[c.replace(C,E)]=b[c]);return U||(f.opacity=V(a)),d=Ra(a,b,!1),f.rotation=d.rotation,f.skewX=d.skewX,f.scaleX=d.scaleX,f.scaleY=d.scaleY,f.x=d.x,f.y=d.y,Fa&&(f.z=d.z,f.rotationX=d.rotationX,f.rotationY=d.rotationY,f.scaleZ=d.scaleZ),f.filters&&delete f.filters,f},da=function(a,b,c,d,e){var f,g,h,i={},j=a.style;for(g in c)\"cssText\"!==g&&\"length\"!==g&&isNaN(g)&&(b[g]!==(f=c[g])||e&&e[g])&&-1===g.indexOf(\"Origin\")&&(\"number\"==typeof f||\"string\"==typeof f)&&(i[g]=\"auto\"!==f||\"left\"!==g&&\"top\"!==g?\"\"!==f&&\"auto\"!==f&&\"none\"!==f||\"string\"!=typeof b[g]||\"\"===b[g].replace(v,\"\")?f:0:ba(a,g),void 0!==j[g]&&(h=new sa(j,g,j[g],h)));if(d)for(g in d)\"className\"!==g&&(i[g]=d[g]);return{difs:i,firstMPT:h}},ea={width:[\"Left\",\"Right\"],height:[\"Top\",\"Bottom\"]},fa=[\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],ga=function(a,b,c){if(\"svg\"===(a.nodeName+\"\").toLowerCase())return(c||$(a))[b]||0;if(a.getCTM&&Oa(a))return a.getBBox()[b]||0;var d=parseFloat(\"width\"===b?a.offsetWidth:a.offsetHeight),e=ea[b],f=e.length;for(c=c||$(a,null);--f>-1;)d-=parseFloat(_(a,\"padding\"+e[f],c,!0))||0,d-=parseFloat(_(a,\"border\"+e[f]+\"Width\",c,!0))||0;return d},ha=function(a,b){if(\"contain\"===a||\"auto\"===a||\"auto auto\"===a)return a+\" \";(null==a||\"\"===a)&&(a=\"0 0\");var c,d=a.split(\" \"),e=-1!==a.indexOf(\"left\")?\"0%\":-1!==a.indexOf(\"right\")?\"100%\":d[0],f=-1!==a.indexOf(\"top\")?\"0%\":-1!==a.indexOf(\"bottom\")?\"100%\":d[1];if(d.length>3&&!b){for(d=a.split(\", \").join(\",\").split(\",\"),a=[],c=0;c<d.length;c++)a.push(ha(d[c]));return a.join(\",\")}return null==f?f=\"center\"===e?\"50%\":\"0\":\"center\"===f&&(f=\"50%\"),(\"center\"===e||isNaN(parseFloat(e))&&-1===(e+\"\").indexOf(\"=\"))&&(e=\"50%\"),a=e+\" \"+f+(d.length>2?\" \"+d[2]:\"\"),b&&(b.oxp=-1!==e.indexOf(\"%\"),b.oyp=-1!==f.indexOf(\"%\"),b.oxr=\"=\"===e.charAt(1),b.oyr=\"=\"===f.charAt(1),b.ox=parseFloat(e.replace(v,\"\")),b.oy=parseFloat(f.replace(v,\"\")),b.v=a),b||a},ia=function(a,b){return\"function\"==typeof a&&(a=a(r,q)),\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2)):parseFloat(a)-parseFloat(b)||0},ja=function(a,b){\"function\"==typeof a&&(a=a(r,q));var c=\"string\"==typeof a&&\"=\"===a.charAt(1);return\"string\"==typeof a&&\"v\"===a.charAt(a.length-2)&&(a=(c?a.substr(0,2):0)+window[\"inner\"+(\"vh\"===a.substr(-2)?\"Height\":\"Width\")]*(parseFloat(c?a.substr(2):a)/100)),null==a?b:c?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2))+b:parseFloat(a)||0},ka=function(a,b,c,d){var e,f,g,h,i,j=1e-6;return\"function\"==typeof a&&(a=a(r,q)),null==a?h=b:\"number\"==typeof a?h=a:(e=360,f=a.split(\"_\"),i=\"=\"===a.charAt(1),g=(i?parseInt(a.charAt(0)+\"1\",10)*parseFloat(f[0].substr(2)):parseFloat(f[0]))*(-1===a.indexOf(\"rad\")?1:L)-(i?0:b),f.length&&(d&&(d[c]=b+g),-1!==a.indexOf(\"short\")&&(g%=e,g!==g%(e/2)&&(g=0>g?g+e:g-e)),-1!==a.indexOf(\"_cw\")&&0>g?g=(g+9999999999*e)%e-(g/e|0)*e:-1!==a.indexOf(\"ccw\")&&g>0&&(g=(g-9999999999*e)%e-(g/e|0)*e)),h=b+g),j>h&&h>-j&&(h=0),h},la={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ma=function(a,b,c){return a=0>a?a+1:a>1?a-1:a,255*(1>6*a?b+(c-b)*a*6:.5>a?c:2>3*a?b+(c-b)*(2/3-a)*6:b)+.5|0},na=g.parseColor=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;if(a)if(\"number\"==typeof a)c=[a>>16,a>>8&255,255&a];else{if(\",\"===a.charAt(a.length-1)&&(a=a.substr(0,a.length-1)),la[a])c=la[a];else if(\"#\"===a.charAt(0))4===a.length&&(d=a.charAt(1),e=a.charAt(2),f=a.charAt(3),a=\"#\"+d+d+e+e+f+f),a=parseInt(a.substr(1),16),c=[a>>16,a>>8&255,255&a];else if(\"hsl\"===a.substr(0,3))if(c=m=a.match(s),b){if(-1!==a.indexOf(\"=\"))return a.match(t)}else g=Number(c[0])%360/360,h=Number(c[1])/100,i=Number(c[2])/100,e=.5>=i?i*(h+1):i+h-i*h,d=2*i-e,c.length>3&&(c[3]=Number(c[3])),c[0]=ma(g+1/3,d,e),c[1]=ma(g,d,e),c[2]=ma(g-1/3,d,e);else c=a.match(s)||la.transparent;c[0]=Number(c[0]),c[1]=Number(c[1]),c[2]=Number(c[2]),c.length>3&&(c[3]=Number(c[3]))}else c=la.black;return b&&!m&&(d=c[0]/255,e=c[1]/255,f=c[2]/255,j=Math.max(d,e,f),k=Math.min(d,e,f),i=(j+k)/2,j===k?g=h=0:(l=j-k,h=i>.5?l/(2-j-k):l/(j+k),g=j===d?(e-f)/l+(f>e?6:0):j===e?(f-d)/l+2:(d-e)/l+4,g*=60),c[0]=g+.5|0,c[1]=100*h+.5|0,c[2]=100*i+.5|0),c},oa=function(a,b){var c,d,e,f=a.match(pa)||[],g=0,h=\"\";if(!f.length)return a;for(c=0;c<f.length;c++)d=f[c],e=a.substr(g,a.indexOf(d,g)-g),g+=e.length+d.length,d=na(d,b),3===d.length&&d.push(1),h+=e+(b?\"hsla(\"+d[0]+\",\"+d[1]+\"%,\"+d[2]+\"%,\"+d[3]:\"rgba(\"+d.join(\",\"))+\")\";return h+a.substr(g)},pa=\"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";for(j in la)pa+=\"|\"+j+\"\\\\b\";pa=new RegExp(pa+\")\",\"gi\"),g.colorStringFilter=function(a){var b,c=a[0]+\" \"+a[1];pa.test(c)&&(b=-1!==c.indexOf(\"hsl(\")||-1!==c.indexOf(\"hsla(\"),a[0]=oa(a[0],b),a[1]=oa(a[1],b)),pa.lastIndex=0},b.defaultStringFilter||(b.defaultStringFilter=g.colorStringFilter);var qa=function(a,b,c,d){if(null==a)return function(a){return a};var e,f=b?(a.match(pa)||[\"\"])[0]:\"\",g=a.split(f).join(\"\").match(u)||[],h=a.substr(0,a.indexOf(g[0])),i=\")\"===a.charAt(a.length-1)?\")\":\"\",j=-1!==a.indexOf(\" \")?\" \":\",\",k=g.length,l=k>0?g[0].replace(s,\"\"):\"\";return k?e=b?function(a){var b,m,n,o;if(\"number\"==typeof a)a+=l;else if(d&&I.test(a)){for(o=a.replace(I,\"|\").split(\"|\"),n=0;n<o.length;n++)o[n]=e(o[n]);return o.join(\",\")}if(b=(a.match(pa)||[f])[0],m=a.split(b).join(\"\").match(u)||[],n=m.length,k>n--)for(;++n<k;)m[n]=c?m[(n-1)/2|0]:g[n];return h+m.join(j)+j+b+i+(-1!==a.indexOf(\"inset\")?\" inset\":\"\")}:function(a){var b,f,m;if(\"number\"==typeof a)a+=l;else if(d&&I.test(a)){for(f=a.replace(I,\"|\").split(\"|\"),m=0;m<f.length;m++)f[m]=e(f[m]);return f.join(\",\")}if(b=a.match(u)||[],m=b.length,k>m--)for(;++m<k;)b[m]=c?b[(m-1)/2|0]:g[m];return h+b.join(j)+i}:function(a){return a}},ra=function(a){return a=a.split(\",\"),function(b,c,d,e,f,g,h){var i,j=(c+\"\").split(\" \");for(h={},i=0;4>i;i++)h[a[i]]=j[i]=j[i]||j[(i-1)/2>>0];return e.parse(b,h,f,g)}},sa=(S._setPluginRatio=function(a){this.plugin.setRatio(a);for(var b,c,d,e,f,g=this.data,h=g.proxy,i=g.firstMPT,j=1e-6;i;)b=h[i.v],i.r?b=i.r(b):j>b&&b>-j&&(b=0),i.t[i.p]=b,i=i._next;if(g.autoRotate&&(g.autoRotate.rotation=g.mod?g.mod.call(this._tween,h.rotation,this.t,this._tween):h.rotation),1===a||0===a)for(i=g.firstMPT,f=1===a?\"e\":\"b\";i;){if(c=i.t,c.type){if(1===c.type){for(e=c.xs0+c.s+c.xs1,d=1;d<c.l;d++)e+=c[\"xn\"+d]+c[\"xs\"+(d+1)];c[f]=e}}else c[f]=c.s+c.xs0;i=i._next}},function(a,b,c,d,e){this.t=a,this.p=b,this.v=c,this.r=e,d&&(d._prev=this,this._next=d)}),ta=(S._parseToProxy=function(a,b,c,d,e,f){var g,h,i,j,k,l=d,m={},n={},o=c._transform,p=M;for(c._transform=null,M=b,d=k=c.parse(a,b,d,e),M=p,f&&(c._transform=o,l&&(l._prev=null,l._prev&&(l._prev._next=null)));d&&d!==l;){if(d.type<=1&&(h=d.p,n[h]=d.s+d.c,m[h]=d.s,f||(j=new sa(d,\"s\",h,j,d.r),d.c=0),1===d.type))for(g=d.l;--g>0;)i=\"xn\"+g,h=d.p+\"_\"+i,n[h]=d.data[i],m[h]=d[i],f||(j=new sa(d,i,h,j,d.rxp[i]));d=d._next}return{proxy:m,end:n,firstMPT:j,pt:k}},S.CSSPropTween=function(a,b,d,e,g,h,i,j,k,l,m){this.t=a,this.p=b,this.s=d,this.c=e,this.n=i||b,a instanceof ta||f.push(this.n),this.r=j?\"function\"==typeof j?j:Math.round:j,this.type=h||0,k&&(this.pr=k,c=!0),this.b=void 0===l?d:l,this.e=void 0===m?d+e:m,g&&(this._next=g,g._prev=this)}),ua=function(a,b,c,d,e,f){var g=new ta(a,b,c,d-c,e,-1,f);return g.b=c,g.e=g.xs0=d,g},va=g.parseComplex=function(a,b,c,d,e,f,h,i,j,l){c=c||f||\"\",\"function\"==typeof d&&(d=d(r,q)),h=new ta(a,b,0,0,h,l?2:1,null,!1,i,c,d),d+=\"\",e&&pa.test(d+c)&&(d=[c,d],g.colorStringFilter(d),c=d[0],d=d[1]);var m,n,o,p,u,v,w,x,y,z,A,B,C,D=c.split(\", \").join(\",\").split(\" \"),E=d.split(\", \").join(\",\").split(\" \"),F=D.length,G=k!==!1;for((-1!==d.indexOf(\",\")||-1!==c.indexOf(\",\"))&&(-1!==(d+c).indexOf(\"rgb\")||-1!==(d+c).indexOf(\"hsl\")?(D=D.join(\" \").replace(I,\", \").split(\" \"),E=E.join(\" \").replace(I,\", \").split(\" \")):(D=D.join(\" \").split(\",\").join(\", \").split(\" \"),E=E.join(\" \").split(\",\").join(\", \").split(\" \")),F=D.length),F!==E.length&&(D=(f||\"\").split(\" \"),F=D.length),h.plugin=j,h.setRatio=l,pa.lastIndex=0,m=0;F>m;m++)if(p=D[m],u=E[m]+\"\",x=parseFloat(p),x||0===x)h.appendXtra(\"\",x,ia(u,x),u.replace(t,\"\"),G&&-1!==u.indexOf(\"px\")?Math.round:!1,!0);else if(e&&pa.test(p))B=u.indexOf(\")\")+1,B=\")\"+(B?u.substr(B):\"\"),C=-1!==u.indexOf(\"hsl\")&&U,z=u,p=na(p,C),u=na(u,C),y=p.length+u.length>6,y&&!U&&0===u[3]?(h[\"xs\"+h.l]+=h.l?\" transparent\":\"transparent\",h.e=h.e.split(E[m]).join(\"transparent\")):(U||(y=!1),C?h.appendXtra(z.substr(0,z.indexOf(\"hsl\"))+(y?\"hsla(\":\"hsl(\"),p[0],ia(u[0],p[0]),\",\",!1,!0).appendXtra(\"\",p[1],ia(u[1],p[1]),\"%,\",!1).appendXtra(\"\",p[2],ia(u[2],p[2]),y?\"%,\":\"%\"+B,!1):h.appendXtra(z.substr(0,z.indexOf(\"rgb\"))+(y?\"rgba(\":\"rgb(\"),p[0],u[0]-p[0],\",\",Math.round,!0).appendXtra(\"\",p[1],u[1]-p[1],\",\",Math.round).appendXtra(\"\",p[2],u[2]-p[2],y?\",\":B,Math.round),y&&(p=p.length<4?1:p[3],h.appendXtra(\"\",p,(u.length<4?1:u[3])-p,B,!1))),pa.lastIndex=0;else if(v=p.match(s)){if(w=u.match(t),!w||w.length!==v.length)return h;for(o=0,n=0;n<v.length;n++)A=v[n],z=p.indexOf(A,o),h.appendXtra(p.substr(o,z-o),Number(A),ia(w[n],A),\"\",G&&\"px\"===p.substr(z+A.length,2)?Math.round:!1,0===n),o=z+A.length;h[\"xs\"+h.l]+=p.substr(o)}else h[\"xs\"+h.l]+=h.l||h[\"xs\"+h.l]?\" \"+u:u;if(-1!==d.indexOf(\"=\")&&h.data){for(B=h.xs0+h.data.s,m=1;m<h.l;m++)B+=h[\"xs\"+m]+h.data[\"xn\"+m];h.e=B+h[\"xs\"+m]}return h.l||(h.type=-1,h.xs0=h.e),h.xfirst||h},wa=9;for(j=ta.prototype,j.l=j.pr=0;--wa>0;)j[\"xn\"+wa]=0,j[\"xs\"+wa]=\"\";j.xs0=\"\",j._next=j._prev=j.xfirst=j.data=j.plugin=j.setRatio=j.rxp=null,j.appendXtra=function(a,b,c,d,e,f){var g=this,h=g.l;return g[\"xs\"+h]+=f&&(h||g[\"xs\"+h])?\" \"+a:a||\"\",c||0===h||g.plugin?(g.l++,g.type=g.setRatio?2:1,g[\"xs\"+g.l]=d||\"\",h>0?(g.data[\"xn\"+h]=b+c,g.rxp[\"xn\"+h]=e,g[\"xn\"+h]=b,g.plugin||(g.xfirst=new ta(g,\"xn\"+h,b,c,g.xfirst||g,0,g.n,e,g.pr),g.xfirst.xs0=0),g):(g.data={s:b+c},g.rxp={},g.s=b,g.c=c,g.r=e,g)):(g[\"xs\"+h]+=b+(d||\"\"),g)};var xa=function(a,b){b=b||{},this.p=b.prefix?Z(a)||a:a,i[a]=i[this.p]=this,this.format=b.formatter||qa(b.defaultValue,b.color,b.collapsible,b.multi),b.parser&&(this.parse=b.parser),this.clrs=b.color,this.multi=b.multi,this.keyword=b.keyword,this.dflt=b.defaultValue,this.pr=b.priority||0},ya=S._registerComplexSpecialProp=function(a,b,c){\"object\"!=typeof b&&(b={parser:c});var d,e,f=a.split(\",\"),g=b.defaultValue;for(c=c||[g],d=0;d<f.length;d++)b.prefix=0===d&&b.prefix,b.defaultValue=c[d]||g,e=new xa(f[d],b)},za=S._registerPluginProp=function(a){if(!i[a]){var b=a.charAt(0).toUpperCase()+a.substr(1)+\"Plugin\";ya(a,{parser:function(a,c,d,e,f,g,j){var k=h.com.greensock.plugins[b];return k?(k._cssRegister(),i[d].parse(a,c,d,e,f,g,j)):(W(\"Error: \"+b+\" js file not loaded.\"),f)}})}};j=xa.prototype,j.parseComplex=function(a,b,c,d,e,f){var g,h,i,j,k,l,m=this.keyword;if(this.multi&&(I.test(c)||I.test(b)?(h=b.replace(I,\"|\").split(\"|\"),i=c.replace(I,\"|\").split(\"|\")):m&&(h=[b],i=[c])),i){for(j=i.length>h.length?i.length:h.length,g=0;j>g;g++)b=h[g]=h[g]||this.dflt,c=i[g]=i[g]||this.dflt,m&&(k=b.indexOf(m),l=c.indexOf(m),k!==l&&(-1===l?h[g]=h[g].split(m).join(\"\"):-1===k&&(h[g]+=\" \"+m)));b=h.join(\", \"),c=i.join(\", \")}return va(a,this.p,b,c,this.clrs,this.dflt,d,this.pr,e,f)},j.parse=function(a,b,c,d,f,g,h){return this.parseComplex(a.style,this.format(_(a,this.p,e,!1,this.dflt)),this.format(b),f,g)},g.registerSpecialProp=function(a,b,c){ya(a,{parser:function(a,d,e,f,g,h,i){var j=new ta(a,e,0,0,g,2,e,!1,c);return j.plugin=h,j.setRatio=b(a,d,f._tween,e),j},priority:c})},g.useSVGTransformAttr=!0;var Aa,Ba=\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"),Ca=Z(\"transform\"),Da=X+\"transform\",Ea=Z(\"transformOrigin\"),Fa=null!==Z(\"perspective\"),Ga=S.Transform=function(){this.perspective=parseFloat(g.defaultTransformPerspective)||0,this.force3D=g.defaultForce3D!==!1&&Fa?g.defaultForce3D||\"auto\":!1},Ha=_gsScope.SVGElement,Ia=function(a,b,c){var d,e=O.createElementNS(\"http://www.w3.org/2000/svg\",a),f=/([a-z])([A-Z])/g;for(d in c)e.setAttributeNS(null,d.replace(f,\"$1-$2\").toLowerCase(),c[d]);return b.appendChild(e),e},Ja=O.documentElement||{},Ka=function(){var a,b,c,d=p||/Android/i.test(T)&&!_gsScope.chrome;return O.createElementNS&&!d&&(a=Ia(\"svg\",Ja),b=Ia(\"rect\",a,{width:100,height:50,x:100}),c=b.getBoundingClientRect().width,b.style[Ea]=\"50% 50%\",b.style[Ca]=\"scaleX(0.5)\",d=c===b.getBoundingClientRect().width&&!(n&&Fa),Ja.removeChild(a)),d}(),La=function(a,b,c,d,e,f){var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=a._gsTransform,w=Qa(a,!0);v&&(t=v.xOrigin,u=v.yOrigin),(!d||(h=d.split(\" \")).length<2)&&(n=a.getBBox(),0===n.x&&0===n.y&&n.width+n.height===0&&(n={x:parseFloat(a.hasAttribute(\"x\")?a.getAttribute(\"x\"):a.hasAttribute(\"cx\")?a.getAttribute(\"cx\"):0)||0,y:parseFloat(a.hasAttribute(\"y\")?a.getAttribute(\"y\"):a.hasAttribute(\"cy\")?a.getAttribute(\"cy\"):0)||0,width:0,height:0}),b=ha(b).split(\" \"),h=[(-1!==b[0].indexOf(\"%\")?parseFloat(b[0])/100*n.width:parseFloat(b[0]))+n.x,(-1!==b[1].indexOf(\"%\")?parseFloat(b[1])/100*n.height:parseFloat(b[1]))+n.y]),c.xOrigin=k=parseFloat(h[0]),c.yOrigin=l=parseFloat(h[1]),d&&w!==Pa&&(m=w[0],n=w[1],o=w[2],p=w[3],q=w[4],r=w[5],s=m*p-n*o,s&&(i=k*(p/s)+l*(-o/s)+(o*r-p*q)/s,j=k*(-n/s)+l*(m/s)-(m*r-n*q)/s,k=c.xOrigin=h[0]=i,l=c.yOrigin=h[1]=j)),v&&(f&&(c.xOffset=v.xOffset,c.yOffset=v.yOffset,v=c),e||e!==!1&&g.defaultSmoothOrigin!==!1?(i=k-t,j=l-u,v.xOffset+=i*w[0]+j*w[2]-i,v.yOffset+=i*w[1]+j*w[3]-j):v.xOffset=v.yOffset=0),f||a.setAttribute(\"data-svg-origin\",h.join(\" \"))},Ma=function(a){var b,c=P(\"svg\",this.ownerSVGElement&&this.ownerSVGElement.getAttribute(\"xmlns\")||\"http://www.w3.org/2000/svg\"),d=this.parentNode,e=this.nextSibling,f=this.style.cssText;if(Ja.appendChild(c),c.appendChild(this),this.style.display=\"block\",a)try{b=this.getBBox(),this._originalGetBBox=this.getBBox,this.getBBox=Ma}catch(g){}else this._originalGetBBox&&(b=this._originalGetBBox());return e?d.insertBefore(this,e):d.appendChild(this),Ja.removeChild(c),this.style.cssText=f,b},Na=function(a){try{return a.getBBox()}catch(b){return Ma.call(a,!0)}},Oa=function(a){return!(!Ha||!a.getCTM||a.parentNode&&!a.ownerSVGElement||!Na(a))},Pa=[1,0,0,1,0,0],Qa=function(a,b){var c,d,e,f,g,h,i=a._gsTransform||new Ga,j=1e5,k=a.style;if(Ca?d=_(a,Da,null,!0):a.currentStyle&&(d=a.currentStyle.filter.match(G),d=d&&4===d.length?[d[0].substr(4),Number(d[2].substr(4)),Number(d[1].substr(4)),d[3].substr(4),i.x||0,i.y||0].join(\",\"):\"\"),c=!d||\"none\"===d||\"matrix(1, 0, 0, 1, 0, 0)\"===d,!Ca||!(h=!$(a)||\"none\"===$(a).display)&&a.parentNode||(h&&(f=k.display,k.display=\"block\"),a.parentNode||(g=1,Ja.appendChild(a)),d=_(a,Da,null,!0),c=!d||\"none\"===d||\"matrix(1, 0, 0, 1, 0, 0)\"===d,f?k.display=f:h&&Va(k,\"display\"),g&&Ja.removeChild(a)),(i.svg||a.getCTM&&Oa(a))&&(c&&-1!==(k[Ca]+\"\").indexOf(\"matrix\")&&(d=k[Ca],c=0),e=a.getAttribute(\"transform\"),c&&e&&(e=a.transform.baseVal.consolidate().matrix,d=\"matrix(\"+e.a+\",\"+e.b+\",\"+e.c+\",\"+e.d+\",\"+e.e+\",\"+e.f+\")\",c=0)),c)return Pa;for(e=(d||\"\").match(s)||[],wa=e.length;--wa>-1;)f=Number(e[wa]),e[wa]=(g=f-(f|=0))?(g*j+(0>g?-.5:.5)|0)/j+f:f;return b&&e.length>6?[e[0],e[1],e[4],e[5],e[12],e[13]]:e},Ra=S.getTransform=function(a,c,d,e){if(a._gsTransform&&d&&!e)return a._gsTransform;var f,h,i,j,k,l,m=d?a._gsTransform||new Ga:new Ga,n=m.scaleX<0,o=2e-5,p=1e5,q=Fa?parseFloat(_(a,Ea,c,!1,\"0 0 0\").split(\" \")[2])||m.zOrigin||0:0,r=parseFloat(g.defaultTransformPerspective)||0;if(m.svg=!(!a.getCTM||!Oa(a)),m.svg&&(La(a,_(a,Ea,c,!1,\"50% 50%\")+\"\",m,a.getAttribute(\"data-svg-origin\")),Aa=g.useSVGTransformAttr||Ka),f=Qa(a),f!==Pa){if(16===f.length){var s,t,u,v,w,x=f[0],y=f[1],z=f[2],A=f[3],B=f[4],C=f[5],D=f[6],E=f[7],F=f[8],G=f[9],H=f[10],I=f[12],J=f[13],K=f[14],M=f[11],N=Math.atan2(D,H);m.zOrigin&&(K=-m.zOrigin,I=F*K-f[12],J=G*K-f[13],K=H*K+m.zOrigin-f[14]),m.rotationX=N*L,N&&(v=Math.cos(-N),w=Math.sin(-N),s=B*v+F*w,t=C*v+G*w,u=D*v+H*w,F=B*-w+F*v,G=C*-w+G*v,H=D*-w+H*v,M=E*-w+M*v,B=s,C=t,D=u),N=Math.atan2(-z,H),m.rotationY=N*L,N&&(v=Math.cos(-N),w=Math.sin(-N),s=x*v-F*w,t=y*v-G*w,u=z*v-H*w,G=y*w+G*v,H=z*w+H*v,M=A*w+M*v,x=s,y=t,z=u),N=Math.atan2(y,x),m.rotation=N*L,N&&(v=Math.cos(N),w=Math.sin(N),s=x*v+y*w,t=B*v+C*w,u=F*v+G*w,y=y*v-x*w,C=C*v-B*w,G=G*v-F*w,x=s,B=t,F=u),m.rotationX&&Math.abs(m.rotationX)+Math.abs(m.rotation)>359.9&&(m.rotationX=m.rotation=0,m.rotationY=180-m.rotationY),N=Math.atan2(B,C),m.scaleX=(Math.sqrt(x*x+y*y+z*z)*p+.5|0)/p,m.scaleY=(Math.sqrt(C*C+D*D)*p+.5|0)/p,m.scaleZ=(Math.sqrt(F*F+G*G+H*H)*p+.5|0)/p,x/=m.scaleX,B/=m.scaleY,y/=m.scaleX,C/=m.scaleY,Math.abs(N)>o?(m.skewX=N*L,B=0,\"simple\"!==m.skewType&&(m.scaleY*=1/Math.cos(N))):m.skewX=0,m.perspective=M?1/(0>M?-M:M):0,m.x=I,m.y=J,m.z=K,m.svg&&(m.x-=m.xOrigin-(m.xOrigin*x-m.yOrigin*B),m.y-=m.yOrigin-(m.yOrigin*y-m.xOrigin*C))}else if(!Fa||e||!f.length||m.x!==f[4]||m.y!==f[5]||!m.rotationX&&!m.rotationY){var O=f.length>=6,P=O?f[0]:1,Q=f[1]||0,R=f[2]||0,S=O?f[3]:1;m.x=f[4]||0,m.y=f[5]||0,i=Math.sqrt(P*P+Q*Q),j=Math.sqrt(S*S+R*R),k=P||Q?Math.atan2(Q,P)*L:m.rotation||0,l=R||S?Math.atan2(R,S)*L+k:m.skewX||0,m.scaleX=i,m.scaleY=j,m.rotation=k,m.skewX=l,Fa&&(m.rotationX=m.rotationY=m.z=0,m.perspective=r,m.scaleZ=1),m.svg&&(m.x-=m.xOrigin-(m.xOrigin*P+m.yOrigin*R),m.y-=m.yOrigin-(m.xOrigin*Q+m.yOrigin*S))}Math.abs(m.skewX)>90&&Math.abs(m.skewX)<270&&(n?(m.scaleX*=-1,m.skewX+=m.rotation<=0?180:-180,m.rotation+=m.rotation<=0?180:-180):(m.scaleY*=-1,m.skewX+=m.skewX<=0?180:-180)),m.zOrigin=q;for(h in m)m[h]<o&&m[h]>-o&&(m[h]=0)}return d&&(a._gsTransform=m,m.svg&&(Aa&&a.style[Ca]?b.delayedCall(.001,function(){Va(a.style,Ca)}):!Aa&&a.getAttribute(\"transform\")&&b.delayedCall(.001,function(){a.removeAttribute(\"transform\")}))),m},Sa=function(a){var b,c,d=this.data,e=-d.rotation*K,f=e+d.skewX*K,g=1e5,h=(Math.cos(e)*d.scaleX*g|0)/g,i=(Math.sin(e)*d.scaleX*g|0)/g,j=(Math.sin(f)*-d.scaleY*g|0)/g,k=(Math.cos(f)*d.scaleY*g|0)/g,l=this.t.style,m=this.t.currentStyle;if(m){c=i,i=-j,j=-c,b=m.filter,l.filter=\"\";var n,o,q=this.t.offsetWidth,r=this.t.offsetHeight,s=\"absolute\"!==m.position,t=\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+h+\", M12=\"+i+\", M21=\"+j+\", M22=\"+k,u=d.x+q*d.xPercent/100,v=d.y+r*d.yPercent/100;if(null!=d.ox&&(n=(d.oxp?q*d.ox*.01:d.ox)-q/2,o=(d.oyp?r*d.oy*.01:d.oy)-r/2,u+=n-(n*h+o*i),v+=o-(n*j+o*k)),s?(n=q/2,o=r/2,t+=\", Dx=\"+(n-(n*h+o*i)+u)+\", Dy=\"+(o-(n*j+o*k)+v)+\")\"):t+=\", sizingMethod='auto expand')\",-1!==b.indexOf(\"DXImageTransform.Microsoft.Matrix(\")?l.filter=b.replace(H,t):l.filter=t+\" \"+b,(0===a||1===a)&&1===h&&0===i&&0===j&&1===k&&(s&&-1===t.indexOf(\"Dx=0, Dy=0\")||x.test(b)&&100!==parseFloat(RegExp.$1)||-1===b.indexOf(b.indexOf(\"Alpha\"))&&l.removeAttribute(\"filter\")),!s){var y,z,A,B=8>p?1:-1;for(n=d.ieOffsetX||0,o=d.ieOffsetY||0,d.ieOffsetX=Math.round((q-((0>h?-h:h)*q+(0>i?-i:i)*r))/2+u),d.ieOffsetY=Math.round((r-((0>k?-k:k)*r+(0>j?-j:j)*q))/2+v),wa=0;4>wa;wa++)z=fa[wa],y=m[z],c=-1!==y.indexOf(\"px\")?parseFloat(y):aa(this.t,z,parseFloat(y),y.replace(w,\"\"))||0,A=c!==d[z]?2>wa?-d.ieOffsetX:-d.ieOffsetY:2>wa?n-d.ieOffsetX:o-d.ieOffsetY,l[z]=(d[z]=Math.round(c-A*(0===wa||2===wa?1:B)))+\"px\"}}},Ta=S.set3DTransformRatio=S.setTransformRatio=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z=this.data,A=this.t.style,B=z.rotation,C=z.rotationX,D=z.rotationY,E=z.scaleX,F=z.scaleY,G=z.scaleZ,H=z.x,I=z.y,J=z.z,L=z.svg,M=z.perspective,N=z.force3D,O=z.skewY,P=z.skewX;if(O&&(P+=O,B+=O),((1===a||0===a)&&\"auto\"===N&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!N)&&!J&&!M&&!D&&!C&&1===G||Aa&&L||!Fa)return void(B||P||L?(B*=K,x=P*K,y=1e5,c=Math.cos(B)*E,f=Math.sin(B)*E,d=Math.sin(B-x)*-F,g=Math.cos(B-x)*F,x&&\"simple\"===z.skewType&&(b=Math.tan(x-O*K),b=Math.sqrt(1+b*b),d*=b,g*=b,O&&(b=Math.tan(O*K),b=Math.sqrt(1+b*b),c*=b,f*=b)),L&&(H+=z.xOrigin-(z.xOrigin*c+z.yOrigin*d)+z.xOffset,I+=z.yOrigin-(z.xOrigin*f+z.yOrigin*g)+z.yOffset,Aa&&(z.xPercent||z.yPercent)&&(q=this.t.getBBox(),H+=.01*z.xPercent*q.width,I+=.01*z.yPercent*q.height),q=1e-6,q>H&&H>-q&&(H=0),q>I&&I>-q&&(I=0)),u=(c*y|0)/y+\",\"+(f*y|0)/y+\",\"+(d*y|0)/y+\",\"+(g*y|0)/y+\",\"+H+\",\"+I+\")\",L&&Aa?this.t.setAttribute(\"transform\",\"matrix(\"+u):A[Ca]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+u):A[Ca]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+E+\",0,0,\"+F+\",\"+H+\",\"+I+\")\");if(n&&(q=1e-4,q>E&&E>-q&&(E=G=2e-5),q>F&&F>-q&&(F=G=2e-5),!M||z.z||z.rotationX||z.rotationY||(M=0)),B||P)B*=K,r=c=Math.cos(B),s=f=Math.sin(B),P&&(B-=P*K,r=Math.cos(B),s=Math.sin(B),\"simple\"===z.skewType&&(b=Math.tan((P-O)*K),b=Math.sqrt(1+b*b),r*=b,s*=b,z.skewY&&(b=Math.tan(O*K),b=Math.sqrt(1+b*b),c*=b,f*=b))),d=-s,g=r;else{if(!(D||C||1!==G||M||L))return void(A[Ca]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) translate3d(\":\"translate3d(\")+H+\"px,\"+I+\"px,\"+J+\"px)\"+(1!==E||1!==F?\" scale(\"+E+\",\"+F+\")\":\"\"));c=g=1,d=f=0}k=1,e=h=i=j=l=m=0,o=M?-1/M:0,p=z.zOrigin,q=1e-6,v=\",\",w=\"0\",B=D*K,B&&(r=Math.cos(B),s=Math.sin(B),i=-s,l=o*-s,e=c*s,h=f*s,k=r,o*=r,c*=r,f*=r),B=C*K,B&&(r=Math.cos(B),s=Math.sin(B),b=d*r+e*s,t=g*r+h*s,j=k*s,m=o*s,e=d*-s+e*r,h=g*-s+h*r,k*=r,o*=r,d=b,g=t),1!==G&&(e*=G,h*=G,k*=G,o*=G),1!==F&&(d*=F,g*=F,j*=F,m*=F),1!==E&&(c*=E,f*=E,i*=E,l*=E),(p||L)&&(p&&(H+=e*-p,I+=h*-p,J+=k*-p+p),L&&(H+=z.xOrigin-(z.xOrigin*c+z.yOrigin*d)+z.xOffset,I+=z.yOrigin-(z.xOrigin*f+z.yOrigin*g)+z.yOffset),q>H&&H>-q&&(H=w),q>I&&I>-q&&(I=w),q>J&&J>-q&&(J=0)),u=z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix3d(\":\"matrix3d(\",u+=(q>c&&c>-q?w:c)+v+(q>f&&f>-q?w:f)+v+(q>i&&i>-q?w:i),u+=v+(q>l&&l>-q?w:l)+v+(q>d&&d>-q?w:d)+v+(q>g&&g>-q?w:g),C||D||1!==G?(u+=v+(q>j&&j>-q?w:j)+v+(q>m&&m>-q?w:m)+v+(q>e&&e>-q?w:e),u+=v+(q>h&&h>-q?w:h)+v+(q>k&&k>-q?w:k)+v+(q>o&&o>-q?w:o)+v):u+=\",0,0,0,0,1,0,\",u+=H+v+I+v+J+v+(M?1+-J/M:1)+\")\",A[Ca]=u;\r\n};j=Ga.prototype,j.x=j.y=j.z=j.skewX=j.skewY=j.rotation=j.rotationX=j.rotationY=j.zOrigin=j.xPercent=j.yPercent=j.xOffset=j.yOffset=0,j.scaleX=j.scaleY=j.scaleZ=1,ya(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\",{parser:function(a,b,c,d,f,h,i){if(d._lastParsedTransform===i)return f;d._lastParsedTransform=i;var j,k=i.scale&&\"function\"==typeof i.scale?i.scale:0;\"function\"==typeof i[c]&&(j=i[c],i[c]=b),k&&(i.scale=k(r,a));var l,m,n,o,p,s,t,u,v,w=a._gsTransform,x=a.style,y=1e-6,z=Ba.length,A=i,B={},C=\"transformOrigin\",D=Ra(a,e,!0,A.parseTransform),E=A.transform&&(\"function\"==typeof A.transform?A.transform(r,q):A.transform);if(D.skewType=A.skewType||D.skewType||g.defaultSkewType,d._transform=D,\"rotationZ\"in A&&(A.rotation=A.rotationZ),E&&\"string\"==typeof E&&Ca)m=Q.style,m[Ca]=E,m.display=\"block\",m.position=\"absolute\",-1!==E.indexOf(\"%\")&&(m.width=_(a,\"width\"),m.height=_(a,\"height\")),O.body.appendChild(Q),l=Ra(Q,null,!1),\"simple\"===D.skewType&&(l.scaleY*=Math.cos(l.skewX*K)),D.svg&&(s=D.xOrigin,t=D.yOrigin,l.x-=D.xOffset,l.y-=D.yOffset,(A.transformOrigin||A.svgOrigin)&&(E={},La(a,ha(A.transformOrigin),E,A.svgOrigin,A.smoothOrigin,!0),s=E.xOrigin,t=E.yOrigin,l.x-=E.xOffset-D.xOffset,l.y-=E.yOffset-D.yOffset),(s||t)&&(u=Qa(Q,!0),l.x-=s-(s*u[0]+t*u[2]),l.y-=t-(s*u[1]+t*u[3]))),O.body.removeChild(Q),l.perspective||(l.perspective=D.perspective),null!=A.xPercent&&(l.xPercent=ja(A.xPercent,D.xPercent)),null!=A.yPercent&&(l.yPercent=ja(A.yPercent,D.yPercent));else if(\"object\"==typeof A){if(l={scaleX:ja(null!=A.scaleX?A.scaleX:A.scale,D.scaleX),scaleY:ja(null!=A.scaleY?A.scaleY:A.scale,D.scaleY),scaleZ:ja(A.scaleZ,D.scaleZ),x:ja(A.x,D.x),y:ja(A.y,D.y),z:ja(A.z,D.z),xPercent:ja(A.xPercent,D.xPercent),yPercent:ja(A.yPercent,D.yPercent),perspective:ja(A.transformPerspective,D.perspective)},p=A.directionalRotation,null!=p)if(\"object\"==typeof p)for(m in p)A[m]=p[m];else A.rotation=p;\"string\"==typeof A.x&&-1!==A.x.indexOf(\"%\")&&(l.x=0,l.xPercent=ja(A.x,D.xPercent)),\"string\"==typeof A.y&&-1!==A.y.indexOf(\"%\")&&(l.y=0,l.yPercent=ja(A.y,D.yPercent)),l.rotation=ka(\"rotation\"in A?A.rotation:\"shortRotation\"in A?A.shortRotation+\"_short\":D.rotation,D.rotation,\"rotation\",B),Fa&&(l.rotationX=ka(\"rotationX\"in A?A.rotationX:\"shortRotationX\"in A?A.shortRotationX+\"_short\":D.rotationX||0,D.rotationX,\"rotationX\",B),l.rotationY=ka(\"rotationY\"in A?A.rotationY:\"shortRotationY\"in A?A.shortRotationY+\"_short\":D.rotationY||0,D.rotationY,\"rotationY\",B)),l.skewX=ka(A.skewX,D.skewX),l.skewY=ka(A.skewY,D.skewY)}for(Fa&&null!=A.force3D&&(D.force3D=A.force3D,o=!0),n=D.force3D||D.z||D.rotationX||D.rotationY||l.z||l.rotationX||l.rotationY||l.perspective,n||null==A.scale||(l.scaleZ=1);--z>-1;)v=Ba[z],E=l[v]-D[v],(E>y||-y>E||null!=A[v]||null!=M[v])&&(o=!0,f=new ta(D,v,D[v],E,f),v in B&&(f.e=B[v]),f.xs0=0,f.plugin=h,d._overwriteProps.push(f.n));return E=A.transformOrigin,D.svg&&(E||A.svgOrigin)&&(s=D.xOffset,t=D.yOffset,La(a,ha(E),l,A.svgOrigin,A.smoothOrigin),f=ua(D,\"xOrigin\",(w?D:l).xOrigin,l.xOrigin,f,C),f=ua(D,\"yOrigin\",(w?D:l).yOrigin,l.yOrigin,f,C),(s!==D.xOffset||t!==D.yOffset)&&(f=ua(D,\"xOffset\",w?s:D.xOffset,D.xOffset,f,C),f=ua(D,\"yOffset\",w?t:D.yOffset,D.yOffset,f,C)),E=\"0px 0px\"),(E||Fa&&n&&D.zOrigin)&&(Ca?(o=!0,v=Ea,E=(E||_(a,v,e,!1,\"50% 50%\"))+\"\",f=new ta(x,v,0,0,f,-1,C),f.b=x[v],f.plugin=h,Fa?(m=D.zOrigin,E=E.split(\" \"),D.zOrigin=(E.length>2&&(0===m||\"0px\"!==E[2])?parseFloat(E[2]):m)||0,f.xs0=f.e=E[0]+\" \"+(E[1]||\"50%\")+\" 0px\",f=new ta(D,\"zOrigin\",0,0,f,-1,f.n),f.b=m,f.xs0=f.e=D.zOrigin):f.xs0=f.e=E):ha(E+\"\",D)),o&&(d._transformType=D.svg&&Aa||!n&&3!==this._transformType?2:3),j&&(i[c]=j),k&&(i.scale=k),f},prefix:!0}),ya(\"boxShadow\",{defaultValue:\"0px 0px 0px 0px #999\",prefix:!0,color:!0,multi:!0,keyword:\"inset\"}),ya(\"borderRadius\",{defaultValue:\"0px\",parser:function(a,b,c,f,g,h){b=this.format(b);var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],z=a.style;for(q=parseFloat(a.offsetWidth),r=parseFloat(a.offsetHeight),i=b.split(\" \"),j=0;j<y.length;j++)this.p.indexOf(\"border\")&&(y[j]=Z(y[j])),m=l=_(a,y[j],e,!1,\"0px\"),-1!==m.indexOf(\" \")&&(l=m.split(\" \"),m=l[0],l=l[1]),n=k=i[j],o=parseFloat(m),t=m.substr((o+\"\").length),u=\"=\"===n.charAt(1),u?(p=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),p*=parseFloat(n),s=n.substr((p+\"\").length-(0>p?1:0))||\"\"):(p=parseFloat(n),s=n.substr((p+\"\").length)),\"\"===s&&(s=d[c]||t),s!==t&&(v=aa(a,\"borderLeft\",o,t),w=aa(a,\"borderTop\",o,t),\"%\"===s?(m=v/q*100+\"%\",l=w/r*100+\"%\"):\"em\"===s?(x=aa(a,\"borderLeft\",1,\"em\"),m=v/x+\"em\",l=w/x+\"em\"):(m=v+\"px\",l=w+\"px\"),u&&(n=parseFloat(m)+p+s,k=parseFloat(l)+p+s)),g=va(z,y[j],m+\" \"+l,n+\" \"+k,!1,\"0px\",g);return g},prefix:!0,formatter:qa(\"0px 0px 0px 0px\",!1,!0)}),ya(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\",{defaultValue:\"0px\",parser:function(a,b,c,d,f,g){return va(a.style,c,this.format(_(a,c,e,!1,\"0px 0px\")),this.format(b),!1,\"0px\",f)},prefix:!0,formatter:qa(\"0px 0px\",!1,!0)}),ya(\"backgroundPosition\",{defaultValue:\"0 0\",parser:function(a,b,c,d,f,g){var h,i,j,k,l,m,n=\"background-position\",o=e||$(a,null),q=this.format((o?p?o.getPropertyValue(n+\"-x\")+\" \"+o.getPropertyValue(n+\"-y\"):o.getPropertyValue(n):a.currentStyle.backgroundPositionX+\" \"+a.currentStyle.backgroundPositionY)||\"0 0\"),r=this.format(b);if(-1!==q.indexOf(\"%\")!=(-1!==r.indexOf(\"%\"))&&r.split(\",\").length<2&&(m=_(a,\"backgroundImage\").replace(D,\"\"),m&&\"none\"!==m)){for(h=q.split(\" \"),i=r.split(\" \"),R.setAttribute(\"src\",m),j=2;--j>-1;)q=h[j],k=-1!==q.indexOf(\"%\"),k!==(-1!==i[j].indexOf(\"%\"))&&(l=0===j?a.offsetWidth-R.width:a.offsetHeight-R.height,h[j]=k?parseFloat(q)/100*l+\"px\":parseFloat(q)/l*100+\"%\");q=h.join(\" \")}return this.parseComplex(a.style,q,r,f,g)},formatter:ha}),ya(\"backgroundSize\",{defaultValue:\"0 0\",formatter:function(a){return a+=\"\",\"co\"===a.substr(0,2)?a:ha(-1===a.indexOf(\" \")?a+\" \"+a:a)}}),ya(\"perspective\",{defaultValue:\"0px\",prefix:!0}),ya(\"perspectiveOrigin\",{defaultValue:\"50% 50%\",prefix:!0}),ya(\"transformStyle\",{prefix:!0}),ya(\"backfaceVisibility\",{prefix:!0}),ya(\"userSelect\",{prefix:!0}),ya(\"margin\",{parser:ra(\"marginTop,marginRight,marginBottom,marginLeft\")}),ya(\"padding\",{parser:ra(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")}),ya(\"clip\",{defaultValue:\"rect(0px,0px,0px,0px)\",parser:function(a,b,c,d,f,g){var h,i,j;return 9>p?(i=a.currentStyle,j=8>p?\" \":\",\",h=\"rect(\"+i.clipTop+j+i.clipRight+j+i.clipBottom+j+i.clipLeft+\")\",b=this.format(b).split(\",\").join(j)):(h=this.format(_(a,this.p,e,!1,this.dflt)),b=this.format(b)),this.parseComplex(a.style,h,b,f,g)}}),ya(\"textShadow\",{defaultValue:\"0px 0px 0px #999\",color:!0,multi:!0}),ya(\"autoRound,strictUnits\",{parser:function(a,b,c,d,e){return e}}),ya(\"border\",{defaultValue:\"0px solid #000\",parser:function(a,b,c,d,f,g){var h=_(a,\"borderTopWidth\",e,!1,\"0px\"),i=this.format(b).split(\" \"),j=i[0].replace(w,\"\");return\"px\"!==j&&(h=parseFloat(h)/aa(a,\"borderTopWidth\",1,j)+j),this.parseComplex(a.style,this.format(h+\" \"+_(a,\"borderTopStyle\",e,!1,\"solid\")+\" \"+_(a,\"borderTopColor\",e,!1,\"#000\")),i.join(\" \"),f,g)},color:!0,formatter:function(a){var b=a.split(\" \");return b[0]+\" \"+(b[1]||\"solid\")+\" \"+(a.match(pa)||[\"#000\"])[0]}}),ya(\"borderWidth\",{parser:ra(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}),ya(\"float,cssFloat,styleFloat\",{parser:function(a,b,c,d,e,f){var g=a.style,h=\"cssFloat\"in g?\"cssFloat\":\"styleFloat\";return new ta(g,h,0,0,e,-1,c,!1,0,g[h],b)}});var Ua=function(a){var b,c=this.t,d=c.filter||_(this.data,\"filter\")||\"\",e=this.s+this.c*a|0;100===e&&(-1===d.indexOf(\"atrix(\")&&-1===d.indexOf(\"radient(\")&&-1===d.indexOf(\"oader(\")?(c.removeAttribute(\"filter\"),b=!_(this.data,\"filter\")):(c.filter=d.replace(z,\"\"),b=!0)),b||(this.xn1&&(c.filter=d=d||\"alpha(opacity=\"+e+\")\"),-1===d.indexOf(\"pacity\")?0===e&&this.xn1||(c.filter=d+\" alpha(opacity=\"+e+\")\"):c.filter=d.replace(x,\"opacity=\"+e))};ya(\"opacity,alpha,autoAlpha\",{defaultValue:\"1\",parser:function(a,b,c,d,f,g){var h=parseFloat(_(a,\"opacity\",e,!1,\"1\")),i=a.style,j=\"autoAlpha\"===c;return\"string\"==typeof b&&\"=\"===b.charAt(1)&&(b=(\"-\"===b.charAt(0)?-1:1)*parseFloat(b.substr(2))+h),j&&1===h&&\"hidden\"===_(a,\"visibility\",e)&&0!==b&&(h=0),U?f=new ta(i,\"opacity\",h,b-h,f):(f=new ta(i,\"opacity\",100*h,100*(b-h),f),f.xn1=j?1:0,i.zoom=1,f.type=2,f.b=\"alpha(opacity=\"+f.s+\")\",f.e=\"alpha(opacity=\"+(f.s+f.c)+\")\",f.data=a,f.plugin=g,f.setRatio=Ua),j&&(f=new ta(i,\"visibility\",0,0,f,-1,null,!1,0,0!==h?\"inherit\":\"hidden\",0===b?\"hidden\":\"inherit\"),f.xs0=\"inherit\",d._overwriteProps.push(f.n),d._overwriteProps.push(c)),f}});var Va=function(a,b){b&&(a.removeProperty?((\"ms\"===b.substr(0,2)||\"webkit\"===b.substr(0,6))&&(b=\"-\"+b),a.removeProperty(b.replace(B,\"-$1\").toLowerCase())):a.removeAttribute(b))},Wa=function(a){if(this.t._gsClassPT=this,1===a||0===a){this.t.setAttribute(\"class\",0===a?this.b:this.e);for(var b=this.data,c=this.t.style;b;)b.v?c[b.p]=b.v:Va(c,b.p),b=b._next;1===a&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute(\"class\")!==this.e&&this.t.setAttribute(\"class\",this.e)};ya(\"className\",{parser:function(a,b,d,f,g,h,i){var j,k,l,m,n,o=a.getAttribute(\"class\")||\"\",p=a.style.cssText;if(g=f._classNamePT=new ta(a,d,0,0,g,2),g.setRatio=Wa,g.pr=-11,c=!0,g.b=o,k=ca(a,e),l=a._gsClassPT){for(m={},n=l.data;n;)m[n.p]=1,n=n._next;l.setRatio(1)}return a._gsClassPT=g,g.e=\"=\"!==b.charAt(1)?b:o.replace(new RegExp(\"(?:\\\\s|^)\"+b.substr(2)+\"(?![\\\\w-])\"),\"\")+(\"+\"===b.charAt(0)?\" \"+b.substr(2):\"\"),a.setAttribute(\"class\",g.e),j=da(a,k,ca(a),i,m),a.setAttribute(\"class\",o),g.data=j.firstMPT,a.style.cssText=p,g=g.xfirst=f.parse(a,j.difs,g,h)}});var Xa=function(a){if((1===a||0===a)&&this.data._totalTime===this.data._totalDuration&&\"isFromStart\"!==this.data.data){var b,c,d,e,f,g=this.t.style,h=i.transform.parse;if(\"all\"===this.e)g.cssText=\"\",e=!0;else for(b=this.e.split(\" \").join(\"\").split(\",\"),d=b.length;--d>-1;)c=b[d],i[c]&&(i[c].parse===h?e=!0:c=\"transformOrigin\"===c?Ea:i[c].p),Va(g,c);e&&(Va(g,Ca),f=this.t._gsTransform,f&&(f.svg&&(this.t.removeAttribute(\"data-svg-origin\"),this.t.removeAttribute(\"transform\")),delete this.t._gsTransform))}};for(ya(\"clearProps\",{parser:function(a,b,d,e,f){return f=new ta(a,d,0,0,f,2),f.setRatio=Xa,f.e=b,f.pr=-10,f.data=e._tween,c=!0,f}}),j=\"bezier,throwProps,physicsProps,physics2D\".split(\",\"),wa=j.length;wa--;)za(j[wa]);j=g.prototype,j._firstPT=j._lastParsedTransform=j._transform=null,j._onInitTween=function(a,b,h,j){if(!a.nodeType)return!1;this._target=q=a,this._tween=h,this._vars=b,r=j,k=b.autoRound,c=!1,d=b.suffixMap||g.suffixMap,e=$(a,\"\"),f=this._overwriteProps;var n,p,s,t,u,v,w,x,z,A=a.style;if(l&&\"\"===A.zIndex&&(n=_(a,\"zIndex\",e),(\"auto\"===n||\"\"===n)&&this._addLazySet(A,\"zIndex\",0)),\"string\"==typeof b&&(t=A.cssText,n=ca(a,e),A.cssText=t+\";\"+b,n=da(a,n,ca(a)).difs,!U&&y.test(b)&&(n.opacity=parseFloat(RegExp.$1)),b=n,A.cssText=t),b.className?this._firstPT=p=i.className.parse(a,b.className,\"className\",this,null,null,b):this._firstPT=p=this.parse(a,b,null),this._transformType){for(z=3===this._transformType,Ca?m&&(l=!0,\"\"===A.zIndex&&(w=_(a,\"zIndex\",e),(\"auto\"===w||\"\"===w)&&this._addLazySet(A,\"zIndex\",0)),o&&this._addLazySet(A,\"WebkitBackfaceVisibility\",this._vars.WebkitBackfaceVisibility||(z?\"visible\":\"hidden\"))):A.zoom=1,s=p;s&&s._next;)s=s._next;x=new ta(a,\"transform\",0,0,null,2),this._linkCSSP(x,null,s),x.setRatio=Ca?Ta:Sa,x.data=this._transform||Ra(a,e,!0),x.tween=h,x.pr=-1,f.pop()}if(c){for(;p;){for(v=p._next,s=t;s&&s.pr>p.pr;)s=s._next;(p._prev=s?s._prev:u)?p._prev._next=p:t=p,(p._next=s)?s._prev=p:u=p,p=v}this._firstPT=t}return!0},j.parse=function(a,b,c,f){var g,h,j,l,m,n,o,p,s,t,u=a.style;for(g in b){if(n=b[g],\"function\"==typeof n&&(n=n(r,q)),h=i[g])c=h.parse(a,n,g,this,c,f,b);else{if(\"--\"===g.substr(0,2)){this._tween._propLookup[g]=this._addTween.call(this._tween,a.style,\"setProperty\",$(a).getPropertyValue(g)+\"\",n+\"\",g,!1,g);continue}m=_(a,g,e)+\"\",s=\"string\"==typeof n,\"color\"===g||\"fill\"===g||\"stroke\"===g||-1!==g.indexOf(\"Color\")||s&&A.test(n)?(s||(n=na(n),n=(n.length>3?\"rgba(\":\"rgb(\")+n.join(\",\")+\")\"),c=va(u,g,m,n,!0,\"transparent\",c,0,f)):s&&J.test(n)?c=va(u,g,m,n,!0,null,c,0,f):(j=parseFloat(m),o=j||0===j?m.substr((j+\"\").length):\"\",(\"\"===m||\"auto\"===m)&&(\"width\"===g||\"height\"===g?(j=ga(a,g,e),o=\"px\"):\"left\"===g||\"top\"===g?(j=ba(a,g,e),o=\"px\"):(j=\"opacity\"!==g?0:1,o=\"\")),t=s&&\"=\"===n.charAt(1),t?(l=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),l*=parseFloat(n),p=n.replace(w,\"\")):(l=parseFloat(n),p=s?n.replace(w,\"\"):\"\"),\"\"===p&&(p=g in d?d[g]:o),n=l||0===l?(t?l+j:l)+p:b[g],o!==p&&(\"\"!==p||\"lineHeight\"===g)&&(l||0===l)&&j&&(j=aa(a,g,j,o),\"%\"===p?(j/=aa(a,g,100,\"%\")/100,b.strictUnits!==!0&&(m=j+\"%\")):\"em\"===p||\"rem\"===p||\"vw\"===p||\"vh\"===p?j/=aa(a,g,1,p):\"px\"!==p&&(l=aa(a,g,l,p),p=\"px\"),t&&(l||0===l)&&(n=l+j+p)),t&&(l+=j),!j&&0!==j||!l&&0!==l?void 0!==u[g]&&(n||n+\"\"!=\"NaN\"&&null!=n)?(c=new ta(u,g,l||j||0,0,c,-1,g,!1,0,m,n),c.xs0=\"none\"!==n||\"display\"!==g&&-1===g.indexOf(\"Style\")?n:m):W(\"invalid \"+g+\" tween value: \"+b[g]):(c=new ta(u,g,j,l-j,c,0,g,k!==!1&&(\"px\"===p||\"zIndex\"===g),0,m,n),c.xs0=p))}f&&c&&!c.plugin&&(c.plugin=f)}return c},j.setRatio=function(a){var b,c,d,e=this._firstPT,f=1e-6;if(1!==a||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(a||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;e;){if(b=e.c*a+e.s,e.r?b=e.r(b):f>b&&b>-f&&(b=0),e.type)if(1===e.type)if(d=e.l,2===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2;else if(3===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3;else if(4===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4;else if(5===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4+e.xn4+e.xs5;else{for(c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}else-1===e.type?e.t[e.p]=e.xs0:e.setRatio&&e.setRatio(a);else e.t[e.p]=b+e.xs0;e=e._next}else for(;e;)2!==e.type?e.t[e.p]=e.b:e.setRatio(a),e=e._next;else for(;e;){if(2!==e.type)if(e.r&&-1!==e.type)if(b=e.r(e.s+e.c),e.type){if(1===e.type){for(d=e.l,c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}}else e.t[e.p]=b+e.xs0;else e.t[e.p]=e.e;else e.setRatio(a);e=e._next}},j._enableTransforms=function(a){this._transform=this._transform||Ra(this._target,e,!0),this._transformType=this._transform.svg&&Aa||!a&&3!==this._transformType?2:3};var Ya=function(a){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};j._addLazySet=function(a,b,c){var d=this._firstPT=new ta(a,b,0,0,this._firstPT,2);d.e=c,d.setRatio=Ya,d.data=this},j._linkCSSP=function(a,b,c,d){return a&&(b&&(b._prev=a),a._next&&(a._next._prev=a._prev),a._prev?a._prev._next=a._next:this._firstPT===a&&(this._firstPT=a._next,d=!0),c?c._next=a:d||null!==this._firstPT||(this._firstPT=a),a._next=b,a._prev=c),a},j._mod=function(a){for(var b=this._firstPT;b;)\"function\"==typeof a[b.p]&&(b.r=a[b.p]),b=b._next},j._kill=function(b){var c,d,e,f=b;if(b.autoAlpha||b.alpha){f={};for(d in b)f[d]=b[d];f.opacity=1,f.autoAlpha&&(f.visibility=1)}for(b.className&&(c=this._classNamePT)&&(e=c.xfirst,e&&e._prev?this._linkCSSP(e._prev,c._next,e._prev._prev):e===this._firstPT&&(this._firstPT=c._next),c._next&&this._linkCSSP(c._next,c._next._next,e._prev),this._classNamePT=null),c=this._firstPT;c;)c.plugin&&c.plugin!==d&&c.plugin._kill&&(c.plugin._kill(b),d=c.plugin),c=c._next;return a.prototype._kill.call(this,f)};var Za=function(a,b,c){var d,e,f,g;if(a.slice)for(e=a.length;--e>-1;)Za(a[e],b,c);else for(d=a.childNodes,e=d.length;--e>-1;)f=d[e],g=f.type,f.style&&(b.push(ca(f)),c&&c.push(f)),1!==g&&9!==g&&11!==g||!f.childNodes.length||Za(f,b,c)};return g.cascadeTo=function(a,c,d){var e,f,g,h,i=b.to(a,c,d),j=[i],k=[],l=[],m=[],n=b._internals.reservedProps;for(a=i._targets||i.target,Za(a,k,m),i.render(c,!0,!0),Za(a,l),i.render(0,!0,!0),i._enabled(!0),e=m.length;--e>-1;)if(f=da(m[e],k[e],l[e]),f.firstMPT){f=f.difs;for(g in d)n[g]&&(f[g]=d[g]);h={};for(g in f)h[g]=k[e][g];j.push(b.fromTo(m[e],c,h,f))}return j},a.activate([g]),g},!0),function(){var a=_gsScope._gsDefine.plugin({propName:\"roundProps\",version:\"1.7.0\",priority:-1,API:2,init:function(a,b,c){return this._tween=c,!0}}),b=function(a){var b=1>a?Math.pow(10,(a+\"\").length-2):1;return function(c){return(Math.round(c/a)*a*b|0)/b}},c=function(a,b){for(;a;)a.f||a.blob||(a.m=b||Math.round),a=a._next},d=a.prototype;d._onInitAllProps=function(){var a,d,e,f,g=this._tween,h=g.vars.roundProps,i={},j=g._propLookup.roundProps;if(\"object\"!=typeof h||h.push)for(\"string\"==typeof h&&(h=h.split(\",\")),e=h.length;--e>-1;)i[h[e]]=Math.round;else for(f in h)i[f]=b(h[f]);for(f in i)for(a=g._firstPT;a;)d=a._next,a.pg?a.t._mod(i):a.n===f&&(2===a.f&&a.t?c(a.t._firstPT,i[f]):(this._add(a.t,f,a.s,a.c,i[f]),d&&(d._prev=a._prev),a._prev?a._prev._next=d:g._firstPT===a&&(g._firstPT=d),a._next=a._prev=null,g._propLookup[f]=j)),a=d;return!1},d._add=function(a,b,c,d,e){this._addTween(a,b,c,c+d,b,e||Math.round),this._overwriteProps.push(b)}}(),function(){_gsScope._gsDefine.plugin({propName:\"attr\",API:2,version:\"0.6.1\",init:function(a,b,c,d){var e,f;if(\"function\"!=typeof a.setAttribute)return!1;for(e in b)f=b[e],\"function\"==typeof f&&(f=f(d,a)),this._addTween(a,\"setAttribute\",a.getAttribute(e)+\"\",f+\"\",e,!1,e),this._overwriteProps.push(e);return!0}})}(),_gsScope._gsDefine.plugin({propName:\"directionalRotation\",version:\"0.3.1\",API:2,init:function(a,b,c,d){\"object\"!=typeof b&&(b={rotation:b}),this.finals={};var e,f,g,h,i,j,k=b.useRadians===!0?2*Math.PI:360,l=1e-6;for(e in b)\"useRadians\"!==e&&(h=b[e],\"function\"==typeof h&&(h=h(d,a)),j=(h+\"\").split(\"_\"),f=j[0],g=parseFloat(\"function\"!=typeof a[e]?a[e]:a[e.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+e.substr(3)]?e:\"get\"+e.substr(3)]()),h=this.finals[e]=\"string\"==typeof f&&\"=\"===f.charAt(1)?g+parseInt(f.charAt(0)+\"1\",10)*Number(f.substr(2)):Number(f)||0,i=h-g,j.length&&(f=j.join(\"_\"),-1!==f.indexOf(\"short\")&&(i%=k,i!==i%(k/2)&&(i=0>i?i+k:i-k)),-1!==f.indexOf(\"_cw\")&&0>i?i=(i+9999999999*k)%k-(i/k|0)*k:-1!==f.indexOf(\"ccw\")&&i>0&&(i=(i-9999999999*k)%k-(i/k|0)*k)),(i>l||-l>i)&&(this._addTween(a,e,g,g+i,e),this._overwriteProps.push(e)));return!0},set:function(a){var b;if(1!==a)this._super.setRatio.call(this,a);else for(b=this._firstPT;b;)b.f?b.t[b.p](this.finals[b.p]):b.t[b.p]=this.finals[b.p],b=b._next}})._autoCSS=!0,_gsScope._gsDefine(\"easing.Back\",[\"easing.Ease\"],function(a){var b,c,d,e,f=_gsScope.GreenSockGlobals||_gsScope,g=f.com.greensock,h=2*Math.PI,i=Math.PI/2,j=g._class,k=function(b,c){var d=j(\"easing.\"+b,function(){},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,d},l=a.register||function(){},m=function(a,b,c,d,e){var f=j(\"easing.\"+a,{easeOut:new b,easeIn:new c,easeInOut:new d},!0);return l(f,a),f},n=function(a,b,c){this.t=a,this.v=b,c&&(this.next=c,c.prev=this,this.c=c.v-b,this.gap=c.t-a)},o=function(b,c){var d=j(\"easing.\"+b,function(a){this._p1=a||0===a?a:1.70158,this._p2=1.525*this._p1},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,e.config=function(a){return new d(a)},d},p=m(\"Back\",o(\"BackOut\",function(a){return(a-=1)*a*((this._p1+1)*a+this._p1)+1}),o(\"BackIn\",function(a){return a*a*((this._p1+1)*a-this._p1)}),o(\"BackInOut\",function(a){return(a*=2)<1?.5*a*a*((this._p2+1)*a-this._p2):.5*((a-=2)*a*((this._p2+1)*a+this._p2)+2)})),q=j(\"easing.SlowMo\",function(a,b,c){b=b||0===b?b:.7,null==a?a=.7:a>1&&(a=1),this._p=1!==a?b:0,this._p1=(1-a)/2,this._p2=a,this._p3=this._p1+this._p2,this._calcEnd=c===!0},!0),r=q.prototype=new a;return r.constructor=q,r.getRatio=function(a){var b=a+(.5-a)*this._p;return a<this._p1?this._calcEnd?1-(a=1-a/this._p1)*a:b-(a=1-a/this._p1)*a*a*a*b:a>this._p3?this._calcEnd?1===a?0:1-(a=(a-this._p3)/this._p1)*a:b+(a-b)*(a=(a-this._p3)/this._p1)*a*a*a:this._calcEnd?1:b},q.ease=new q(.7,.7),r.config=q.config=function(a,b,c){return new q(a,b,c)},b=j(\"easing.SteppedEase\",function(a,b){a=a||1,this._p1=1/a,this._p2=a+(b?0:1),this._p3=b?1:0},!0),r=b.prototype=new a,r.constructor=b,r.getRatio=function(a){return 0>a?a=0:a>=1&&(a=.999999999),((this._p2*a|0)+this._p3)*this._p1},r.config=b.config=function(a,c){return new b(a,c)},c=j(\"easing.ExpoScaleEase\",function(a,b,c){this._p1=Math.log(b/a),this._p2=b-a,this._p3=a,this._ease=c},!0),r=c.prototype=new a,r.constructor=c,r.getRatio=function(a){return this._ease&&(a=this._ease.getRatio(a)),(this._p3*Math.exp(this._p1*a)-this._p3)/this._p2},r.config=c.config=function(a,b,d){return new c(a,b,d)},d=j(\"easing.RoughEase\",function(b){b=b||{};for(var c,d,e,f,g,h,i=b.taper||\"none\",j=[],k=0,l=0|(b.points||20),m=l,o=b.randomize!==!1,p=b.clamp===!0,q=b.template instanceof a?b.template:null,r=\"number\"==typeof b.strength?.4*b.strength:.4;--m>-1;)c=o?Math.random():1/l*m,d=q?q.getRatio(c):c,\"none\"===i?e=r:\"out\"===i?(f=1-c,e=f*f*r):\"in\"===i?e=c*c*r:.5>c?(f=2*c,e=f*f*.5*r):(f=2*(1-c),e=f*f*.5*r),o?d+=Math.random()*e-.5*e:m%2?d+=.5*e:d-=.5*e,p&&(d>1?d=1:0>d&&(d=0)),j[k++]={x:c,y:d};for(j.sort(function(a,b){return a.x-b.x}),h=new n(1,1,null),m=l;--m>-1;)g=j[m],h=new n(g.x,g.y,h);this._prev=new n(0,0,0!==h.t?h:h.next)},!0),r=d.prototype=new a,r.constructor=d,r.getRatio=function(a){var b=this._prev;if(a>b.t){for(;b.next&&a>=b.t;)b=b.next;b=b.prev}else for(;b.prev&&a<=b.t;)b=b.prev;return this._prev=b,b.v+(a-b.t)/b.gap*b.c},r.config=function(a){return new d(a)},d.ease=new d,m(\"Bounce\",k(\"BounceOut\",function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}),k(\"BounceIn\",function(a){return(a=1-a)<1/2.75?1-7.5625*a*a:2/2.75>a?1-(7.5625*(a-=1.5/2.75)*a+.75):2.5/2.75>a?1-(7.5625*(a-=2.25/2.75)*a+.9375):1-(7.5625*(a-=2.625/2.75)*a+.984375)}),k(\"BounceInOut\",function(a){var b=.5>a;return a=b?1-2*a:2*a-1,a=1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375,b?.5*(1-a):.5*a+.5})),m(\"Circ\",k(\"CircOut\",function(a){return Math.sqrt(1-(a-=1)*a)}),k(\"CircIn\",function(a){return-(Math.sqrt(1-a*a)-1)}),k(\"CircInOut\",function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)})),e=function(b,c,d){var e=j(\"easing.\"+b,function(a,b){this._p1=a>=1?a:1,this._p2=(b||d)/(1>a?a:1),this._p3=this._p2/h*(Math.asin(1/this._p1)||0),this._p2=h/this._p2},!0),f=e.prototype=new a;return f.constructor=e,f.getRatio=c,f.config=function(a,b){return new e(a,b)},e},m(\"Elastic\",e(\"ElasticOut\",function(a){return this._p1*Math.pow(2,-10*a)*Math.sin((a-this._p3)*this._p2)+1},.3),e(\"ElasticIn\",function(a){return-(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2))},.3),e(\"ElasticInOut\",function(a){return(a*=2)<1?-.5*(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(a-=1))*Math.sin((a-this._p3)*this._p2)*.5+1},.45)),m(\"Expo\",k(\"ExpoOut\",function(a){return 1-Math.pow(2,-10*a)}),k(\"ExpoIn\",function(a){return Math.pow(2,10*(a-1))-.001}),k(\"ExpoInOut\",function(a){return(a*=2)<1?.5*Math.pow(2,10*(a-1)):.5*(2-Math.pow(2,-10*(a-1)))})),m(\"Sine\",k(\"SineOut\",function(a){return Math.sin(a*i)}),k(\"SineIn\",function(a){return-Math.cos(a*i)+1}),k(\"SineInOut\",function(a){return-.5*(Math.cos(Math.PI*a)-1)})),j(\"easing.EaseLookup\",{find:function(b){return a.map[b]}},!0),l(f.SlowMo,\"SlowMo\",\"ease,\"),l(d,\"RoughEase\",\"ease,\"),l(b,\"SteppedEase\",\"ease,\"),p},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(a,b){\"use strict\";var c={},d=a.document,e=a.GreenSockGlobals=a.GreenSockGlobals||a,f=e[b];if(f)return\"undefined\"!=typeof module&&module.exports&&(module.exports=f),f;var g,h,i,j,k,l=function(a){var b,c=a.split(\".\"),d=e;for(b=0;b<c.length;b++)d[c[b]]=d=d[c[b]]||{};return d},m=l(\"com.greensock\"),n=1e-10,o=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},p=function(){},q=function(){var a=Object.prototype.toString,b=a.call([]);return function(c){return null!=c&&(c instanceof Array||\"object\"==typeof c&&!!c.push&&a.call(c)===b)}}(),r={},s=function(d,f,g,h){this.sc=r[d]?r[d].sc:[],r[d]=this,this.gsClass=null,this.func=g;var i=[];this.check=function(j){for(var k,m,n,o,p=f.length,q=p;--p>-1;)(k=r[f[p]]||new s(f[p],[])).gsClass?(i[p]=k.gsClass,q--):j&&k.sc.push(this);if(0===q&&g){if(m=(\"com.greensock.\"+d).split(\".\"),n=m.pop(),o=l(m.join(\".\"))[n]=this.gsClass=g.apply(g,i),h)if(e[n]=c[n]=o,\"undefined\"!=typeof module&&module.exports)if(d===b){module.exports=c[b]=o;for(p in c)o[p]=c[p]}else c[b]&&(c[b][n]=o);else\"function\"==typeof define&&define.amd&&define((a.GreenSockAMDPath?a.GreenSockAMDPath+\"/\":\"\")+d.split(\".\").pop(),[],function(){return o});for(p=0;p<this.sc.length;p++)this.sc[p].check()}},this.check(!0)},t=a._gsDefine=function(a,b,c,d){return new s(a,b,c,d)},u=m._class=function(a,b,c){return b=b||function(){},t(a,[],function(){return b},c),b};t.globals=e;var v=[0,0,1,1],w=u(\"easing.Ease\",function(a,b,c,d){this._func=a,this._type=c||0,this._power=d||0,this._params=b?v.concat(b):v},!0),x=w.map={},y=w.register=function(a,b,c,d){for(var e,f,g,h,i=b.split(\",\"),j=i.length,k=(c||\"easeIn,easeOut,easeInOut\").split(\",\");--j>-1;)for(f=i[j],e=d?u(\"easing.\"+f,null,!0):m.easing[f]||{},g=k.length;--g>-1;)h=k[g],x[f+\".\"+h]=x[h+f]=e[h]=a.getRatio?a:a[h]||new a};for(i=w.prototype,i._calcEnd=!1,i.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var b=this._type,c=this._power,d=1===b?1-a:2===b?a:.5>a?2*a:2*(1-a);return 1===c?d*=d:2===c?d*=d*d:3===c?d*=d*d*d:4===c&&(d*=d*d*d*d),1===b?1-d:2===b?d:.5>a?d/2:1-d/2},g=[\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"],h=g.length;--h>-1;)i=g[h]+\",Power\"+h,y(new w(null,null,1,h),i,\"easeOut\",!0),y(new w(null,null,2,h),i,\"easeIn\"+(0===h?\",easeNone\":\"\")),y(new w(null,null,3,h),i,\"easeInOut\");x.linear=m.easing.Linear.easeIn,x.swing=m.easing.Quad.easeInOut;var z=u(\"events.EventDispatcher\",function(a){this._listeners={},this._eventTarget=a||this});i=z.prototype,i.addEventListener=function(a,b,c,d,e){e=e||0;var f,g,h=this._listeners[a],i=0;for(this!==j||k||j.wake(),null==h&&(this._listeners[a]=h=[]),g=h.length;--g>-1;)f=h[g],f.c===b&&f.s===c?h.splice(g,1):0===i&&f.pr<e&&(i=g+1);h.splice(i,0,{c:b,s:c,up:d,pr:e})},i.removeEventListener=function(a,b){var c,d=this._listeners[a];if(d)for(c=d.length;--c>-1;)if(d[c].c===b)return void d.splice(c,1)},i.dispatchEvent=function(a){var b,c,d,e=this._listeners[a];if(e)for(b=e.length,b>1&&(e=e.slice(0)),c=this._eventTarget;--b>-1;)d=e[b],d&&(d.up?d.c.call(d.s||c,{type:a,target:c}):d.c.call(d.s||c))};var A=a.requestAnimationFrame,B=a.cancelAnimationFrame,C=Date.now||function(){return(new Date).getTime()},D=C();for(g=[\"ms\",\"moz\",\"webkit\",\"o\"],h=g.length;--h>-1&&!A;)A=a[g[h]+\"RequestAnimationFrame\"],B=a[g[h]+\"CancelAnimationFrame\"]||a[g[h]+\"CancelRequestAnimationFrame\"];u(\"Ticker\",function(a,b){var c,e,f,g,h,i=this,l=C(),m=b!==!1&&A?\"auto\":!1,o=500,q=33,r=\"tick\",s=function(a){var b,d,j=C()-D;j>o&&(l+=j-q),D+=j,i.time=(D-l)/1e3,b=i.time-h,(!c||b>0||a===!0)&&(i.frame++,h+=b+(b>=g?.004:g-b),d=!0),a!==!0&&(f=e(s)),d&&i.dispatchEvent(r)};z.call(i),i.time=i.frame=0,i.tick=function(){s(!0)},i.lagSmoothing=function(a,b){return arguments.length?(o=a||1/n,void(q=Math.min(b,o,0))):1/n>o},i.sleep=function(){null!=f&&(m&&B?B(f):clearTimeout(f),e=p,f=null,i===j&&(k=!1))},i.wake=function(a){null!==f?i.sleep():a?l+=-D+(D=C()):i.frame>10&&(D=C()-o+5),e=0===c?p:m&&A?A:function(a){return setTimeout(a,1e3*(h-i.time)+1|0)},i===j&&(k=!0),s(2)},i.fps=function(a){return arguments.length?(c=a,g=1/(c||60),h=this.time+g,void i.wake()):c},i.useRAF=function(a){return arguments.length?(i.sleep(),m=a,void i.fps(c)):m},i.fps(a),setTimeout(function(){\"auto\"===m&&i.frame<5&&\"hidden\"!==(d||{}).visibilityState&&i.useRAF(!1)},1500)}),i=m.Ticker.prototype=new m.events.EventDispatcher,i.constructor=m.Ticker;var E=u(\"core.Animation\",function(a,b){if(this.vars=b=b||{},this._duration=this._totalDuration=a||0,this._delay=Number(b.delay)||0,this._timeScale=1,this._active=b.immediateRender===!0,this.data=b.data,this._reversed=b.reversed===!0,Y){k||j.wake();var c=this.vars.useFrames?X:Y;c.add(this,c._time),this.vars.paused&&this.paused(!0)}});j=E.ticker=new m.Ticker,i=E.prototype,i._dirty=i._gc=i._initted=i._paused=!1,i._totalTime=i._time=0,i._rawPrevTime=-1,i._next=i._last=i._onUpdate=i._timeline=i.timeline=null,i._paused=!1;var F=function(){k&&C()-D>2e3&&(\"hidden\"!==(d||{}).visibilityState||!j.lagSmoothing())&&j.wake();var a=setTimeout(F,2e3);a.unref&&a.unref()};F(),i.play=function(a,b){return null!=a&&this.seek(a,b),this.reversed(!1).paused(!1)},i.pause=function(a,b){return null!=a&&this.seek(a,b),this.paused(!0)},i.resume=function(a,b){return null!=a&&this.seek(a,b),this.paused(!1)},i.seek=function(a,b){return this.totalTime(Number(a),b!==!1)},i.restart=function(a,b){return this.reversed(!1).paused(!1).totalTime(a?-this._delay:0,b!==!1,!0)},i.reverse=function(a,b){return null!=a&&this.seek(a||this.totalDuration(),b),this.reversed(!0).paused(!1)},i.render=function(a,b,c){},i.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},i.isActive=function(){var a,b=this._timeline,c=this._startTime;return!b||!this._gc&&!this._paused&&b.isActive()&&(a=b.rawTime(!0))>=c&&a<c+this.totalDuration()/this._timeScale-1e-7},i._enabled=function(a,b){return k||j.wake(),this._gc=!a,this._active=this.isActive(),b!==!0&&(a&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!a&&this.timeline&&this._timeline._remove(this,!0)),!1},i._kill=function(a,b){return this._enabled(!1,!1)},i.kill=function(a,b){return this._kill(a,b),this},i._uncache=function(a){for(var b=a?this:this.timeline;b;)b._dirty=!0,b=b.timeline;return this},i._swapSelfInParams=function(a){for(var b=a.length,c=a.concat();--b>-1;)\"{self}\"===a[b]&&(c[b]=this);return c},i._callback=function(a){var b=this.vars,c=b[a],d=b[a+\"Params\"],e=b[a+\"Scope\"]||b.callbackScope||this,f=d?d.length:0;switch(f){case 0:c.call(e);break;case 1:c.call(e,d[0]);break;case 2:c.call(e,d[0],d[1]);break;default:c.apply(e,d)}},i.eventCallback=function(a,b,c,d){if(\"on\"===(a||\"\").substr(0,2)){var e=this.vars;if(1===arguments.length)return e[a];null==b?delete e[a]:(e[a]=b,e[a+\"Params\"]=q(c)&&-1!==c.join(\"\").indexOf(\"{self}\")?this._swapSelfInParams(c):c,e[a+\"Scope\"]=d),\"onUpdate\"===a&&(this._onUpdate=b)}return this},i.delay=function(a){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+a-this._delay),this._delay=a,this):this._delay},i.duration=function(a){return arguments.length?(this._duration=this._totalDuration=a,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==a&&this.totalTime(this._totalTime*(a/this._duration),!0),this):(this._dirty=!1,this._duration)},i.totalDuration=function(a){return this._dirty=!1,arguments.length?this.duration(a):this._totalDuration},i.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(a>this._duration?this._duration:a,b)):this._time},i.totalTime=function(a,b,c){if(k||j.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>a&&!c&&(a+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var d=this._totalDuration,e=this._timeline;if(a>d&&!c&&(a=d),this._startTime=(this._paused?this._pauseTime:e._time)-(this._reversed?d-a:a)/this._timeScale,e._dirty||this._uncache(!1),e._timeline)for(;e._timeline;)e._timeline._time!==(e._startTime+e._totalTime)/e._timeScale&&e.totalTime(e._totalTime,!0),e=e._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==a||0===this._duration)&&(K.length&&$(),this.render(a,b,!1),K.length&&$())}return this},i.progress=i.totalProgress=function(a,b){var c=this.duration();return arguments.length?this.totalTime(c*a,b):c?this._time/c:this.ratio;\r\n},i.startTime=function(a){return arguments.length?(a!==this._startTime&&(this._startTime=a,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,a-this._delay)),this):this._startTime},i.endTime=function(a){return this._startTime+(0!=a?this.totalDuration():this.duration())/this._timeScale},i.timeScale=function(a){if(!arguments.length)return this._timeScale;var b,c;for(a=a||n,this._timeline&&this._timeline.smoothChildTiming&&(b=this._pauseTime,c=b||0===b?b:this._timeline.totalTime(),this._startTime=c-(c-this._startTime)*this._timeScale/a),this._timeScale=a,c=this.timeline;c&&c.timeline;)c._dirty=!0,c.totalDuration(),c=c.timeline;return this},i.reversed=function(a){return arguments.length?(a!=this._reversed&&(this._reversed=a,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},i.paused=function(a){if(!arguments.length)return this._paused;var b,c,d=this._timeline;return a!=this._paused&&d&&(k||a||j.wake(),b=d.rawTime(),c=b-this._pauseTime,!a&&d.smoothChildTiming&&(this._startTime+=c,this._uncache(!1)),this._pauseTime=a?b:null,this._paused=a,this._active=this.isActive(),!a&&0!==c&&this._initted&&this.duration()&&(b=d.smoothChildTiming?this._totalTime:(b-this._startTime)/this._timeScale,this.render(b,b===this._totalTime,!0))),this._gc&&!a&&this._enabled(!0,!1),this};var G=u(\"core.SimpleTimeline\",function(a){E.call(this,0,a),this.autoRemoveChildren=this.smoothChildTiming=!0});i=G.prototype=new E,i.constructor=G,i.kill()._gc=!1,i._first=i._last=i._recent=null,i._sortChildren=!1,i.add=i.insert=function(a,b,c,d){var e,f;if(a._startTime=Number(b||0)+a._delay,a._paused&&this!==a._timeline&&(a._pauseTime=this.rawTime()-(a._timeline.rawTime()-a._pauseTime)),a.timeline&&a.timeline._remove(a,!0),a.timeline=a._timeline=this,a._gc&&a._enabled(!0,!0),e=this._last,this._sortChildren)for(f=a._startTime;e&&e._startTime>f;)e=e._prev;return e?(a._next=e._next,e._next=a):(a._next=this._first,this._first=a),a._next?a._next._prev=a:this._last=a,a._prev=e,this._recent=a,this._timeline&&this._uncache(!0),this},i._remove=function(a,b){return a.timeline===this&&(b||a._enabled(!1,!0),a._prev?a._prev._next=a._next:this._first===a&&(this._first=a._next),a._next?a._next._prev=a._prev:this._last===a&&(this._last=a._prev),a._next=a._prev=a.timeline=null,a===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},i.render=function(a,b,c){var d,e=this._first;for(this._totalTime=this._time=this._rawPrevTime=a;e;)d=e._next,(e._active||a>=e._startTime&&!e._paused&&!e._gc)&&(e._reversed?e.render((e._dirty?e.totalDuration():e._totalDuration)-(a-e._startTime)*e._timeScale,b,c):e.render((a-e._startTime)*e._timeScale,b,c)),e=d},i.rawTime=function(){return k||j.wake(),this._totalTime};var H=u(\"TweenLite\",function(b,c,d){if(E.call(this,c,d),this.render=H.prototype.render,null==b)throw\"Cannot tween a null target.\";this.target=b=\"string\"!=typeof b?b:H.selector(b)||b;var e,f,g,h=b.jquery||b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType),i=this.vars.overwrite;if(this._overwrite=i=null==i?W[H.defaultOverwrite]:\"number\"==typeof i?i>>0:W[i],(h||b instanceof Array||b.push&&q(b))&&\"number\"!=typeof b[0])for(this._targets=g=o(b),this._propLookup=[],this._siblings=[],e=0;e<g.length;e++)f=g[e],f?\"string\"!=typeof f?f.length&&f!==a&&f[0]&&(f[0]===a||f[0].nodeType&&f[0].style&&!f.nodeType)?(g.splice(e--,1),this._targets=g=g.concat(o(f))):(this._siblings[e]=_(f,this,!1),1===i&&this._siblings[e].length>1&&ba(f,this,null,1,this._siblings[e])):(f=g[e--]=H.selector(f),\"string\"==typeof f&&g.splice(e+1,1)):g.splice(e--,1);else this._propLookup={},this._siblings=_(b,this,!1),1===i&&this._siblings.length>1&&ba(b,this,null,1,this._siblings);(this.vars.immediateRender||0===c&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-n,this.render(Math.min(0,-this._delay)))},!0),I=function(b){return b&&b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType)},J=function(a,b){var c,d={};for(c in a)V[c]||c in b&&\"transform\"!==c&&\"x\"!==c&&\"y\"!==c&&\"width\"!==c&&\"height\"!==c&&\"className\"!==c&&\"border\"!==c||!(!S[c]||S[c]&&S[c]._autoCSS)||(d[c]=a[c],delete a[c]);a.css=d};i=H.prototype=new E,i.constructor=H,i.kill()._gc=!1,i.ratio=0,i._firstPT=i._targets=i._overwrittenProps=i._startAt=null,i._notifyPluginsOfEnabled=i._lazy=!1,H.version=\"2.0.2\",H.defaultEase=i._ease=new w(null,null,1,1),H.defaultOverwrite=\"auto\",H.ticker=j,H.autoSleep=120,H.lagSmoothing=function(a,b){j.lagSmoothing(a,b)},H.selector=a.$||a.jQuery||function(b){var c=a.$||a.jQuery;return c?(H.selector=c,c(b)):(d||(d=a.document),d?d.querySelectorAll?d.querySelectorAll(b):d.getElementById(\"#\"===b.charAt(0)?b.substr(1):b):b)};var K=[],L={},M=/(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi,N=/[\\+-]=-?[\\.\\d]/,O=function(a){for(var b,c=this._firstPT,d=1e-6;c;)b=c.blob?1===a&&null!=this.end?this.end:a?this.join(\"\"):this.start:c.c*a+c.s,c.m?b=c.m.call(this._tween,b,this._target||c.t,this._tween):d>b&&b>-d&&!c.blob&&(b=0),c.f?c.fp?c.t[c.p](c.fp,b):c.t[c.p](b):c.t[c.p]=b,c=c._next},P=function(a,b,c,d){var e,f,g,h,i,j,k,l=[],m=0,n=\"\",o=0;for(l.start=a,l.end=b,a=l[0]=a+\"\",b=l[1]=b+\"\",c&&(c(l),a=l[0],b=l[1]),l.length=0,e=a.match(M)||[],f=b.match(M)||[],d&&(d._next=null,d.blob=1,l._firstPT=l._applyPT=d),i=f.length,h=0;i>h;h++)k=f[h],j=b.substr(m,b.indexOf(k,m)-m),n+=j||!h?j:\",\",m+=j.length,o?o=(o+1)%5:\"rgba(\"===j.substr(-5)&&(o=1),k===e[h]||e.length<=h?n+=k:(n&&(l.push(n),n=\"\"),g=parseFloat(e[h]),l.push(g),l._firstPT={_next:l._firstPT,t:l,p:l.length-1,s:g,c:(\"=\"===k.charAt(1)?parseInt(k.charAt(0)+\"1\",10)*parseFloat(k.substr(2)):parseFloat(k)-g)||0,f:0,m:o&&4>o?Math.round:0}),m+=k.length;return n+=b.substr(m),n&&l.push(n),l.setRatio=O,N.test(b)&&(l.end=null),l},Q=function(a,b,c,d,e,f,g,h,i){\"function\"==typeof d&&(d=d(i||0,a));var j,k=typeof a[b],l=\"function\"!==k?\"\":b.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+b.substr(3)]?b:\"get\"+b.substr(3),m=\"get\"!==c?c:l?g?a[l](g):a[l]():a[b],n=\"string\"==typeof d&&\"=\"===d.charAt(1),o={t:a,p:b,s:m,f:\"function\"===k,pg:0,n:e||b,m:f?\"function\"==typeof f?f:Math.round:0,pr:0,c:n?parseInt(d.charAt(0)+\"1\",10)*parseFloat(d.substr(2)):parseFloat(d)-m||0};return(\"number\"!=typeof m||\"number\"!=typeof d&&!n)&&(g||isNaN(m)||!n&&isNaN(d)||\"boolean\"==typeof m||\"boolean\"==typeof d?(o.fp=g,j=P(m,n?parseFloat(o.s)+o.c+(o.s+\"\").replace(/[0-9\\-\\.]/g,\"\"):d,h||H.defaultStringFilter,o),o={t:j,p:\"setRatio\",s:0,c:1,f:2,pg:0,n:e||b,pr:0,m:0}):(o.s=parseFloat(m),n||(o.c=parseFloat(d)-o.s||0))),o.c?((o._next=this._firstPT)&&(o._next._prev=o),this._firstPT=o,o):void 0},R=H._internals={isArray:q,isSelector:I,lazyTweens:K,blobDif:P},S=H._plugins={},T=R.tweenLookup={},U=0,V=R.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1,yoyoEase:1},W={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,\"true\":1,\"false\":0},X=E._rootFramesTimeline=new G,Y=E._rootTimeline=new G,Z=30,$=R.lazyRender=function(){var a,b=K.length;for(L={};--b>-1;)a=K[b],a&&a._lazy!==!1&&(a.render(a._lazy[0],a._lazy[1],!0),a._lazy=!1);K.length=0};Y._startTime=j.time,X._startTime=j.frame,Y._active=X._active=!0,setTimeout($,1),E._updateRoot=H.render=function(){var a,b,c;if(K.length&&$(),Y.render((j.time-Y._startTime)*Y._timeScale,!1,!1),X.render((j.frame-X._startTime)*X._timeScale,!1,!1),K.length&&$(),j.frame>=Z){Z=j.frame+(parseInt(H.autoSleep,10)||120);for(c in T){for(b=T[c].tweens,a=b.length;--a>-1;)b[a]._gc&&b.splice(a,1);0===b.length&&delete T[c]}if(c=Y._first,(!c||c._paused)&&H.autoSleep&&!X._first&&1===j._listeners.tick.length){for(;c&&c._paused;)c=c._next;c||j.sleep()}}},j.addEventListener(\"tick\",E._updateRoot);var _=function(a,b,c){var d,e,f=a._gsTweenID;if(T[f||(a._gsTweenID=f=\"t\"+U++)]||(T[f]={target:a,tweens:[]}),b&&(d=T[f].tweens,d[e=d.length]=b,c))for(;--e>-1;)d[e]===b&&d.splice(e,1);return T[f].tweens},aa=function(a,b,c,d){var e,f,g=a.vars.onOverwrite;return g&&(e=g(a,b,c,d)),g=H.onOverwrite,g&&(f=g(a,b,c,d)),e!==!1&&f!==!1},ba=function(a,b,c,d,e){var f,g,h,i;if(1===d||d>=4){for(i=e.length,f=0;i>f;f++)if((h=e[f])!==b)h._gc||h._kill(null,a,b)&&(g=!0);else if(5===d)break;return g}var j,k=b._startTime+n,l=[],m=0,o=0===b._duration;for(f=e.length;--f>-1;)(h=e[f])===b||h._gc||h._paused||(h._timeline!==b._timeline?(j=j||ca(b,0,o),0===ca(h,j,o)&&(l[m++]=h)):h._startTime<=k&&h._startTime+h.totalDuration()/h._timeScale>k&&((o||!h._initted)&&k-h._startTime<=2e-10||(l[m++]=h)));for(f=m;--f>-1;)if(h=l[f],i=h._firstPT,2===d&&h._kill(c,a,b)&&(g=!0),2!==d||!h._firstPT&&h._initted&&i){if(2!==d&&!aa(h,b))continue;h._enabled(!1,!1)&&(g=!0)}return g},ca=function(a,b,c){for(var d=a._timeline,e=d._timeScale,f=a._startTime;d._timeline;){if(f+=d._startTime,e*=d._timeScale,d._paused)return-100;d=d._timeline}return f/=e,f>b?f-b:c&&f===b||!a._initted&&2*n>f-b?n:(f+=a.totalDuration()/a._timeScale/e)>b+n?0:f-b-n};i._init=function(){var a,b,c,d,e,f,g=this.vars,h=this._overwrittenProps,i=this._duration,j=!!g.immediateRender,k=g.ease;if(g.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),e={};for(d in g.startAt)e[d]=g.startAt[d];if(e.data=\"isStart\",e.overwrite=!1,e.immediateRender=!0,e.lazy=j&&g.lazy!==!1,e.startAt=e.delay=null,e.onUpdate=g.onUpdate,e.onUpdateParams=g.onUpdateParams,e.onUpdateScope=g.onUpdateScope||g.callbackScope||this,this._startAt=H.to(this.target||{},0,e),j)if(this._time>0)this._startAt=null;else if(0!==i)return}else if(g.runBackwards&&0!==i)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(j=!1),c={};for(d in g)V[d]&&\"autoCSS\"!==d||(c[d]=g[d]);if(c.overwrite=0,c.data=\"isFromStart\",c.lazy=j&&g.lazy!==!1,c.immediateRender=j,this._startAt=H.to(this.target,0,c),j){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=k=k?k instanceof w?k:\"function\"==typeof k?new w(k,g.easeParams):x[k]||H.defaultEase:H.defaultEase,g.easeParams instanceof Array&&k.config&&(this._ease=k.config.apply(k,g.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(f=this._targets.length,a=0;f>a;a++)this._initProps(this._targets[a],this._propLookup[a]={},this._siblings[a],h?h[a]:null,a)&&(b=!0);else b=this._initProps(this.target,this._propLookup,this._siblings,h,0);if(b&&H._onPluginEvent(\"_onInitAllProps\",this),h&&(this._firstPT||\"function\"!=typeof this.target&&this._enabled(!1,!1)),g.runBackwards)for(c=this._firstPT;c;)c.s+=c.c,c.c=-c.c,c=c._next;this._onUpdate=g.onUpdate,this._initted=!0},i._initProps=function(b,c,d,e,f){var g,h,i,j,k,l;if(null==b)return!1;L[b._gsTweenID]&&$(),this.vars.css||b.style&&b!==a&&b.nodeType&&S.css&&this.vars.autoCSS!==!1&&J(this.vars,b);for(g in this.vars)if(l=this.vars[g],V[g])l&&(l instanceof Array||l.push&&q(l))&&-1!==l.join(\"\").indexOf(\"{self}\")&&(this.vars[g]=l=this._swapSelfInParams(l,this));else if(S[g]&&(j=new S[g])._onInitTween(b,this.vars[g],this,f)){for(this._firstPT=k={_next:this._firstPT,t:j,p:\"setRatio\",s:0,c:1,f:1,n:g,pg:1,pr:j._priority,m:0},h=j._overwriteProps.length;--h>-1;)c[j._overwriteProps[h]]=this._firstPT;(j._priority||j._onInitAllProps)&&(i=!0),(j._onDisable||j._onEnable)&&(this._notifyPluginsOfEnabled=!0),k._next&&(k._next._prev=k)}else c[g]=Q.call(this,b,g,\"get\",l,g,0,null,this.vars.stringFilter,f);return e&&this._kill(e,b)?this._initProps(b,c,d,e,f):this._overwrite>1&&this._firstPT&&d.length>1&&ba(b,this,c,this._overwrite,d)?(this._kill(c,b),this._initProps(b,c,d,e,f)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(L[b._gsTweenID]=!0),i)},i.render=function(a,b,c){var d,e,f,g,h=this._time,i=this._duration,j=this._rawPrevTime;if(a>=i-1e-7&&a>=0)this._totalTime=this._time=i,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===i&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>j||0>=a&&a>=-1e-7||j===n&&\"isPause\"!==this.data)&&j!==a&&(c=!0,j>n&&(e=\"onReverseComplete\")),this._rawPrevTime=g=!b||a||j===a?a:n);else if(1e-7>a)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==h||0===i&&j>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===i&&(this._initted||!this.vars.lazy||c)&&(j>=0&&(j!==n||\"isPause\"!==this.data)&&(c=!0),this._rawPrevTime=g=!b||a||j===a?a:n)),(!this._initted||this._startAt&&this._startAt.progress())&&(c=!0);else if(this._totalTime=this._time=a,this._easeType){var k=a/i,l=this._easeType,m=this._easePower;(1===l||3===l&&k>=.5)&&(k=1-k),3===l&&(k*=2),1===m?k*=k:2===m?k*=k*k:3===m?k*=k*k*k:4===m&&(k*=k*k*k*k),1===l?this.ratio=1-k:2===l?this.ratio=k:.5>a/i?this.ratio=k/2:this.ratio=1-k/2}else this.ratio=this._ease.getRatio(a/i);if(this._time!==h||c){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=h,this._rawPrevTime=j,K.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/i):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==h&&a>=0&&(this._active=!0),0===h&&(this._startAt&&(a>=0?this._startAt.render(a,!0,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._time||0===i)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&a!==-1e-4&&this._startAt.render(a,!0,c),b||(this._time!==h||d||c)&&this._callback(\"onUpdate\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&a!==-1e-4&&this._startAt.render(a,!0,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===i&&this._rawPrevTime===n&&g!==n&&(this._rawPrevTime=0))}},i._kill=function(a,b,c){if(\"all\"===a&&(a=null),null==a&&(null==b||b===this.target))return this._lazy=!1,this._enabled(!1,!1);b=\"string\"!=typeof b?b||this._targets||this.target:H.selector(b)||b;var d,e,f,g,h,i,j,k,l,m=c&&this._time&&c._startTime===this._startTime&&this._timeline===c._timeline,n=this._firstPT;if((q(b)||I(b))&&\"number\"!=typeof b[0])for(d=b.length;--d>-1;)this._kill(a,b[d],c)&&(i=!0);else{if(this._targets){for(d=this._targets.length;--d>-1;)if(b===this._targets[d]){h=this._propLookup[d]||{},this._overwrittenProps=this._overwrittenProps||[],e=this._overwrittenProps[d]=a?this._overwrittenProps[d]||{}:\"all\";break}}else{if(b!==this.target)return!1;h=this._propLookup,e=this._overwrittenProps=a?this._overwrittenProps||{}:\"all\"}if(h){if(j=a||h,k=a!==e&&\"all\"!==e&&a!==h&&(\"object\"!=typeof a||!a._tempKill),c&&(H.onOverwrite||this.vars.onOverwrite)){for(f in j)h[f]&&(l||(l=[]),l.push(f));if((l||!a)&&!aa(this,c,b,l))return!1}for(f in j)(g=h[f])&&(m&&(g.f?g.t[g.p](g.s):g.t[g.p]=g.s,i=!0),g.pg&&g.t._kill(j)&&(i=!0),g.pg&&0!==g.t._overwriteProps.length||(g._prev?g._prev._next=g._next:g===this._firstPT&&(this._firstPT=g._next),g._next&&(g._next._prev=g._prev),g._next=g._prev=null),delete h[f]),k&&(e[f]=1);!this._firstPT&&this._initted&&n&&this._enabled(!1,!1)}}return i},i.invalidate=function(){return this._notifyPluginsOfEnabled&&H._onPluginEvent(\"_onDisable\",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],E.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-n,this.render(Math.min(0,-this._delay))),this},i._enabled=function(a,b){if(k||j.wake(),a&&this._gc){var c,d=this._targets;if(d)for(c=d.length;--c>-1;)this._siblings[c]=_(d[c],this,!0);else this._siblings=_(this.target,this,!0)}return E.prototype._enabled.call(this,a,b),this._notifyPluginsOfEnabled&&this._firstPT?H._onPluginEvent(a?\"_onEnable\":\"_onDisable\",this):!1},H.to=function(a,b,c){return new H(a,b,c)},H.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new H(a,b,c)},H.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new H(a,b,d)},H.delayedCall=function(a,b,c,d,e){return new H(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,lazy:!1,useFrames:e,overwrite:0})},H.set=function(a,b){return new H(a,0,b)},H.getTweensOf=function(a,b){if(null==a)return[];a=\"string\"!=typeof a?a:H.selector(a)||a;var c,d,e,f;if((q(a)||I(a))&&\"number\"!=typeof a[0]){for(c=a.length,d=[];--c>-1;)d=d.concat(H.getTweensOf(a[c],b));for(c=d.length;--c>-1;)for(f=d[c],e=c;--e>-1;)f===d[e]&&d.splice(c,1)}else if(a._gsTweenID)for(d=_(a).concat(),c=d.length;--c>-1;)(d[c]._gc||b&&!d[c].isActive())&&d.splice(c,1);return d||[]},H.killTweensOf=H.killDelayedCallsTo=function(a,b,c){\"object\"==typeof b&&(c=b,b=!1);for(var d=H.getTweensOf(a,b),e=d.length;--e>-1;)d[e]._kill(c,a)};var da=u(\"plugins.TweenPlugin\",function(a,b){this._overwriteProps=(a||\"\").split(\",\"),this._propName=this._overwriteProps[0],this._priority=b||0,this._super=da.prototype},!0);if(i=da.prototype,da.version=\"1.19.0\",da.API=2,i._firstPT=null,i._addTween=Q,i.setRatio=O,i._kill=function(a){var b,c=this._overwriteProps,d=this._firstPT;if(null!=a[this._propName])this._overwriteProps=[];else for(b=c.length;--b>-1;)null!=a[c[b]]&&c.splice(b,1);for(;d;)null!=a[d.n]&&(d._next&&(d._next._prev=d._prev),d._prev?(d._prev._next=d._next,d._prev=null):this._firstPT===d&&(this._firstPT=d._next)),d=d._next;return!1},i._mod=i._roundProps=function(a){for(var b,c=this._firstPT;c;)b=a[this._propName]||null!=c.n&&a[c.n.split(this._propName+\"_\").join(\"\")],b&&\"function\"==typeof b&&(2===c.f?c.t._applyPT.m=b:c.m=b),c=c._next},H._onPluginEvent=function(a,b){var c,d,e,f,g,h=b._firstPT;if(\"_onInitAllProps\"===a){for(;h;){for(g=h._next,d=e;d&&d.pr>h.pr;)d=d._next;(h._prev=d?d._prev:f)?h._prev._next=h:e=h,(h._next=d)?d._prev=h:f=h,h=g}h=b._firstPT=e}for(;h;)h.pg&&\"function\"==typeof h.t[a]&&h.t[a]()&&(c=!0),h=h._next;return c},da.activate=function(a){for(var b=a.length;--b>-1;)a[b].API===da.API&&(S[(new a[b])._propName]=a[b]);return!0},t.plugin=function(a){if(!(a&&a.propName&&a.init&&a.API))throw\"illegal plugin definition.\";var b,c=a.propName,d=a.priority||0,e=a.overwriteProps,f={init:\"_onInitTween\",set:\"setRatio\",kill:\"_kill\",round:\"_mod\",mod:\"_mod\",initAll:\"_onInitAllProps\"},g=u(\"plugins.\"+c.charAt(0).toUpperCase()+c.substr(1)+\"Plugin\",function(){da.call(this,c,d),this._overwriteProps=e||[]},a.global===!0),h=g.prototype=new da(c);h.constructor=g,g.API=a.API;for(b in f)\"function\"==typeof a[b]&&(h[f[b]]=a[b]);return g.version=a.version,da.activate([g]),g},g=a._gsQueue){for(h=0;h<g.length;h++)g[h]();for(i in r)r[i].func||a.console.log(\"GSAP encountered missing dependency: \"+i)}k=!1}(\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window,\"TweenMax\");","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.OBJLoader = function ( manager ) {\r\n\r\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.OBJLoader.prototype = {\r\n\r\n    constructor: THREE.OBJLoader,\r\n\r\n    load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var loader = new THREE.XHRLoader( scope.manager );\r\n        loader.setCrossOrigin( this.crossOrigin );\r\n        loader.load( url, function ( text ) {\r\n\r\n            onLoad( scope.parse( text ) );\r\n\r\n        } );\r\n\r\n    },\r\n\r\n    parse: function ( text ) {\r\n\r\n        function vector( x, y, z ) {\r\n\r\n            return new THREE.Vector3( x, y, z );\r\n\r\n        }\r\n\r\n        function uv( u, v ) {\r\n\r\n            return new THREE.Vector2( u, v );\r\n\r\n        }\r\n\r\n        function face3( a, b, c, normals ) {\r\n\r\n            return new THREE.Face3( a, b, c, normals );\r\n\r\n        }\r\n\r\n        var object = new THREE.Object3D();\r\n        var geometry, material, mesh;\r\n\r\n        // create mesh if no objects in text\r\n\r\n        if ( /^o /gm.test( text ) === false ) {\r\n\r\n            geometry = new THREE.Geometry();\r\n            material = new THREE.MeshLambertMaterial();\r\n            mesh = new THREE.Mesh( geometry, material );\r\n            object.add( mesh );\r\n\r\n        }\r\n\r\n        var vertices = [];\r\n        var verticesCount = 0;\r\n        var normals = [];\r\n        var uvs = [];\r\n\r\n        // v float float float\r\n\r\n        var vertex_pattern = /v( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\r\n\r\n        // vn float float float\r\n\r\n        var normal_pattern = /vn( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\r\n\r\n        // vt float float\r\n\r\n        var uv_pattern = /vt( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\r\n\r\n        // f vertex vertex vertex ...\r\n\r\n        var face_pattern1 = /f( +\\d+)( +\\d+)( +\\d+)( +\\d+)?/;\r\n\r\n        // f vertex/uv vertex/uv vertex/uv ...\r\n\r\n        var face_pattern2 = /f( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))?/;\r\n\r\n        // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\r\n\r\n        var face_pattern3 = /f( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))?/;\r\n\r\n        // f vertex//normal vertex//normal vertex//normal ...\r\n\r\n        var face_pattern4 = /f( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))?/\r\n\r\n        //\r\n\r\n        var lines = text.split( '\\n' );\r\n\r\n        for ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n            var line = lines[ i ];\r\n            line = line.trim();\r\n\r\n            var result;\r\n\r\n            if ( line.length === 0 || line.charAt( 0 ) === '#' ) {\r\n\r\n                continue;\r\n\r\n            } else if ( ( result = vertex_pattern.exec( line ) ) !== null ) {\r\n\r\n                // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n\r\n                vertices.push( vector(\r\n                    parseFloat( result[ 1 ] ),\r\n                    parseFloat( result[ 2 ] ),\r\n                    parseFloat( result[ 3 ] )\r\n                ) );\r\n\r\n            } else if ( ( result = normal_pattern.exec( line ) ) !== null ) {\r\n\r\n                // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n\r\n                normals.push( vector(\r\n                    parseFloat( result[ 1 ] ),\r\n                    parseFloat( result[ 2 ] ),\r\n                    parseFloat( result[ 3 ] )\r\n                ) );\r\n\r\n            } else if ( ( result = uv_pattern.exec( line ) ) !== null ) {\r\n\r\n                // [\"vt 0.1 0.2\", \"0.1\", \"0.2\"]\r\n\r\n                uvs.push( uv(\r\n                    parseFloat( result[ 1 ] ),\r\n                    parseFloat( result[ 2 ] )\r\n                ) );\r\n\r\n            } else if ( ( result = face_pattern1.exec( line ) ) !== null ) {\r\n\r\n                // [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\r\n\r\n                if ( result[ 4 ] === undefined ) {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 1 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 3 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount ++,\r\n                        verticesCount ++,\r\n                        verticesCount ++\r\n                    ) );\r\n\r\n                } else {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 1 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 3 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 4 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount,\r\n                        verticesCount + 1,\r\n                        verticesCount + 3\r\n                    ) );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount + 1,\r\n                        verticesCount + 2,\r\n                        verticesCount + 3\r\n                    ) );\r\n\r\n                    verticesCount += 4;\r\n\r\n                }\r\n\r\n            } else if ( ( result = face_pattern2.exec( line ) ) !== null ) {\r\n\r\n                // [\"f 1/1 2/2 3/3\", \" 1/1\", \"1\", \"1\", \" 2/2\", \"2\", \"2\", \" 3/3\", \"3\", \"3\", undefined, undefined, undefined]\r\n\r\n                if ( result[ 10 ] === undefined ) {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 5 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 8 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount ++,\r\n                        verticesCount ++,\r\n                        verticesCount ++\r\n                    ) );\r\n\r\n                    geometry.faceVertexUvs[ 0 ].push( [\r\n                        uvs[ parseInt( result[ 3 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 6 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 9 ] ) - 1 ]\r\n                    ] );\r\n\r\n                } else {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 5 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 8 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 11 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount,\r\n                        verticesCount + 1,\r\n                        verticesCount + 3\r\n                    ) );\r\n\r\n                    geometry.faceVertexUvs[ 0 ].push( [\r\n                        uvs[ parseInt( result[ 3 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 6 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 12 ] ) - 1 ]\r\n                    ] );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount + 1,\r\n                        verticesCount + 2,\r\n                        verticesCount + 3\r\n                    ) );\r\n\r\n                    geometry.faceVertexUvs[ 0 ].push( [\r\n                        uvs[ parseInt( result[ 6 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 9 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 12 ] ) - 1 ]\r\n                    ] );\r\n\r\n                    verticesCount += 4;\r\n\r\n                }\r\n\r\n            } else if ( ( result = face_pattern3.exec( line ) ) !== null ) {\r\n\r\n                // [\"f 1/1/1 2/2/2 3/3/3\", \" 1/1/1\", \"1\", \"1\", \"1\", \" 2/2/2\", \"2\", \"2\", \"2\", \" 3/3/3\", \"3\", \"3\", \"3\", undefined, undefined, undefined, undefined]\r\n\r\n                if ( result[ 13 ] === undefined ) {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 6 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 10 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount ++,\r\n                        verticesCount ++,\r\n                        verticesCount ++,\r\n                        [\r\n                            normals[ parseInt( result[ 4 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 8 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 12 ] ) - 1 ]\r\n                        ]\r\n                    ) );\r\n\r\n                    geometry.faceVertexUvs[ 0 ].push( [\r\n                        uvs[ parseInt( result[ 3 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 7 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 11 ] ) - 1 ]\r\n                    ] );\r\n\r\n                } else {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 6 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 10 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 14 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount,\r\n                        verticesCount + 1,\r\n                        verticesCount + 3,\r\n                        [\r\n                            normals[ parseInt( result[ 4 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 8 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 16 ] ) - 1 ]\r\n                        ]\r\n                    ) );\r\n\r\n                    geometry.faceVertexUvs[ 0 ].push( [\r\n                        uvs[ parseInt( result[ 3 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 7 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 15 ] ) - 1 ]\r\n                    ] );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount + 1,\r\n                        verticesCount + 2,\r\n                        verticesCount + 3,\r\n                        [\r\n                            normals[ parseInt( result[ 8 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 12 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 16 ] ) - 1 ]\r\n                        ]\r\n                    ) );\r\n\r\n                    geometry.faceVertexUvs[ 0 ].push( [\r\n                        uvs[ parseInt( result[ 7 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 11 ] ) - 1 ],\r\n                        uvs[ parseInt( result[ 15 ] ) - 1 ]\r\n                    ] );\r\n\r\n                    verticesCount += 4;\r\n\r\n                }\r\n\r\n            } else if ( ( result = face_pattern4.exec( line ) ) !== null ) {\r\n\r\n                // [\"f 1//1 2//2 3//3\", \" 1//1\", \"1\", \"1\", \" 2//2\", \"2\", \"2\", \" 3//3\", \"3\", \"3\", undefined, undefined, undefined]\r\n\r\n                if ( result[ 10 ] === undefined ) {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 5 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 8 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount ++,\r\n                        verticesCount ++,\r\n                        verticesCount ++,\r\n                        [\r\n                            normals[ parseInt( result[ 3 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 6 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 9 ] ) - 1 ]\r\n                        ]\r\n                    ) );\r\n\r\n                } else {\r\n\r\n                    geometry.vertices.push(\r\n                        vertices[ parseInt( result[ 2 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 5 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 8 ] ) - 1 ],\r\n                        vertices[ parseInt( result[ 11 ] ) - 1 ]\r\n                    );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount,\r\n                        verticesCount + 1,\r\n                        verticesCount + 3,\r\n                        [\r\n                            normals[ parseInt( result[ 3 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 6 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 12 ] ) - 1 ]\r\n                        ]\r\n                    ) );\r\n\r\n                    geometry.faces.push( face3(\r\n                        verticesCount + 1,\r\n                        verticesCount + 2,\r\n                        verticesCount + 3,\r\n                        [\r\n                            normals[ parseInt( result[ 6 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 9 ] ) - 1 ],\r\n                            normals[ parseInt( result[ 12 ] ) - 1 ]\r\n                        ]\r\n                    ) );\r\n\r\n                    verticesCount += 4;\r\n\r\n                }\r\n\r\n            } else if ( /^o /.test( line ) ) {\r\n\r\n                // object\r\n\r\n                geometry = new THREE.Geometry();\r\n                material = new THREE.MeshLambertMaterial();\r\n\r\n                mesh = new THREE.Mesh( geometry, material );\r\n                mesh.name = line.substring( 2 ).trim();\r\n                object.add( mesh );\r\n\r\n                verticesCount = 0;\r\n\r\n            } else if ( /^g /.test( line ) ) {\r\n\r\n                // group\r\n\r\n            } else if ( /^usemtl /.test( line ) ) {\r\n\r\n                // material\r\n\r\n                material.name = line.substring( 7 ).trim();\r\n\r\n            } else if ( /^mtllib /.test( line ) ) {\r\n\r\n                // mtl file\r\n\r\n            } else if ( /^s /.test( line ) ) {\r\n\r\n                // smooth shading\r\n\r\n            } else {\r\n\r\n                // console.log( \"THREE.OBJLoader: Unhandled line \" + line );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n            var geometry = object.children[ i ].geometry;\r\n\r\n            geometry.computeCentroids();\r\n            geometry.computeFaceNormals();\r\n            geometry.computeBoundingSphere();\r\n\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n};","/*!\r\n * Modernizr v2.8.3\r\n * www.modernizr.com\r\n *\r\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\r\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in\r\n * the current UA and makes the results available to you in two ways:\r\n * as properties on a global Modernizr object, and as classes on the\r\n * <html> element. This information allows you to progressively enhance\r\n * your pages with a granular level of control over the experience.\r\n *\r\n * Modernizr has an optional (not included) conditional resource loader\r\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\r\n * To get a build that includes Modernizr.load(), as well as choosing\r\n * which tests to include, go to www.modernizr.com/download/\r\n *\r\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\r\n * Contributors   Ryan Seddon, Ben Alman\r\n */\r\n\r\nwindow.Modernizr = (function( window, document, undefined ) {\r\n\r\n    var version = '2.8.3',\r\n\r\n        Modernizr = {},\r\n\r\n        /*>>cssclasses*/\r\n        // option for enabling the HTML classes to be added\r\n        enableClasses = true,\r\n        /*>>cssclasses*/\r\n\r\n        docElement = document.documentElement,\r\n\r\n        /**\r\n         * Create our \"modernizr\" element that we do most feature tests on.\r\n         */\r\n        mod = 'modernizr',\r\n        modElem = document.createElement(mod),\r\n        mStyle = modElem.style,\r\n\r\n        /**\r\n         * Create the input element for various Web Forms feature tests.\r\n         */\r\n        inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\r\n\r\n        /*>>smile*/\r\n        smile = ':)',\r\n        /*>>smile*/\r\n\r\n        toString = {}.toString,\r\n\r\n        // TODO :: make the prefixes more granular\r\n        /*>>prefixes*/\r\n        // List of property values to set for css tests. See ticket #21\r\n        prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\r\n        /*>>prefixes*/\r\n\r\n        /*>>domprefixes*/\r\n        // Following spec is to expose vendor-specific style properties as:\r\n        //   elem.style.WebkitBorderRadius\r\n        // and the following would be incorrect:\r\n        //   elem.style.webkitBorderRadius\r\n\r\n        // Webkit ghosts their properties in lowercase but Opera & Moz do not.\r\n        // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n        //   erik.eae.net/archives/2008/03/10/21.48.10/\r\n\r\n        // More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n        omPrefixes = 'Webkit Moz O ms',\r\n\r\n        cssomPrefixes = omPrefixes.split(' '),\r\n\r\n        domPrefixes = omPrefixes.toLowerCase().split(' '),\r\n        /*>>domprefixes*/\r\n\r\n        /*>>ns*/\r\n        ns = {'svg': 'http://www.w3.org/2000/svg'},\r\n        /*>>ns*/\r\n\r\n        tests = {},\r\n        inputs = {},\r\n        attrs = {},\r\n\r\n        classes = [],\r\n\r\n        slice = classes.slice,\r\n\r\n        featureName, // used in testing loop\r\n\r\n\r\n        /*>>teststyles*/\r\n        // Inject element with style element and some CSS rules\r\n        injectElementWithStyles = function( rule, callback, nodes, testnames ) {\r\n\r\n            var style, ret, node, docOverflow,\r\n                div = document.createElement('div'),\r\n                // After page load injecting a fake body doesn't work so check if body exists\r\n                body = document.body,\r\n                // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\r\n                fakeBody = body || document.createElement('body');\r\n\r\n            if ( parseInt(nodes, 10) ) {\r\n                // In order not to give false positives we create a node for each test\r\n                // This also allows the method to scale for unspecified uses\r\n                while ( nodes-- ) {\r\n                    node = document.createElement('div');\r\n                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n                    div.appendChild(node);\r\n                }\r\n            }\r\n\r\n            // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\r\n            // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\r\n            // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\r\n            // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\r\n            // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\r\n            style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\r\n            div.id = mod;\r\n            // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n            // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n            (body ? div : fakeBody).innerHTML += style;\r\n            fakeBody.appendChild(div);\r\n            if ( !body ) {\r\n                //avoid crashing IE8, if background image is used\r\n                fakeBody.style.background = '';\r\n                //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\r\n                fakeBody.style.overflow = 'hidden';\r\n                docOverflow = docElement.style.overflow;\r\n                docElement.style.overflow = 'hidden';\r\n                docElement.appendChild(fakeBody);\r\n            }\r\n\r\n            ret = callback(div, rule);\r\n            // If this is done after page load we don't want to remove the body so check if body exists\r\n            if ( !body ) {\r\n                fakeBody.parentNode.removeChild(fakeBody);\r\n                docElement.style.overflow = docOverflow;\r\n            } else {\r\n                div.parentNode.removeChild(div);\r\n            }\r\n\r\n            return !!ret;\r\n\r\n        },\r\n        /*>>teststyles*/\r\n\r\n        /*>>mq*/\r\n        // adapted from matchMedia polyfill\r\n        // by Scott Jehl and Paul Irish\r\n        // gist.github.com/786768\r\n        testMediaQuery = function( mq ) {\r\n\r\n            var matchMedia = window.matchMedia || window.msMatchMedia;\r\n            if ( matchMedia ) {\r\n                return matchMedia(mq) && matchMedia(mq).matches || false;\r\n            }\r\n\r\n            var bool;\r\n\r\n            injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\r\n                bool = (window.getComputedStyle ?\r\n                    getComputedStyle(node, null) :\r\n                    node.currentStyle)['position'] == 'absolute';\r\n            });\r\n\r\n            return bool;\r\n\r\n        },\r\n        /*>>mq*/\r\n\r\n\r\n        /*>>hasevent*/\r\n        //\r\n        // isEventSupported determines if a given element supports the given event\r\n        // kangax.github.com/iseventsupported/\r\n        //\r\n        // The following results are known incorrects:\r\n        //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\r\n        //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\r\n        //   ...\r\n        isEventSupported = (function() {\r\n\r\n            var TAGNAMES = {\r\n                'select': 'input', 'change': 'input',\r\n                'submit': 'form', 'reset': 'form',\r\n                'error': 'img', 'load': 'img', 'abort': 'img'\r\n            };\r\n\r\n            function isEventSupported( eventName, element ) {\r\n\r\n                element = element || document.createElement(TAGNAMES[eventName] || 'div');\r\n                eventName = 'on' + eventName;\r\n\r\n                // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\r\n                var isSupported = eventName in element;\r\n\r\n                if ( !isSupported ) {\r\n                    // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\r\n                    if ( !element.setAttribute ) {\r\n                        element = document.createElement('div');\r\n                    }\r\n                    if ( element.setAttribute && element.removeAttribute ) {\r\n                        element.setAttribute(eventName, '');\r\n                        isSupported = is(element[eventName], 'function');\r\n\r\n                        // If property was created, \"remove it\" (by setting value to `undefined`)\r\n                        if ( !is(element[eventName], 'undefined') ) {\r\n                            element[eventName] = undefined;\r\n                        }\r\n                        element.removeAttribute(eventName);\r\n                    }\r\n                }\r\n\r\n                element = null;\r\n                return isSupported;\r\n            }\r\n            return isEventSupported;\r\n        })(),\r\n        /*>>hasevent*/\r\n\r\n        // TODO :: Add flag for hasownprop ? didn't last time\r\n\r\n        // hasOwnProperty shim by kangax needed for Safari 2.0 support\r\n        _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\r\n\r\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\r\n        hasOwnProp = function (object, property) {\r\n            return _hasOwnProperty.call(object, property);\r\n        };\r\n    }\r\n    else {\r\n        hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\r\n            return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\r\n        };\r\n    }\r\n\r\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\r\n    // es5.github.com/#x15.3.4.5\r\n\r\n    if (!Function.prototype.bind) {\r\n        Function.prototype.bind = function bind(that) {\r\n\r\n            var target = this;\r\n\r\n            if (typeof target != \"function\") {\r\n                throw new TypeError();\r\n            }\r\n\r\n            var args = slice.call(arguments, 1),\r\n                bound = function () {\r\n\r\n                    if (this instanceof bound) {\r\n\r\n                        var F = function(){};\r\n                        F.prototype = target.prototype;\r\n                        var self = new F();\r\n\r\n                        var result = target.apply(\r\n                            self,\r\n                            args.concat(slice.call(arguments))\r\n                        );\r\n                        if (Object(result) === result) {\r\n                            return result;\r\n                        }\r\n                        return self;\r\n\r\n                    } else {\r\n\r\n                        return target.apply(\r\n                            that,\r\n                            args.concat(slice.call(arguments))\r\n                        );\r\n\r\n                    }\r\n\r\n                };\r\n\r\n            return bound;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * setCss applies given styles to the Modernizr DOM node.\r\n     */\r\n    function setCss( str ) {\r\n        mStyle.cssText = str;\r\n    }\r\n\r\n    /**\r\n     * setCssAll extrapolates all vendor-specific css strings.\r\n     */\r\n    function setCssAll( str1, str2 ) {\r\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\r\n    }\r\n\r\n    /**\r\n     * is returns a boolean for if typeof obj is exactly type.\r\n     */\r\n    function is( obj, type ) {\r\n        return typeof obj === type;\r\n    }\r\n\r\n    /**\r\n     * contains returns a boolean for if substr is found within str.\r\n     */\r\n    function contains( str, substr ) {\r\n        return !!~('' + str).indexOf(substr);\r\n    }\r\n\r\n    /*>>testprop*/\r\n\r\n    // testProps is a generic CSS / DOM property test.\r\n\r\n    // In testing support for a given CSS property, it's legit to test:\r\n    //    `elem.style[styleName] !== undefined`\r\n    // If the property is supported it will return an empty string,\r\n    // if unsupported it will return undefined.\r\n\r\n    // We'll take advantage of this quick test and skip setting a style\r\n    // on our modernizr element, but instead just testing undefined vs\r\n    // empty string.\r\n\r\n    // Because the testing of the CSS property names (with \"-\", as\r\n    // opposed to the camelCase DOM properties) is non-portable and\r\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\r\n    // we explicitly reject properties with dashes so that authors\r\n    // developing in WebKit or IE first don't end up with\r\n    // browser-specific content by accident.\r\n\r\n    function testProps( props, prefixed ) {\r\n        for ( var i in props ) {\r\n            var prop = props[i];\r\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\r\n                return prefixed == 'pfx' ? prop : true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /*>>testprop*/\r\n\r\n    // TODO :: add testDOMProps\r\n    /**\r\n     * testDOMProps is a generic DOM property test; if a browser supports\r\n     *   a certain property, it won't return undefined for it.\r\n     */\r\n    function testDOMProps( props, obj, elem ) {\r\n        for ( var i in props ) {\r\n            var item = obj[props[i]];\r\n            if ( item !== undefined) {\r\n\r\n                // return the property name as a string\r\n                if (elem === false) return props[i];\r\n\r\n                // let's bind a function\r\n                if (is(item, 'function')){\r\n                    // default to autobind unless override\r\n                    return item.bind(elem || obj);\r\n                }\r\n\r\n                // return the unbound function or obj or value\r\n                return item;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*>>testallprops*/\r\n    /**\r\n     * testPropsAll tests a list of DOM properties we want to check against.\r\n     *   We specify literally ALL possible (known and/or likely) properties on\r\n     *   the element including the non-vendor prefixed one, for forward-\r\n     *   compatibility.\r\n     */\r\n    function testPropsAll( prop, prefixed, elem ) {\r\n\r\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\r\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\r\n\r\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\r\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\r\n            return testProps(props, prefixed);\r\n\r\n            // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\r\n        } else {\r\n            props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\r\n            return testDOMProps(props, prefixed, elem);\r\n        }\r\n    }\r\n    /*>>testallprops*/\r\n\r\n\r\n    /**\r\n     * Tests\r\n     * -----\r\n     */\r\n\r\n    // The *new* flexbox\r\n    // dev.w3.org/csswg/css3-flexbox\r\n\r\n    tests['flexbox'] = function() {\r\n        return testPropsAll('flexWrap');\r\n    };\r\n\r\n    // The *old* flexbox\r\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\r\n\r\n    tests['flexboxlegacy'] = function() {\r\n        return testPropsAll('boxDirection');\r\n    };\r\n\r\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\r\n    // so we actually have to call getContext() to verify\r\n    // github.com/Modernizr/Modernizr/issues/issue/97/\r\n\r\n    tests['canvas'] = function() {\r\n        var elem = document.createElement('canvas');\r\n        return !!(elem.getContext && elem.getContext('2d'));\r\n    };\r\n\r\n    tests['canvastext'] = function() {\r\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\r\n    };\r\n\r\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\r\n\r\n    // We do a soft detect which may false positive in order to avoid\r\n    // an expensive context creation: bugzil.la/732441\r\n\r\n    tests['webgl'] = function() {\r\n        return !!window.WebGLRenderingContext;\r\n    };\r\n\r\n    /*\r\n     * The Modernizr.touch test only indicates if the browser supports\r\n     *    touch events, which does not necessarily reflect a touchscreen\r\n     *    device, as evidenced by tablets running Windows 7 or, alas,\r\n     *    the Palm Pre / WebOS (touch) phones.\r\n     *\r\n     * Additionally, Chrome (desktop) used to lie about its support on this,\r\n     *    but that has since been rectified: crbug.com/36415\r\n     *\r\n     * We also test for Firefox 4 Multitouch Support.\r\n     *\r\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\r\n     */\r\n\r\n    tests['touch'] = function() {\r\n        var bool;\r\n\r\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n            bool = true;\r\n        } else {\r\n            injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\r\n                bool = node.offsetTop === 9;\r\n            });\r\n        }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // geolocation is often considered a trivial feature detect...\r\n    // Turns out, it's quite tricky to get right:\r\n    //\r\n    // Using !!navigator.geolocation does two things we don't want. It:\r\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\r\n    //   2. Disables page caching in WebKit: webk.it/43956\r\n    //\r\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\r\n    // a false positive that would throw an exception: bugzil.la/688158\r\n\r\n    tests['geolocation'] = function() {\r\n        return 'geolocation' in navigator;\r\n    };\r\n\r\n\r\n    tests['postmessage'] = function() {\r\n        return !!window.postMessage;\r\n    };\r\n\r\n\r\n    // Chrome incognito mode used to throw an exception when using openDatabase\r\n    // It doesn't anymore.\r\n    tests['websqldatabase'] = function() {\r\n        return !!window.openDatabase;\r\n    };\r\n\r\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\r\n    // - Webkit's implementation is accessible through webkitIndexedDB\r\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\r\n    // For speed, we don't test the legacy (and beta-only) indexedDB\r\n    tests['indexedDB'] = function() {\r\n        return !!testPropsAll(\"indexedDB\", window);\r\n    };\r\n\r\n    // documentMode logic from YUI to filter out IE8 Compat Mode\r\n    //   which false positives.\r\n    tests['hashchange'] = function() {\r\n        return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\r\n    };\r\n\r\n    // Per 1.6:\r\n    // This used to be Modernizr.historymanagement but the longer\r\n    // name has been deprecated in favor of a shorter and property-matching one.\r\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\r\n    // and in the first release thereafter disappear entirely.\r\n    tests['history'] = function() {\r\n        return !!(window.history && history.pushState);\r\n    };\r\n\r\n    tests['draganddrop'] = function() {\r\n        var div = document.createElement('div');\r\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\r\n    };\r\n\r\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\r\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\r\n    // FF10 still uses prefixes, so check for it until then.\r\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\r\n    tests['websockets'] = function() {\r\n        return 'WebSocket' in window || 'MozWebSocket' in window;\r\n    };\r\n\r\n\r\n    // css-tricks.com/rgba-browser-support/\r\n    tests['rgba'] = function() {\r\n        // Set an rgba() color and check the returned value\r\n\r\n        setCss('background-color:rgba(150,255,150,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba');\r\n    };\r\n\r\n    tests['hsla'] = function() {\r\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\r\n        //   except IE9 who retains it as hsla\r\n\r\n        setCss('background-color:hsla(120,40%,100%,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\r\n    };\r\n\r\n    tests['multiplebgs'] = function() {\r\n        // Setting multiple images AND a color on the background shorthand property\r\n        //  and then querying the style.background property value for the number of\r\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\r\n\r\n        setCss('background:url(https://),url(https://),red url(https://)');\r\n\r\n        // If the UA supports multiple backgrounds, there should be three occurrences\r\n        //   of the string \"url(\" in the return value for elemStyle.background\r\n\r\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\r\n    };\r\n\r\n\r\n\r\n    // this will false positive in Opera Mini\r\n    //   github.com/Modernizr/Modernizr/issues/396\r\n\r\n    tests['backgroundsize'] = function() {\r\n        return testPropsAll('backgroundSize');\r\n    };\r\n\r\n    tests['borderimage'] = function() {\r\n        return testPropsAll('borderImage');\r\n    };\r\n\r\n\r\n    // Super comprehensive table about all the unique implementations of\r\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\r\n\r\n    tests['borderradius'] = function() {\r\n        return testPropsAll('borderRadius');\r\n    };\r\n\r\n    // WebOS unfortunately false positives on this test.\r\n    tests['boxshadow'] = function() {\r\n        return testPropsAll('boxShadow');\r\n    };\r\n\r\n    // FF3.0 will false positive on this test\r\n    tests['textshadow'] = function() {\r\n        return document.createElement('div').style.textShadow === '';\r\n    };\r\n\r\n\r\n    tests['opacity'] = function() {\r\n        // Browsers that actually have CSS Opacity implemented have done so\r\n        //  according to spec, which means their return values are within the\r\n        //  range of [0.0,1.0] - including the leading zero.\r\n\r\n        setCssAll('opacity:.55');\r\n\r\n        // The non-literal . in this regex is intentional:\r\n        //   German Chrome returns this value as 0,55\r\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\r\n        return (/^0.55$/).test(mStyle.opacity);\r\n    };\r\n\r\n\r\n    // Note, Android < 4 will pass this test, but can only animate\r\n    //   a single property at a time\r\n    //   goo.gl/v3V4Gp\r\n    tests['cssanimations'] = function() {\r\n        return testPropsAll('animationName');\r\n    };\r\n\r\n\r\n    tests['csscolumns'] = function() {\r\n        return testPropsAll('columnCount');\r\n    };\r\n\r\n\r\n    tests['cssgradients'] = function() {\r\n        /**\r\n         * For CSS Gradients syntax, please see:\r\n         * webkit.org/blog/175/introducing-css-gradients/\r\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\r\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\r\n         * dev.w3.org/csswg/css3-images/#gradients-\r\n         */\r\n\r\n        var str1 = 'background-image:',\r\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\r\n            str3 = 'linear-gradient(left top,#9f9, white);';\r\n\r\n        setCss(\r\n            // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\r\n            (str1 + '-webkit- '.split(' ').join(str2 + str1) +\r\n                // standard syntax             // trailing 'background-image:'\r\n                prefixes.join(str3 + str1)).slice(0, -str1.length)\r\n        );\r\n\r\n        return contains(mStyle.backgroundImage, 'gradient');\r\n    };\r\n\r\n\r\n    tests['cssreflections'] = function() {\r\n        return testPropsAll('boxReflect');\r\n    };\r\n\r\n\r\n    tests['csstransforms'] = function() {\r\n        return !!testPropsAll('transform');\r\n    };\r\n\r\n\r\n    tests['csstransforms3d'] = function() {\r\n\r\n        var ret = !!testPropsAll('perspective');\r\n\r\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\r\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\r\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\r\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\r\n        if ( ret && 'webkitPerspective' in docElement.style ) {\r\n\r\n            // Webkit allows this media query to succeed only if the feature is enabled.\r\n            // `@media (transform-3d),(-webkit-transform-3d){ ... }`\r\n            injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\r\n                ret = node.offsetLeft === 9 && node.offsetHeight === 3;\r\n            });\r\n        }\r\n        return ret;\r\n    };\r\n\r\n\r\n    tests['csstransitions'] = function() {\r\n        return testPropsAll('transition');\r\n    };\r\n\r\n\r\n    /*>>fontface*/\r\n    // @font-face detection routine by Diego Perini\r\n    // javascript.nwbox.com/CSSSupport/\r\n\r\n    // false positives:\r\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\r\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\r\n    tests['fontface'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\r\n            var style = document.getElementById('smodernizr'),\r\n                sheet = style.sheet || style.styleSheet,\r\n                cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\r\n\r\n            bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n    /*>>fontface*/\r\n\r\n    // CSS generated content detection\r\n    tests['generatedcontent'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\r\n            bool = node.offsetHeight >= 3;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n\r\n    // These tests evaluate support of the video/audio elements, as well as\r\n    // testing what types of content they support.\r\n    //\r\n    // We're using the Boolean constructor here, so that we can extend the value\r\n    // e.g.  Modernizr.video     // true\r\n    //       Modernizr.video.ogg // 'probably'\r\n    //\r\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\r\n    //                     thx to NielsLeenheer and zcorpan\r\n\r\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\r\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\r\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\r\n\r\n    tests['video'] = function() {\r\n        var elem = document.createElement('video'),\r\n            bool = false;\r\n\r\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\r\n\r\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\r\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\r\n\r\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\r\n            }\r\n\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n    tests['audio'] = function() {\r\n        var elem = document.createElement('audio'),\r\n            bool = false;\r\n\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\r\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\r\n\r\n                // Mimetypes accepted:\r\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\r\n                //   bit.ly/iphoneoscodecs\r\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\r\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\r\n                    elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\r\n            }\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // In FF4, if disabled, window.localStorage should === null.\r\n\r\n    // Normally, we could not test that directly and need to do a\r\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\r\n    //   throw bugzil.la/365772 if cookies are disabled\r\n\r\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\r\n    // will throw the exception:\r\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\r\n    // Peculiarly, getItem and removeItem calls do not throw.\r\n\r\n    // Because we are forced to try/catch this, we'll go aggressive.\r\n\r\n    // Just FWIW: IE8 Compat mode supports these features completely:\r\n    //   www.quirksmode.org/dom/html5.html\r\n    // But IE8 doesn't support either with local files\r\n\r\n    tests['localstorage'] = function() {\r\n        try {\r\n            localStorage.setItem(mod, mod);\r\n            localStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    tests['sessionstorage'] = function() {\r\n        try {\r\n            sessionStorage.setItem(mod, mod);\r\n            sessionStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    tests['webworkers'] = function() {\r\n        return !!window.Worker;\r\n    };\r\n\r\n\r\n    tests['applicationcache'] = function() {\r\n        return !!window.applicationCache;\r\n    };\r\n\r\n\r\n    // Thanks to Erik Dahlstrom\r\n    tests['svg'] = function() {\r\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\r\n    };\r\n\r\n    // specifically for SVG inline in HTML, not within XHTML\r\n    // test page: paulirish.com/demo/inline-svg\r\n    tests['inlinesvg'] = function() {\r\n        var div = document.createElement('div');\r\n        div.innerHTML = '<svg/>';\r\n        return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\r\n    };\r\n\r\n    // SVG SMIL animation\r\n    tests['smil'] = function() {\r\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\r\n    };\r\n\r\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\r\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\r\n\r\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\r\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\r\n    tests['svgclippaths'] = function() {\r\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\r\n    };\r\n\r\n    /*>>webforms*/\r\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\r\n    // Hold this guy to execute in a moment.\r\n    function webforms() {\r\n        /*>>input*/\r\n        // Run through HTML5's new input attributes to see if the UA understands any.\r\n        // We're using f which is the <input> element created early on\r\n        // Mike Taylr has created a comprehensive resource for testing these attributes\r\n        //   when applied to all input types:\r\n        //   miketaylr.com/code/input-type-attr.html\r\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\r\n\r\n        // Only input placeholder is tested while textarea's placeholder is not.\r\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\r\n        // Both tests are available in feature-detects/forms-placeholder.js\r\n        Modernizr['input'] = (function( props ) {\r\n            for ( var i = 0, len = props.length; i < len; i++ ) {\r\n                attrs[ props[i] ] = !!(props[i] in inputElem);\r\n            }\r\n            if (attrs.list){\r\n                // safari false positive's on datalist: webk.it/74252\r\n                // see also github.com/Modernizr/Modernizr/issues/146\r\n                attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\r\n            }\r\n            return attrs;\r\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\r\n        /*>>input*/\r\n\r\n        /*>>inputtypes*/\r\n        // Run through HTML5's new input types to see if the UA understands any.\r\n        //   This is put behind the tests runloop because it doesn't return a\r\n        //   true/false like all the other tests; instead, it returns an object\r\n        //   containing each input type with its corresponding true/false value\r\n\r\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\r\n        Modernizr['inputtypes'] = (function(props) {\r\n\r\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\r\n\r\n                inputElem.setAttribute('type', inputElemType = props[i]);\r\n                bool = inputElem.type !== 'text';\r\n\r\n                // We first check to see if the type we give it sticks..\r\n                // If the type does, we feed it a textual value, which shouldn't be valid.\r\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\r\n                if ( bool ) {\r\n\r\n                    inputElem.value         = smile;\r\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\r\n\r\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\r\n\r\n                        docElement.appendChild(inputElem);\r\n                        defaultView = document.defaultView;\r\n\r\n                        // Safari 2-4 allows the smiley as a value, despite making a slider\r\n                        bool =  defaultView.getComputedStyle &&\r\n                            defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\r\n                            // Mobile android web browser has false positive, so must\r\n                            // check the height to see if the widget is actually there.\r\n                            (inputElem.offsetHeight !== 0);\r\n\r\n                        docElement.removeChild(inputElem);\r\n\r\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\r\n                        // Spec doesn't define any special parsing or detectable UI\r\n                        //   behaviors so we pass these through as true\r\n\r\n                        // Interestingly, opera fails the earlier test, so it doesn't\r\n                        //  even make it here.\r\n\r\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\r\n                        // Real url and email support comes with prebaked validation.\r\n                        bool = inputElem.checkValidity && inputElem.checkValidity() === false;\r\n\r\n                    } else {\r\n                        // If the upgraded input compontent rejects the :) text, we got a winner\r\n                        bool = inputElem.value != smile;\r\n                    }\r\n                }\r\n\r\n                inputs[ props[i] ] = !!bool;\r\n            }\r\n            return inputs;\r\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\r\n        /*>>inputtypes*/\r\n    }\r\n    /*>>webforms*/\r\n\r\n\r\n    // End of test definitions\r\n    // -----------------------\r\n\r\n\r\n\r\n    // Run through all tests and detect their support in the current UA.\r\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\r\n    for ( var feature in tests ) {\r\n        if ( hasOwnProp(tests, feature) ) {\r\n            // run the test, throw the return value into the Modernizr,\r\n            //   then based on that boolean, define an appropriate className\r\n            //   and push it into an array of classes we'll join later.\r\n            featureName  = feature.toLowerCase();\r\n            Modernizr[featureName] = tests[feature]();\r\n\r\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\r\n        }\r\n    }\r\n\r\n    /*>>webforms*/\r\n    // input tests need to run.\r\n    Modernizr.input || webforms();\r\n    /*>>webforms*/\r\n\r\n\r\n    /**\r\n     * addTest allows the user to define their own feature tests\r\n     * the result will be added onto the Modernizr object,\r\n     * as well as an appropriate className set on the html element\r\n     *\r\n     * @param feature - String naming the feature\r\n     * @param test - Function returning true if feature is supported, false if not\r\n     */\r\n    Modernizr.addTest = function ( feature, test ) {\r\n        if ( typeof feature == 'object' ) {\r\n            for ( var key in feature ) {\r\n                if ( hasOwnProp( feature, key ) ) {\r\n                    Modernizr.addTest( key, feature[ key ] );\r\n                }\r\n            }\r\n        } else {\r\n\r\n            feature = feature.toLowerCase();\r\n\r\n            if ( Modernizr[feature] !== undefined ) {\r\n                // we're going to quit if you're trying to overwrite an existing test\r\n                // if we were to allow it, we'd do this:\r\n                //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\r\n                //   docElement.className = docElement.className.replace( re, '' );\r\n                // but, no rly, stuff 'em.\r\n                return Modernizr;\r\n            }\r\n\r\n            test = typeof test == 'function' ? test() : test;\r\n\r\n            if (typeof enableClasses !== \"undefined\" && enableClasses) {\r\n                docElement.className += ' ' + (test ? '' : 'no-') + feature;\r\n            }\r\n            Modernizr[feature] = test;\r\n\r\n        }\r\n\r\n        return Modernizr; // allow chaining.\r\n    };\r\n\r\n\r\n    // Reset modElem.cssText to nothing to reduce memory footprint.\r\n    setCss('');\r\n    modElem = inputElem = null;\r\n\r\n    /*>>shiv*/\r\n    /**\r\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\r\n     */\r\n    ;(function(window, document) {\r\n        /*jshint evil:true */\r\n        /** version */\r\n        var version = '3.7.0';\r\n\r\n        /** Preset options */\r\n        var options = window.html5 || {};\r\n\r\n        /** Used to skip problem elements */\r\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\r\n\r\n        /** Not all elements can be cloned in IE **/\r\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\r\n\r\n        /** Detect whether the browser supports default html5 styles */\r\n        var supportsHtml5Styles;\r\n\r\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\r\n        var expando = '_html5shiv';\r\n\r\n        /** The id for the the documents expando */\r\n        var expanID = 0;\r\n\r\n        /** Cached data for each document */\r\n        var expandoData = {};\r\n\r\n        /** Detect whether the browser supports unknown elements */\r\n        var supportsUnknownElements;\r\n\r\n        (function() {\r\n            try {\r\n                var a = document.createElement('a');\r\n                a.innerHTML = '<xyz></xyz>';\r\n                //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\r\n                supportsHtml5Styles = ('hidden' in a);\r\n\r\n                supportsUnknownElements = a.childNodes.length == 1 || (function() {\r\n                    // assign a false positive if unable to shiv\r\n                    (document.createElement)('a');\r\n                    var frag = document.createDocumentFragment();\r\n                    return (\r\n                        typeof frag.cloneNode == 'undefined' ||\r\n                        typeof frag.createDocumentFragment == 'undefined' ||\r\n                        typeof frag.createElement == 'undefined'\r\n                    );\r\n                }());\r\n            } catch(e) {\r\n                // assign a false positive if detection fails => unable to shiv\r\n                supportsHtml5Styles = true;\r\n                supportsUnknownElements = true;\r\n            }\r\n\r\n        }());\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Creates a style sheet with the given CSS text and adds it to the document.\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @param {String} cssText The CSS text.\r\n         * @returns {StyleSheet} The style element.\r\n         */\r\n        function addStyleSheet(ownerDocument, cssText) {\r\n            var p = ownerDocument.createElement('p'),\r\n                parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\r\n\r\n            p.innerHTML = 'x<style>' + cssText + '</style>';\r\n            return parent.insertBefore(p.lastChild, parent.firstChild);\r\n        }\r\n\r\n        /**\r\n         * Returns the value of `html5.elements` as an array.\r\n         * @private\r\n         * @returns {Array} An array of shived element node names.\r\n         */\r\n        function getElements() {\r\n            var elements = html5.elements;\r\n            return typeof elements == 'string' ? elements.split(' ') : elements;\r\n        }\r\n\r\n        /**\r\n         * Returns the data associated to the given document\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @returns {Object} An object of data.\r\n         */\r\n        function getExpandoData(ownerDocument) {\r\n            var data = expandoData[ownerDocument[expando]];\r\n            if (!data) {\r\n                data = {};\r\n                expanID++;\r\n                ownerDocument[expando] = expanID;\r\n                expandoData[expanID] = data;\r\n            }\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * returns a shived element for the given nodeName and document\r\n         * @memberOf html5\r\n         * @param {String} nodeName name of the element\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived element.\r\n         */\r\n        function createElement(nodeName, ownerDocument, data){\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            if(supportsUnknownElements){\r\n                return ownerDocument.createElement(nodeName);\r\n            }\r\n            if (!data) {\r\n                data = getExpandoData(ownerDocument);\r\n            }\r\n            var node;\r\n\r\n            if (data.cache[nodeName]) {\r\n                node = data.cache[nodeName].cloneNode();\r\n            } else if (saveClones.test(nodeName)) {\r\n                node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\r\n            } else {\r\n                node = data.createElem(nodeName);\r\n            }\r\n\r\n            // Avoid adding some elements to fragments in IE < 9 because\r\n            // * Attributes like `name` or `type` cannot be set/changed once an element\r\n            //   is inserted into a document/fragment\r\n            // * Link elements with `src` attributes that are inaccessible, as with\r\n            //   a 403 response, will cause the tab/window to crash\r\n            // * Script elements appended to fragments will execute when their `src`\r\n            //   or `text` property is set\r\n            return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\r\n        }\r\n\r\n        /**\r\n         * returns a shived DocumentFragment for the given document\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived DocumentFragment.\r\n         */\r\n        function createDocumentFragment(ownerDocument, data){\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            if(supportsUnknownElements){\r\n                return ownerDocument.createDocumentFragment();\r\n            }\r\n            data = data || getExpandoData(ownerDocument);\r\n            var clone = data.frag.cloneNode(),\r\n                i = 0,\r\n                elems = getElements(),\r\n                l = elems.length;\r\n            for(;i<l;i++){\r\n                clone.createElement(elems[i]);\r\n            }\r\n            return clone;\r\n        }\r\n\r\n        /**\r\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\r\n         * @private\r\n         * @param {Document|DocumentFragment} ownerDocument The document.\r\n         * @param {Object} data of the document.\r\n         */\r\n        function shivMethods(ownerDocument, data) {\r\n            if (!data.cache) {\r\n                data.cache = {};\r\n                data.createElem = ownerDocument.createElement;\r\n                data.createFrag = ownerDocument.createDocumentFragment;\r\n                data.frag = data.createFrag();\r\n            }\r\n\r\n\r\n            ownerDocument.createElement = function(nodeName) {\r\n                //abort shiv\r\n                if (!html5.shivMethods) {\r\n                    return data.createElem(nodeName);\r\n                }\r\n                return createElement(nodeName, ownerDocument, data);\r\n            };\r\n\r\n            ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\r\n                'var n=f.cloneNode(),c=n.createElement;' +\r\n                'h.shivMethods&&(' +\r\n                // unroll the `createElement` calls\r\n                getElements().join().replace(/[\\w\\-]+/g, function(nodeName) {\r\n                    data.createElem(nodeName);\r\n                    data.frag.createElement(nodeName);\r\n                    return 'c(\"' + nodeName + '\")';\r\n                }) +\r\n                ');return n}'\r\n            )(html5, data.frag);\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Shivs the given document.\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The document to shiv.\r\n         * @returns {Document} The shived document.\r\n         */\r\n        function shivDocument(ownerDocument) {\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            var data = getExpandoData(ownerDocument);\r\n\r\n            if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\r\n                data.hasCSS = !!addStyleSheet(ownerDocument,\r\n                    // corrects block display not defined in IE6/7/8/9\r\n                    'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\r\n                    // adds styling not present in IE6/7/8/9\r\n                    'mark{background:#FF0;color:#000}' +\r\n                    // hides non-rendered elements\r\n                    'template{display:none}'\r\n                );\r\n            }\r\n            if (!supportsUnknownElements) {\r\n                shivMethods(ownerDocument, data);\r\n            }\r\n            return ownerDocument;\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * The `html5` object is exposed so that more elements can be shived and\r\n         * existing shiving can be detected on iframes.\r\n         * @type Object\r\n         * @example\r\n         *\r\n         * // options can be changed before the script is included\r\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\r\n         */\r\n        var html5 = {\r\n\r\n            /**\r\n             * An array or space separated string of node names of the elements to shiv.\r\n             * @memberOf html5\r\n             * @type Array|String\r\n             */\r\n            'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\r\n\r\n            /**\r\n             * current version of html5shiv\r\n             */\r\n            'version': version,\r\n\r\n            /**\r\n             * A flag to indicate that the HTML5 style sheet should be inserted.\r\n             * @memberOf html5\r\n             * @type Boolean\r\n             */\r\n            'shivCSS': (options.shivCSS !== false),\r\n\r\n            /**\r\n             * Is equal to true if a browser supports creating unknown/HTML5 elements\r\n             * @memberOf html5\r\n             * @type boolean\r\n             */\r\n            'supportsUnknownElements': supportsUnknownElements,\r\n\r\n            /**\r\n             * A flag to indicate that the document's `createElement` and `createDocumentFragment`\r\n             * methods should be overwritten.\r\n             * @memberOf html5\r\n             * @type Boolean\r\n             */\r\n            'shivMethods': (options.shivMethods !== false),\r\n\r\n            /**\r\n             * A string to describe the type of `html5` object (\"default\" or \"default print\").\r\n             * @memberOf html5\r\n             * @type String\r\n             */\r\n            'type': 'default',\r\n\r\n            // shivs the document according to the specified `html5` object options\r\n            'shivDocument': shivDocument,\r\n\r\n            //creates a shived element\r\n            createElement: createElement,\r\n\r\n            //creates a shived documentFragment\r\n            createDocumentFragment: createDocumentFragment\r\n        };\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        // expose html5\r\n        window.html5 = html5;\r\n\r\n        // shiv the document\r\n        shivDocument(document);\r\n\r\n    }(this, document));\r\n    /*>>shiv*/\r\n\r\n    // Assign private properties to the return object with prefix\r\n    Modernizr._version      = version;\r\n\r\n    // expose these for the plugin API. Look in the source for how to join() them against your input\r\n    /*>>prefixes*/\r\n    Modernizr._prefixes     = prefixes;\r\n    /*>>prefixes*/\r\n    /*>>domprefixes*/\r\n    Modernizr._domPrefixes  = domPrefixes;\r\n    Modernizr._cssomPrefixes  = cssomPrefixes;\r\n    /*>>domprefixes*/\r\n\r\n    /*>>mq*/\r\n    // Modernizr.mq tests a given media query, live against the current state of the window\r\n    // A few important notes:\r\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\r\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\r\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\r\n    //       Modernizr.mq('(min-width:0)')\r\n    // usage:\r\n    // Modernizr.mq('only screen and (max-width:768)')\r\n    Modernizr.mq            = testMediaQuery;\r\n    /*>>mq*/\r\n\r\n    /*>>hasevent*/\r\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\r\n    // Modernizr.hasEvent('gesturestart', elem)\r\n    Modernizr.hasEvent      = isEventSupported;\r\n    /*>>hasevent*/\r\n\r\n    /*>>testprop*/\r\n    // Modernizr.testProp() investigates whether a given style property is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testProp('pointerEvents')\r\n    Modernizr.testProp      = function(prop){\r\n        return testProps([prop]);\r\n    };\r\n    /*>>testprop*/\r\n\r\n    /*>>testallprops*/\r\n    // Modernizr.testAllProps() investigates whether a given style property,\r\n    //   or any of its vendor-prefixed variants, is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testAllProps('boxSizing')\r\n    Modernizr.testAllProps  = testPropsAll;\r\n    /*>>testallprops*/\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\r\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\r\n    Modernizr.testStyles    = injectElementWithStyles;\r\n    /*>>teststyles*/\r\n\r\n\r\n    /*>>prefixed*/\r\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\r\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\r\n\r\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\r\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\r\n    //\r\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\r\n\r\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\r\n    //\r\n    //     var transEndEventNames = {\r\n    //       'WebkitTransition' : 'webkitTransitionEnd',\r\n    //       'MozTransition'    : 'transitionend',\r\n    //       'OTransition'      : 'oTransitionEnd',\r\n    //       'msTransition'     : 'MSTransitionEnd',\r\n    //       'transition'       : 'transitionend'\r\n    //     },\r\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n\r\n    Modernizr.prefixed      = function(prop, obj, elem){\r\n        if(!obj) {\r\n            return testPropsAll(prop, 'pfx');\r\n        } else {\r\n            // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\r\n            return testPropsAll(prop, obj, elem);\r\n        }\r\n    };\r\n    /*>>prefixed*/\r\n\r\n\r\n    /*>>cssclasses*/\r\n    // Remove \"no-js\" class from <html> element, if it exists:\r\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\r\n\r\n        // Add the new classes to the <html> element.\r\n        (enableClasses ? ' js ' + classes.join(' ') : '');\r\n    /*>>cssclasses*/\r\n\r\n    return Modernizr;\r\n\r\n})(this, this.document);","/**\r\n * fullPage 2.6.6\r\n * https://github.com/alvarotrigo/fullPage.js\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2015 alvarotrigo.com - A project by Alvaro Trigo\r\n */\r\n(function(c,l){\"function\"===typeof define&&define.amd?define([\"jquery\"],function(k){return l(k,c,c.document,c.Math)}):\"undefined\"!==typeof exports?module.exports=l(require(\"jquery\"),c,c.document,c.Math):l(jQuery,c,c.document,c.Math)})(\"undefined\"!==typeof window?window:this,function(c,l,k,n,H){var m=c(l),r=c(k);c.fn.fullpage=function(d){function Ia(a){a.find(\".fp-slides\").after('<div class=\"fp-controlArrow fp-prev\"></div><div class=\"fp-controlArrow fp-next\"></div>');\"#fff\"!=d.controlArrowColor&&(a.find(\".fp-controlArrow.fp-next\").css(\"border-color\",\r\n    \"transparent transparent transparent \"+d.controlArrowColor),a.find(\".fp-controlArrow.fp-prev\").css(\"border-color\",\"transparent \"+d.controlArrowColor+\" transparent transparent\"));d.loopHorizontal||a.find(\".fp-controlArrow.fp-prev\").hide()}function Ja(){p.append('<div id=\"fp-nav\"><ul></ul></div>');z=c(\"#fp-nav\");z.addClass(function(){return d.showActiveTooltip?\"fp-show-active \"+d.navigationPosition:d.navigationPosition});for(var a=0;a<c(\".fp-section\").length;a++){var b=\"\";d.anchors.length&&(b=d.anchors[a]);\r\n    var b='<li><a href=\"#'+b+'\"><span></span></a>',g=d.navigationTooltips[a];\"undefined\"!==typeof g&&\"\"!==g&&(b+='<div class=\"fp-tooltip '+d.navigationPosition+'\">'+g+\"</div>\");b+=\"</li>\";z.find(\"ul\").append(b)}}function da(){c(\".fp-section\").each(function(){var a=c(this).find(\".fp-slide\");a.length?a.each(function(){I(c(this))}):I(c(this))});ea()}function ea(){var a=c(\".fp-section.active\"),b=a.find(\"SLIDES_WRAPPER\"),g=a.find(\".fp-scrollable\");b.length&&(g=b.find(\".fp-slide.active\"));g.mouseover();fa(a);\r\n    c.isFunction(d.afterLoad)&&d.afterLoad.call(a,a.data(\"anchor\"),a.index(\".fp-section\")+1);c.isFunction(d.afterRender)&&d.afterRender.call(this)}function ga(){var a;if(!d.autoScrolling||d.scrollBar){for(var b=m.scrollTop(),g=0,J=n.abs(b-k.querySelectorAll(\".fp-section\")[0].offsetTop),e=k.querySelectorAll(\".fp-section\"),f=0;f<e.length;++f){var h=n.abs(b-e[f].offsetTop);h<J&&(g=f,J=h)}a=c(e).eq(g)}if(!d.autoScrolling||d.scrollBar){if(!a.hasClass(\"active\")){U=!0;b=c(\".fp-section.active\");g=b.index(\".fp-section\")+\r\n    1;J=V(a);e=a.data(\"anchor\");f=a.index(\".fp-section\")+1;h=a.find(\".fp-slide.active\");if(h.length)var l=h.data(\"anchor\"),p=h.index();u&&(a.addClass(\"active\").siblings().removeClass(\"active\"),c.isFunction(d.onLeave)&&d.onLeave.call(b,g,f,J),c.isFunction(d.afterLoad)&&d.afterLoad.call(a,e,f),K(e,f-1),d.anchors.length&&(A=e,W(p,l,e,f)));clearTimeout(ha);ha=setTimeout(function(){U=!1},100)}d.fitToSection&&(clearTimeout(ia),ia=setTimeout(function(){u&&(c(\".fp-section.active\").is(a)&&(v=!0),B(a),v=!1)},1E3))}}\r\n    function ja(a){return a.find(\".fp-slides\").length?a.find(\".fp-slide.active\").find(\".fp-scrollable\"):a.find(\".fp-scrollable\")}function L(a,b){if(h.m[a]){var d,c;\"down\"==a?(d=\"bottom\",c=e.moveSectionDown):(d=\"top\",c=e.moveSectionUp);if(0<b.length)if(d=\"top\"===d?!b.scrollTop():\"bottom\"===d?b.scrollTop()+1+b.innerHeight()>=b[0].scrollHeight:void 0,d)c();else return!0;else c()}}function Ka(a){var b=a.originalEvent;if(!ka(a.target)&&X(b)){d.autoScrolling&&a.preventDefault();a=c(\".fp-section.active\");var g=\r\n        ja(a);u&&!w&&(b=la(b),D=b.y,M=b.x,a.find(\".fp-slides\").length&&n.abs(N-M)>n.abs(E-D)?n.abs(N-M)>m.width()/100*d.touchSensitivity&&(N>M?h.m.right&&e.moveSlideRight():h.m.left&&e.moveSlideLeft()):d.autoScrolling&&n.abs(E-D)>m.height()/100*d.touchSensitivity&&(E>D?L(\"down\",g):D>E&&L(\"up\",g)))}}function ka(a,b){b=b||0;var g=c(a).parent();return b<d.normalScrollElementTouchThreshold&&g.is(d.normalScrollElements)?!0:b==d.normalScrollElementTouchThreshold?!1:ka(g,++b)}function X(a){return\"undefined\"===typeof a.pointerType||\r\n        \"mouse\"!=a.pointerType}function La(a){a=a.originalEvent;d.fitToSection&&x.stop();X(a)&&(a=la(a),E=a.y,N=a.x)}function ma(a,b){for(var d=0,c=a.slice(n.max(a.length-b,1)),e=0;e<c.length;e++)d+=c[e];return n.ceil(d/b)}function t(a){var b=(new Date).getTime();if(d.autoScrolling&&!O){a=l.event||a;var g=a.wheelDelta||-a.deltaY||-a.detail,e=n.max(-1,n.min(1,g));149<C.length&&C.shift();C.push(n.abs(g));d.scrollBar&&(a.preventDefault?a.preventDefault():a.returnValue=!1);a=c(\".fp-section.active\");a=ja(a);g=\r\n        b-na;na=b;200<g&&(C=[]);u&&(b=ma(C,10),g=ma(C,70),b>=g&&(0>e?L(\"down\",a):L(\"up\",a)));return!1}d.fitToSection&&x.stop()}function oa(a){var b=c(\".fp-section.active\").find(\".fp-slides\"),g=b.find(\".fp-slide\").length;if(!(!b.length||w||2>g)){var g=b.find(\".fp-slide.active\"),e=null,e=\"prev\"===a?g.prev(\".fp-slide\"):g.next(\".fp-slide\");if(!e.length){if(!d.loopHorizontal)return;e=\"prev\"===a?g.siblings(\":last\"):g.siblings(\":first\")}w=!0;F(b,e)}}function pa(){c(\".fp-slide.active\").each(function(){Y(c(this),\r\n        \"internal\")})}function B(a,b,g){var e=a.position();if(\"undefined\"!==typeof e&&(b={element:a,callback:b,isMovementUp:g,dest:e,dtop:e.top,yMovement:V(a),anchorLink:a.data(\"anchor\"),sectionIndex:a.index(\".fp-section\"),activeSlide:a.find(\".fp-slide.active\"),activeSection:c(\".fp-section.active\"),leavingSection:c(\".fp-section.active\").index(\".fp-section\")+1,localIsResizing:v},!(b.activeSection.is(a)&&!v||d.scrollBar&&m.scrollTop()===b.dtop))){if(b.activeSlide.length)var f=b.activeSlide.data(\"anchor\"),h=\r\n        b.activeSlide.index();d.autoScrolling&&d.continuousVertical&&\"undefined\"!==typeof b.isMovementUp&&(!b.isMovementUp&&\"up\"==b.yMovement||b.isMovementUp&&\"down\"==b.yMovement)&&(b.isMovementUp?c(\".fp-section.active\").before(b.activeSection.nextAll(\".fp-section\")):c(\".fp-section.active\").after(b.activeSection.prevAll(\".fp-section\").get().reverse()),y(c(\".fp-section.active\").position().top),pa(),b.wrapAroundElements=b.activeSection,b.dest=b.element.position(),b.dtop=b.dest.top,b.yMovement=V(b.element));\r\n        if(c.isFunction(d.onLeave)&&!b.localIsResizing){if(!1===d.onLeave.call(b.activeSection,b.leavingSection,b.sectionIndex+1,b.yMovement))return;Ma(b.activeSection)}a.addClass(\"active\").siblings().removeClass(\"active\");u=!1;W(h,f,b.anchorLink,b.sectionIndex);Na(b);A=b.anchorLink;K(b.anchorLink,b.sectionIndex)}}function Na(a){if(d.css3&&d.autoScrolling&&!d.scrollBar)qa(\"translate3d(0px, -\"+a.dtop+\"px, 0px)\",!0),d.scrollingSpeed?setTimeout(function(){Z(a)},d.scrollingSpeed):Z(a);else{var b=Oa(a);c(b.element).animate(b.options,\r\n        d.scrollingSpeed,d.easing).promise().done(function(){Z(a)})}}function Oa(a){var b={};d.autoScrolling&&!d.scrollBar?(b.options={top:-a.dtop},b.element=\".fullpage-wrapper\"):(b.options={scrollTop:a.dtop},b.element=\"html, body\");return b}function Z(a){a.wrapAroundElements&&a.wrapAroundElements.length&&(a.isMovementUp?c(\".fp-section:first\").before(a.wrapAroundElements):c(\".fp-section:last\").after(a.wrapAroundElements),y(c(\".fp-section.active\").position().top),pa());a.element.find(\".fp-scrollable\").mouseover();\r\n        c.isFunction(d.afterLoad)&&!a.localIsResizing&&d.afterLoad.call(a.element,a.anchorLink,a.sectionIndex+1);fa(a.element);Pa(a.element);u=!0;c.isFunction(a.callback)&&a.callback.call(this)}function fa(a){a.find(\"img[data-src], video[data-src], audio[data-src]\").each(function(){c(this).attr(\"src\",c(this).data(\"src\"));c(this).removeAttr(\"data-src\")})}function Pa(a){a.find(\"video, audio\").each(function(){var a=c(this).get(0);a.hasAttribute(\"autoplay\")&&\"function\"===typeof a.play&&a.play()})}function Ma(a){a.find(\"video, audio\").each(function(){var a=\r\n        c(this).get(0);a.hasAttribute(\"data-ignore\")||\"function\"!==typeof a.pause||a.pause()})}function ra(){if(!U&&!d.lockAnchors){var a=l.location.hash.replace(\"#\",\"\").split(\"/\"),b=a[0],a=a[1];if(b.length){var c=\"undefined\"===typeof A,e=\"undefined\"===typeof A&&\"undefined\"===typeof a&&!w;(b&&b!==A&&!c||e||!w&&aa!=a)&&ba(b,a)}}}function Qa(a){u&&(a.pageY<P?e.moveSectionUp():a.pageY>P&&e.moveSectionDown());P=a.pageY}function F(a,b){var g=b.position(),e=b.index(),f=a.closest(\".fp-section\"),h=f.index(\".fp-section\"),\r\n        k=f.data(\"anchor\"),l=f.find(\".fp-slidesNav\"),m=sa(b),p=v;if(d.onSlideLeave){var t=f.find(\".fp-slide.active\"),q=t.index(),r;r=q==e?\"none\":q>e?\"left\":\"right\";if(!p&&\"none\"!==r&&c.isFunction(d.onSlideLeave)&&!1===d.onSlideLeave.call(t,k,h+1,q,r,e)){w=!1;return}}b.addClass(\"active\").siblings().removeClass(\"active\");!d.loopHorizontal&&d.controlArrows&&(f.find(\".fp-controlArrow.fp-prev\").toggle(0!==e),f.find(\".fp-controlArrow.fp-next\").toggle(!b.is(\":last-child\")));f.hasClass(\"active\")&&W(e,m,k,h);var u=\r\n        function(){p||c.isFunction(d.afterSlideLoad)&&d.afterSlideLoad.call(b,k,h+1,m,e);w=!1};d.css3?(g=\"translate3d(-\"+n.round(g.left)+\"px, 0px, 0px)\",ta(a.find(\".fp-slidesContainer\"),0<d.scrollingSpeed).css(ua(g)),setTimeout(function(){u()},d.scrollingSpeed,d.easing)):a.animate({scrollLeft:n.round(g.left)},d.scrollingSpeed,d.easing,function(){u()});l.find(\".active\").removeClass(\"active\");l.find(\"li\").eq(e).find(\"a\").addClass(\"active\")}function va(){wa();if(Q){var a=c(k.activeElement);a.is(\"textarea\")||\r\n    a.is(\"input\")||a.is(\"select\")||(a=m.height(),n.abs(a-ca)>20*n.max(ca,a)/100&&(e.reBuild(!0),ca=a))}else clearTimeout(xa),xa=setTimeout(function(){e.reBuild(!0)},350)}function wa(){var a=d.responsive||d.responsiveWidth,b=d.responsiveHeight;a&&e.setResponsive(m.width()<a);b&&(f.hasClass(\"fp-responsive\")||e.setResponsive(m.height()<b))}function ta(a){var b=\"all \"+d.scrollingSpeed+\"ms \"+d.easingcss3;a.removeClass(\"fp-notransition\");return a.css({\"-webkit-transition\":b,transition:b})}function Ra(a,b){if(825>\r\n        a||900>b){var d=n.min(100*a/825,100*b/900).toFixed(2);p.css(\"font-size\",d+\"%\")}else p.css(\"font-size\",\"100%\")}function K(a,b){d.menu&&(c(d.menu).find(\".active\").removeClass(\"active\"),c(d.menu).find('[data-menuanchor=\"'+a+'\"]').addClass(\"active\"));d.navigation&&(c(\"#fp-nav\").find(\".active\").removeClass(\"active\"),a?c(\"#fp-nav\").find('a[href=\"#'+a+'\"]').addClass(\"active\"):c(\"#fp-nav\").find(\"li\").eq(b).find(\"a\").addClass(\"active\"))}function V(a){var b=c(\".fp-section.active\").index(\".fp-section\");a=a.index(\".fp-section\");\r\n        return b==a?\"none\":b>a?\"up\":\"down\"}function I(a){a.css(\"overflow\",\"hidden\");var b=a.closest(\".fp-section\"),c=a.find(\".fp-scrollable\"),e;c.length?e=c.get(0).scrollHeight:(e=a.get(0).scrollHeight,d.verticalCentered&&(e=a.find(\".fp-tableCell\").get(0).scrollHeight));b=q-parseInt(b.css(\"padding-bottom\"))-parseInt(b.css(\"padding-top\"));e>b?c.length?c.css(\"height\",b+\"px\").parent().css(\"height\",b+\"px\"):(d.verticalCentered?a.find(\".fp-tableCell\").wrapInner('<div class=\"fp-scrollable\" />'):a.wrapInner('<div class=\"fp-scrollable\" />'),\r\n        a.find(\".fp-scrollable\").slimScroll({allowPageScroll:!0,height:b+\"px\",size:\"10px\",alwaysVisible:!0})):ya(a);a.css(\"overflow\",\"\")}function ya(a){a.find(\".fp-scrollable\").children().first().unwrap().unwrap();a.find(\".slimScrollBar\").remove();a.find(\".slimScrollRail\").remove()}function za(a){a.addClass(\"fp-table\").wrapInner('<div class=\"fp-tableCell\" style=\"height:'+Aa(a)+'px;\" />')}function Aa(a){var b=q;if(d.paddingTop||d.paddingBottom)b=a,b.hasClass(\"fp-section\")||(b=a.closest(\".fp-section\")),a=parseInt(b.css(\"padding-top\"))+\r\n        parseInt(b.css(\"padding-bottom\")),b=q-a;return b}function qa(a,b){b?ta(f):f.addClass(\"fp-notransition\");f.css(ua(a));setTimeout(function(){f.removeClass(\"fp-notransition\")},10)}function Ba(a){var b=c('.fp-section[data-anchor=\"'+a+'\"]');b.length||(b=c(\".fp-section\").eq(a-1));return b}function ba(a,b){var d=Ba(a);\"undefined\"===typeof b&&(b=0);a===A||d.hasClass(\"active\")?Ca(d,b):B(d,function(){Ca(d,b)})}function Ca(a,b){if(\"undefined\"!==typeof b){var d=a.find(\".fp-slides\"),c;c=a.find(\".fp-slides\");var e=\r\n        c.find('.fp-slide[data-anchor=\"'+b+'\"]');e.length||(e=c.find(\".fp-slide\").eq(b));c=e;c.length&&F(d,c)}}function Sa(a,b){a.append('<div class=\"fp-slidesNav\"><ul></ul></div>');var c=a.find(\".fp-slidesNav\");c.addClass(d.slidesNavPosition);for(var e=0;e<b;e++)c.find(\"ul\").append('<li><a href=\"#\"><span></span></a></li>');c.css(\"margin-left\",\"-\"+c.width()/2+\"px\");c.find(\"li\").first().find(\"a\").addClass(\"active\")}function W(a,b,c,e){e=\"\";d.anchors.length&&!d.lockAnchors&&(a?(\"undefined\"!==typeof c&&(e=c),\r\n    \"undefined\"===typeof b&&(b=a),aa=b,Da(e+\"/\"+b)):(\"undefined\"!==typeof a&&(aa=b),Da(c)));Ea()}function Da(a){if(d.recordHistory)location.hash=a;else if(Q||R)history.replaceState(H,H,\"#\"+a);else{var b=l.location.href.split(\"#\")[0];l.location.replace(b+\"#\"+a)}}function sa(a){var b=a.data(\"anchor\");a=a.index();\"undefined\"===typeof b&&(b=a);return b}function Ea(){var a=c(\".fp-section.active\"),b=a.find(\".fp-slide.active\"),e=a.data(\"anchor\"),f=sa(b),a=a.index(\".fp-section\"),a=String(a);d.anchors.length&&\r\n    (a=e);b.length&&(a=a+\"-\"+f);a=a.replace(\"/\",\"-\").replace(\"#\",\"\");p[0].className=p[0].className.replace(RegExp(\"\\\\b\\\\s?fp-viewing-[^\\\\s]+\\\\b\",\"g\"),\"\");p.addClass(\"fp-viewing-\"+a)}function Ta(){var a=k.createElement(\"p\"),b,c={webkitTransform:\"-webkit-transform\",OTransform:\"-o-transform\",msTransform:\"-ms-transform\",MozTransform:\"-moz-transform\",transform:\"transform\"};k.body.insertBefore(a,null);for(var d in c)a.style[d]!==H&&(a.style[d]=\"translate3d(1px,1px,1px)\",b=l.getComputedStyle(a).getPropertyValue(c[d]));\r\n        k.body.removeChild(a);return b!==H&&0<b.length&&\"none\"!==b}function Ua(){if(Q||R){var a=Fa();c(\".fullpage-wrapper\").off(\"touchstart \"+a.down).on(\"touchstart \"+a.down,La);c(\".fullpage-wrapper\").off(\"touchmove \"+a.move).on(\"touchmove \"+a.move,Ka)}}function Va(){if(Q||R){var a=Fa();c(\".fullpage-wrapper\").off(\"touchstart \"+a.down);c(\".fullpage-wrapper\").off(\"touchmove \"+a.move)}}function Fa(){return l.PointerEvent?{down:\"pointerdown\",move:\"pointermove\"}:{down:\"MSPointerDown\",move:\"MSPointerMove\"}}function la(a){var b=\r\n        [];b.y=\"undefined\"!==typeof a.pageY&&(a.pageY||a.pageX)?a.pageY:a.touches[0].pageY;b.x=\"undefined\"!==typeof a.pageX&&(a.pageY||a.pageX)?a.pageX:a.touches[0].pageX;R&&X(a)&&(b.y=a.touches[0].pageY,b.x=a.touches[0].pageX);return b}function Y(a,b){e.setScrollingSpeed(0,\"internal\");\"undefined\"!==typeof b&&(v=!0);F(a.closest(\".fp-slides\"),a);\"undefined\"!==typeof b&&(v=!1);e.setScrollingSpeed(G.scrollingSpeed,\"internal\")}function y(a){d.scrollBar?f.scrollTop(a):d.css3?qa(\"translate3d(0px, -\"+a+\"px, 0px)\",\r\n        !1):f.css(\"top\",-a)}function ua(a){return{\"-webkit-transform\":a,\"-moz-transform\":a,\"-ms-transform\":a,transform:a}}function Ga(a,b,c){switch(b){case \"up\":h[c].up=a;break;case \"down\":h[c].down=a;break;case \"left\":h[c].left=a;break;case \"right\":h[c].right=a;break;case \"all\":\"m\"==c?e.setAllowScrolling(a):e.setKeyboardScrolling(a)}}function Wa(){y(0);c(\"#fp-nav, .fp-slidesNav, .fp-controlArrow\").remove();c(\".fp-section\").css({height:\"\",\"background-color\":\"\",padding:\"\"});c(\".fp-slide\").css({width:\"\"});\r\n        f.css({height:\"\",position:\"\",\"-ms-touch-action\":\"\",\"touch-action\":\"\"});c(\".fp-section, .fp-slide\").each(function(){ya(c(this));c(this).removeClass(\"fp-table active\")});f.addClass(\"fp-notransition\");f.find(\".fp-tableCell, .fp-slidesContainer, .fp-slides\").each(function(){c(this).replaceWith(this.childNodes)});x.scrollTop(0)}function S(a,b,c){d[a]=b;\"internal\"!==c&&(G[a]=b)}function T(a,b){console&&console[a]&&console[a](\"fullPage: \"+b)}var x=c(\"html, body\"),p=c(\"body\"),e=c.fn.fullpage;d=c.extend({menu:!1,\r\n        anchors:[],lockAnchors:!1,navigation:!1,navigationPosition:\"right\",navigationTooltips:[],showActiveTooltip:!1,slidesNavigation:!1,slidesNavPosition:\"bottom\",scrollBar:!1,css3:!0,scrollingSpeed:700,autoScrolling:!0,fitToSection:!0,easing:\"easeInOutCubic\",easingcss3:\"ease\",loopBottom:!1,loopTop:!1,loopHorizontal:!0,continuousVertical:!1,normalScrollElements:null,scrollOverflow:!1,touchSensitivity:5,normalScrollElementTouchThreshold:5,keyboardScrolling:!0,animateAnchor:!0,recordHistory:!0,controlArrows:!0,\r\n        controlArrowColor:\"#fff\",verticalCentered:!0,resize:!1,sectionsColor:[],paddingTop:0,paddingBottom:0,fixedElements:null,responsive:0,responsiveWidth:0,responsiveHeight:0,sectionSelector:\".section\",slideSelector:\".slide\",afterLoad:null,onLeave:null,afterRender:null,afterResize:null,afterReBuild:null,afterSlideLoad:null,onSlideLeave:null},d);(function(){d.continuousVertical&&(d.loopTop||d.loopBottom)&&(d.continuousVertical=!1,T(\"warn\",\"Option `loopTop/loopBottom` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled\"));\r\n        d.continuousVertical&&d.scrollBar&&(d.continuousVertical=!1,T(\"warn\",\"Option `scrollBar` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled\"));c.each(d.anchors,function(a,b){(c(\"#\"+b).length||c('[name=\"'+b+'\"]').length)&&T(\"error\",\"data-anchor tags can not have the same value as any `id` element on the site (or `name` element for IE).\")})})();c.extend(c.easing,{easeInOutCubic:function(a,b,c,d,e){return 1>(b/=e/2)?d/2*b*b*b+c:d/2*((b-=2)*b*b+2)+c}});c.extend(c.easing,{easeInQuart:function(a,\r\nb,c,d,e){return d*(b/=e)*b*b*b+c}});e.setAutoScrolling=function(a,b){S(\"autoScrolling\",a,b);var g=c(\".fp-section.active\");d.autoScrolling&&!d.scrollBar?(x.css({overflow:\"hidden\",height:\"100%\"}),e.setRecordHistory(d.recordHistory,\"internal\"),f.css({\"-ms-touch-action\":\"none\",\"touch-action\":\"none\"}),g.length&&y(g.position().top)):(x.css({overflow:\"visible\",height:\"initial\"}),e.setRecordHistory(!1,\"internal\"),f.css({\"-ms-touch-action\":\"\",\"touch-action\":\"\"}),y(0),g.length&&x.scrollTop(g.position().top))};\r\n    e.setRecordHistory=function(a,b){S(\"recordHistory\",a,b)};e.setScrollingSpeed=function(a,b){S(\"scrollingSpeed\",a,b)};e.setFitToSection=function(a,b){S(\"fitToSection\",a,b)};e.setLockAnchors=function(a){d.lockAnchors=a};e.setMouseWheelScrolling=function(a){a?k.addEventListener?(k.addEventListener(\"mousewheel\",t,!1),k.addEventListener(\"wheel\",t,!1),k.addEventListener(\"DOMMouseScroll\",t,!1)):k.attachEvent(\"onmousewheel\",t):k.addEventListener?(k.removeEventListener(\"mousewheel\",t,!1),k.removeEventListener(\"wheel\",\r\n        t,!1),k.removeEventListener(\"DOMMouseScroll\",t,!1)):k.detachEvent(\"onmousewheel\",t)};e.setAllowScrolling=function(a,b){\"undefined\"!==typeof b?(b=b.replace(/ /g,\"\").split(\",\"),c.each(b,function(b,c){Ga(a,c,\"m\")})):a?(e.setMouseWheelScrolling(!0),Ua()):(e.setMouseWheelScrolling(!1),Va())};e.setKeyboardScrolling=function(a,b){\"undefined\"!==typeof b?(b=b.replace(/ /g,\"\").split(\",\"),c.each(b,function(b,c){Ga(a,c,\"k\")})):d.keyboardScrolling=a};e.moveSectionUp=function(){var a=c(\".fp-section.active\").prev(\".fp-section\");\r\n        a.length||!d.loopTop&&!d.continuousVertical||(a=c(\".fp-section\").last());a.length&&B(a,null,!0)};e.moveSectionDown=function(){var a=c(\".fp-section.active\").next(\".fp-section\");a.length||!d.loopBottom&&!d.continuousVertical||(a=c(\".fp-section\").first());!a.length||d.onBeforeMoveSection&&c.isFunction(d.onBeforeMoveSection)&&!1===d.onBeforeMoveSection.call(this,direction,currentSlide,destiny,slides,activeSection)||B(a,null,!1)};e.silentMoveTo=function(a,b){e.setScrollingSpeed(0,\"internal\");e.moveTo(a,\r\n        b);e.setScrollingSpeed(G.scrollingSpeed,\"internal\")};e.moveTo=function(a,b){var c=Ba(a);\"undefined\"!==typeof b?ba(a,b):0<c.length&&B(c)};e.moveSlideRight=function(){oa(\"next\")};e.moveSlideLeft=function(){oa(\"prev\")};e.reBuild=function(a){if(!f.hasClass(\"fp-destroyed\")){v=!0;var b=m.width();q=m.height();d.resize&&Ra(q,b);c(\".fp-section\").each(function(){var a=c(this).find(\".fp-slides\"),b=c(this).find(\".fp-slide\");d.verticalCentered&&c(this).find(\".fp-tableCell\").css(\"height\",Aa(c(this))+\"px\");c(this).css(\"height\",\r\n        q+\"px\");d.scrollOverflow&&(b.length?b.each(function(){I(c(this))}):I(c(this)));1<b.length&&F(a,a.find(\".fp-slide.active\"))});(b=c(\".fp-section.active\").index(\".fp-section\"))&&e.silentMoveTo(b+1);v=!1;c.isFunction(d.afterResize)&&a&&d.afterResize.call(f);c.isFunction(d.afterReBuild)&&!a&&d.afterReBuild.call(f)}};e.setResponsive=function(a){var b=f.hasClass(\"fp-responsive\");a?b||(e.setAutoScrolling(!1,\"internal\"),e.setFitToSection(!1,\"internal\"),c(\"#fp-nav\").hide(),f.addClass(\"fp-responsive\")):b&&(e.setAutoScrolling(G.autoScrolling,\r\n        \"internal\"),e.setFitToSection(G.autoScrolling,\"internal\"),c(\"#fp-nav\").show(),f.removeClass(\"fp-responsive\"))};var w=!1,Q=navigator.userAgent.match(/(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/),R=\"ontouchstart\"in l||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints,f=c(this),q=m.height(),v=!1,A,aa,u=!0,C=[],z,O,h={m:{up:!0,down:!0,left:!0,right:!0}};h.k=c.extend(!0,{},h.m);var G=c.extend(!0,{},d);c(this).length?(f.css({height:\"100%\",\r\n        position:\"relative\"}),f.addClass(\"fullpage-wrapper\"),c(\"html\").addClass(\"fp-enabled\")):T(\"error\",\"Error! Fullpage.js needs to be initialized with a selector. For example: $('#myContainer').fullpage();\");d.css3&&(d.css3=Ta());e.setAllowScrolling(!0);f.removeClass(\"fp-destroyed\");c(d.sectionSelector).each(function(){c(this).addClass(\"fp-section\")});c(d.slideSelector).each(function(){c(this).addClass(\"fp-slide\")});d.navigation&&Ja();c(\".fp-section\").each(function(a){var b=c(this),e=c(this).find(\".fp-slide\"),\r\n        f=e.length;a||0!==c(\".fp-section.active\").length||c(this).addClass(\"active\");c(this).css(\"height\",q+\"px\");d.paddingTop&&c(this).css(\"padding-top\",d.paddingTop);d.paddingBottom&&c(this).css(\"padding-bottom\",d.paddingBottom);\"undefined\"!==typeof d.sectionsColor[a]&&c(this).css(\"background-color\",d.sectionsColor[a]);\"undefined\"!==typeof d.anchors[a]&&(c(this).attr(\"data-anchor\",d.anchors[a]),c(this).hasClass(\"active\")&&K(d.anchors[a],a));if(0<f){a=100*f;var h=100/f;e.wrapAll('<div class=\"fp-slidesContainer\" />');\r\n        e.parent().wrap('<div class=\"fp-slides\" />');c(this).find(\".fp-slidesContainer\").css(\"width\",a+\"%\");1<f&&(d.controlArrows&&Ia(c(this)),d.slidesNavigation&&Sa(c(this),f));e.each(function(a){c(this).css(\"width\",h+\"%\");d.verticalCentered&&za(c(this))});b=b.find(\".fp-slide.active\");b.length?Y(b):e.eq(0).addClass(\"active\")}else d.verticalCentered&&za(c(this))}).promise().done(function(){e.setAutoScrolling(d.autoScrolling,\"internal\");var a=c(\".fp-section.active\").find(\".fp-slide.active\");a.length&&(0!==\r\n        c(\".fp-section.active\").index(\".fp-section\")||0===c(\".fp-section.active\").index(\".fp-section\")&&0!==a.index())&&Y(a);d.fixedElements&&d.css3&&c(d.fixedElements).appendTo(p);d.navigation&&(z.css(\"margin-top\",\"-\"+z.height()/2+\"px\"),z.find(\"li\").eq(c(\".fp-section.active\").index(\".fp-section\")).find(\"a\").addClass(\"active\"));d.menu&&d.css3&&c(d.menu).closest(\".fullpage-wrapper\").length&&c(d.menu).appendTo(p);d.scrollOverflow?(\"complete\"===k.readyState&&da(),m.on(\"load\",da)):ea();wa();if(!d.animateAnchor&&\r\n        (a=l.location.hash.replace(\"#\",\"\").split(\"/\")[0],a.length)){var b=c('[data-anchor=\"'+a+'\"]');b.length&&(d.autoScrolling?y(b.position().top):(y(0),x.scrollTop(b.position().top)),K(a,null),c.isFunction(d.afterLoad)&&d.afterLoad.call(b,a,b.index(\".fp-section\")+1),b.addClass(\"active\").siblings().removeClass(\"active\"))}Ea();m.on(\"load\",function(){var a=l.location.hash.replace(\"#\",\"\").split(\"/\"),b=a[0],a=a[1];b&&ba(b,a)})});var ha,ia,U=!1;m.on(\"scroll\",ga);var E=0,N=0,D=0,M=0,na=(new Date).getTime();m.on(\"hashchange\",\r\n        ra);r.keydown(function(a){clearTimeout(Ha);var b=c(\":focus\");b.is(\"textarea\")||b.is(\"input\")||b.is(\"select\")||!d.keyboardScrolling||!d.autoScrolling||(-1<c.inArray(a.which,[40,38,32,33,34])&&a.preventDefault(),Ha=setTimeout(function(){var b=a.shiftKey;O=a.ctrlKey;switch(a.which){case 38:case 33:h.k.up&&e.moveSectionUp();break;case 32:if(b&&h.k.up){e.moveSectionUp();break}case 40:case 34:h.k.down&&e.moveSectionDown();break;case 36:h.k.up&&e.moveTo(1);break;case 35:h.k.down&&e.moveTo(c(\".fp-section\").length);\r\n        break;case 37:h.k.left&&e.moveSlideLeft();break;case 39:h.k.right&&e.moveSlideRight()}},150))});r.keyup(function(a){O=a.ctrlKey});c(l).blur(function(){O=!1});var Ha;f.mousedown(function(a){2==a.which&&(P=a.pageY,f.on(\"mousemove\",Qa))});f.mouseup(function(a){2==a.which&&f.off(\"mousemove\")});var P=0;r.on(\"click touchstart\",\"#fp-nav a\",function(a){a.preventDefault();a=c(this).parent().index();B(c(\".fp-section\").eq(a))});r.on(\"click touchstart\",\".fp-slidesNav a\",function(a){a.preventDefault();a=c(this).closest(\".fp-section\").find(\".fp-slides\");\r\n        var b=a.find(\".fp-slide\").eq(c(this).closest(\"li\").index());F(a,b)});d.normalScrollElements&&(r.on(\"mouseenter\",d.normalScrollElements,function(){e.setMouseWheelScrolling(!1)}),r.on(\"mouseleave\",d.normalScrollElements,function(){e.setMouseWheelScrolling(!0)}));c(\".fp-section\").on(\"click touchstart\",\".fp-controlArrow\",function(){c(this).hasClass(\"fp-prev\")?h.m.left&&e.moveSlideLeft():h.m.right&&e.moveSlideRight()});m.resize(va);var ca=q,xa;e.destroy=function(a){e.setAutoScrolling(!1,\"internal\");e.setAllowScrolling(!1);\r\n        e.setKeyboardScrolling(!1);f.addClass(\"fp-destroyed\");m.off(\"scroll\",ga).off(\"hashchange\",ra).off(\"resize\",va);r.off(\"click\",\"#fp-nav a\").off(\"mouseenter\",\"#fp-nav li\").off(\"mouseleave\",\"#fp-nav li\").off(\"click\",\".fp-slidesNav a\").off(\"mouseover\",d.normalScrollElements).off(\"mouseout\",d.normalScrollElements);c(\".fp-section\").off(\"click\",\".fp-controlArrow\");a&&Wa()}}});","/*!\r\n *\r\n *   typed.js - A JavaScript Typing Animation Library\r\n *   Author: Matt Boldt <me@mattboldt.com>\r\n *   Version: v2.0.9\r\n *   Url: https://github.com/mattboldt/typed.js\r\n *   License(s): MIT\r\n *\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n    if(typeof exports === 'object' && typeof module === 'object')\r\n        module.exports = factory();\r\n    else if(typeof define === 'function' && define.amd)\r\n        define([], factory);\r\n    else if(typeof exports === 'object')\r\n        exports[\"Typed\"] = factory();\r\n    else\r\n        root[\"Typed\"] = factory();\r\n})(this, function() {\r\n    return /******/ (function(modules) { // webpackBootstrap\r\n        /******/ \t// The module cache\r\n        /******/ \tvar installedModules = {};\r\n        /******/\r\n        /******/ \t// The require function\r\n        /******/ \tfunction __webpack_require__(moduleId) {\r\n            /******/\r\n            /******/ \t\t// Check if module is in cache\r\n            /******/ \t\tif(installedModules[moduleId])\r\n            /******/ \t\t\treturn installedModules[moduleId].exports;\r\n            /******/\r\n            /******/ \t\t// Create a new module (and put it into the cache)\r\n            /******/ \t\tvar module = installedModules[moduleId] = {\r\n                /******/ \t\t\texports: {},\r\n                /******/ \t\t\tid: moduleId,\r\n                /******/ \t\t\tloaded: false\r\n                /******/ \t\t};\r\n            /******/\r\n            /******/ \t\t// Execute the module function\r\n            /******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n            /******/\r\n            /******/ \t\t// Flag the module as loaded\r\n            /******/ \t\tmodule.loaded = true;\r\n            /******/\r\n            /******/ \t\t// Return the exports of the module\r\n            /******/ \t\treturn module.exports;\r\n            /******/ \t}\r\n        /******/\r\n        /******/\r\n        /******/ \t// expose the modules object (__webpack_modules__)\r\n        /******/ \t__webpack_require__.m = modules;\r\n        /******/\r\n        /******/ \t// expose the module cache\r\n        /******/ \t__webpack_require__.c = installedModules;\r\n        /******/\r\n        /******/ \t// __webpack_public_path__\r\n        /******/ \t__webpack_require__.p = \"\";\r\n        /******/\r\n        /******/ \t// Load entry module and return exports\r\n        /******/ \treturn __webpack_require__(0);\r\n        /******/ })\r\n    /************************************************************************/\r\n    /******/ ([\r\n        /* 0 */\r\n        /***/ (function(module, exports, __webpack_require__) {\r\n\r\n            'use strict';\r\n\r\n            Object.defineProperty(exports, '__esModule', {\r\n                value: true\r\n            });\r\n\r\n            var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\r\n\r\n            function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\r\n            var _initializerJs = __webpack_require__(1);\r\n\r\n            var _htmlParserJs = __webpack_require__(3);\r\n\r\n            /**\r\n             * Welcome to Typed.js!\r\n             * @param {string} elementId HTML element ID _OR_ HTML element\r\n             * @param {object} options options object\r\n             * @returns {object} a new Typed object\r\n             */\r\n\r\n            var Typed = (function () {\r\n                function Typed(elementId, options) {\r\n                    _classCallCheck(this, Typed);\r\n\r\n                    // Initialize it up\r\n                    _initializerJs.initializer.load(this, options, elementId);\r\n                    // All systems go!\r\n                    this.begin();\r\n                }\r\n\r\n                /**\r\n                 * Toggle start() and stop() of the Typed instance\r\n                 * @public\r\n                 */\r\n\r\n                _createClass(Typed, [{\r\n                    key: 'toggle',\r\n                    value: function toggle() {\r\n                        this.pause.status ? this.start() : this.stop();\r\n                    }\r\n\r\n                    /**\r\n                     * Stop typing / backspacing and enable cursor blinking\r\n                     * @public\r\n                     */\r\n                }, {\r\n                    key: 'stop',\r\n                    value: function stop() {\r\n                        if (this.typingComplete) return;\r\n                        if (this.pause.status) return;\r\n                        this.toggleBlinking(true);\r\n                        this.pause.status = true;\r\n                        this.options.onStop(this.arrayPos, this);\r\n                    }\r\n\r\n                    /**\r\n                     * Start typing / backspacing after being stopped\r\n                     * @public\r\n                     */\r\n                }, {\r\n                    key: 'start',\r\n                    value: function start() {\r\n                        if (this.typingComplete) return;\r\n                        if (!this.pause.status) return;\r\n                        this.pause.status = false;\r\n                        if (this.pause.typewrite) {\r\n                            this.typewrite(this.pause.curString, this.pause.curStrPos);\r\n                        } else {\r\n                            this.backspace(this.pause.curString, this.pause.curStrPos);\r\n                        }\r\n                        this.options.onStart(this.arrayPos, this);\r\n                    }\r\n\r\n                    /**\r\n                     * Destroy this instance of Typed\r\n                     * @public\r\n                     */\r\n                }, {\r\n                    key: 'destroy',\r\n                    value: function destroy() {\r\n                        this.reset(false);\r\n                        this.options.onDestroy(this);\r\n                    }\r\n\r\n                    /**\r\n                     * Reset Typed and optionally restarts\r\n                     * @param {boolean} restart\r\n                     * @public\r\n                     */\r\n                }, {\r\n                    key: 'reset',\r\n                    value: function reset() {\r\n                        var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\r\n\r\n                        clearInterval(this.timeout);\r\n                        this.replaceText('');\r\n                        if (this.cursor && this.cursor.parentNode) {\r\n                            this.cursor.parentNode.removeChild(this.cursor);\r\n                            this.cursor = null;\r\n                        }\r\n                        this.strPos = 0;\r\n                        this.arrayPos = 0;\r\n                        this.curLoop = 0;\r\n                        if (restart) {\r\n                            this.insertCursor();\r\n                            this.options.onReset(this);\r\n                            this.begin();\r\n                        }\r\n                    }\r\n\r\n                    /**\r\n                     * Begins the typing animation\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'begin',\r\n                    value: function begin() {\r\n                        var _this = this;\r\n\r\n                        this.typingComplete = false;\r\n                        this.shuffleStringsIfNeeded(this);\r\n                        this.insertCursor();\r\n                        if (this.bindInputFocusEvents) this.bindFocusEvents();\r\n                        this.timeout = setTimeout(function () {\r\n                            // Check if there is some text in the element, if yes start by backspacing the default message\r\n                            if (!_this.currentElContent || _this.currentElContent.length === 0) {\r\n                                _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\r\n                            } else {\r\n                                // Start typing\r\n                                _this.backspace(_this.currentElContent, _this.currentElContent.length);\r\n                            }\r\n                        }, this.startDelay);\r\n                    }\r\n\r\n                    /**\r\n                     * Called for each character typed\r\n                     * @param {string} curString the current string in the strings array\r\n                     * @param {number} curStrPos the current position in the curString\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'typewrite',\r\n                    value: function typewrite(curString, curStrPos) {\r\n                        var _this2 = this;\r\n\r\n                        if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\r\n                            this.el.classList.remove(this.fadeOutClass);\r\n                            if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\r\n                        }\r\n\r\n                        var humanize = this.humanizer(this.typeSpeed);\r\n                        var numChars = 1;\r\n\r\n                        if (this.pause.status === true) {\r\n                            this.setPauseStatus(curString, curStrPos, true);\r\n                            return;\r\n                        }\r\n\r\n                        // contain typing function in a timeout humanize'd delay\r\n                        this.timeout = setTimeout(function () {\r\n                            // skip over any HTML chars\r\n                            curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\r\n\r\n                            var pauseTime = 0;\r\n                            var substr = curString.substr(curStrPos);\r\n                            // check for an escape character before a pause value\r\n                            // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\r\n                            // single ^ are removed from string\r\n                            if (substr.charAt(0) === '^') {\r\n                                if (/^\\^\\d+/.test(substr)) {\r\n                                    var skip = 1; // skip at least 1\r\n                                    substr = /\\d+/.exec(substr)[0];\r\n                                    skip += substr.length;\r\n                                    pauseTime = parseInt(substr);\r\n                                    _this2.temporaryPause = true;\r\n                                    _this2.options.onTypingPaused(_this2.arrayPos, _this2);\r\n                                    // strip out the escape character and pause value so they're not printed\r\n                                    curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\r\n                                    _this2.toggleBlinking(true);\r\n                                }\r\n                            }\r\n\r\n                            // check for skip characters formatted as\r\n                            // \"this is a `string to print NOW` ...\"\r\n                            if (substr.charAt(0) === '`') {\r\n                                while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\r\n                                    numChars++;\r\n                                    if (curStrPos + numChars > curString.length) break;\r\n                                }\r\n                                // strip out the escape characters and append all the string in between\r\n                                var stringBeforeSkip = curString.substring(0, curStrPos);\r\n                                var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\r\n                                var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\r\n                                curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\r\n                                numChars--;\r\n                            }\r\n\r\n                            // timeout for any pause after a character\r\n                            _this2.timeout = setTimeout(function () {\r\n                                // Accounts for blinking while paused\r\n                                _this2.toggleBlinking(false);\r\n\r\n                                // We're done with this sentence!\r\n                                if (curStrPos === curString.length) {\r\n                                    _this2.doneTyping(curString, curStrPos);\r\n                                } else {\r\n                                    _this2.keepTyping(curString, curStrPos, numChars);\r\n                                }\r\n                                // end of character pause\r\n                                if (_this2.temporaryPause) {\r\n                                    _this2.temporaryPause = false;\r\n                                    _this2.options.onTypingResumed(_this2.arrayPos, _this2);\r\n                                }\r\n                            }, pauseTime);\r\n\r\n                            // humanized value for typing\r\n                        }, humanize);\r\n                    }\r\n\r\n                    /**\r\n                     * Continue to the next string & begin typing\r\n                     * @param {string} curString the current string in the strings array\r\n                     * @param {number} curStrPos the current position in the curString\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'keepTyping',\r\n                    value: function keepTyping(curString, curStrPos, numChars) {\r\n                        // call before functions if applicable\r\n                        if (curStrPos === 0) {\r\n                            this.toggleBlinking(false);\r\n                            this.options.preStringTyped(this.arrayPos, this);\r\n                        }\r\n                        // start typing each new char into existing string\r\n                        // curString: arg, this.el.html: original text inside element\r\n                        curStrPos += numChars;\r\n                        var nextString = curString.substr(0, curStrPos);\r\n                        this.replaceText(nextString);\r\n                        // loop the function\r\n                        this.typewrite(curString, curStrPos);\r\n                    }\r\n\r\n                    /**\r\n                     * We're done typing all strings\r\n                     * @param {string} curString the current string in the strings array\r\n                     * @param {number} curStrPos the current position in the curString\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'doneTyping',\r\n                    value: function doneTyping(curString, curStrPos) {\r\n                        var _this3 = this;\r\n\r\n                        // fires callback function\r\n                        this.options.onStringTyped(this.arrayPos, this);\r\n                        this.toggleBlinking(true);\r\n                        // is this the final string\r\n                        if (this.arrayPos === this.strings.length - 1) {\r\n                            // callback that occurs on the last typed string\r\n                            this.complete();\r\n                            // quit if we wont loop back\r\n                            if (this.loop === false || this.curLoop === this.loopCount) {\r\n                                return;\r\n                            }\r\n                        }\r\n                        this.timeout = setTimeout(function () {\r\n                            _this3.backspace(curString, curStrPos);\r\n                        }, this.backDelay);\r\n                    }\r\n\r\n                    /**\r\n                     * Backspaces 1 character at a time\r\n                     * @param {string} curString the current string in the strings array\r\n                     * @param {number} curStrPos the current position in the curString\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'backspace',\r\n                    value: function backspace(curString, curStrPos) {\r\n                        var _this4 = this;\r\n\r\n                        if (this.pause.status === true) {\r\n                            this.setPauseStatus(curString, curStrPos, true);\r\n                            return;\r\n                        }\r\n                        if (this.fadeOut) return this.initFadeOut();\r\n\r\n                        this.toggleBlinking(false);\r\n                        var humanize = this.humanizer(this.backSpeed);\r\n\r\n                        this.timeout = setTimeout(function () {\r\n                            curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\r\n                            // replace text with base text + typed characters\r\n                            var curStringAtPosition = curString.substr(0, curStrPos);\r\n                            _this4.replaceText(curStringAtPosition);\r\n\r\n                            // if smartBack is enabled\r\n                            if (_this4.smartBackspace) {\r\n                                // the remaining part of the current string is equal of the same part of the new string\r\n                                var nextString = _this4.strings[_this4.arrayPos + 1];\r\n                                if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\r\n                                    _this4.stopNum = curStrPos;\r\n                                } else {\r\n                                    _this4.stopNum = 0;\r\n                                }\r\n                            }\r\n\r\n                            // if the number (id of character in current string) is\r\n                            // less than the stop number, keep going\r\n                            if (curStrPos > _this4.stopNum) {\r\n                                // subtract characters one by one\r\n                                curStrPos--;\r\n                                // loop the function\r\n                                _this4.backspace(curString, curStrPos);\r\n                            } else if (curStrPos <= _this4.stopNum) {\r\n                                // if the stop number has been reached, increase\r\n                                // array position to next string\r\n                                _this4.arrayPos++;\r\n                                // When looping, begin at the beginning after backspace complete\r\n                                if (_this4.arrayPos === _this4.strings.length) {\r\n                                    _this4.arrayPos = 0;\r\n                                    _this4.options.onLastStringBackspaced();\r\n                                    _this4.shuffleStringsIfNeeded();\r\n                                    _this4.begin();\r\n                                } else {\r\n                                    _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\r\n                                }\r\n                            }\r\n                            // humanized value for typing\r\n                        }, humanize);\r\n                    }\r\n\r\n                    /**\r\n                     * Full animation is complete\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'complete',\r\n                    value: function complete() {\r\n                        this.options.onComplete(this);\r\n                        if (this.loop) {\r\n                            this.curLoop++;\r\n                        } else {\r\n                            this.typingComplete = true;\r\n                        }\r\n                    }\r\n\r\n                    /**\r\n                     * Has the typing been stopped\r\n                     * @param {string} curString the current string in the strings array\r\n                     * @param {number} curStrPos the current position in the curString\r\n                     * @param {boolean} isTyping\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'setPauseStatus',\r\n                    value: function setPauseStatus(curString, curStrPos, isTyping) {\r\n                        this.pause.typewrite = isTyping;\r\n                        this.pause.curString = curString;\r\n                        this.pause.curStrPos = curStrPos;\r\n                    }\r\n\r\n                    /**\r\n                     * Toggle the blinking cursor\r\n                     * @param {boolean} isBlinking\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'toggleBlinking',\r\n                    value: function toggleBlinking(isBlinking) {\r\n                        if (!this.cursor) return;\r\n                        // if in paused state, don't toggle blinking a 2nd time\r\n                        if (this.pause.status) return;\r\n                        if (this.cursorBlinking === isBlinking) return;\r\n                        this.cursorBlinking = isBlinking;\r\n                        if (isBlinking) {\r\n                            this.cursor.classList.add('typed-cursor--blink');\r\n                        } else {\r\n                            this.cursor.classList.remove('typed-cursor--blink');\r\n                        }\r\n                    }\r\n\r\n                    /**\r\n                     * Speed in MS to type\r\n                     * @param {number} speed\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'humanizer',\r\n                    value: function humanizer(speed) {\r\n                        return Math.round(Math.random() * speed / 2) + speed;\r\n                    }\r\n\r\n                    /**\r\n                     * Shuffle the sequence of the strings array\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'shuffleStringsIfNeeded',\r\n                    value: function shuffleStringsIfNeeded() {\r\n                        if (!this.shuffle) return;\r\n                        this.sequence = this.sequence.sort(function () {\r\n                            return Math.random() - 0.5;\r\n                        });\r\n                    }\r\n\r\n                    /**\r\n                     * Adds a CSS class to fade out current string\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'initFadeOut',\r\n                    value: function initFadeOut() {\r\n                        var _this5 = this;\r\n\r\n                        this.el.className += ' ' + this.fadeOutClass;\r\n                        if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\r\n                        return setTimeout(function () {\r\n                            _this5.arrayPos++;\r\n                            _this5.replaceText('');\r\n\r\n                            // Resets current string if end of loop reached\r\n                            if (_this5.strings.length > _this5.arrayPos) {\r\n                                _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\r\n                            } else {\r\n                                _this5.typewrite(_this5.strings[0], 0);\r\n                                _this5.arrayPos = 0;\r\n                            }\r\n                        }, this.fadeOutDelay);\r\n                    }\r\n\r\n                    /**\r\n                     * Replaces current text in the HTML element\r\n                     * depending on element type\r\n                     * @param {string} str\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'replaceText',\r\n                    value: function replaceText(str) {\r\n                        if (this.attr) {\r\n                            this.el.setAttribute(this.attr, str);\r\n                        } else {\r\n                            if (this.isInput) {\r\n                                this.el.value = str;\r\n                            } else if (this.contentType === 'html') {\r\n                                this.el.innerHTML = str;\r\n                            } else {\r\n                                this.el.textContent = str;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    /**\r\n                     * If using input elements, bind focus in order to\r\n                     * start and stop the animation\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'bindFocusEvents',\r\n                    value: function bindFocusEvents() {\r\n                        var _this6 = this;\r\n\r\n                        if (!this.isInput) return;\r\n                        this.el.addEventListener('focus', function (e) {\r\n                            _this6.stop();\r\n                        });\r\n                        this.el.addEventListener('blur', function (e) {\r\n                            if (_this6.el.value && _this6.el.value.length !== 0) {\r\n                                return;\r\n                            }\r\n                            _this6.start();\r\n                        });\r\n                    }\r\n\r\n                    /**\r\n                     * On init, insert the cursor element\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'insertCursor',\r\n                    value: function insertCursor() {\r\n                        if (!this.showCursor) return;\r\n                        if (this.cursor) return;\r\n                        this.cursor = document.createElement('span');\r\n                        this.cursor.className = 'typed-cursor';\r\n                        this.cursor.innerHTML = this.cursorChar;\r\n                        this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\r\n                    }\r\n                }]);\r\n\r\n                return Typed;\r\n            })();\r\n\r\n            exports['default'] = Typed;\r\n            module.exports = exports['default'];\r\n\r\n            /***/ }),\r\n        /* 1 */\r\n        /***/ (function(module, exports, __webpack_require__) {\r\n\r\n            'use strict';\r\n\r\n            Object.defineProperty(exports, '__esModule', {\r\n                value: true\r\n            });\r\n\r\n            var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\n            var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\r\n\r\n            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\n            function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\r\n            var _defaultsJs = __webpack_require__(2);\r\n\r\n            var _defaultsJs2 = _interopRequireDefault(_defaultsJs);\r\n\r\n            /**\r\n             * Initialize the Typed object\r\n             */\r\n\r\n            var Initializer = (function () {\r\n                function Initializer() {\r\n                    _classCallCheck(this, Initializer);\r\n                }\r\n\r\n                _createClass(Initializer, [{\r\n                    key: 'load',\r\n\r\n                    /**\r\n                     * Load up defaults & options on the Typed instance\r\n                     * @param {Typed} self instance of Typed\r\n                     * @param {object} options options object\r\n                     * @param {string} elementId HTML element ID _OR_ instance of HTML element\r\n                     * @private\r\n                     */\r\n\r\n                    value: function load(self, options, elementId) {\r\n                        // chosen element to manipulate text\r\n                        if (typeof elementId === 'string') {\r\n                            self.el = document.querySelector(elementId);\r\n                        } else {\r\n                            self.el = elementId;\r\n                        }\r\n\r\n                        self.options = _extends({}, _defaultsJs2['default'], options);\r\n\r\n                        // attribute to type into\r\n                        self.isInput = self.el.tagName.toLowerCase() === 'input';\r\n                        self.attr = self.options.attr;\r\n                        self.bindInputFocusEvents = self.options.bindInputFocusEvents;\r\n\r\n                        // show cursor\r\n                        self.showCursor = self.isInput ? false : self.options.showCursor;\r\n\r\n                        // custom cursor\r\n                        self.cursorChar = self.options.cursorChar;\r\n\r\n                        // Is the cursor blinking\r\n                        self.cursorBlinking = true;\r\n\r\n                        // text content of element\r\n                        self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\r\n\r\n                        // html or plain text\r\n                        self.contentType = self.options.contentType;\r\n\r\n                        // typing speed\r\n                        self.typeSpeed = self.options.typeSpeed;\r\n\r\n                        // add a delay before typing starts\r\n                        self.startDelay = self.options.startDelay;\r\n\r\n                        // backspacing speed\r\n                        self.backSpeed = self.options.backSpeed;\r\n\r\n                        // only backspace what doesn't match the previous string\r\n                        self.smartBackspace = self.options.smartBackspace;\r\n\r\n                        // amount of time to wait before backspacing\r\n                        self.backDelay = self.options.backDelay;\r\n\r\n                        // Fade out instead of backspace\r\n                        self.fadeOut = self.options.fadeOut;\r\n                        self.fadeOutClass = self.options.fadeOutClass;\r\n                        self.fadeOutDelay = self.options.fadeOutDelay;\r\n\r\n                        // variable to check whether typing is currently paused\r\n                        self.isPaused = false;\r\n\r\n                        // input strings of text\r\n                        self.strings = self.options.strings.map(function (s) {\r\n                            return s.trim();\r\n                        });\r\n\r\n                        // div containing strings\r\n                        if (typeof self.options.stringsElement === 'string') {\r\n                            self.stringsElement = document.querySelector(self.options.stringsElement);\r\n                        } else {\r\n                            self.stringsElement = self.options.stringsElement;\r\n                        }\r\n\r\n                        if (self.stringsElement) {\r\n                            self.strings = [];\r\n                            self.stringsElement.style.display = 'none';\r\n                            var strings = Array.prototype.slice.apply(self.stringsElement.children);\r\n                            var stringsLength = strings.length;\r\n\r\n                            if (stringsLength) {\r\n                                for (var i = 0; i < stringsLength; i += 1) {\r\n                                    var stringEl = strings[i];\r\n                                    self.strings.push(stringEl.innerHTML.trim());\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // character number position of current string\r\n                        self.strPos = 0;\r\n\r\n                        // current array position\r\n                        self.arrayPos = 0;\r\n\r\n                        // index of string to stop backspacing on\r\n                        self.stopNum = 0;\r\n\r\n                        // Looping logic\r\n                        self.loop = self.options.loop;\r\n                        self.loopCount = self.options.loopCount;\r\n                        self.curLoop = 0;\r\n\r\n                        // shuffle the strings\r\n                        self.shuffle = self.options.shuffle;\r\n                        // the order of strings\r\n                        self.sequence = [];\r\n\r\n                        self.pause = {\r\n                            status: false,\r\n                            typewrite: true,\r\n                            curString: '',\r\n                            curStrPos: 0\r\n                        };\r\n\r\n                        // When the typing is complete (when not looped)\r\n                        self.typingComplete = false;\r\n\r\n                        // Set the order in which the strings are typed\r\n                        for (var i in self.strings) {\r\n                            self.sequence[i] = i;\r\n                        }\r\n\r\n                        // If there is some text in the element\r\n                        self.currentElContent = this.getCurrentElContent(self);\r\n\r\n                        self.autoInsertCss = self.options.autoInsertCss;\r\n\r\n                        this.appendAnimationCss(self);\r\n                    }\r\n                }, {\r\n                    key: 'getCurrentElContent',\r\n                    value: function getCurrentElContent(self) {\r\n                        var elContent = '';\r\n                        if (self.attr) {\r\n                            elContent = self.el.getAttribute(self.attr);\r\n                        } else if (self.isInput) {\r\n                            elContent = self.el.value;\r\n                        } else if (self.contentType === 'html') {\r\n                            elContent = self.el.innerHTML;\r\n                        } else {\r\n                            elContent = self.el.textContent;\r\n                        }\r\n                        return elContent;\r\n                    }\r\n                }, {\r\n                    key: 'appendAnimationCss',\r\n                    value: function appendAnimationCss(self) {\r\n                        var cssDataName = 'data-typed-js-css';\r\n                        if (!self.autoInsertCss) {\r\n                            return;\r\n                        }\r\n                        if (!self.showCursor && !self.fadeOut) {\r\n                            return;\r\n                        }\r\n                        if (document.querySelector('[' + cssDataName + ']')) {\r\n                            return;\r\n                        }\r\n\r\n                        var css = document.createElement('style');\r\n                        css.type = 'text/css';\r\n                        css.setAttribute(cssDataName, true);\r\n\r\n                        var innerCss = '';\r\n                        if (self.showCursor) {\r\n                            innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\r\n                        }\r\n                        if (self.fadeOut) {\r\n                            innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\r\n                        }\r\n                        if (css.length === 0) {\r\n                            return;\r\n                        }\r\n                        css.innerHTML = innerCss;\r\n                        document.body.appendChild(css);\r\n                    }\r\n                }]);\r\n\r\n                return Initializer;\r\n            })();\r\n\r\n            exports['default'] = Initializer;\r\n            var initializer = new Initializer();\r\n            exports.initializer = initializer;\r\n\r\n            /***/ }),\r\n        /* 2 */\r\n        /***/ (function(module, exports) {\r\n\r\n            /**\r\n             * Defaults & options\r\n             * @returns {object} Typed defaults & options\r\n             * @public\r\n             */\r\n\r\n            'use strict';\r\n\r\n            Object.defineProperty(exports, '__esModule', {\r\n                value: true\r\n            });\r\n            var defaults = {\r\n                /**\r\n                 * @property {array} strings strings to be typed\r\n                 * @property {string} stringsElement ID of element containing string children\r\n                 */\r\n                strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\r\n                stringsElement: null,\r\n\r\n                /**\r\n                 * @property {number} typeSpeed type speed in milliseconds\r\n                 */\r\n                typeSpeed: 0,\r\n\r\n                /**\r\n                 * @property {number} startDelay time before typing starts in milliseconds\r\n                 */\r\n                startDelay: 0,\r\n\r\n                /**\r\n                 * @property {number} backSpeed backspacing speed in milliseconds\r\n                 */\r\n                backSpeed: 0,\r\n\r\n                /**\r\n                 * @property {boolean} smartBackspace only backspace what doesn't match the previous string\r\n                 */\r\n                smartBackspace: true,\r\n\r\n                /**\r\n                 * @property {boolean} shuffle shuffle the strings\r\n                 */\r\n                shuffle: false,\r\n\r\n                /**\r\n                 * @property {number} backDelay time before backspacing in milliseconds\r\n                 */\r\n                backDelay: 700,\r\n\r\n                /**\r\n                 * @property {boolean} fadeOut Fade out instead of backspace\r\n                 * @property {string} fadeOutClass css class for fade animation\r\n                 * @property {boolean} fadeOutDelay Fade out delay in milliseconds\r\n                 */\r\n                fadeOut: false,\r\n                fadeOutClass: 'typed-fade-out',\r\n                fadeOutDelay: 500,\r\n\r\n                /**\r\n                 * @property {boolean} loop loop strings\r\n                 * @property {number} loopCount amount of loops\r\n                 */\r\n                loop: false,\r\n                loopCount: Infinity,\r\n\r\n                /**\r\n                 * @property {boolean} showCursor show cursor\r\n                 * @property {string} cursorChar character for cursor\r\n                 * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\r\n                 */\r\n                showCursor: true,\r\n                cursorChar: '|',\r\n                autoInsertCss: true,\r\n\r\n                /**\r\n                 * @property {string} attr attribute for typing\r\n                 * Ex: input placeholder, value, or just HTML text\r\n                 */\r\n                attr: null,\r\n\r\n                /**\r\n                 * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\r\n                 */\r\n                bindInputFocusEvents: false,\r\n\r\n                /**\r\n                 * @property {string} contentType 'html' or 'null' for plaintext\r\n                 */\r\n                contentType: 'html',\r\n\r\n                /**\r\n                 * All typing is complete\r\n                 * @param {Typed} self\r\n                 */\r\n                onComplete: function onComplete(self) {},\r\n\r\n                /**\r\n                 * Before each string is typed\r\n                 * @param {number} arrayPos\r\n                 * @param {Typed} self\r\n                 */\r\n                preStringTyped: function preStringTyped(arrayPos, self) {},\r\n\r\n                /**\r\n                 * After each string is typed\r\n                 * @param {number} arrayPos\r\n                 * @param {Typed} self\r\n                 */\r\n                onStringTyped: function onStringTyped(arrayPos, self) {},\r\n\r\n                /**\r\n                 * During looping, after last string is typed\r\n                 * @param {Typed} self\r\n                 */\r\n                onLastStringBackspaced: function onLastStringBackspaced(self) {},\r\n\r\n                /**\r\n                 * Typing has been stopped\r\n                 * @param {number} arrayPos\r\n                 * @param {Typed} self\r\n                 */\r\n                onTypingPaused: function onTypingPaused(arrayPos, self) {},\r\n\r\n                /**\r\n                 * Typing has been started after being stopped\r\n                 * @param {number} arrayPos\r\n                 * @param {Typed} self\r\n                 */\r\n                onTypingResumed: function onTypingResumed(arrayPos, self) {},\r\n\r\n                /**\r\n                 * After reset\r\n                 * @param {Typed} self\r\n                 */\r\n                onReset: function onReset(self) {},\r\n\r\n                /**\r\n                 * After stop\r\n                 * @param {number} arrayPos\r\n                 * @param {Typed} self\r\n                 */\r\n                onStop: function onStop(arrayPos, self) {},\r\n\r\n                /**\r\n                 * After start\r\n                 * @param {number} arrayPos\r\n                 * @param {Typed} self\r\n                 */\r\n                onStart: function onStart(arrayPos, self) {},\r\n\r\n                /**\r\n                 * After destroy\r\n                 * @param {Typed} self\r\n                 */\r\n                onDestroy: function onDestroy(self) {}\r\n            };\r\n\r\n            exports['default'] = defaults;\r\n            module.exports = exports['default'];\r\n\r\n            /***/ }),\r\n        /* 3 */\r\n        /***/ (function(module, exports) {\r\n\r\n\r\n            /**\r\n             * TODO: These methods can probably be combined somehow\r\n             * Parse HTML tags & HTML Characters\r\n             */\r\n\r\n            'use strict';\r\n\r\n            Object.defineProperty(exports, '__esModule', {\r\n                value: true\r\n            });\r\n\r\n            var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\r\n\r\n            function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\r\n            var HTMLParser = (function () {\r\n                function HTMLParser() {\r\n                    _classCallCheck(this, HTMLParser);\r\n                }\r\n\r\n                _createClass(HTMLParser, [{\r\n                    key: 'typeHtmlChars',\r\n\r\n                    /**\r\n                     * Type HTML tags & HTML Characters\r\n                     * @param {string} curString Current string\r\n                     * @param {number} curStrPos Position in current string\r\n                     * @param {Typed} self instance of Typed\r\n                     * @returns {number} a new string position\r\n                     * @private\r\n                     */\r\n\r\n                    value: function typeHtmlChars(curString, curStrPos, self) {\r\n                        if (self.contentType !== 'html') return curStrPos;\r\n                        var curChar = curString.substr(curStrPos).charAt(0);\r\n                        if (curChar === '<' || curChar === '&') {\r\n                            var endTag = '';\r\n                            if (curChar === '<') {\r\n                                endTag = '>';\r\n                            } else {\r\n                                endTag = ';';\r\n                            }\r\n                            while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\r\n                                curStrPos++;\r\n                                if (curStrPos + 1 > curString.length) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            curStrPos++;\r\n                        }\r\n                        return curStrPos;\r\n                    }\r\n\r\n                    /**\r\n                     * Backspace HTML tags and HTML Characters\r\n                     * @param {string} curString Current string\r\n                     * @param {number} curStrPos Position in current string\r\n                     * @param {Typed} self instance of Typed\r\n                     * @returns {number} a new string position\r\n                     * @private\r\n                     */\r\n                }, {\r\n                    key: 'backSpaceHtmlChars',\r\n                    value: function backSpaceHtmlChars(curString, curStrPos, self) {\r\n                        if (self.contentType !== 'html') return curStrPos;\r\n                        var curChar = curString.substr(curStrPos).charAt(0);\r\n                        if (curChar === '>' || curChar === ';') {\r\n                            var endTag = '';\r\n                            if (curChar === '>') {\r\n                                endTag = '<';\r\n                            } else {\r\n                                endTag = '&';\r\n                            }\r\n                            while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\r\n                                curStrPos--;\r\n                                if (curStrPos < 0) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            curStrPos--;\r\n                        }\r\n                        return curStrPos;\r\n                    }\r\n                }]);\r\n\r\n                return HTMLParser;\r\n            })();\r\n\r\n            exports['default'] = HTMLParser;\r\n            var htmlParser = new HTMLParser();\r\n            exports.htmlParser = htmlParser;\r\n\r\n            /***/ })\r\n        /******/ ])\r\n});\r\n;","$(document).ready(function () {\r\n    //SideNav Menu\r\n    function openNav() {\r\n        document.getElementById(\"mySidenav\").style.width = \"50%\";\r\n    }\r\n\r\n    function closeNav() {\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n    }\r\n\r\n//3D ANIMATION\r\n    var site = site || {};\r\n    site.window = $(window);\r\n    site.document = $(document);\r\n    site.Width = site.window.width();\r\n    site.Height = site.window.height();\r\n\r\n    var Background = function() {\r\n\r\n    };\r\n\r\n    Background.headparticle = function() {\r\n        /**\r\n         * @return {undefined}\r\n         */\r\n        function FPSTest() {\r\n            Background.camera.position.x += 1 * (-.5 * d - Background.camera.position.x);\r\n            Background.camera.position.y += .5 * (.5 * factor - Background.camera.position.y);\r\n            Background.camera.lookAt(Background.scene.position);\r\n            Background.renderer.render(Background.scene, Background.camera);\r\n        }\r\n        if (!Modernizr.webgl) {\r\n            alert(\"Your browser dosent support WebGL\");\r\n        }\r\n        var functionOptimization;\r\n        /** @type {number} */\r\n        var d = 0;\r\n        /** @type {number} */\r\n        var factor = 0;\r\n        /** @type {number} */\r\n        var startex = site.Width / 2;\r\n        /** @type {number} */\r\n        var scrollBarStartY = site.Height / 2;\r\n        Background.camera = new THREE.PerspectiveCamera(40, site.Width / site.Height, 1, 2e3);\r\n        /** @type {number} */\r\n        Background.camera.position.z = 300;\r\n        Background.scene = new THREE.Scene;\r\n        var manager = new THREE.LoadingManager;\r\n        var systemGeometry = new THREE.Geometry;\r\n        var systemMaterial = new THREE.ParticleBasicMaterial({\r\n            // color : 0xff5e91, pink color\r\n            color: 0x0a1429,\r\n            size : 1.1\r\n        });\r\n        (new THREE.OBJLoader(manager)).load(\"face.obj\", function(n) {\r\n            n.traverse(function(object) {\r\n                if (object instanceof THREE.Mesh) {\r\n                    $(object.geometry.vertices).each(function() {\r\n                        systemGeometry.vertices.push(new THREE.Vector3(7 * this.x + 100, 7 * this.y - 5, 7 * this.z));\r\n                    });\r\n                }\r\n            });\r\n            Background.scene.add(functionOptimization);\r\n        });\r\n        functionOptimization = new THREE.ParticleSystem(systemGeometry, systemMaterial);\r\n        Background.renderer = new THREE.WebGLRenderer({\r\n            alpha : true\r\n        });\r\n        Background.renderer.setSize(site.Width, site.Height);\r\n        Background.renderer.setClearColor(0, 0);\r\n        $(\".particlehead\").append(Background.renderer.domElement);\r\n        $(\".particlehead\").on(\"mousemove\", function(e) {\r\n            /** @type {number} */\r\n            d = (e.clientX - startex) / 2 - 300;\r\n            /** @type {number} */\r\n            factor = (e.clientY - scrollBarStartY) / 2;\r\n        });\r\n        site.window.on(\"resize\", function() {\r\n            /** @type {number} */\r\n            startex = site.Width / 2;\r\n            /** @type {number} */\r\n            scrollBarStartY = site.Height / 2;\r\n            /** @type {number} */\r\n            Background.camera.aspect = site.Width / site.Height;\r\n            Background.camera.updateProjectionMatrix();\r\n            Background.renderer.setSize(site.Width, site.Height);\r\n        });\r\n        /**\r\n         * @return {undefined}\r\n         */\r\n        Background.animate = function() {\r\n            Background.ticker = TweenMax.ticker;\r\n            Background.ticker.addEventListener(\"tick\", Background.animate);\r\n            FPSTest();\r\n        };\r\n        FPSTest();\r\n        Background.animate();\r\n    }\r\n\r\n    Background.headparticle();\r\n// Custom Browser Scroll Bar\r\n// custom cursor\r\n    var cursor = $(\".custom-cursor\"),\r\n        follower = $(\".follow-cursor\");\r\n\r\n    var posX = 0,\r\n        posY = 0;\r\n\r\n    var mouseX = 0,\r\n        mouseY = 0;\r\n\r\n    TweenMax.to({}, 0.016, {\r\n        repeat: -1,\r\n        onRepeat: function() {\r\n            posX += (mouseX - posX) / 9;\r\n            posY += (mouseY - posY) / 9;\r\n\r\n            TweenMax.set(follower, {\r\n                css: {\r\n                    left: posX - 12,\r\n                    top: posY - 12\r\n                }\r\n            });\r\n\r\n            TweenMax.set(cursor, {\r\n                css: {\r\n                    left: mouseX,\r\n                    top: mouseY\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    $(document).on(\"mousemove\", function(e) {\r\n        mouseX = e.pageX;\r\n        mouseY = e.pageY;\r\n    });\r\n\r\n    $(\"a\").on(\"mouseenter\", function() {\r\n        cursor.addClass(\"active\");\r\n        follower.addClass(\"active\");\r\n    });\r\n    $(\"a\").on(\"mouseleave\", function() {\r\n        cursor.removeClass(\"active\");\r\n        follower.removeClass(\"active\");\r\n    });\r\n\r\n});\r\n/*Test menu*/\r\n\r\njQuery(document).ready(function($){\r\n    var overlayNav = $('.cd-overlay-nav'),\r\n        overlayContent = $('.cd-overlay-content'),\r\n        navigation = $('.cd-primary-nav'),\r\n        toggleNav = $('.cd-nav-trigger');\r\n\r\n    //inizialize navigation and content layers\r\n    layerInit();\r\n    $(window).on('resize', function(){\r\n        window.requestAnimationFrame(layerInit);\r\n    });\r\n\r\n    //open/close the menu and cover layers\r\n    toggleNav.on('click', function(){\r\n        if(!toggleNav.hasClass('close-nav')) {\r\n            //it means navigation is not visible yet - open it and animate navigation layer\r\n            toggleNav.addClass('close-nav');\r\n\r\n            overlayNav.children('span').velocity({\r\n                translateZ: 0,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n            }, 500, 'easeInCubic', function(){\r\n                navigation.addClass('fade-in');\r\n            });\r\n        } else {\r\n            //navigation is open - close it and remove navigation layer\r\n            toggleNav.removeClass('close-nav');\r\n\r\n            overlayContent.children('span').velocity({\r\n                translateZ: 0,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n            }, 500, 'easeInCubic', function(){\r\n                navigation.removeClass('fade-in');\r\n\r\n                overlayNav.children('span').velocity({\r\n                    translateZ: 0,\r\n                    scaleX: 0,\r\n                    scaleY: 0,\r\n                }, 0);\r\n\r\n                overlayContent.addClass('is-hidden').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){\r\n                    overlayContent.children('span').velocity({\r\n                        translateZ: 0,\r\n                        scaleX: 0,\r\n                        scaleY: 0,\r\n                    }, 0, function(){overlayContent.removeClass('is-hidden')});\r\n                });\r\n                if($('html').hasClass('no-csstransitions')) {\r\n                    overlayContent.children('span').velocity({\r\n                        translateZ: 0,\r\n                        scaleX: 0,\r\n                        scaleY: 0,\r\n                    }, 0, function(){overlayContent.removeClass('is-hidden')});\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    function layerInit(){\r\n        var diameterValue = (Math.sqrt( Math.pow($(window).height(), 2) + Math.pow($(window).width(), 2))*2);\r\n        overlayNav.children('span').velocity({\r\n            scaleX: 0,\r\n            scaleY: 0,\r\n            translateZ: 0,\r\n        }, 50).velocity({\r\n            height : diameterValue+'px',\r\n            width : diameterValue+'px',\r\n            top : -(diameterValue/2)+'px',\r\n            left : -(diameterValue/2)+'px',\r\n        }, 0);\r\n\r\n        overlayContent.children('span').velocity({\r\n            scaleX: 0,\r\n            scaleY: 0,\r\n            translateZ: 0,\r\n        }, 50).velocity({\r\n            height : diameterValue+'px',\r\n            width : diameterValue+'px',\r\n            top : -(diameterValue/2)+'px',\r\n            left : -(diameterValue/2)+'px',\r\n        }, 0);\r\n    }\r\n});\r\n\r\n$(document).ready(function () {\r\n    var typed = new Typed(\"#typed\", {\r\n        strings: ['Web designer &amp; <br> front-end developer <br>' +\r\n        '<span style=\"font-family: LibreBaskerville-Italic; color: #98a4b8;font-size: 28px;\">Creative and passionate</span>'],\r\n        typeSpeed: 80,\r\n        backDelay: 1600,\r\n        loop: true,\r\n        contentType: 'html',\r\n        loopCount: null,\r\n        onReset: function(self) {},\r\n        onDestroy: function(self) {}\r\n    });\r\n    // variables\r\n    var $nav = $('nav');\r\n    // fullpage customization\r\n    $('#fullpage').fullpage({\r\n        sectionSelector: '.vertical-scrolling',\r\n        slideSelector: '.horizontal-scrolling',\r\n        navigation: true,\r\n        slidesNavigation: true,\r\n        controlArrows: false,\r\n        loopBottom: true,\r\n        afterLoad: function(anchorLink, index) {\r\n\r\n            if (index == 2) {\r\n                typed.reset();\r\n                // console.log('im in 2');\r\n\r\n            }\r\n            if(index == 4) {\r\n                $('#fp-nav').hide();\r\n            }\r\n            if ((index == 2) || (index == 5) ) {\r\n                $('.navbar-brand svg .st0').css({\"fill\":\"#fff\"});\r\n            }\r\n            else {\r\n                $('.navbar-brand svg .st0').css({\"fill\":\"#0A1529\"});\r\n            }\r\n            if (index == 5){\r\n                $('.menu-text').css({\"color\":\"#98a4b8\"});\r\n            }\r\n            else {\r\n                $('.menu-text').css({\"color\":\"#0a1529\"});\r\n\r\n            }\r\n        },\r\n\r\n        onLeave: function(index) {\r\n            if(index == 2) {\r\n                typed.destroy();\r\n                // console.log('im not in 2');\r\n            };\r\n            if (index == 4) {\r\n                $('#fp-nav').show();\r\n            }\r\n        }\r\n    });\r\n});","/*! VelocityJS.org (1.1.0). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n!function(e){function t(e){var t=e.length,r=$.type(e);return\"function\"===r||$.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===r||0===t||\"number\"==typeof t&&t>0&&t-1 in e}if(!e.jQuery){var $=function(e,t){return new $.fn.init(e,t)};$.isWindow=function(e){return null!=e&&e==e.window},$.type=function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?a[o.call(e)]||\"object\":typeof e},$.isArray=Array.isArray||function(e){return\"array\"===$.type(e)},$.isPlainObject=function(e){var t;if(!e||\"object\"!==$.type(e)||e.nodeType||$.isWindow(e))return!1;try{if(e.constructor&&!n.call(e,\"constructor\")&&!n.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(r){return!1}for(t in e);return void 0===t||n.call(e,t)},$.each=function(e,r,a){var n,o=0,i=e.length,s=t(e);if(a){if(s)for(;i>o&&(n=r.apply(e[o],a),n!==!1);o++);else for(o in e)if(n=r.apply(e[o],a),n===!1)break}else if(s)for(;i>o&&(n=r.call(e[o],o,e[o]),n!==!1);o++);else for(o in e)if(n=r.call(e[o],o,e[o]),n===!1)break;return e},$.data=function(e,t,a){if(void 0===a){var n=e[$.expando],o=n&&r[n];if(void 0===t)return o;if(o&&t in o)return o[t]}else if(void 0!==t){var n=e[$.expando]||(e[$.expando]=++$.uuid);return r[n]=r[n]||{},r[n][t]=a,a}},$.removeData=function(e,t){var a=e[$.expando],n=a&&r[a];n&&$.each(t,function(e,t){delete n[t]})},$.extend=function(){var e,t,r,a,n,o,i=arguments[0]||{},s=1,l=arguments.length,u=!1;for(\"boolean\"==typeof i&&(u=i,i=arguments[s]||{},s++),\"object\"!=typeof i&&\"function\"!==$.type(i)&&(i={}),s===l&&(i=this,s--);l>s;s++)if(null!=(n=arguments[s]))for(a in n)e=i[a],r=n[a],i!==r&&(u&&r&&($.isPlainObject(r)||(t=$.isArray(r)))?(t?(t=!1,o=e&&$.isArray(e)?e:[]):o=e&&$.isPlainObject(e)?e:{},i[a]=$.extend(u,o,r)):void 0!==r&&(i[a]=r));return i},$.queue=function(e,r,a){function n(e,r){var a=r||[];return null!=e&&(t(Object(e))?!function(e,t){for(var r=+t.length,a=0,n=e.length;r>a;)e[n++]=t[a++];if(r!==r)for(;void 0!==t[a];)e[n++]=t[a++];return e.length=n,e}(a,\"string\"==typeof e?[e]:e):[].push.call(a,e)),a}if(e){r=(r||\"fx\")+\"queue\";var o=$.data(e,r);return a?(!o||$.isArray(a)?o=$.data(e,r,n(a)):o.push(a),o):o||[]}},$.dequeue=function(e,t){$.each(e.nodeType?[e]:e,function(e,r){t=t||\"fx\";var a=$.queue(r,t),n=a.shift();\"inprogress\"===n&&(n=a.shift()),n&&(\"fx\"===t&&a.unshift(\"inprogress\"),n.call(r,function(){$.dequeue(r,t)}))})},$.fn=$.prototype={init:function(e){if(e.nodeType)return this[0]=e,this;throw new Error(\"Not a DOM node.\")},offset:function(){var t=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:t.top+(e.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:t.left+(e.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function e(){for(var e=this.offsetParent||document;e&&\"html\"===!e.nodeType.toLowerCase&&\"static\"===e.style.position;)e=e.offsetParent;return e||document}var t=this[0],e=e.apply(t),r=this.offset(),a=/^(?:body|html)$/i.test(e.nodeName)?{top:0,left:0}:$(e).offset();return r.top-=parseFloat(t.style.marginTop)||0,r.left-=parseFloat(t.style.marginLeft)||0,e.style&&(a.top+=parseFloat(e.style.borderTopWidth)||0,a.left+=parseFloat(e.style.borderLeftWidth)||0),{top:r.top-a.top,left:r.left-a.left}}};var r={};$.expando=\"velocity\"+(new Date).getTime(),$.uuid=0;for(var a={},n=a.hasOwnProperty,o=a.toString,i=\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),s=0;s<i.length;s++)a[\"[object \"+i[s]+\"]\"]=i[s].toLowerCase();$.fn.init.prototype=$.fn,e.Velocity={Utilities:$}}}(window),function(e){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e():\"function\"==typeof define&&define.amd?define(e):e()}(function(){return function(e,t,r,a){function n(e){for(var t=-1,r=e?e.length:0,a=[];++t<r;){var n=e[t];n&&a.push(n)}return a}function o(e){return g.isWrapped(e)?e=[].slice.call(e):g.isNode(e)&&(e=[e]),e}function i(e){var t=$.data(e,\"velocity\");return null===t?a:t}function s(e){return function(t){return Math.round(t*e)*(1/e)}}function l(e,r,a,n){function o(e,t){return 1-3*t+3*e}function i(e,t){return 3*t-6*e}function s(e){return 3*e}function l(e,t,r){return((o(t,r)*e+i(t,r))*e+s(t))*e}function u(e,t,r){return 3*o(t,r)*e*e+2*i(t,r)*e+s(t)}function c(t,r){for(var n=0;m>n;++n){var o=u(r,e,a);if(0===o)return r;var i=l(r,e,a)-t;r-=i/o}return r}function p(){for(var t=0;b>t;++t)w[t]=l(t*x,e,a)}function f(t,r,n){var o,i,s=0;do i=r+(n-r)/2,o=l(i,e,a)-t,o>0?n=i:r=i;while(Math.abs(o)>h&&++s<v);return i}function d(t){for(var r=0,n=1,o=b-1;n!=o&&w[n]<=t;++n)r+=x;--n;var i=(t-w[n])/(w[n+1]-w[n]),s=r+i*x,l=u(s,e,a);return l>=y?c(t,s):0==l?s:f(t,r,r+x)}function g(){V=!0,(e!=r||a!=n)&&p()}var m=4,y=.001,h=1e-7,v=10,b=11,x=1/(b-1),S=\"Float32Array\"in t;if(4!==arguments.length)return!1;for(var P=0;4>P;++P)if(\"number\"!=typeof arguments[P]||isNaN(arguments[P])||!isFinite(arguments[P]))return!1;e=Math.min(e,1),a=Math.min(a,1),e=Math.max(e,0),a=Math.max(a,0);var w=S?new Float32Array(b):new Array(b),V=!1,C=function(t){return V||g(),e===r&&a===n?t:0===t?0:1===t?1:l(d(t),r,n)};C.getControlPoints=function(){return[{x:e,y:r},{x:a,y:n}]};var T=\"generateBezier(\"+[e,r,a,n]+\")\";return C.toString=function(){return T},C}function u(e,t){var r=e;return g.isString(e)?v.Easings[e]||(r=!1):r=g.isArray(e)&&1===e.length?s.apply(null,e):g.isArray(e)&&2===e.length?b.apply(null,e.concat([t])):g.isArray(e)&&4===e.length?l.apply(null,e):!1,r===!1&&(r=v.Easings[v.defaults.easing]?v.defaults.easing:h),r}function c(e){if(e)for(var t=(new Date).getTime(),r=0,n=v.State.calls.length;n>r;r++)if(v.State.calls[r]){var o=v.State.calls[r],s=o[0],l=o[2],u=o[3],f=!!u;u||(u=v.State.calls[r][3]=t-16);for(var d=Math.min((t-u)/l.duration,1),m=0,y=s.length;y>m;m++){var h=s[m],b=h.element;if(i(b)){var S=!1;if(l.display!==a&&null!==l.display&&\"none\"!==l.display){if(\"flex\"===l.display){var w=[\"-webkit-box\",\"-moz-box\",\"-ms-flexbox\",\"-webkit-flex\"];$.each(w,function(e,t){x.setPropertyValue(b,\"display\",t)})}x.setPropertyValue(b,\"display\",l.display)}l.visibility!==a&&\"hidden\"!==l.visibility&&x.setPropertyValue(b,\"visibility\",l.visibility);for(var V in h)if(\"element\"!==V){var C=h[V],T,k=g.isString(C.easing)?v.Easings[C.easing]:C.easing;if(1===d)T=C.endValue;else if(T=C.startValue+(C.endValue-C.startValue)*k(d),!f&&T===C.currentValue)continue;if(C.currentValue=T,x.Hooks.registered[V]){var A=x.Hooks.getRoot(V),F=i(b).rootPropertyValueCache[A];F&&(C.rootPropertyValue=F)}var E=x.setPropertyValue(b,V,C.currentValue+(0===parseFloat(T)?\"\":C.unitType),C.rootPropertyValue,C.scrollData);x.Hooks.registered[V]&&(i(b).rootPropertyValueCache[A]=x.Normalizations.registered[A]?x.Normalizations.registered[A](\"extract\",null,E[1]):E[1]),\"transform\"===E[0]&&(S=!0)}l.mobileHA&&i(b).transformCache.translate3d===a&&(i(b).transformCache.translate3d=\"(0px, 0px, 0px)\",S=!0),S&&x.flushTransformCache(b)}}l.display!==a&&\"none\"!==l.display&&(v.State.calls[r][2].display=!1),l.visibility!==a&&\"hidden\"!==l.visibility&&(v.State.calls[r][2].visibility=!1),l.progress&&l.progress.call(o[1],o[1],d,Math.max(0,u+l.duration-t),u),1===d&&p(r)}v.State.isTicking&&P(c)}function p(e,t){if(!v.State.calls[e])return!1;for(var r=v.State.calls[e][0],n=v.State.calls[e][1],o=v.State.calls[e][2],s=v.State.calls[e][4],l=!1,u=0,c=r.length;c>u;u++){var p=r[u].element;if(t||o.loop||(\"none\"===o.display&&x.setPropertyValue(p,\"display\",o.display),\"hidden\"===o.visibility&&x.setPropertyValue(p,\"visibility\",o.visibility)),o.loop!==!0&&($.queue(p)[1]===a||!/\\.velocityQueueEntryFlag/i.test($.queue(p)[1]))&&i(p)){i(p).isAnimating=!1,i(p).rootPropertyValueCache={};var f=!1;$.each(x.Lists.transforms3D,function(e,t){var r=/^scale/.test(t)?1:0,n=i(p).transformCache[t];i(p).transformCache[t]!==a&&new RegExp(\"^\\\\(\"+r+\"[^.]\").test(n)&&(f=!0,delete i(p).transformCache[t])}),o.mobileHA&&(f=!0,delete i(p).transformCache.translate3d),f&&x.flushTransformCache(p),x.Values.removeClass(p,\"velocity-animating\")}if(!t&&o.complete&&!o.loop&&u===c-1)try{o.complete.call(n,n)}catch(d){setTimeout(function(){throw d},1)}s&&o.loop!==!0&&s(n),o.loop!==!0||t||($.each(i(p).tweensContainer,function(e,t){/^rotate/.test(e)&&360===parseFloat(t.endValue)&&(t.endValue=0,t.startValue=360)}),v(p,\"reverse\",{loop:!0,delay:o.delay})),o.queue!==!1&&$.dequeue(p,o.queue)}v.State.calls[e]=!1;for(var g=0,m=v.State.calls.length;m>g;g++)if(v.State.calls[g]!==!1){l=!0;break}l===!1&&(v.State.isTicking=!1,delete v.State.calls,v.State.calls=[])}var f=function(){if(r.documentMode)return r.documentMode;for(var e=7;e>4;e--){var t=r.createElement(\"div\");if(t.innerHTML=\"<!--[if IE \"+e+\"]><span></span><![endif]-->\",t.getElementsByTagName(\"span\").length)return t=null,e}return a}(),d=function(){var e=0;return t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||function(t){var r=(new Date).getTime(),a;return a=Math.max(0,16-(r-e)),e=r+a,setTimeout(function(){t(r+a)},a)}}(),g={isString:function(e){return\"string\"==typeof e},isArray:Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},isFunction:function(e){return\"[object Function]\"===Object.prototype.toString.call(e)},isNode:function(e){return e&&e.nodeType},isNodeList:function(e){return\"object\"==typeof e&&/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(e))&&e.length!==a&&(0===e.length||\"object\"==typeof e[0]&&e[0].nodeType>0)},isWrapped:function(e){return e&&(e.jquery||t.Zepto&&t.Zepto.zepto.isZ(e))},isSVG:function(e){return t.SVGElement&&e instanceof t.SVGElement},isEmptyObject:function(e){for(var t in e)return!1;return!0}},$,m=!1;if(e.fn&&e.fn.jquery?($=e,m=!0):$=t.Velocity.Utilities,8>=f&&!m)throw new Error(\"Velocity: IE8 and below require jQuery to be loaded before Velocity.\");if(7>=f)return void(jQuery.fn.velocity=jQuery.fn.animate);var y=400,h=\"swing\",v={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),isChrome:t.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:r.createElement(\"div\"),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[]},CSS:{},Utilities:$,Redirects:{},Easings:{},Promise:t.Promise,defaults:{queue:\"\",duration:y,easing:h,begin:a,complete:a,progress:a,display:a,visibility:a,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0},init:function(e){$.data(e,\"velocity\",{isSVG:g.isSVG(e),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:1,patch:0},debug:!1};t.pageYOffset!==a?(v.State.scrollAnchor=t,v.State.scrollPropertyLeft=\"pageXOffset\",v.State.scrollPropertyTop=\"pageYOffset\"):(v.State.scrollAnchor=r.documentElement||r.body.parentNode||r.body,v.State.scrollPropertyLeft=\"scrollLeft\",v.State.scrollPropertyTop=\"scrollTop\");var b=function(){function e(e){return-e.tension*e.x-e.friction*e.v}function t(t,r,a){var n={x:t.x+a.dx*r,v:t.v+a.dv*r,tension:t.tension,friction:t.friction};return{dx:n.v,dv:e(n)}}function r(r,a){var n={dx:r.v,dv:e(r)},o=t(r,.5*a,n),i=t(r,.5*a,o),s=t(r,a,i),l=1/6*(n.dx+2*(o.dx+i.dx)+s.dx),u=1/6*(n.dv+2*(o.dv+i.dv)+s.dv);return r.x=r.x+l*a,r.v=r.v+u*a,r}return function a(e,t,n){var o={x:-1,v:0,tension:null,friction:null},i=[0],s=0,l=1e-4,u=.016,c,p,f;for(e=parseFloat(e)||500,t=parseFloat(t)||20,n=n||null,o.tension=e,o.friction=t,c=null!==n,c?(s=a(e,t),p=s/n*u):p=u;;)if(f=r(f||o,p),i.push(1+f.x),s+=16,!(Math.abs(f.x)>l&&Math.abs(f.v)>l))break;return c?function(e){return i[e*(i.length-1)|0]}:s}}();v.Easings={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},spring:function(e){return 1-Math.cos(4.5*e*Math.PI)*Math.exp(6*-e)}},$.each([[\"ease\",[.25,.1,.25,1]],[\"ease-in\",[.42,0,1,1]],[\"ease-out\",[0,0,.58,1]],[\"ease-in-out\",[.42,0,.58,1]],[\"easeInSine\",[.47,0,.745,.715]],[\"easeOutSine\",[.39,.575,.565,1]],[\"easeInOutSine\",[.445,.05,.55,.95]],[\"easeInQuad\",[.55,.085,.68,.53]],[\"easeOutQuad\",[.25,.46,.45,.94]],[\"easeInOutQuad\",[.455,.03,.515,.955]],[\"easeInCubic\",[.55,.055,.675,.19]],[\"easeOutCubic\",[.215,.61,.355,1]],[\"easeInOutCubic\",[.645,.045,.355,1]],[\"easeInQuart\",[.895,.03,.685,.22]],[\"easeOutQuart\",[.165,.84,.44,1]],[\"easeInOutQuart\",[.77,0,.175,1]],[\"easeInQuint\",[.755,.05,.855,.06]],[\"easeOutQuint\",[.23,1,.32,1]],[\"easeInOutQuint\",[.86,0,.07,1]],[\"easeInExpo\",[.95,.05,.795,.035]],[\"easeOutExpo\",[.19,1,.22,1]],[\"easeInOutExpo\",[1,0,0,1]],[\"easeInCirc\",[.6,.04,.98,.335]],[\"easeOutCirc\",[.075,.82,.165,1]],[\"easeInOutCirc\",[.785,.135,.15,.86]]],function(e,t){v.Easings[t[0]]=l.apply(null,t[1])});var x=v.CSS={RegEx:{isHex:/^#([A-f\\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\\((.*)\\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/gi},Lists:{colors:[\"fill\",\"stroke\",\"stopColor\",\"color\",\"backgroundColor\",\"borderColor\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"outlineColor\"],transformsBase:[\"translateX\",\"translateY\",\"scale\",\"scaleX\",\"scaleY\",\"skewX\",\"skewY\",\"rotateZ\"],transforms3D:[\"transformPerspective\",\"translateZ\",\"scaleZ\",\"rotateX\",\"rotateY\"]},Hooks:{templates:{textShadow:[\"Color X Y Blur\",\"black 0px 0px 0px\"],boxShadow:[\"Color X Y Blur Spread\",\"black 0px 0px 0px 0px\"],clip:[\"Top Right Bottom Left\",\"0px 0px 0px 0px\"],backgroundPosition:[\"X Y\",\"0% 0%\"],transformOrigin:[\"X Y Z\",\"50% 50% 0px\"],perspectiveOrigin:[\"X Y\",\"50% 50%\"]},registered:{},register:function(){for(var e=0;e<x.Lists.colors.length;e++){var t=\"color\"===x.Lists.colors[e]?\"0 0 0 1\":\"255 255 255 1\";x.Hooks.templates[x.Lists.colors[e]]=[\"Red Green Blue Alpha\",t]}var r,a,n;if(f)for(r in x.Hooks.templates){a=x.Hooks.templates[r],n=a[0].split(\" \");var o=a[1].match(x.RegEx.valueSplit);\"Color\"===n[0]&&(n.push(n.shift()),o.push(o.shift()),x.Hooks.templates[r]=[n.join(\" \"),o.join(\" \")])}for(r in x.Hooks.templates){a=x.Hooks.templates[r],n=a[0].split(\" \");for(var e in n){var i=r+n[e],s=e;x.Hooks.registered[i]=[r,s]}}},getRoot:function(e){var t=x.Hooks.registered[e];return t?t[0]:e},cleanRootPropertyValue:function(e,t){return x.RegEx.valueUnwrap.test(t)&&(t=t.match(x.RegEx.valueUnwrap)[1]),x.Values.isCSSNullValue(t)&&(t=x.Hooks.templates[e][1]),t},extractValue:function(e,t){var r=x.Hooks.registered[e];if(r){var a=r[0],n=r[1];return t=x.Hooks.cleanRootPropertyValue(a,t),t.toString().match(x.RegEx.valueSplit)[n]}return t},injectValue:function(e,t,r){var a=x.Hooks.registered[e];if(a){var n=a[0],o=a[1],i,s;return r=x.Hooks.cleanRootPropertyValue(n,r),i=r.toString().match(x.RegEx.valueSplit),i[o]=t,s=i.join(\" \")}return r}},Normalizations:{registered:{clip:function(e,t,r){switch(e){case\"name\":return\"clip\";case\"extract\":var a;return x.RegEx.wrappedValueAlreadyExtracted.test(r)?a=r:(a=r.toString().match(x.RegEx.valueUnwrap),a=a?a[1].replace(/,(\\s+)?/g,\" \"):r),a;case\"inject\":return\"rect(\"+r+\")\"}},blur:function(e,t,r){switch(e){case\"name\":return\"-webkit-filter\";case\"extract\":var a=parseFloat(r);if(!a&&0!==a){var n=r.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);a=n?n[1]:0}return a;case\"inject\":return parseFloat(r)?\"blur(\"+r+\")\":\"none\"}},opacity:function(e,t,r){if(8>=f)switch(e){case\"name\":return\"filter\";case\"extract\":var a=r.toString().match(/alpha\\(opacity=(.*)\\)/i);return r=a?a[1]/100:1;case\"inject\":return t.style.zoom=1,parseFloat(r)>=1?\"\":\"alpha(opacity=\"+parseInt(100*parseFloat(r),10)+\")\"}else switch(e){case\"name\":return\"opacity\";case\"extract\":return r;case\"inject\":return r}}},register:function(){9>=f||v.State.isGingerbread||(x.Lists.transformsBase=x.Lists.transformsBase.concat(x.Lists.transforms3D));for(var e=0;e<x.Lists.transformsBase.length;e++)!function(){var t=x.Lists.transformsBase[e];x.Normalizations.registered[t]=function(e,r,n){switch(e){case\"name\":return\"transform\";case\"extract\":return i(r)===a||i(r).transformCache[t]===a?/^scale/i.test(t)?1:0:i(r).transformCache[t].replace(/[()]/g,\"\");case\"inject\":var o=!1;switch(t.substr(0,t.length-1)){case\"translate\":o=!/(%|px|em|rem|vw|vh|\\d)$/i.test(n);break;case\"scal\":case\"scale\":v.State.isAndroid&&i(r).transformCache[t]===a&&1>n&&(n=1),o=!/(\\d)$/i.test(n);break;case\"skew\":o=!/(deg|\\d)$/i.test(n);break;case\"rotate\":o=!/(deg|\\d)$/i.test(n)}return o||(i(r).transformCache[t]=\"(\"+n+\")\"),i(r).transformCache[t]}}}();for(var e=0;e<x.Lists.colors.length;e++)!function(){var t=x.Lists.colors[e];x.Normalizations.registered[t]=function(e,r,n){switch(e){case\"name\":return t;case\"extract\":var o;if(x.RegEx.wrappedValueAlreadyExtracted.test(n))o=n;else{var i,s={black:\"rgb(0, 0, 0)\",blue:\"rgb(0, 0, 255)\",gray:\"rgb(128, 128, 128)\",green:\"rgb(0, 128, 0)\",red:\"rgb(255, 0, 0)\",white:\"rgb(255, 255, 255)\"};/^[A-z]+$/i.test(n)?i=s[n]!==a?s[n]:s.black:x.RegEx.isHex.test(n)?i=\"rgb(\"+x.Values.hexToRgb(n).join(\" \")+\")\":/^rgba?\\(/i.test(n)||(i=s.black),o=(i||n).toString().match(x.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g,\" \")}return 8>=f||3!==o.split(\" \").length||(o+=\" 1\"),o;case\"inject\":return 8>=f?4===n.split(\" \").length&&(n=n.split(/\\s+/).slice(0,3).join(\" \")):3===n.split(\" \").length&&(n+=\" 1\"),(8>=f?\"rgb\":\"rgba\")+\"(\"+n.replace(/\\s+/g,\",\").replace(/\\.(\\d)+(?=,)/g,\"\")+\")\"}}}()}},Names:{camelCase:function(e){return e.replace(/-(\\w)/g,function(e,t){return t.toUpperCase()})},SVGAttribute:function(e){var t=\"width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2\";return(f||v.State.isAndroid&&!v.State.isChrome)&&(t+=\"|transform\"),new RegExp(\"^(\"+t+\")$\",\"i\").test(e)},prefixCheck:function(e){if(v.State.prefixMatches[e])return[v.State.prefixMatches[e],!0];for(var t=[\"\",\"Webkit\",\"Moz\",\"ms\",\"O\"],r=0,a=t.length;a>r;r++){var n;if(n=0===r?e:t[r]+e.replace(/^\\w/,function(e){return e.toUpperCase()}),g.isString(v.State.prefixElement.style[n]))return v.State.prefixMatches[e]=n,[n,!0]}return[e,!1]}},Values:{hexToRgb:function(e){var t=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,r=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,a;return e=e.replace(t,function(e,t,r,a){return t+t+r+r+a+a}),a=r.exec(e),a?[parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)]:[0,0,0]},isCSSNullValue:function(e){return 0==e||/^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(e)},getUnitType:function(e){return/^(rotate|skew)/i.test(e)?\"deg\":/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e)?\"\":\"px\"},getDisplayType:function(e){var t=e&&e.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t)?\"inline\":/^(li)$/i.test(t)?\"list-item\":/^(tr)$/i.test(t)?\"table-row\":\"block\"},addClass:function(e,t){e.classList?e.classList.add(t):e.className+=(e.className.length?\" \":\"\")+t},removeClass:function(e,t){e.classList?e.classList.remove(t):e.className=e.className.toString().replace(new RegExp(\"(^|\\\\s)\"+t.split(\" \").join(\"|\")+\"(\\\\s|$)\",\"gi\"),\" \")}},getPropertyValue:function(e,r,n,o){function s(e,r){function n(){u&&x.setPropertyValue(e,\"display\",\"none\")}var l=0;if(8>=f)l=$.css(e,r);else{var u=!1;if(/^(width|height)$/.test(r)&&0===x.getPropertyValue(e,\"display\")&&(u=!0,x.setPropertyValue(e,\"display\",x.Values.getDisplayType(e))),!o){if(\"height\"===r&&\"border-box\"!==x.getPropertyValue(e,\"boxSizing\").toString().toLowerCase()){var c=e.offsetHeight-(parseFloat(x.getPropertyValue(e,\"borderTopWidth\"))||0)-(parseFloat(x.getPropertyValue(e,\"borderBottomWidth\"))||0)-(parseFloat(x.getPropertyValue(e,\"paddingTop\"))||0)-(parseFloat(x.getPropertyValue(e,\"paddingBottom\"))||0);return n(),c}if(\"width\"===r&&\"border-box\"!==x.getPropertyValue(e,\"boxSizing\").toString().toLowerCase()){var p=e.offsetWidth-(parseFloat(x.getPropertyValue(e,\"borderLeftWidth\"))||0)-(parseFloat(x.getPropertyValue(e,\"borderRightWidth\"))||0)-(parseFloat(x.getPropertyValue(e,\"paddingLeft\"))||0)-(parseFloat(x.getPropertyValue(e,\"paddingRight\"))||0);return n(),p}}var d;d=i(e)===a?t.getComputedStyle(e,null):i(e).computedStyle?i(e).computedStyle:i(e).computedStyle=t.getComputedStyle(e,null),(f||v.State.isFirefox)&&\"borderColor\"===r&&(r=\"borderTopColor\"),l=9===f&&\"filter\"===r?d.getPropertyValue(r):d[r],(\"\"===l||null===l)&&(l=e.style[r]),n()}if(\"auto\"===l&&/^(top|right|bottom|left)$/i.test(r)){var g=s(e,\"position\");(\"fixed\"===g||\"absolute\"===g&&/top|left/i.test(r))&&(l=$(e).position()[r]+\"px\")}return l}var l;if(x.Hooks.registered[r]){var u=r,c=x.Hooks.getRoot(u);n===a&&(n=x.getPropertyValue(e,x.Names.prefixCheck(c)[0])),x.Normalizations.registered[c]&&(n=x.Normalizations.registered[c](\"extract\",e,n)),l=x.Hooks.extractValue(u,n)}else if(x.Normalizations.registered[r]){var p,d;p=x.Normalizations.registered[r](\"name\",e),\"transform\"!==p&&(d=s(e,x.Names.prefixCheck(p)[0]),x.Values.isCSSNullValue(d)&&x.Hooks.templates[r]&&(d=x.Hooks.templates[r][1])),l=x.Normalizations.registered[r](\"extract\",e,d)}return/^[\\d-]/.test(l)||(l=i(e)&&i(e).isSVG&&x.Names.SVGAttribute(r)?/^(height|width)$/i.test(r)?e.getBBox()[r]:e.getAttribute(r):s(e,x.Names.prefixCheck(r)[0])),x.Values.isCSSNullValue(l)&&(l=0),v.debug>=2&&console.log(\"Get \"+r+\": \"+l),l},setPropertyValue:function(e,r,a,n,o){var s=r;if(\"scroll\"===r)o.container?o.container[\"scroll\"+o.direction]=a:\"Left\"===o.direction?t.scrollTo(a,o.alternateValue):t.scrollTo(o.alternateValue,a);else if(x.Normalizations.registered[r]&&\"transform\"===x.Normalizations.registered[r](\"name\",e))x.Normalizations.registered[r](\"inject\",e,a),s=\"transform\",a=i(e).transformCache[r];else{if(x.Hooks.registered[r]){var l=r,u=x.Hooks.getRoot(r);n=n||x.getPropertyValue(e,u),a=x.Hooks.injectValue(l,a,n),r=u}if(x.Normalizations.registered[r]&&(a=x.Normalizations.registered[r](\"inject\",e,a),r=x.Normalizations.registered[r](\"name\",e)),s=x.Names.prefixCheck(r)[0],8>=f)try{e.style[s]=a}catch(c){v.debug&&console.log(\"Browser does not support [\"+a+\"] for [\"+s+\"]\")}else i(e)&&i(e).isSVG&&x.Names.SVGAttribute(r)?e.setAttribute(r,a):e.style[s]=a;v.debug>=2&&console.log(\"Set \"+r+\" (\"+s+\"): \"+a)}return[s,a]},flushTransformCache:function(e){function t(t){return parseFloat(x.getPropertyValue(e,t))}var r=\"\";if((f||v.State.isAndroid&&!v.State.isChrome)&&i(e).isSVG){var a={translate:[t(\"translateX\"),t(\"translateY\")],skewX:[t(\"skewX\")],skewY:[t(\"skewY\")],scale:1!==t(\"scale\")?[t(\"scale\"),t(\"scale\")]:[t(\"scaleX\"),t(\"scaleY\")],rotate:[t(\"rotateZ\"),0,0]};$.each(i(e).transformCache,function(e){/^translate/i.test(e)?e=\"translate\":/^scale/i.test(e)?e=\"scale\":/^rotate/i.test(e)&&(e=\"rotate\"),a[e]&&(r+=e+\"(\"+a[e].join(\" \")+\") \",delete a[e])})}else{var n,o;$.each(i(e).transformCache,function(t){return n=i(e).transformCache[t],\"transformPerspective\"===t?(o=n,!0):(9===f&&\"rotateZ\"===t&&(t=\"rotate\"),void(r+=t+n+\" \"))}),o&&(r=\"perspective\"+o+\" \"+r)}x.setPropertyValue(e,\"transform\",r)}};x.Hooks.register(),x.Normalizations.register(),v.hook=function(e,t,r){var n=a;return e=o(e),$.each(e,function(e,o){if(i(o)===a&&v.init(o),r===a)n===a&&(n=v.CSS.getPropertyValue(o,t));else{var s=v.CSS.setPropertyValue(o,t,r);\"transform\"===s[0]&&v.CSS.flushTransformCache(o),n=s}}),n};var S=function(){function e(){return f?k.promise||null:d}function s(){function e(e){function f(e,t){var r=a,n=a,i=a;return g.isArray(e)?(r=e[0],!g.isArray(e[1])&&/^[\\d-]/.test(e[1])||g.isFunction(e[1])||x.RegEx.isHex.test(e[1])?i=e[1]:(g.isString(e[1])&&!x.RegEx.isHex.test(e[1])||g.isArray(e[1]))&&(n=t?e[1]:u(e[1],s.duration),e[2]!==a&&(i=e[2]))):r=e,t||(n=n||s.easing),g.isFunction(r)&&(r=r.call(o,V,w)),g.isFunction(i)&&(i=i.call(o,V,w)),[r||0,n,i]}function d(e,t){var r,a;return a=(t||\"0\").toString().toLowerCase().replace(/[%A-z]+$/,function(e){return r=e,\"\"}),r||(r=x.Values.getUnitType(e)),[a,r]}function m(){var e={myParent:o.parentNode||r.body,position:x.getPropertyValue(o,\"position\"),fontSize:x.getPropertyValue(o,\"fontSize\")},a=e.position===L.lastPosition&&e.myParent===L.lastParent,n=e.fontSize===L.lastFontSize;L.lastParent=e.myParent,L.lastPosition=e.position,L.lastFontSize=e.fontSize;var s=100,l={};if(n&&a)l.emToPx=L.lastEmToPx,l.percentToPxWidth=L.lastPercentToPxWidth,l.percentToPxHeight=L.lastPercentToPxHeight;else{var u=i(o).isSVG?r.createElementNS(\"http://www.w3.org/2000/svg\",\"rect\"):r.createElement(\"div\");v.init(u),e.myParent.appendChild(u),$.each([\"overflow\",\"overflowX\",\"overflowY\"],function(e,t){v.CSS.setPropertyValue(u,t,\"hidden\")}),v.CSS.setPropertyValue(u,\"position\",e.position),v.CSS.setPropertyValue(u,\"fontSize\",e.fontSize),v.CSS.setPropertyValue(u,\"boxSizing\",\"content-box\"),$.each([\"minWidth\",\"maxWidth\",\"width\",\"minHeight\",\"maxHeight\",\"height\"],function(e,t){v.CSS.setPropertyValue(u,t,s+\"%\")}),v.CSS.setPropertyValue(u,\"paddingLeft\",s+\"em\"),l.percentToPxWidth=L.lastPercentToPxWidth=(parseFloat(x.getPropertyValue(u,\"width\",null,!0))||1)/s,l.percentToPxHeight=L.lastPercentToPxHeight=(parseFloat(x.getPropertyValue(u,\"height\",null,!0))||1)/s,l.emToPx=L.lastEmToPx=(parseFloat(x.getPropertyValue(u,\"paddingLeft\"))||1)/s,e.myParent.removeChild(u)}return null===L.remToPx&&(L.remToPx=parseFloat(x.getPropertyValue(r.body,\"fontSize\"))||16),null===L.vwToPx&&(L.vwToPx=parseFloat(t.innerWidth)/100,L.vhToPx=parseFloat(t.innerHeight)/100),l.remToPx=L.remToPx,l.vwToPx=L.vwToPx,l.vhToPx=L.vhToPx,v.debug>=1&&console.log(\"Unit ratios: \"+JSON.stringify(l),o),l}if(s.begin&&0===V)try{s.begin.call(h,h)}catch(y){setTimeout(function(){throw y},1)}if(\"scroll\"===A){var S=/^x$/i.test(s.axis)?\"Left\":\"Top\",C=parseFloat(s.offset)||0,T,F,E;s.container?g.isWrapped(s.container)||g.isNode(s.container)?(s.container=s.container[0]||s.container,T=s.container[\"scroll\"+S],E=T+$(o).position()[S.toLowerCase()]+C):s.container=null:(T=v.State.scrollAnchor[v.State[\"scrollProperty\"+S]],F=v.State.scrollAnchor[v.State[\"scrollProperty\"+(\"Left\"===S?\"Top\":\"Left\")]],E=$(o).offset()[S.toLowerCase()]+C),l={scroll:{rootPropertyValue:!1,startValue:T,currentValue:T,endValue:E,unitType:\"\",easing:s.easing,scrollData:{container:s.container,direction:S,alternateValue:F}},element:o},v.debug&&console.log(\"tweensContainer (scroll): \",l.scroll,o)}else if(\"reverse\"===A){if(!i(o).tweensContainer)return void $.dequeue(o,s.queue);\"none\"===i(o).opts.display&&(i(o).opts.display=\"auto\"),\"hidden\"===i(o).opts.visibility&&(i(o).opts.visibility=\"visible\"),i(o).opts.loop=!1,i(o).opts.begin=null,i(o).opts.complete=null,P.easing||delete s.easing,P.duration||delete s.duration,s=$.extend({},i(o).opts,s);var j=$.extend(!0,{},i(o).tweensContainer);for(var H in j)if(\"element\"!==H){var N=j[H].startValue;j[H].startValue=j[H].currentValue=j[H].endValue,j[H].endValue=N,g.isEmptyObject(P)||(j[H].easing=s.easing),v.debug&&console.log(\"reverse tweensContainer (\"+H+\"): \"+JSON.stringify(j[H]),o)}l=j}else if(\"start\"===A){var j;i(o).tweensContainer&&i(o).isAnimating===!0&&(j=i(o).tweensContainer),$.each(b,function(e,t){if(RegExp(\"^\"+x.Lists.colors.join(\"$|^\")+\"$\").test(e)){var r=f(t,!0),n=r[0],o=r[1],i=r[2];if(x.RegEx.isHex.test(n)){for(var s=[\"Red\",\"Green\",\"Blue\"],l=x.Values.hexToRgb(n),u=i?x.Values.hexToRgb(i):a,c=0;c<s.length;c++){var p=[l[c]];o&&p.push(o),u!==a&&p.push(u[c]),b[e+s[c]]=p}delete b[e]}}});for(var O in b){var z=f(b[O]),q=z[0],M=z[1],I=z[2];O=x.Names.camelCase(O);var B=x.Hooks.getRoot(O),W=!1;if(i(o).isSVG||x.Names.prefixCheck(B)[1]!==!1||x.Normalizations.registered[B]!==a){(s.display!==a&&null!==s.display&&\"none\"!==s.display||s.visibility!==a&&\"hidden\"!==s.visibility)&&/opacity|filter/.test(O)&&!I&&0!==q&&(I=0),s._cacheValues&&j&&j[O]?(I===a&&(I=j[O].endValue+j[O].unitType),W=i(o).rootPropertyValueCache[B]):x.Hooks.registered[O]?I===a?(W=x.getPropertyValue(o,B),I=x.getPropertyValue(o,O,W)):W=x.Hooks.templates[B][1]:I===a&&(I=x.getPropertyValue(o,O));var G,D,X,Y=!1;if(G=d(O,I),I=G[0],X=G[1],G=d(O,q),q=G[0].replace(/^([+-\\/*])=/,function(e,t){return Y=t,\"\"}),D=G[1],I=parseFloat(I)||0,q=parseFloat(q)||0,\"%\"===D&&(/^(fontSize|lineHeight)$/.test(O)?(q/=100,D=\"em\"):/^scale/.test(O)?(q/=100,D=\"\"):/(Red|Green|Blue)$/i.test(O)&&(q=q/100*255,D=\"\")),/[\\/*]/.test(Y))D=X;else if(X!==D&&0!==I)if(0===q)D=X;else{p=p||m();var Q=/margin|padding|left|right|width|text|word|letter/i.test(O)||/X$/.test(O)||\"x\"===O?\"x\":\"y\";switch(X){case\"%\":I*=\"x\"===Q?p.percentToPxWidth:p.percentToPxHeight;break;case\"px\":break;default:I*=p[X+\"ToPx\"]}switch(D){case\"%\":I*=1/(\"x\"===Q?p.percentToPxWidth:p.percentToPxHeight);break;case\"px\":break;default:I*=1/p[D+\"ToPx\"]}}switch(Y){case\"+\":q=I+q;break;case\"-\":q=I-q;break;case\"*\":q=I*q;break;case\"/\":q=I/q}l[O]={rootPropertyValue:W,startValue:I,currentValue:I,endValue:q,unitType:D,easing:M},v.debug&&console.log(\"tweensContainer (\"+O+\"): \"+JSON.stringify(l[O]),o)}else v.debug&&console.log(\"Skipping [\"+B+\"] due to a lack of browser support.\")}l.element=o}l.element&&(x.Values.addClass(o,\"velocity-animating\"),R.push(l),\"\"===s.queue&&(i(o).tweensContainer=l,i(o).opts=s),i(o).isAnimating=!0,V===w-1?(v.State.calls.length>1e4&&(v.State.calls=n(v.State.calls)),v.State.calls.push([R,h,s,null,k.resolver]),v.State.isTicking===!1&&(v.State.isTicking=!0,c())):V++)}var o=this,s=$.extend({},v.defaults,P),l={},p;switch(i(o)===a&&v.init(o),parseFloat(s.delay)&&s.queue!==!1&&$.queue(o,s.queue,function(e){v.velocityQueueEntryFlag=!0,i(o).delayTimer={setTimeout:setTimeout(e,parseFloat(s.delay)),next:e}}),s.duration.toString().toLowerCase()){case\"fast\":s.duration=200;break;case\"normal\":s.duration=y;break;case\"slow\":s.duration=600;break;default:s.duration=parseFloat(s.duration)||1}v.mock!==!1&&(v.mock===!0?s.duration=s.delay=1:(s.duration*=parseFloat(v.mock)||1,s.delay*=parseFloat(v.mock)||1)),s.easing=u(s.easing,s.duration),s.begin&&!g.isFunction(s.begin)&&(s.begin=null),s.progress&&!g.isFunction(s.progress)&&(s.progress=null),s.complete&&!g.isFunction(s.complete)&&(s.complete=null),s.display!==a&&null!==s.display&&(s.display=s.display.toString().toLowerCase(),\"auto\"===s.display&&(s.display=v.CSS.Values.getDisplayType(o))),s.visibility!==a&&null!==s.visibility&&(s.visibility=s.visibility.toString().toLowerCase()),s.mobileHA=s.mobileHA&&v.State.isMobile&&!v.State.isGingerbread,s.queue===!1?s.delay?setTimeout(e,s.delay):e():$.queue(o,s.queue,function(t,r){return r===!0?(k.promise&&k.resolver(h),!0):(v.velocityQueueEntryFlag=!0,void e(t))}),\"\"!==s.queue&&\"fx\"!==s.queue||\"inprogress\"===$.queue(o)[0]||$.dequeue(o)}var l=arguments[0]&&($.isPlainObject(arguments[0].properties)&&!arguments[0].properties.names||g.isString(arguments[0].properties)),f,d,m,h,b,P;if(g.isWrapped(this)?(f=!1,m=0,h=this,d=this):(f=!0,m=1,h=l?arguments[0].elements:arguments[0]),h=o(h)){l?(b=arguments[0].properties,P=arguments[0].options):(b=arguments[m],P=arguments[m+1]);var w=h.length,V=0;if(\"stop\"!==b&&!$.isPlainObject(P)){var C=m+1;P={};for(var T=C;T<arguments.length;T++)g.isArray(arguments[T])||!/^(fast|normal|slow)$/i.test(arguments[T])&&!/^\\d/.test(arguments[T])?g.isString(arguments[T])||g.isArray(arguments[T])?P.easing=arguments[T]:g.isFunction(arguments[T])&&(P.complete=arguments[T]):P.duration=arguments[T]}var k={promise:null,resolver:null,rejecter:null};f&&v.Promise&&(k.promise=new v.Promise(function(e,t){k.resolver=e,k.rejecter=t}));var A;switch(b){case\"scroll\":A=\"scroll\";break;case\"reverse\":A=\"reverse\";break;case\"stop\":$.each(h,function(e,t){i(t)&&i(t).delayTimer&&(clearTimeout(i(t).delayTimer.setTimeout),i(t).delayTimer.next&&i(t).delayTimer.next(),delete i(t).delayTimer)});var F=[];return $.each(v.State.calls,function(e,t){t&&$.each(t[1],function(r,n){var o=g.isString(P)?P:\"\";return P!==a&&t[2].queue!==o?!0:void $.each(h,function(t,r){r===n&&(P!==a&&($.each($.queue(r,o),function(e,t){g.isFunction(t)&&t(null,!0)}),$.queue(r,o,[])),i(r)&&\"\"===o&&$.each(i(r).tweensContainer,function(e,t){t.endValue=t.currentValue}),F.push(e))})})}),$.each(F,function(e,t){p(t,!0)}),k.promise&&k.resolver(h),e();default:if(!$.isPlainObject(b)||g.isEmptyObject(b)){if(g.isString(b)&&v.Redirects[b]){var E=$.extend({},P),j=E.duration,H=E.delay||0;return E.backwards===!0&&(h=$.extend(!0,[],h).reverse()),$.each(h,function(e,t){parseFloat(E.stagger)?E.delay=H+parseFloat(E.stagger)*e:g.isFunction(E.stagger)&&(E.delay=H+E.stagger.call(t,e,w)),E.drag&&(E.duration=parseFloat(j)||(/^(callout|transition)/.test(b)?1e3:y),E.duration=Math.max(E.duration*(E.backwards?1-e/w:(e+1)/w),.75*E.duration,200)),v.Redirects[b].call(t,t,E||{},e,w,h,k.promise?k:a)\n}),e()}var N=\"Velocity: First argument (\"+b+\") was not a property map, a known action, or a registered redirect. Aborting.\";return k.promise?k.rejecter(new Error(N)):console.log(N),e()}A=\"start\"}var L={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},R=[];$.each(h,function(e,t){g.isNode(t)&&s.call(t)});var E=$.extend({},v.defaults,P),O;if(E.loop=parseInt(E.loop),O=2*E.loop-1,E.loop)for(var z=0;O>z;z++){var q={delay:E.delay,progress:E.progress};z===O-1&&(q.display=E.display,q.visibility=E.visibility,q.complete=E.complete),S(h,\"reverse\",q)}return e()}};v=$.extend(S,v),v.animate=S;var P=t.requestAnimationFrame||d;return v.State.isMobile||r.hidden===a||r.addEventListener(\"visibilitychange\",function(){r.hidden?(P=function(e){return setTimeout(function(){e(!0)},16)},c()):P=t.requestAnimationFrame||d}),e.Velocity=v,e!==t&&(e.fn.velocity=S,e.fn.velocity.defaults=v.defaults),$.each([\"Down\",\"Up\"],function(e,t){v.Redirects[\"slide\"+t]=function(e,r,n,o,i,s){var l=$.extend({},r),u=l.begin,c=l.complete,p={height:\"\",marginTop:\"\",marginBottom:\"\",paddingTop:\"\",paddingBottom:\"\"},f={};l.display===a&&(l.display=\"Down\"===t?\"inline\"===v.CSS.Values.getDisplayType(e)?\"inline-block\":\"block\":\"none\"),l.begin=function(){u&&u.call(i,i);for(var r in p){f[r]=e.style[r];var a=v.CSS.getPropertyValue(e,r);p[r]=\"Down\"===t?[a,0]:[0,a]}f.overflow=e.style.overflow,e.style.overflow=\"hidden\"},l.complete=function(){for(var t in f)e.style[t]=f[t];c&&c.call(i,i),s&&s.resolver(i)},v(e,p,l)}}),$.each([\"In\",\"Out\"],function(e,t){v.Redirects[\"fade\"+t]=function(e,r,n,o,i,s){var l=$.extend({},r),u={opacity:\"In\"===t?1:0},c=l.complete;l.complete=n!==o-1?l.begin=null:function(){c&&c.call(i,i),s&&s.resolver(i)},l.display===a&&(l.display=\"In\"===t?\"auto\":\"none\"),v(this,u,l)}}),v}(window.jQuery||window.Zepto||window,window,document)});"]}